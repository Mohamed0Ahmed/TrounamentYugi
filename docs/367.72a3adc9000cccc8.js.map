{"version":3,"file":"367.72a3adc9000cccc8.js","mappings":"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","names":["ReplaySubject","Subject","constructor","_bufferSize","Infinity","_windowTime","_timestampProvider","dateTimestampProvider","super","this","_buffer","_infiniteTimeWindow","Math","max","next","value","isStopped","push","now","_trimBuffer","_subscribe","subscriber","_throwIfClosed","subscription","_innerSubscribe","copy","slice","i","length","closed","_checkFinalizedStatuses","adjustedBufferSize","splice","last","AdminDashboardService","playerService","matchService","leagueService","messageService","noteService","essentialDataCache$","BehaviorSubject","secondaryDataCache","Map","lastEssentialUpdate","lastSecondaryUpdate","CACHE_DURATION","SECONDARY_CACHE_DURATION","getEssentialData","forceRefresh","Date","asObservable","pipe","filter","data","loadEssentialDataFromServer","tap","catchError","error","of","getEmptyDashboardData","shareReplay","configOrBufferSize","windowTime","scheduler","bufferSize","refCount","share","connector","resetOnError","resetOnComplete","resetOnRefCountZero","getSecondaryData","type","lastUpdate","get","hasValidCache","has","loadSecondaryDataFromServer","set","forkJoin","players","getAdminPlayers","matches","getAdminMatches","currentLeague","getAdminCurrentLeague","map","response","league","allLeagues","getAdminAllLeagues","notes","getAdminNotes","messages","getAdminMessages","messagesList","Array","isArray","stats","totalPlayers","totalMatches","totalMatchesLeft","m","isCompleted","totalMessagesLeft","isRead","isFromAdmin","invalidateCache","delete","clear","getCurrentEssentialData","updateMessageCount","count","current","i0","i1","i2","i3","i4","i5","factory","ɵfac","providedIn","player_r16","_r18","$implicit","ctx_r17","selectPlayer","$event","ctx_r19","confirmDelete","ctx_r15","selectedPlayer","playerId","fullName","PlayersComponent_ul_6_li_1_Template","ctx_r0","_r21","ctx_r20","openModal","match_r23","_r26","ctx_r25","updateMatch","matchId","player1Id","ctx_r27","player2Id","ctx_r28","ctx_r29","resetMatch","i_r24","player1Name","player2Name","score1","score2","_c0","ctx_r22","loadingMatches","PlayersComponent_div_9_tr_15_Template","ctx_r2","displayMatches","ctx_r3","_r31","ctx_r30","openStartLeagueModal","_r33","ctx_r32","showEndLeagueModal","_r35","ctx_r34","onTournamentStageButtonClick","ctx_r6","tournamentStageButtonText","PlayersComponent_div_25_span_10_Template","PlayersComponent_div_25_span_11_Template","PlayersComponent_div_25_span_12_Template","PlayersComponent_div_25_span_18_Template","PlayersComponent_div_25_span_19_Template","ctx_r7","leagueData","description","typeOfLeague","getLeagueTypeText","systemOfLeague","undefined","getSystemTypeText","createdOn","name","league_r41","_r44","ctx_r43","openDeleteLeagueModal","leagueId","_c1","i_r42","leagueName","isFinished","ctx_r8","getLeagueTypeTextForTable","leagueType","getSystemTypeTextForTable","_r46","ctx_r45","closeDeleteLeagueModal","ctx_r47","deleteConfirmedLeague","ctx_r9","selectedLeagueToDelete","_r49","ctx_r48","showDeleteModal","ctx_r50","deleteConfirmedPlayer","ctx_r10","selectedPlayerToDelete","_r52","ctx_r51","newPlayerName","ctx_r53","closeModal","ctx_r54","addPlayer","ctx_r11","_r57","ctx_r56","newLeague","roundsPerMatch","ctx_r55","_r59","ctx_r58","ctx_r60","ctx_r61","ctx_r62","PlayersComponent_div_68_div_30_Template","ctx_r63","closeStartLeagueModal","ctx_r64","startLeague","ctx_r12","_r66","ctx_r65","ctx_r67","resetTournament","id","_r75","note_r69","ctx_r73","toggleHideNote","_r78","ctx_r76","_r81","ctx_r79","toggleDeleteNote","PlayersComponent_div_70_div_15_div_1_button_5_Template","PlayersComponent_div_70_div_15_div_1_button_6_Template","content","isHidden","PlayersComponent_div_70_div_15_div_1_Template","isDeleted","_r84","ctx_r83","newNote","ctx_r85","sendNote","PlayersComponent_div_70_div_15_Template","ctx_r86","closeNoteModal","ctx_r14","PlayersComponent","toastr","adminDashboardService","playerMatches","showModal","isSidebarOpen","showNoteModal","showDeleteLeagueModal","showStartLeagueModal","totalMessages","leagues","currentMatches","showTournamentStageButton","tournamentStageButtonAction","requestQueue","isProcessingQueue","showResetModal","ngOnInit","loadEssentialData","ngOnDestroy","loadCurrentLeagueFromServer","subscribe","updateTournamentStageButton","err","loadCurrentMatches","toggleSidebar","player","loadMatches","sort","a","b","nameA","toLowerCase","nameB","localeCompare","match","forEach","addToQueue","request","processQueue","_this","_asyncToGenerator","shift","winnerId","Promise","resolve","reject","success","message","deletePlayer","event","stopPropagation","warning","trim","resetLeague","DeleteLeague","find","l","res","note","toggleMarHide","noteId","DeleteNote","openNoteModal","console","log","LeagueType","Groups","startGroupStage","groupMatches","stage","TournamentStage","GroupStage","tournamentStage","quarterMatches","QuarterFinals","semiMatches","SemiFinals","finalMatches","Final","allGroupMatchesCompleted","every","allQuarterMatchesCompleted","allSemiMatchesCompleted","startQuarterStage","startSemiFinalStage","startFinalStage","createGroupsAndMatches","startKnockoutStage","startSemiFinals","startFinal","Single","Multi","system","SystemOfLeague","Points","Classic","systemType","i6","selectors","decls","vars","consts","template","rf","ctx","PlayersComponent_ul_6_Template","PlayersComponent_button_7_Template","PlayersComponent_div_9_Template","PlayersComponent_div_17_Template","PlayersComponent_button_20_Template","PlayersComponent_button_21_Template","PlayersComponent_button_22_Template","PlayersComponent_div_25_Template","PlayersComponent_tr_64_Template","PlayersComponent_div_65_Template","PlayersComponent_div_66_Template","PlayersComponent_div_67_Template","PlayersComponent_div_68_Template","PlayersComponent_div_69_Template","PlayersComponent_div_70_Template","_c2","chat_r6","unreadCount","_r10","openChat","senderId","InboxComponent_div_6_div_1_span_6_Template","senderFullName","lastMessage","InboxComponent_div_6_div_1_Template","ctx_r1","playerChats","trackByPlayerId","message_r13","sentAt","_r15","closeChat","InboxComponent_div_8_div_12_Template","ctx_r16","sendReply","replyMessages","selectedChat","ctx_r18","navbarHeight","_c3","senderPhoneNumber","trackByMessageId","_c4","InboxComponent","cdr","selectedPlayerId","loadAdminMessages","updateStatusSubscription","unsubscribe","refreshSubscription","loadFromServer","loadFromCache","groupedMessages","groupMessagesBySender","lastMessageDate","getTime","refreshMessages","ngAfterViewChecked","messagesContainer","scrollToBottom","loadMessages","getMessages","processMessages","detectChanges","chatMap","msg","Object","values","chat","lastMsg","toggleMarkMessage","replyContent","sendAdminReply","newMessage","random","toISOString","container","nativeElement","scrollTop","scrollHeight","index","viewQuery","InboxComponent_div_5_Template","InboxComponent_div_6_Template","InboxComponent_div_8_Template","InboxComponent_ng_template_9_Template","_c5","_c6","_r3","player_r7","_r9","openRecordMatchModal","FriendliesComponent_ul_6_li_1_Template","_r13","totalUnreadFriendlyMessages","player_r19","match_r20","_r22","ctx_r21","editMatch","ctx_r23","deleteMatchFromList","playedOn","getPlayerName","player1Score","player2Score","i_r26","_r28","changePage","ctx_r24","currentPage","_r30","FriendliesComponent_div_9_div_70_span_4_Template","ctx_r31","totalPages","FriendliesComponent_div_9_div_1_Template","FriendliesComponent_div_9_div_9_Template","ctx_r35","ctx_r36","filterForm","dateFilter","ctx_r37","onFilterChange","ctx_r38","ctx_r39","FriendliesComponent_div_9_option_50_Template","ctx_r40","clearFilters","FriendliesComponent_div_9_tr_69_Template","FriendliesComponent_div_9_div_70_Template","DateFilter","AllTime","Today","Last3Days","LastWeek","LastMonth","getAllActivePlayers","getPaginatedMatches","itemsPerPage","min","allMatches","_r42","ctx_r41","_r45","ctx_r44","friendlyPlayerName","ctx_r46","ctx_r4","player_r53","_r55","matchForm","FriendliesComponent_div_12_div_4_option_6_Template","opponent_r57","FriendliesComponent_div_12_div_5_option_6_Template","ctx_r49","getOpponentsForPlayer","selectedPlayerForMatch","FriendliesComponent_div_12_div_4_Template","FriendliesComponent_div_12_div_5_Template","FriendliesComponent_div_12_div_6_Template","FriendliesComponent_div_12_div_7_Template","_r61","validateScore","closeRecordMatchModal","ctx_r66","recordNewMatch","ctx_r5","isRecordingMatch","FriendliesComponent","friendlyMatchService","friendlyMessageService","activeTab","showRecordMatchModal","opponentIds","loadPlayers","loadAllMatches","loadUnreadFriendlyMessagesCount","getAllMessages","calculateUnreadCount","getAllFriendlyPlayers","calculateStatistics","loadPlayerMatches","getAllFriendlyMatches","playerName","p","addFriendlyPlayerAsync","refreshFriendlyPlayers","deleteFriendlyPlayerAsync","getActivePlayersCount","isActive","getRecentMatches","matchData","recordFriendlyMatchAsync","player1","player2","refreshFriendlyMatches","ceil","loadFilteredMatchesFromCache","filteredMatches","cutoffDate","getFullYear","getMonth","getDate","selectedPlayerName","reorderMatchesForSelectedPlayer","opponentNames","includes","loadFilteredMatches","page","pageSize","getFilteredMatches","result","totalCount","startIndex","updateFriendlyMatchAsync","confirm","deleteFriendlyMatchAsync","FriendliesComponent_ul_6_Template","FriendliesComponent_button_7_Template","FriendliesComponent_div_9_Template","FriendliesComponent_div_10_Template","FriendliesComponent_div_11_Template","FriendliesComponent_div_12_Template","FriendlyInboxComponent_div_6_div_1_span_6_Template","FriendlyInboxComponent_div_6_div_1_Template","FriendlyInboxComponent_div_8_div_12_Template","FriendlyInboxComponent","loadFriendlyMessages","unreadMessages","info","parsedId","parseInt","isNaN","String","playerFullName","markMessageAsRead","messageType","FriendlyInboxComponent_div_5_Template","FriendlyInboxComponent_div_6_Template","FriendlyInboxComponent_div_8_Template","FriendlyInboxComponent_ng_template_9_Template","TeamsDashboardComponent_div_24_div_3_Template","tournaments","player_r12","_r14","ctx_r13","TeamsDashboardComponent_div_29_div_1_Template","availablePlayers","_r16","createTournamentForm","systemOfScoring","teamCount","playersPerTeam","closeCreateTournamentModal","createTournament","isCreatingTournament","player_r26","togglePlayerSelection","isPlayerSelected","multiParticipations","multiTitlesWon","TeamsDashboardComponent_div_32_div_13_div_1_Template","createTeamForm","teamName","TeamsDashboardComponent_div_32_div_11_Template","TeamsDashboardComponent_div_32_div_12_Template","TeamsDashboardComponent_div_32_div_13_Template","closeCreateTeamModal","createTeam","activeTournament","playerIds","isLoadingPlayers","isCreatingTeam","_r34","ctx_r33","showAddPlayerModal","addNewPlayer","isAddingPlayer","_r39","recordingScore1","recordingScore2","TeamsDashboardComponent_div_34_div_13_Template","closeRecordResultModal","ctx_r42","recordMatchResult","selectedPlayer1Id","selectedPlayer2Id","isRecordingResult","match_r47","openRecordResultModal","TeamsDashboardComponent_div_35_div_8_div_1_div_7_button_2_Template","status","_r58","undoMatchResult","TeamsDashboardComponent_div_35_div_8_div_1_div_6_Template","TeamsDashboardComponent_div_35_div_8_div_1_div_7_Template","TeamsDashboardComponent_div_35_div_8_div_1_div_8_Template","TeamsDashboardComponent_div_35_div_8_div_1_Template","getPlayerMatches","_r60","ctx_r59","closePlayerMatchesModal","TeamsDashboardComponent_div_35_div_7_Template","TeamsDashboardComponent_div_35_div_8_Template","TeamsDashboardComponent_div_35_div_9_Template","isLoadingMatches","routes","path","component","TeamsDashboardComponent","multiTournamentService","tournamentMatches","showCreateTournamentModal","showCreateTeamModal","showRecordResultModal","showPlayerMatchesModal","selectedMatchId","isLoadingTournaments","loadTournaments","loadAvailablePlayers","getAllTournaments","t","loadTournamentMatches","openCreateTournamentModal","getRemainingTeams","tournament","teams","canStartTournament","getStatusColor","getAllPlayers","getActiveTournamentMatches","startTournament","multiTournamentId","finishTournament","deleteTournament","indexOf","requestBody","multiMatchId","openCreateTeamModal","getTrophyIcon","position","canFinishTournament","canDeleteTournament","fixture","TeamsDashboardComponent_div_23_Template","TeamsDashboardComponent_div_24_Template","TeamsDashboardComponent_div_28_Template","TeamsDashboardComponent_div_29_Template","TeamsDashboardComponent_div_30_Template","TeamsDashboardComponent_div_31_Template","TeamsDashboardComponent_div_32_Template","TeamsDashboardComponent_div_33_Template","TeamsDashboardComponent_div_34_Template","TeamsDashboardComponent_div_35_Template","AdminRoutingModule","RouterModule","forChild","AdminModule","CommonModule","FormsModule","HttpClientModule","PlayerModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./src/app/core/services/admin-dashboard.service.ts","./node_modules/rxjs/dist/esm/internal/operators/shareReplay.js","./src/app/admin/players/players.component.html","./src/app/admin/players/players.component.ts","./src/app/admin/inbox/inbox.component.html","./src/app/admin/inbox/inbox.component.ts","./src/app/admin/friendlies/friendlies.component.html","./src/app/admin/friendlies/friendlies.component.ts","./src/app/admin/friendlies/friendly-inbox/friendly-inbox.component.html","./src/app/admin/friendlies/friendly-inbox/friendly-inbox.component.ts","./src/app/admin/teams-dashboard/teams-dashboard.component.html","./src/app/admin/admin-routing.module.ts","./src/app/admin/teams-dashboard/teams-dashboard.component.ts","./src/app/admin/admin.module.ts"],"sourcesContent":["import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject, forkJoin, of } from 'rxjs';\r\nimport { map, tap, catchError, shareReplay, filter } from 'rxjs/operators';\r\nimport { PlayerService } from './player.service';\r\nimport { MatchService } from './match.service';\r\nimport { LeagueService } from './league.service';\r\nimport { MessageService } from './message.service';\r\nimport { NoteService } from './note.service';\r\nimport {\r\n  Player,\r\n  Match,\r\n  League,\r\n  AllLeagueRank,\r\n  Note,\r\n  Message,\r\n} from '../../models/interfaces';\r\n\r\nexport interface AdminDashboardData {\r\n  players: Player[];\r\n  matches: Match[];\r\n  currentLeague: League | null;\r\n  allLeagues: AllLeagueRank[];\r\n  notes: Note[];\r\n  messages: Message[];\r\n  stats: {\r\n    totalPlayers: number;\r\n    totalMatches: number;\r\n    totalMatchesLeft: number;\r\n    totalMessagesLeft: number;\r\n  };\r\n}\r\n\r\nexport interface AdminSecondaryData {\r\n  allLeagues: AllLeagueRank[];\r\n  notes: Note[];\r\n  messages: Message[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminDashboardService {\r\n  private essentialDataCache$ = new BehaviorSubject<AdminDashboardData | null>(\r\n    null\r\n  );\r\n  private secondaryDataCache = new Map<string, any>();\r\n  private lastEssentialUpdate = 0;\r\n  private lastSecondaryUpdate = new Map<string, number>();\r\n  private readonly CACHE_DURATION = 900000; // 15 minutes\r\n  private readonly SECONDARY_CACHE_DURATION = 900000; // 15 minutes (same as main cache)\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private matchService: MatchService,\r\n    private leagueService: LeagueService,\r\n    private messageService: MessageService,\r\n    private noteService: NoteService\r\n  ) {}\r\n\r\n  /**\r\n   * Get essential dashboard data with smart caching\r\n   */\r\n  getEssentialData(forceRefresh = false): Observable<AdminDashboardData> {\r\n    const now = Date.now();\r\n    const hasValidCache =\r\n      this.essentialDataCache$.value &&\r\n      now - this.lastEssentialUpdate < this.CACHE_DURATION;\r\n\r\n    if (!forceRefresh && hasValidCache) {\r\n      return this.essentialDataCache$\r\n        .asObservable()\r\n        .pipe(filter((data): data is AdminDashboardData => data !== null));\r\n    }\r\n\r\n    return this.loadEssentialDataFromServer().pipe(\r\n      tap((data) => {\r\n        this.essentialDataCache$.next(data);\r\n        this.lastEssentialUpdate = now;\r\n      }),\r\n      catchError((error) => {\r\n        // Return cached data if available, otherwise empty state\r\n        return of(\r\n          this.essentialDataCache$.value || this.getEmptyDashboardData()\r\n        );\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get secondary data with smart caching\r\n   */\r\n  getSecondaryData(\r\n    type: 'leagues' | 'notes' | 'messages',\r\n    forceRefresh = false\r\n  ): Observable<any> {\r\n    const now = Date.now();\r\n    const lastUpdate = this.lastSecondaryUpdate.get(type) || 0;\r\n    const hasValidCache =\r\n      this.secondaryDataCache.has(type) &&\r\n      now - lastUpdate < this.SECONDARY_CACHE_DURATION;\r\n\r\n    if (!forceRefresh && hasValidCache) {\r\n      return of(this.secondaryDataCache.get(type));\r\n    }\r\n\r\n    return this.loadSecondaryDataFromServer(type).pipe(\r\n      tap((data) => {\r\n        this.secondaryDataCache.set(type, data);\r\n        this.lastSecondaryUpdate.set(type, now);\r\n      }),\r\n      catchError((error) => {\r\n        // Return cached data if available\r\n        return of(this.secondaryDataCache.get(type) || []);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load essential data from server using parallel requests\r\n   */\r\n  private loadEssentialDataFromServer(): Observable<AdminDashboardData> {\r\n    return forkJoin({\r\n      players: this.playerService.getAdminPlayers(),\r\n      matches: this.matchService.getAdminMatches(),\r\n      currentLeague: this.leagueService.getAdminCurrentLeague().pipe(\r\n        map((response) => response.league),\r\n        catchError(() => of(null))\r\n      ),\r\n      allLeagues: this.leagueService\r\n        .getAdminAllLeagues()\r\n        .pipe(catchError(() => of([]))),\r\n      notes: this.noteService.getAdminNotes().pipe(\r\n        map((response) => response.notes),\r\n        catchError(() => of([]))\r\n      ),\r\n      messages: this.messageService.getAdminMessages().pipe(\r\n        map((response) => response.messages || []),\r\n        catchError(() => of([]))\r\n      ),\r\n    }).pipe(\r\n      map(\r\n        ({ players, matches, currentLeague, allLeagues, notes, messages }) => {\r\n          const messagesList = Array.isArray(messages) ? messages : [];\r\n          return {\r\n            players: players as Player[],\r\n            matches: matches as Match[],\r\n            currentLeague,\r\n            allLeagues: allLeagues as AllLeagueRank[],\r\n            notes: notes as Note[],\r\n            messages: messagesList as Message[],\r\n            stats: {\r\n              totalPlayers: players.length,\r\n              totalMatches: matches.length,\r\n              totalMatchesLeft: matches.filter((m) => !m.isCompleted).length,\r\n              totalMessagesLeft: messagesList.filter(\r\n                (m: any) => !m.isRead && !m.isFromAdmin\r\n              ).length,\r\n            },\r\n          };\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load secondary data from server\r\n   */\r\n  private loadSecondaryDataFromServer(type: string): Observable<any> {\r\n    switch (type) {\r\n      case 'leagues':\r\n        return this.leagueService.getAdminAllLeagues();\r\n      case 'notes':\r\n        return this.noteService\r\n          .getAdminNotes()\r\n          .pipe(map((response) => response.notes));\r\n      case 'messages':\r\n        return this.messageService\r\n          .getAdminMessages()\r\n          .pipe(map((response) => response.messages || []));\r\n      default:\r\n        return of([]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update cached data after mutations\r\n   */\r\n  invalidateCache(\r\n    type: 'essential' | 'leagues' | 'notes' | 'messages' | 'all'\r\n  ): void {\r\n    switch (type) {\r\n      case 'essential':\r\n        this.lastEssentialUpdate = 0;\r\n        break;\r\n      case 'leagues':\r\n      case 'notes':\r\n      case 'messages':\r\n        this.lastSecondaryUpdate.set(type, 0);\r\n        this.secondaryDataCache.delete(type);\r\n        break;\r\n      case 'all':\r\n        this.lastEssentialUpdate = 0;\r\n        this.lastSecondaryUpdate.clear();\r\n        this.secondaryDataCache.clear();\r\n        break;\r\n    }\r\n  }\r\n\r\n  // ✅ تم حذف Background refresh تماماً - مالوش لازمة أصلاً\r\n\r\n  /**\r\n   * Get current cached essential data\r\n   */\r\n  getCurrentEssentialData(): AdminDashboardData | null {\r\n    return this.essentialDataCache$.value;\r\n  }\r\n\r\n  /**\r\n   * Update message count in stats\r\n   */\r\n  updateMessageCount(count: number): void {\r\n    const current = this.essentialDataCache$.value;\r\n    if (current) {\r\n      current.stats.totalMessagesLeft = count;\r\n      this.essentialDataCache$.next(current);\r\n    }\r\n  }\r\n\r\n  private getEmptyDashboardData(): AdminDashboardData {\r\n    return {\r\n      players: [],\r\n      matches: [],\r\n      currentLeague: null,\r\n      allLeagues: [],\r\n      notes: [],\r\n      messages: [],\r\n      stats: {\r\n        totalPlayers: 0,\r\n        totalMatches: 0,\r\n        totalMatchesLeft: 0,\r\n        totalMessagesLeft: 0,\r\n      },\r\n    };\r\n  }\r\n}\r\n","import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let bufferSize;\n    let refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n    }\n    else {\n        bufferSize = (configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity);\n    }\n    return share({\n        connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount,\n    });\n}\n","<!-- Admin Update Status Component -->\r\n\r\n<div class=\"block sm:flex transition-all duration-600\">\r\n  <!-- Sidebar -->\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white transition-all duration-600\"\r\n    [ngClass]=\"{\r\n      'w-64 p-4 sm:min-h-screen': isSidebarOpen,\r\n      'w-0 p-0': !isSidebarOpen\r\n    }\"\r\n  >\r\n    <h2\r\n      class=\"text-lg font-bold mb-4 flex justify-between overflow-hidden text-white\"\r\n    >\r\n      Players\r\n      <button (click)=\"toggleSidebar()\" class=\"text-gray-300 text-3xl\">\r\n        ×\r\n      </button>\r\n    </h2>\r\n    <ul *ngIf=\"isSidebarOpen\">\r\n      <li\r\n        *ngFor=\"let player of players\"\r\n        class=\"flex items-center justify-between p-2 cursor-pointer rounded-md hover:bg-gray-700\"\r\n        [class.bg-blue-600]=\"selectedPlayer?.playerId === player.playerId\"\r\n        (click)=\"selectPlayer(player)\"\r\n      >\r\n        <span class=\"text-white\">{{ player.fullName }}</span>\r\n        <button\r\n          (click)=\"confirmDelete(player, $event)\"\r\n          class=\"bg-red-600 px-2 py-1 text-sm rounded text-white hover:bg-red-700 transition\"\r\n        >\r\n          X\r\n        </button>\r\n      </li>\r\n    </ul>\r\n    <button\r\n      *ngIf=\"isSidebarOpen\"\r\n      class=\"mt-4 w-full bg-green-600 p-2 rounded text-white hover:bg-green-700 transition\"\r\n      (click)=\"openModal()\"\r\n    >\r\n      Add Player\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Main Content -->\r\n  <div\r\n    class=\"sm:flex-1 sm:p-2 transition-all duration-600 sm:container sm:mx-auto\"\r\n  >\r\n    <div *ngIf=\"selectedPlayer\" class=\"sm:w-4/6 mx-auto\">\r\n      <h2 class=\"text-2xl font-bold mb-4 text-center text-white\">\r\n        Matches for {{ selectedPlayer.fullName }}\r\n      </h2>\r\n\r\n      <table class=\"w-full border-collapse border border-gray-600 text-center\">\r\n        <thead>\r\n          <tr class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white\">\r\n            <th class=\"border border-gray-600 p-2\">Player 1</th>\r\n            <th class=\"border border-gray-600 p-2\">Player 2</th>\r\n            <th class=\"border border-gray-600 p-2\">Result</th>\r\n            <th class=\"border border-gray-600 p-2\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let match of displayMatches; let i = index\"\r\n            class=\"border border-gray-600\"\r\n            [ngClass]=\"i % 2 === 0 ? 'bg-gray-900' : 'bg-gray-950'\"\r\n          >\r\n            <td class=\"p-2 font-bold text-white\">{{ match.player1Name }}</td>\r\n            <td class=\"p-2 font-bold text-white\">{{ match.player2Name }}</td>\r\n            <td class=\"p-2 font-bold text-white\">\r\n              {{ match.score1 }} - {{ match.score2 }}\r\n            </td>\r\n            <td class=\"p-2\">\r\n              <button\r\n                class=\"bg-blue-600 px-2 py-1 rounded text-white hover:bg-blue-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, match.player1Id)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Win P1\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-blue-600 px-2 py-1 rounded text-white mx-1 hover:bg-blue-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, match.player2Id)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Win P2\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-yellow-600 px-2 py-1 rounded text-white hover:bg-yellow-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, null)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Draw\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-gray-600 px-2 py-1 rounded text-white ml-2 hover:bg-gray-700 transition-all\"\r\n                (click)=\"resetMatch(match.matchId)\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Undo\" }}\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <hr class=\"my-3 border-gray-600\" />\r\n\r\n    <!-- القائمة الأولية -->\r\n    <div>\r\n      <div class=\"grid grid-cols-3 lg:grid-cols-5 gap-4 pt-5\">\r\n        <button\r\n          (click)=\"toggleSidebar()\"\r\n          class=\"bg-blue-600 text-white px-3 py-2 rounded mb-4 hover:bg-blue-700 transition\"\r\n        >\r\n          ☰ Players\r\n        </button>\r\n        <button\r\n          routerLink=\"/admin/inbox\"\r\n          class=\"bg-orange-600 hover:bg-orange-700 text-white mb-4 px-3 py-2 rounded transition-all relative\"\r\n        >\r\n          Inbox\r\n          <div\r\n            class=\"absolute -top-2 -right-2 w-[30px] h-[30px] rounded-full bg-green-600 flex justify-center items-center\"\r\n            *ngIf=\"totalMessagesLeft > 0\"\r\n          >\r\n            <h4 class=\"text-white font-bold\">{{ totalMessagesLeft }}</h4>\r\n          </div>\r\n        </button>\r\n        <button\r\n          routerLink=\"/admin/teams-dashboard\"\r\n          class=\"bg-blue-600 hover:bg-blue-700 text-white mb-4 px-3 py-2 rounded transition-all\"\r\n        >\r\n          👥 Teams Tournament\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 text-white px-3 py-2 rounded mb-4 hover:bg-green-700 transition\"\r\n          (click)=\"openStartLeagueModal()\"\r\n          *ngIf=\"leagueData == null\"\r\n        >\r\n          Start New League\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 text-white px-3 py-2 rounded mb-4 hover:bg-red-700 transition\"\r\n          *ngIf=\"leagueData != null\"\r\n          (click)=\"showEndLeagueModal = true\"\r\n          s\r\n        >\r\n          End League\r\n        </button>\r\n        <!-- Tournament Stage Button -->\r\n        <button\r\n          class=\"bg-purple-600 text-white px-3 py-2 rounded mb-4 hover:bg-purple-700 transition font-bold\"\r\n          *ngIf=\"showTournamentStageButton && leagueData != null\"\r\n          (click)=\"onTournamentStageButtonClick()\"\r\n        >\r\n          🏆 {{ tournamentStageButtonText }}\r\n        </button>\r\n        <button\r\n          class=\"bg-indigo-600 text-white px-3 py-2 rounded mb-4 hover:bg-indigo-700 transition\"\r\n          (click)=\"openNoteModal()\"\r\n        >\r\n          Notes\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\"\r\n        *ngIf=\"leagueData\"\r\n      >\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">\r\n            League Description\r\n          </h3>\r\n          <p class=\"font-bold text-gray-300\">{{ leagueData.description }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">نوع البطولة</h3>\r\n          <p class=\"font-bold text-gray-300\">\r\n            <span *ngIf=\"leagueData.typeOfLeague === 0\">👤</span>\r\n            <span *ngIf=\"leagueData.typeOfLeague === 1\">👥</span>\r\n            <span *ngIf=\"leagueData.typeOfLeague === 2\">🏆</span>\r\n            {{ getLeagueTypeText(leagueData.typeOfLeague) }}\r\n          </p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">نظام البطولة</h3>\r\n          <p class=\"font-bold text-gray-300\">\r\n            <span *ngIf=\"leagueData.systemOfLeague === 0\">📊</span>\r\n            <span *ngIf=\"leagueData.systemOfLeague === 1\">⚔️</span>\r\n            {{\r\n              leagueData.systemOfLeague !== undefined\r\n                ? getSystemTypeText(leagueData.systemOfLeague)\r\n                : \"غير محدد\"\r\n            }}\r\n          </p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Start Date</h3>\r\n          <p class=\"font-bold text-gray-300\">\r\n            {{ leagueData.createdOn | date : \"fullDate\" }}\r\n          </p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">League Name</h3>\r\n          <p class=\"font-bold text-gray-300\">{{ leagueData.name }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8 container mx-auto\">\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">\r\n            Remaining Matches\r\n          </h3>\r\n          <p class=\"text-3xl font-bold text-red-500\">{{ totalMatchesLeft }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Total Matches</h3>\r\n          <p class=\"text-3xl font-bold text-green-500\">{{ totalMatches }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Total Players</h3>\r\n          <p class=\"text-3xl font-bold text-blue-500\">{{ totalPlayers }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- كل البطولات -->\r\n    <div class=\"text-center\">\r\n      <h2\r\n        class=\"mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-4xl lg:text-4xl text-white\"\r\n      >\r\n        All Leagues\r\n      </h2>\r\n\r\n      <div class=\"max-h-[350px] overflow-x-auto\">\r\n        <table class=\"min-w-full divide-y-2 divide-gray-600\">\r\n          <thead class=\"sticky top-0 bg-black bg-opacity-50 backdrop-blur-sm\">\r\n            <tr class=\"*:font-medium *:text-white\">\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Name</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Status</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Type</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League System</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Date</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">Winner</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"divide-y divide-gray-600\">\r\n            <tr\r\n              *ngFor=\"let league of leagues; let i = index\"\r\n              class=\"*:font-bold *:first:font-medium\"\r\n              [ngClass]=\"{\r\n                'bg-gray-900': i % 2 === 0,\r\n                'bg-gray-950': i % 2 !== 0\r\n              }\"\r\n            >\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ league.leagueName }}\r\n              </td>\r\n              <td\r\n                class=\"px-3 py-2 whitespace-nowrap\"\r\n                [class.text-green-500]=\"!league.isFinished\"\r\n                [class.text-red-500]=\"league.isFinished\"\r\n              >\r\n                {{ !league.isFinished ? \"Live Now!!\" : \"Finished\" }}\r\n              </td>\r\n\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ getLeagueTypeTextForTable(league.leagueType) }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ getSystemTypeTextForTable(league.systemOfLeague) }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ league.createdOn | date : \"yyyy/MM/dd\" }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{\r\n                  league.players && league.players.length > 0\r\n                    ? league.players[0].fullName\r\n                    : \"No Winner Yet\"\r\n                }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap\">\r\n                <button\r\n                  (click)=\"openDeleteLeagueModal(league.leagueId)\"\r\n                  class=\"bg-red-600 text-white px-3 py-2 rounded hover:bg-red-700 transition\"\r\n                >\r\n                  Delete League\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Delete League Modal -->\r\n  <div\r\n    *ngIf=\"showDeleteLeagueModal\"\r\n    class=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\r\n  >\r\n    <div\r\n      class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg shadow-lg w-96\"\r\n    >\r\n      <h2 class=\"text-xl font-bold text-white mb-4\">Confirm Delete</h2>\r\n      <p class=\"text-gray-300 mb-6\">\r\n        Are you sure you want to delete league \"{{\r\n          selectedLeagueToDelete?.leagueName\r\n        }}\"?\r\n      </p>\r\n      <div class=\"flex justify-end space-x-4\">\r\n        <button\r\n          (click)=\"closeDeleteLeagueModal()\"\r\n          class=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 transition\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          (click)=\"deleteConfirmedLeague()\"\r\n          class=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Delete Confirmation Modal -->\r\n  <div\r\n    *ngIf=\"showDeleteModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm Delete</h2>\r\n      <p class=\"text-gray-300\">\r\n        Are you sure you want to delete\r\n        <strong>{{ selectedPlayerToDelete?.fullName }}</strong\r\n        >?\r\n      </p>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"showDeleteModal = false\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n          (click)=\"deleteConfirmedPlayer()\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Add Player Modal -->\r\n  <div\r\n    *ngIf=\"showModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Add New Player</h2>\r\n      <input\r\n        type=\"text\"\r\n        [(ngModel)]=\"newPlayerName\"\r\n        class=\"border border-gray-600 p-2 w-full bg-gray-800 text-white rounded placeholder-gray-400\"\r\n        placeholder=\"Enter player name\"\r\n      />\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n          (click)=\"closeModal()\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n          (click)=\"addPlayer()\"\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Start League Modal -->\r\n  <div\r\n    *ngIf=\"showStartLeagueModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg w-96\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Start New League</h2>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Name</label\r\n        >\r\n        <input\r\n          type=\"text\"\r\n          [(ngModel)]=\"newLeague.name\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          placeholder=\"Enter league name\"\r\n        />\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Description</label\r\n        >\r\n        <textarea\r\n          [(ngModel)]=\"newLeague.description\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          placeholder=\"Enter league description\"\r\n          rows=\"3\"\r\n        ></textarea>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Type</label\r\n        >\r\n        <select\r\n          [(ngModel)]=\"newLeague.typeOfLeague\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n        >\r\n          <option [ngValue]=\"0\">Single</option>\r\n          <option [ngValue]=\"1\">Multi</option>\r\n          <option [ngValue]=\"2\">Groups</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >System Of League</label\r\n        >\r\n        <select\r\n          [(ngModel)]=\"newLeague.systemOfLeague\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n        >\r\n          <option [ngValue]=\"0\">Points</option>\r\n          <option [ngValue]=\"1\">Classic</option>\r\n        </select>\r\n      </div>\r\n      <!-- Rounds Per Match field - only shown when Points system is selected -->\r\n      <div class=\"mb-4\" *ngIf=\"newLeague.systemOfLeague === 0\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >Rounds Per Match</label\r\n        >\r\n        <input\r\n          type=\"number\"\r\n          [(ngModel)]=\"newLeague.roundsPerMatch\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          placeholder=\"Enter number of rounds per match (e.g., 3)\"\r\n        />\r\n        <small class=\"text-gray-400 text-xs mt-1 block\">\r\n          Number of rounds each player will play in a match (Points system only)\r\n        </small>\r\n      </div>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"closeStartLeagueModal()\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n          (click)=\"startLeague()\"\r\n        >\r\n          Start League\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- End League Confirmation Modal -->\r\n  <div\r\n    *ngIf=\"showEndLeagueModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm End League</h2>\r\n      <p class=\"text-gray-300\">\r\n        Are you sure you want to end the current league? This action cannot be\r\n        undone.\r\n      </p>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"showEndLeagueModal = false\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n          (click)=\"resetTournament(leagueData!.id)\"\r\n        >\r\n          Confirm End\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Notes Modal -->\r\n  <div\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    *ngIf=\"showNoteModal\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-4 rounded-lg\">\r\n      <div>\r\n        <h2 class=\"font-bold text-white text-center\">Add New Note</h2>\r\n        <div>\r\n          <label for=\"Notes\">\r\n            <span class=\"text-sm font-medium text-gray-300\">Notes</span>\r\n            <div class=\"relative m-2 overflow-hidden rounded border-gray-600\">\r\n              <textarea\r\n                id=\"Notes\"\r\n                class=\"w-full resize-none p-3 border border-gray-600 bg-gray-800 text-white placeholder-gray-400\"\r\n                rows=\"4\"\r\n                [(ngModel)]=\"newNote\"\r\n              ></textarea>\r\n              <div class=\"flex items-center justify-end gap-2 p-1.5\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"rounded p-2 font-bold text-white bg-green-600 hover:bg-green-700 transition\"\r\n                  (click)=\"sendNote()\"\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div class=\"p-6\">\r\n        <div *ngFor=\"let note of notes\">\r\n          <div\r\n            class=\"mt-4 flex items-center justify-end\"\r\n            *ngIf=\"note.isDeleted == false\"\r\n          >\r\n            <p class=\"font-bold px-3 text-white\">\r\n              {{ note.content }}\r\n            </p>\r\n            <button\r\n              class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n              (click)=\"toggleDeleteNote(note.id)\"\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n              (click)=\"toggleHideNote(note)\"\r\n              *ngIf=\"note.isHidden == true\"\r\n            >\r\n              Show\r\n            </button>\r\n            <button\r\n              class=\"bg-purple-600 px-4 py-2 text-white rounded hover:bg-purple-700 transition\"\r\n              (click)=\"toggleHideNote(note)\"\r\n              *ngIf=\"note.isHidden == false\"\r\n            >\r\n              Hide\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n        (click)=\"closeNoteModal()\"\r\n      >\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { MatchService } from 'src/app/core/services/match.service';\r\nimport { PlayerService } from './../../core/services/player.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  Player,\r\n  Match,\r\n  StartLeagueDto,\r\n  League,\r\n  AllLeagueRank,\r\n  Note,\r\n  TournamentStage,\r\n  LeagueType,\r\n  SystemOfLeague,\r\n} from 'src/app/models/interfaces';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LeagueService } from 'src/app/core/services/league.service';\r\nimport { NoteService } from 'src/app/core/services/note.service';\r\nimport {\r\n  AdminDashboardService,\r\n  AdminDashboardData,\r\n} from 'src/app/core/services/admin-dashboard.service';\r\nimport { Subscription, interval } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-players',\r\n  templateUrl: './players.component.html',\r\n  styleUrls: ['./players.component.css'],\r\n})\r\nexport class PlayersComponent implements OnInit, OnDestroy {\r\n  // Main data properties\r\n  players: Player[] = [];\r\n  selectedPlayer: Player | null = null;\r\n  playerMatches: Match[] = [];\r\n  displayMatches: Match[] = [];\r\n  notes: Note[] = [];\r\n\r\n  // UI state properties\r\n  showModal = false;\r\n  newPlayerName = '';\r\n  isSidebarOpen = false;\r\n  showDeleteModal = false;\r\n  showNoteModal = false;\r\n  showDeleteLeagueModal = false;\r\n  showEndLeagueModal = false;\r\n  loadingMatches: { [matchId: number]: boolean } = {};\r\n\r\n  // League management properties\r\n  leagueData: League | null = null;\r\n  showStartLeagueModal: boolean = false;\r\n  newLeague: StartLeagueDto = {\r\n    name: '',\r\n    description: '',\r\n    typeOfLeague: 0,\r\n    systemOfLeague: 0,\r\n    roundsPerMatch: 3, // Default value for Points system\r\n  };\r\n\r\n  // Statistics properties\r\n  totalMessagesLeft: number = 0;\r\n  totalPlayers: number = 0;\r\n  totalMatches: number = 0;\r\n  totalMatchesLeft: number = 0;\r\n  totalMessages: number = 0;\r\n  leagues: AllLeagueRank[] = [];\r\n  newNote: string = '';\r\n  selectedLeagueToDelete: AllLeagueRank | null = null;\r\n\r\n  // Tournament stage management properties\r\n  currentMatches: Match[] = [];\r\n  showTournamentStageButton = false;\r\n  tournamentStageButtonText = '';\r\n  tournamentStageButtonAction: (() => void) | null = null;\r\n\r\n  // Queue management properties\r\n  private requestQueue: Array<() => Promise<void>> = [];\r\n  private isProcessingQueue = false;\r\n  showResetModal: boolean = false;\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private matchService: MatchService,\r\n    private toastr: ToastrService,\r\n    private leagueService: LeagueService,\r\n    private noteService: NoteService,\r\n    private adminDashboardService: AdminDashboardService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // تحميل البيانات الأساسية مع Smart Caching\r\n    this.loadEssentialData();\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  private loadCurrentLeagueFromServer(): void {\r\n    this.leagueService.getAdminCurrentLeague().subscribe({\r\n      next: (data) => {\r\n        this.leagueData = data.league;\r\n        this.updateTournamentStageButton(); // Update button state when league data changes\r\n      },\r\n      error: (err) => {\r\n        this.leagueData = null;\r\n        this.updateTournamentStageButton(); // Update button state when league data changes\r\n      },\r\n    });\r\n  }\r\n\r\n  private loadEssentialData(): void {\r\n    this.adminDashboardService.getEssentialData().subscribe({\r\n      next: (data: AdminDashboardData) => {\r\n        // ✅ عرض جميع البيانات فوراً من الكاش\r\n        this.players = data.players;\r\n        this.currentMatches = data.matches;\r\n        this.leagueData = data.currentLeague;\r\n        this.leagues = data.allLeagues;\r\n        this.notes = data.notes;\r\n\r\n        // ✅ عرض إحصائيات كاملة بما فيها عدد الرسائل\r\n        this.totalPlayers = data.stats.totalPlayers;\r\n        this.totalMatches = data.stats.totalMatches;\r\n        this.totalMatchesLeft = data.stats.totalMatchesLeft;\r\n        this.totalMessagesLeft = data.stats.totalMessagesLeft;\r\n\r\n        // Update tournament stage button\r\n        this.updateTournamentStageButton();\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حدث خطأ أثناء تحميل البيانات');\r\n      },\r\n    });\r\n  }\r\n\r\n  // New method to load current matches for tournament stage logic\r\n  private loadCurrentMatches(): void {\r\n    this.matchService.getAdminMatches().subscribe({\r\n      next: (matches) => {\r\n        this.currentMatches = matches;\r\n        this.updateTournamentStageButton();\r\n      },\r\n      error: (err) => {\r\n        this.currentMatches = [];\r\n        this.updateTournamentStageButton(); // Update button state even on error\r\n      },\r\n    });\r\n  }\r\n\r\n  toggleSidebar(): void {\r\n    this.isSidebarOpen = !this.isSidebarOpen;\r\n    this.selectedPlayer = null;\r\n  }\r\n\r\n  selectPlayer(player: Player): void {\r\n    this.selectedPlayer = player;\r\n    this.loadMatches();\r\n  }\r\n\r\n  loadMatches(): void {\r\n    if (!this.selectedPlayer) return;\r\n    this.matchService.getAdminMatches().subscribe((matches) => {\r\n      this.playerMatches = matches\r\n        .filter(\r\n          (m) =>\r\n            m.player1Id === this.selectedPlayer!.playerId ||\r\n            m.player2Id === this.selectedPlayer!.playerId\r\n        )\r\n        .sort((a, b) => {\r\n          const nameA =\r\n            (a.player1Id === this.selectedPlayer!.playerId\r\n              ? a.player2Name\r\n              : a.player1Name\r\n            )?.toLowerCase() ?? '';\r\n          const nameB =\r\n            (b.player1Id === this.selectedPlayer!.playerId\r\n              ? b.player2Name\r\n              : b.player1Name\r\n            )?.toLowerCase() ?? '';\r\n          return nameA.localeCompare(nameB);\r\n        });\r\n      this.displayMatches = this.playerMatches.map((match) => {\r\n        if (match.player2Id === this.selectedPlayer!.playerId) {\r\n          return {\r\n            ...match,\r\n            player1Name: match.player2Name,\r\n            player2Name: match.player1Name,\r\n            score1: match.score2,\r\n            score2: match.score1,\r\n            player1Id: match.player2Id,\r\n            player2Id: match.player1Id,\r\n          };\r\n        }\r\n        return { ...match };\r\n      });\r\n      this.playerMatches.forEach((match) => {\r\n        this.loadingMatches[match.matchId] = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  private addToQueue(request: () => Promise<void>): void {\r\n    this.requestQueue.push(request);\r\n    this.processQueue();\r\n  }\r\n\r\n  private async processQueue(): Promise<void> {\r\n    if (this.isProcessingQueue || this.requestQueue.length === 0) return;\r\n\r\n    this.isProcessingQueue = true;\r\n    const request = this.requestQueue.shift();\r\n\r\n    if (request) {\r\n      try {\r\n        await request();\r\n      } catch (error) {}\r\n    }\r\n\r\n    this.isProcessingQueue = false;\r\n    this.processQueue();\r\n  }\r\n\r\n  updateMatch(matchId: number, winnerId: number | null) {\r\n    this.loadingMatches[matchId] = true;\r\n\r\n    this.addToQueue(\r\n      () =>\r\n        new Promise<void>((resolve, reject) => {\r\n          this.matchService.updateMatch(matchId, winnerId).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                this.toastr.success(response.message);\r\n                // Invalidate cache and reload essential data\r\n                this.adminDashboardService.invalidateCache('essential');\r\n                this.loadEssentialData();\r\n                this.loadMatches();\r\n              } else {\r\n                this.toastr.error(response.message);\r\n              }\r\n              this.loadingMatches[matchId] = false;\r\n              resolve();\r\n            },\r\n            error: (error) => {\r\n              this.toastr.error(error.error.message);\r\n              this.loadingMatches[matchId] = false;\r\n              reject(error);\r\n            },\r\n          });\r\n        })\r\n    );\r\n  }\r\n\r\n  resetMatch(matchId: number) {\r\n    this.loadingMatches[matchId] = true;\r\n\r\n    this.addToQueue(\r\n      () =>\r\n        new Promise<void>((resolve, reject) => {\r\n          this.matchService.resetMatch(matchId).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                this.toastr.success(response.message);\r\n                this.loadMatches();\r\n              } else {\r\n                this.toastr.error(response.message, 'Error');\r\n              }\r\n              this.loadingMatches[matchId] = false;\r\n              resolve();\r\n            },\r\n            error: (error) => {\r\n              this.toastr.error(error.error.message);\r\n              this.loadingMatches[matchId] = false;\r\n              reject(error);\r\n            },\r\n          });\r\n        })\r\n    );\r\n  }\r\n\r\n  deletePlayer(playerId: number, event: Event): void {\r\n    event.stopPropagation();\r\n    this.playerService.deletePlayer(playerId).subscribe(() => {\r\n      this.toastr.warning('Player deleted!', 'Deleted');\r\n      this.loadMatches();\r\n      // Invalidate cache and reload essential data\r\n      this.adminDashboardService.invalidateCache('essential');\r\n      this.loadEssentialData();\r\n      this.updateTournamentStageButton(); // Update button state after deleting player\r\n      if (this.selectedPlayer?.playerId === playerId) {\r\n        this.selectedPlayer = null;\r\n        this.playerMatches = [];\r\n        this.displayMatches = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal(): void {\r\n    this.showModal = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.showModal = false;\r\n    this.newPlayerName = '';\r\n  }\r\n\r\n  addPlayer(): void {\r\n    if (!this.newPlayerName.trim()) return;\r\n    this.playerService.addPlayer(this.newPlayerName).subscribe((response) => {\r\n      if (response.success) {\r\n        this.toastr.success(response.message);\r\n        // Invalidate cache and reload essential data\r\n        this.adminDashboardService.invalidateCache('essential');\r\n        this.loadEssentialData();\r\n        this.loadMatches();\r\n        this.closeModal();\r\n      } else this.toastr.warning(response.message);\r\n    });\r\n  }\r\n\r\n  selectedPlayerToDelete: { playerId: number; fullName: string } | null = null;\r\n\r\n  confirmDelete(player: { playerId: number; fullName: string }, event: Event) {\r\n    event.stopPropagation();\r\n    this.selectedPlayerToDelete = player;\r\n    this.showDeleteModal = true;\r\n  }\r\n\r\n  deleteConfirmedPlayer() {\r\n    if (this.selectedPlayerToDelete) {\r\n      this.playerService\r\n        .deletePlayer(this.selectedPlayerToDelete.playerId)\r\n        .subscribe((response) => {\r\n          if (response.success) {\r\n            this.toastr.success(response.message);\r\n            // Invalidate cache and reload essential data\r\n            this.adminDashboardService.invalidateCache('essential');\r\n            this.loadEssentialData();\r\n            this.loadMatches();\r\n          } else {\r\n            this.toastr.error(response.message, 'Error');\r\n          }\r\n        });\r\n\r\n      this.showDeleteModal = false;\r\n      this.selectedPlayerToDelete = null;\r\n    }\r\n  }\r\n\r\n  resetTournament(id: number): void {\r\n    this.leagueService.resetLeague(id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.showResetModal = false;\r\n          this.loadMatches();\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n          this.showEndLeagueModal = false;\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  openStartLeagueModal(): void {\r\n    this.showStartLeagueModal = true;\r\n    this.newLeague = {\r\n      name: '',\r\n      description: '',\r\n      typeOfLeague: 0,\r\n      systemOfLeague: 0,\r\n      roundsPerMatch: 3, // Default value for Points system\r\n    };\r\n  }\r\n\r\n  closeStartLeagueModal(): void {\r\n    this.showStartLeagueModal = false;\r\n  }\r\n\r\n  startLeague(): void {\r\n    if (!this.newLeague.name.trim()) {\r\n      this.toastr.error('League name is required', 'Error');\r\n      return;\r\n    }\r\n\r\n    // Validate rounds per match for Points system\r\n    if (\r\n      this.newLeague.systemOfLeague === 0 &&\r\n      (!this.newLeague.roundsPerMatch || this.newLeague.roundsPerMatch < 1)\r\n    ) {\r\n      this.toastr.error(\r\n        'Rounds per match is required for Points system and must be at least 1',\r\n        'Error'\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.leagueService.startLeague(this.newLeague).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.closeStartLeagueModal();\r\n          this.loadMatches();\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message, 'Error');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n        // console.error(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  DeleteLeague(id: number): void {\r\n    this.leagueService.DeleteLeague(id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.showDeleteLeagueModal = false;\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  openDeleteLeagueModal(leagueId: number): void {\r\n    this.selectedLeagueToDelete =\r\n      this.leagues.find((l) => l.leagueId === leagueId) || null;\r\n    this.showDeleteLeagueModal = true;\r\n  }\r\n\r\n  closeDeleteLeagueModal(): void {\r\n    this.showDeleteLeagueModal = false;\r\n    this.selectedLeagueToDelete = null;\r\n  }\r\n\r\n  deleteConfirmedLeague(): void {\r\n    if (this.selectedLeagueToDelete) {\r\n      this.DeleteLeague(this.selectedLeagueToDelete.leagueId);\r\n      this.leagues = this.leagues.filter(\r\n        (l) => l.leagueId !== this.selectedLeagueToDelete?.leagueId\r\n      );\r\n      this.closeDeleteLeagueModal();\r\n    }\r\n  }\r\n\r\n  sendNote(): void {\r\n    if (!this.newNote.trim()) return;\r\n\r\n    this.noteService.sendNote(this.newNote).subscribe({\r\n      next: (res) => {\r\n        this.toastr.success(res.message);\r\n        this.newNote = '';\r\n        // Invalidate cache and reload all data\r\n        this.adminDashboardService.invalidateCache('essential');\r\n        this.loadEssentialData();\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتبعت الملاحظة'),\r\n    });\r\n  }\r\n\r\n  toggleHideNote(note: any): void {\r\n    this.noteService.toggleMarHide(note.id, !note.isHidden).subscribe({\r\n      next: (res) => {\r\n        this.toastr.success(res.message);\r\n        this.loadEssentialData(); // ✅ محل getNotes()\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتغير الظهور'),\r\n    });\r\n  }\r\n\r\n  toggleDeleteNote(noteId: number): void {\r\n    this.noteService.DeleteNote(noteId, false).subscribe({\r\n      next: (res) => {\r\n        this.toastr.warning(res.message);\r\n        this.loadEssentialData(); // ✅ محل getNotes()\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتحذف '),\r\n    });\r\n  }\r\n\r\n  openNoteModal(): void {\r\n    this.showNoteModal = true;\r\n  }\r\n  closeNoteModal(): void {\r\n    this.showNoteModal = false;\r\n  }\r\n\r\n  // Method to determine tournament stage and update button\r\n  // This method checks the current tournament stage and shows appropriate buttons\r\n  // For Groups type leagues, it shows buttons to progress through tournament stages\r\n  private updateTournamentStageButton(): void {\r\n    console.log('🔍 updateTournamentStageButton called');\r\n    console.log('📊 leagueData:', this.leagueData);\r\n    console.log('👥 totalPlayers:', this.totalPlayers);\r\n    console.log('⚽ currentMatches:', this.currentMatches);\r\n\r\n    // Only show button for Groups type leagues\r\n    if (!this.leagueData) {\r\n      console.log('❌ No league data available');\r\n      this.showTournamentStageButton = false;\r\n      return;\r\n    }\r\n\r\n    console.log('🏆 League type:', this.leagueData.typeOfLeague);\r\n    console.log('🏆 LeagueType.Groups:', LeagueType.Groups);\r\n\r\n    // Check if it's a Groups type league (can be string 'Groups' or number 2)\r\n    const leagueType = this.leagueData.typeOfLeague as any;\r\n    const isGroupsLeague =\r\n      leagueType === LeagueType.Groups ||\r\n      leagueType === 'Groups' ||\r\n      leagueType === 2;\r\n\r\n    if (!isGroupsLeague) {\r\n      console.log('❌ Not a Groups type league');\r\n      this.showTournamentStageButton = false;\r\n      return;\r\n    }\r\n\r\n    console.log('✅ Confirmed: This is a Groups type league');\r\n\r\n    // Check if there are players but no matches (need to start group stage)\r\n    if (this.totalPlayers > 0 && this.currentMatches.length === 0) {\r\n      console.log('✅ Showing start group stage button');\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'ابدأ دور المجموعات';\r\n      this.tournamentStageButtonAction = () => this.startGroupStage();\r\n      return;\r\n    }\r\n\r\n    // Check current stage based on matches\r\n    const groupMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.GroupStage ||\r\n        m.tournamentStage === 'GroupStage'\r\n    );\r\n    const quarterMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.QuarterFinals ||\r\n        m.tournamentStage === 'QuarterFinals'\r\n    );\r\n    const semiMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.SemiFinals ||\r\n        m.tournamentStage === 'SemiFinals'\r\n    );\r\n    const finalMatches = this.currentMatches.filter(\r\n      (m) => m.stage === TournamentStage.Final || m.tournamentStage === 'Final'\r\n    );\r\n\r\n    console.log('📊 Group matches:', groupMatches.length);\r\n    console.log('📊 Quarter matches:', quarterMatches.length);\r\n    console.log('📊 Semi matches:', semiMatches.length);\r\n    console.log('📊 Final matches:', finalMatches.length);\r\n\r\n    // Check if all matches in a stage are completed\r\n    const allGroupMatchesCompleted =\r\n      groupMatches.length > 0 &&\r\n      groupMatches.every((match) => match.isCompleted);\r\n    const allQuarterMatchesCompleted =\r\n      quarterMatches.length > 0 &&\r\n      quarterMatches.every((match) => match.isCompleted);\r\n    const allSemiMatchesCompleted =\r\n      semiMatches.length > 0 && semiMatches.every((match) => match.isCompleted);\r\n\r\n    // Show quarter button when group stage is completed and no quarter matches exist\r\n    if (\r\n      groupMatches.length > 0 &&\r\n      allGroupMatchesCompleted &&\r\n      quarterMatches.length === 0\r\n    ) {\r\n      console.log('✅ Showing start quarter button');\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'ابدأ دور ربع النهائي';\r\n      this.tournamentStageButtonAction = () => this.startQuarterStage();\r\n      return;\r\n    }\r\n\r\n    // Show semi button when quarter stage is completed and no semi matches exist\r\n    if (\r\n      quarterMatches.length > 0 &&\r\n      allQuarterMatchesCompleted &&\r\n      semiMatches.length === 0\r\n    ) {\r\n      console.log('✅ Showing start semi final button');\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'ابدأ دور نصف النهائي';\r\n      this.tournamentStageButtonAction = () => this.startSemiFinalStage();\r\n      return;\r\n    }\r\n\r\n    // Show final button when semi stage is completed and no final matches exist\r\n    if (\r\n      semiMatches.length > 0 &&\r\n      allSemiMatchesCompleted &&\r\n      finalMatches.length === 0\r\n    ) {\r\n      console.log('✅ Showing start final button');\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'ابدأ النهائي';\r\n      this.tournamentStageButtonAction = () => this.startFinalStage();\r\n      return;\r\n    }\r\n\r\n    if (finalMatches.length > 0) {\r\n      // Final stage is active, hide button\r\n      console.log('🏁 Final stage active, hiding button');\r\n      this.showTournamentStageButton = false;\r\n      return;\r\n    }\r\n\r\n    // Default: hide button\r\n    console.log('❌ No button to show');\r\n    this.showTournamentStageButton = false;\r\n  }\r\n\r\n  // Tournament stage action methods\r\n  startGroupStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.createGroupsAndMatches(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  startQuarterStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startKnockoutStage(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n        // console.error(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  startSemiFinalStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startSemiFinals(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  startFinalStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startFinal(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  // Method to handle tournament stage button click\r\n  onTournamentStageButtonClick(): void {\r\n    if (this.tournamentStageButtonAction) {\r\n      this.tournamentStageButtonAction();\r\n    }\r\n  }\r\n\r\n  // Helper method to get readable league type\r\n  getLeagueTypeText(type: LeagueType): string {\r\n    switch (type) {\r\n      case LeagueType.Single:\r\n        return 'بطولة فردية';\r\n      case LeagueType.Multi:\r\n        return 'بطولة متعددة';\r\n      case LeagueType.Groups:\r\n        return 'بطولة مجموعات';\r\n      default:\r\n        return 'غير محدد';\r\n    }\r\n  }\r\n\r\n  // Helper method to get readable system type\r\n  getSystemTypeText(system: SystemOfLeague): string {\r\n    switch (system) {\r\n      case SystemOfLeague.Points:\r\n        return 'نظام النقاط';\r\n      case SystemOfLeague.Classic:\r\n        return 'النظام الكلاسيكي';\r\n      default:\r\n        return 'غير محدد';\r\n    }\r\n  }\r\n\r\n  // Helper method to get readable league type for table (handles both string and number)\r\n  getLeagueTypeTextForTable(leagueType: any): string {\r\n    if (leagueType === 0 || leagueType === 'Single') {\r\n      return 'بطولة فردية';\r\n    } else if (leagueType === 1 || leagueType === 'Multi') {\r\n      return 'بطولة متعددة';\r\n    } else if (leagueType === 2 || leagueType === 'Groups') {\r\n      return 'بطولة مجموعات';\r\n    } else {\r\n      return 'غير محدد';\r\n    }\r\n  }\r\n\r\n  // Helper method to get readable system type for table (handles both string and number)\r\n  getSystemTypeTextForTable(systemType: any): string {\r\n    if (systemType === 0 || systemType === 'Points') {\r\n      return 'نظام النقاط';\r\n    } else if (systemType === 1 || systemType === 'Classic') {\r\n      return 'النظام الكلاسيكي';\r\n    } else {\r\n      return 'غير محدد';\r\n    }\r\n  }\r\n}\r\n","<div\r\n  class=\"container mx-auto p-4 flex flex-col sm:flex-row overflow-hidden h-screen\"\r\n>\r\n  <!-- Chats List -->\r\n  <div\r\n    class=\"w-full sm:w-1/3 border-r border-gray-600 sm:block\"\r\n    [ngClass]=\"{ hidden: selectedChat }\"\r\n  >\r\n    <div class=\"flex items-center justify-between mb-6\">\r\n      <h2 class=\"text-2xl font-bold text-white\">📥 Inbox</h2>\r\n    </div>\r\n\r\n    <!-- No Chats -->\r\n    <div *ngIf=\"playerChats.length === 0\" class=\"text-center text-gray-300\">\r\n      No messages here 📭\r\n    </div>\r\n\r\n    <!-- Chats List -->\r\n    <div\r\n      *ngIf=\"playerChats.length > 0\"\r\n      class=\"space-y-2 overflow-y-auto max-h-[calc(100vh-120px)]\"\r\n    >\r\n      <div\r\n        *ngFor=\"let chat of playerChats; trackBy: trackByPlayerId\"\r\n        class=\"p-4 backdrop-blur-sm border border-gray-600 rounded-lg hover:bg-gray-700 cursor-pointer flex items-center justify-between\"\r\n        (click)=\"openChat(chat.senderId)\"\r\n      >\r\n        <div>\r\n          <p class=\"font-bold text-white\">{{ chat.senderFullName }}</p>\r\n          <p class=\"text-sm text-gray-300 truncate\">{{ chat.lastMessage }}</p>\r\n        </div>\r\n        <span\r\n          *ngIf=\"chat.unreadCount > 0\"\r\n          class=\"bg-green-600 text-white text-xs font-bold rounded-full px-2 py-1\"\r\n        >\r\n          {{ chat.unreadCount }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Chat View -->\r\n  <div\r\n    class=\"w-full sm:w-2/3 flex flex-col h-full relative\"\r\n    [ngClass]=\"{ block: selectedChat, 'hidden sm:flex': !selectedChat }\"\r\n  >\r\n    <div *ngIf=\"selectedChat; else noChatSelected\" class=\"flex flex-col h-full\">\r\n      <!-- Chat Header - Fixed -->\r\n      <div\r\n        class=\"fixed left-0 right-0 z-40 p-2 backdrop-blur-sm border-b border-gray-600 flex items-center justify-between bg-black bg-opacity-90\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n        [style.top.px]=\"navbarHeight\"\r\n      >\r\n        <div class=\"flex items-center\">\r\n          <button\r\n            (click)=\"closeChat()\"\r\n            class=\"mr-4 text-gray-300 hover:text-white transition\"\r\n          >\r\n            <i class=\"fa-solid fa-arrow-left\" style=\"color: #ffffff\"></i>\r\n          </button>\r\n          <div>\r\n            <p class=\"font-bold text-white text-sm p-0\">\r\n              {{ selectedChat.senderFullName }}\r\n            </p>\r\n            <p class=\"text-xs text-gray-400 p-0\">\r\n              {{ selectedChat.senderPhoneNumber }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Messages - Scrollable Area with padding for fixed header and footer -->\r\n      <div\r\n        #messagesContainer\r\n        class=\"flex-1 p-4 overflow-y-auto backdrop-blur-sm\"\r\n        [style.margin-top.px]=\"navbarHeight + 80\"\r\n        style=\"margin-bottom: 80px\"\r\n      >\r\n        <div\r\n          *ngFor=\"\r\n            let message of selectedChat.messages;\r\n            trackBy: trackByMessageId\r\n          \"\r\n          class=\"mb-4\"\r\n          [ngClass]=\"{\r\n            'text-right': !message.isFromAdmin,\r\n            'text-left': message.isFromAdmin\r\n          }\"\r\n        >\r\n          <div\r\n            class=\"inline-block p-3 rounded-lg max-w-xs\"\r\n            [ngClass]=\"{\r\n              'bg-green-700': !message.isFromAdmin,\r\n              'bg-gray-700 ': message.isFromAdmin\r\n            }\"\r\n          >\r\n            <p class=\"text-white\">{{ message.content }}</p>\r\n            <p class=\"text-xs mt-1 text-gray-300\">\r\n              {{ message.sentAt | date : \"MMM d, y, hh:mm a\" }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Reply Input - Fixed -->\r\n      <div\r\n        class=\"fixed bottom-0 left-0 right-0 z-50 p-4 bg-black bg-opacity-90 backdrop-blur-sm border-t border-gray-600\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n      >\r\n        <form (ngSubmit)=\"sendReply()\" class=\"flex items-center gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"replyMessages[selectedChat.messages[0].id]\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n            (ngModelChange)=\"\r\n              replyMessages[selectedChat.messages[0].id] = $event\r\n            \"\r\n            placeholder=\"Write your reply...\"\r\n            class=\"flex-1 p-2 border border-gray-600 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-600 placeholder-gray-400\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 transition disabled:bg-gray-600\"\r\n            [disabled]=\"!replyMessages[selectedChat.messages[0].id]\"\r\n          >\r\n            Reply\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Placeholder when no chat is selected -->\r\n    <ng-template #noChatSelected>\r\n      <div class=\"w-full flex items-center justify-center text-gray-300\">\r\n        Select a chat to view messages 📩\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { MessageService } from 'src/app/core/services/message.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Message } from 'src/app/models/interfaces';\r\nimport { AdminDashboardService } from 'src/app/core/services/admin-dashboard.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\ninterface PlayerChat {\r\n  senderId: string;\r\n  senderFullName: string;\r\n  senderPhoneNumber: string;\r\n  lastMessage: string;\r\n  lastMessageDate: string;\r\n  unreadCount: number;\r\n  messages: Message[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-inbox',\r\n  templateUrl: './inbox.component.html',\r\n  styleUrls: ['./inbox.component.css'],\r\n})\r\nexport class InboxComponent implements OnInit, AfterViewChecked, OnDestroy {\r\n  playerChats: PlayerChat[] = [];\r\n  selectedPlayerId: string | null = null;\r\n  selectedChat: PlayerChat | null = null;\r\n  replyMessages: { [messageId: number]: string } = {};\r\n  private updateStatusSubscription?: Subscription;\r\n  private refreshSubscription?: Subscription;\r\n  navbarHeight = 60; // default navbar height\r\n\r\n  @ViewChild('messagesContainer')\r\n  messagesContainer!: ElementRef<HTMLDivElement>;\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private toastr: ToastrService,\r\n    private cdr: ChangeDetectorRef,\r\n    private adminDashboardService: AdminDashboardService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadAdminMessages();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.updateStatusSubscription) {\r\n      this.updateStatusSubscription.unsubscribe();\r\n    }\r\n    if (this.refreshSubscription) {\r\n      this.refreshSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n  private loadAdminMessages(): void {\r\n    // Always load fresh data from server for immediate updates\r\n    this.loadFromServer();\r\n  }\r\n\r\n  private loadFromCache(): void {\r\n    // تم إلغاء الكاش للادمن، سيتم التحميل دائماً من السيرفر\r\n    this.loadFromServer();\r\n  }\r\n\r\n  private loadFromServer(): void {\r\n    this.adminDashboardService.getSecondaryData('messages').subscribe({\r\n      next: (messages) => {\r\n        if (messages && messages.length > 0) {\r\n          const groupedMessages = this.groupMessagesBySender(messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n  \r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  // Add refresh method for immediate updates\r\n  refreshMessages(): void {\r\n    this.messageService.getAdminMessages().subscribe({\r\n      next: (response) => {\r\n        if (response && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n          \r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.selectedChat && this.messagesContainer) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  loadMessages(): void {\r\n    this.messageService.getMessages().subscribe({\r\n      next: (response) => {\r\n        if (response && response.messages) {\r\n          this.processMessages(response.messages);\r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل الآن');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حصل خطأ أثناء جلب الرسائل');\r\n      },\r\n    });\r\n  }\r\n\r\n  private processMessages(messages: Message[]): void {\r\n    const groupedMessages = this.groupMessagesBySender(messages);\r\n    // ترتيب حسب الأحدث (آخر رسالة)\r\n    this.playerChats = groupedMessages.sort(\r\n      (a, b) =>\r\n        new Date(b.lastMessageDate).getTime() -\r\n        new Date(a.lastMessageDate).getTime()\r\n    );\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  groupMessagesBySender(messages: Message[]): PlayerChat[] {\r\n    const chatMap: { [senderId: string]: PlayerChat } = {};\r\n    messages\r\n      .filter((msg) => !msg.isDeleted)\r\n      .forEach((msg) => {\r\n        const playerId = msg.isFromAdmin ? msg.senderId : msg.senderId;\r\n        if (!chatMap[playerId]) {\r\n          chatMap[playerId] = {\r\n            senderId: playerId,\r\n            senderFullName: msg.senderFullName,\r\n            senderPhoneNumber: msg.senderPhoneNumber,\r\n            lastMessage: '',\r\n            lastMessageDate: '',\r\n            unreadCount: 0,\r\n            messages: [],\r\n          };\r\n        }\r\n        chatMap[playerId].messages.push(msg);\r\n        if (!msg.isFromAdmin && !msg.isRead) {\r\n          chatMap[playerId].unreadCount++;\r\n        }\r\n      });\r\n\r\n    return Object.values(chatMap).map((chat) => {\r\n      // ترتيب الرسائل من الأقدم للأحدث\r\n      chat.messages = chat.messages.sort(\r\n        (a, b) => new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n      );\r\n      // آخر رسالة\r\n      const lastMsg = chat.messages[chat.messages.length - 1];\r\n      chat.lastMessage = lastMsg?.content ?? '';\r\n      chat.lastMessageDate = lastMsg?.sentAt ?? '';\r\n      return chat;\r\n    });\r\n  }\r\n\r\n  openChat(playerId: string): void {\r\n    this.selectedPlayerId = playerId;\r\n    this.selectedChat =\r\n      this.playerChats.find((chat) => chat.senderId === playerId) || null;\r\n    if (this.selectedChat) {\r\n      this.selectedChat.messages\r\n        .filter((msg) => !msg.isRead && !msg.isFromAdmin)\r\n        .forEach((msg) => {\r\n          this.messageService.toggleMarkMessage(msg.id, true).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                msg.isRead = true;\r\n                this.selectedChat!.unreadCount =\r\n                  this.selectedChat!.messages.filter(\r\n                    (m) => !m.isRead && !m.isFromAdmin\r\n                  ).length;\r\n                this.cdr.detectChanges();\r\n              }\r\n            },\r\n            error: (err) => {\r\n              this.toastr.error('حصل خطأ أثناء تحديث حالة الرسالة');\r\n            },\r\n          });\r\n        });\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  closeChat(): void {\r\n    this.selectedPlayerId = null;\r\n    this.selectedChat = null;\r\n    this.replyMessages = {};\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  sendReply(): void {\r\n    if (!this.selectedChat) {\r\n      this.toastr.warning('الرجاء اختيار محادثة');\r\n      return;\r\n    }\r\n    const replyContent =\r\n      this.replyMessages[this.selectedChat.messages[0].id]?.trim();\r\n    if (!replyContent) {\r\n      this.toastr.warning('الرجاء كتابة رد');\r\n      return;\r\n    }\r\n\r\n    this.messageService\r\n      .sendAdminReply(this.selectedChat.senderId, replyContent)\r\n      .subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم إرسال الرد');\r\n            this.replyMessages[this.selectedChat!.messages[0].id] = '';\r\n\r\n            const newMessage: Message = {\r\n              id: Math.random(),\r\n              senderId: this.selectedChat!.senderId,\r\n              senderFullName: 'Admin',\r\n              senderPhoneNumber: '',\r\n              content: replyContent,\r\n              isRead: true,\r\n              isDeleted: false,\r\n              sentAt: new Date().toISOString(),\r\n              isFromAdmin: true,\r\n            };\r\n\r\n            // تحديث الرسائل في المحادثة المحددة\r\n            this.selectedChat!.messages.push(newMessage);\r\n            this.selectedChat!.messages.sort(\r\n              (a, b) =>\r\n                new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n            );\r\n\r\n            // تحديث آخر رسالة في قائمة المحادثات\r\n            this.selectedChat!.lastMessage = replyContent;\r\n            this.selectedChat!.lastMessageDate = newMessage.sentAt;\r\n\r\n            // إعادة ترتيب قائمة المحادثات حسب الأحدث\r\n            this.playerChats.sort(\r\n              (a, b) =>\r\n                new Date(b.lastMessageDate).getTime() -\r\n                new Date(a.lastMessageDate).getTime()\r\n            );\r\n\r\n            // تحديث المحادثة المحددة بعد إعادة الترتيب\r\n            this.selectedChat =\r\n              this.playerChats.find(\r\n                (chat) => chat.senderId === this.selectedPlayerId\r\n              ) || null;\r\n\r\n            this.cdr.detectChanges();\r\n          } else {\r\n            this.toastr.error(response.message || 'فشل إرسال الرد');\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.toastr.error('حصل خطأ أثناء إرسال الرد');\r\n        },\r\n      });\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    if (this.messagesContainer) {\r\n      const container = this.messagesContainer.nativeElement;\r\n      container.scrollTop = container.scrollHeight;\r\n    }\r\n  }\r\n\r\n  trackByPlayerId(index: number, chat: PlayerChat): string {\r\n    return chat.senderId;\r\n  }\r\n\r\n  trackByMessageId(index: number, message: Message): number {\r\n    return message.id;\r\n  }\r\n}\r\n","<!-- Friendlies Dashboard Component -->\r\n\r\n<div class=\"block sm:flex transition-all duration-600\">\r\n  <!-- Sidebar -->\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white transition-all duration-600\"\r\n    [ngClass]=\"{\r\n      'w-64 p-4 sm:min-h-screen': isSidebarOpen,\r\n      'w-0 p-0': !isSidebarOpen\r\n    }\"\r\n  >\r\n    <h2\r\n      class=\"text-lg font-bold mb-4 flex justify-between overflow-hidden text-white\"\r\n    >\r\n      Friendly Players\r\n      <button (click)=\"toggleSidebar()\" class=\"text-gray-300 text-3xl\">\r\n        ×\r\n      </button>\r\n    </h2>\r\n    <ul *ngIf=\"isSidebarOpen\">\r\n      <li\r\n        *ngFor=\"let player of players\"\r\n        class=\"flex items-center justify-between p-2 cursor-pointer rounded-md hover:bg-gray-700\"\r\n        [class.bg-blue-600]=\"selectedPlayer?.playerId === player.playerId\"\r\n        (click)=\"selectPlayer(player)\"\r\n      >\r\n        <span\r\n          class=\"text-white cursor-pointer hover:text-blue-300\"\r\n          (click)=\"openRecordMatchModal()\"\r\n          >{{ player.fullName }}</span\r\n        >\r\n        <button\r\n          (click)=\"confirmDelete(player, $event)\"\r\n          class=\"bg-red-600 px-2 py-1 text-sm rounded text-white hover:bg-red-700 transition\"\r\n        >\r\n          X\r\n        </button>\r\n      </li>\r\n    </ul>\r\n    <button\r\n      *ngIf=\"isSidebarOpen\"\r\n      class=\"mt-4 w-full bg-green-600 p-2 rounded text-white hover:bg-green-700 transition\"\r\n      (click)=\"openModal()\"\r\n    >\r\n      Add Player\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Main Content -->\r\n  <div\r\n    class=\"sm:flex-1 sm:p-2 transition-all duration-600 sm:container sm:mx-auto\"\r\n  >\r\n \r\n    <!-- Friendlies Tab Content -->\r\n    <div *ngIf=\"activeTab === 'friendlies'\">\r\n      <div *ngIf=\"selectedPlayer\" class=\"sm:w-4/6 mx-auto\">\r\n        <h2 class=\"text-2xl font-bold mb-4 text-center text-white\">\r\n          Friendly Matches for {{ selectedPlayer.fullName }}\r\n        </h2>\r\n      </div>\r\n      <hr class=\"my-3 border-gray-600\" />\r\n\r\n      <!-- القائمة الأولية -->\r\n      <div>\r\n        <div class=\"flex justify-evenly pt-5\">\r\n          <button\r\n            (click)=\"toggleSidebar()\"\r\n            class=\"bg-blue-600 text-white px-3 py-2 rounded mb-4 hover:bg-blue-700 transition\"\r\n          >\r\n            ☰ Players\r\n          </button>\r\n\r\n          <button\r\n            routerLink=\"/admin/friendly-inbox\"\r\n            class=\"bg-purple-600 hover:bg-purple-700 text-white mb-4 px-3 py-2 rounded transition-all relative\"\r\n          >\r\n            📬 Friendly Inbox\r\n            <div\r\n              class=\"absolute -top-2 -right-2 w-[30px] h-[30px] rounded-full bg-green-600 flex justify-center items-center\"\r\n              *ngIf=\"totalUnreadFriendlyMessages > 0\"\r\n            >\r\n              <h4 class=\"text-white font-bold\">\r\n                {{ totalUnreadFriendlyMessages }}\r\n              </h4>\r\n            </div>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"text-center mb-8\">\r\n          <h2\r\n            class=\"mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-4xl lg:text-4xl text-white\"\r\n          >\r\n            Quick Actions\r\n          </h2>\r\n\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4\">\r\n            <button\r\n              class=\"bg-teal-600 text-white p-4 rounded-lg hover:bg-teal-700 transition-all\"\r\n              (click)=\"openRecordMatchModal()\"\r\n              [disabled]=\"players.length === 0\"\r\n            >\r\n              <h3 class=\"text-lg font-bold\">Record Match</h3>\r\n              <p class=\"text-sm\">Record a new friendly match</p>\r\n            </button>\r\n\r\n            <button\r\n              class=\"bg-green-600 text-white p-4 rounded-lg hover:bg-green-700 transition-all\"\r\n              (click)=\"openModal()\"\r\n            >\r\n              <h3 class=\"text-lg font-bold\">Add New Player</h3>\r\n              <p class=\"text-sm\">Register a new friendly player</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- All Matches Section -->\r\n      <div class=\"mt-8\">\r\n        <!-- Filters Section -->\r\n        <div class=\"mb-6 p-2 bg-gray-800 rounded-lg\">\r\n          <div class=\"mb-4\">\r\n            <h4 class=\"text-lg font-semibold text-white\">Filter Matches</h4>\r\n          </div>\r\n          <div class=\"grid grid-cols-2 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n                >Date Range</label\r\n              >\r\n              <select\r\n                [(ngModel)]=\"filterForm.dateFilter\"\r\n                (ngModelChange)=\"onFilterChange()\"\r\n                class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n              >\r\n                <option [ngValue]=\"DateFilter.AllTime\">All Time</option>\r\n                <option [ngValue]=\"DateFilter.Today\">Today</option>\r\n                <option [ngValue]=\"DateFilter.Last3Days\">Last 3 Days</option>\r\n                <option [ngValue]=\"DateFilter.LastWeek\">Last Week</option>\r\n                <option [ngValue]=\"DateFilter.LastMonth\">Last Month</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n                >Player</label\r\n              >\r\n              <select\r\n                [(ngModel)]=\"filterForm.playerId\"\r\n                (ngModelChange)=\"onFilterChange()\"\r\n                class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n              >\r\n                <option [ngValue]=\"0\">All Players</option>\r\n                <option\r\n                  *ngFor=\"let player of getAllActivePlayers()\"\r\n                  [ngValue]=\"player.playerId\"\r\n                >\r\n                  {{ player.fullName }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"flex justify-center mt-4\">\r\n            <button\r\n              class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n              (click)=\"clearFilters()\"\r\n            >\r\n              Clear Filters\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"w-full text-white\">\r\n            <thead class=\"text-center\">\r\n              <tr class=\"border-b border-gray-600 text-center\">\r\n                <th class=\"p-3\">Date</th>\r\n                <th class=\"p-3\">Player 1</th>\r\n                <th class=\"p-3\">Score</th>\r\n                <th class=\"p-3\">Player 2</th>\r\n                <th class=\"p-3\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                *ngFor=\"let match of getPaginatedMatches()\"\r\n                class=\"border-b border-gray-700 hover:bg-gray-800\"\r\n              >\r\n                <td class=\"p-3\">\r\n                  {{ match.playedOn | date : \"shortDate\" }}\r\n                </td>\r\n                <td class=\"p-3\">\r\n                  {{ match.player1Name || getPlayerName(match.player1Id) }}\r\n                </td>\r\n                <td class=\"p-3 text-center\">\r\n                  <span class=\"font-bold text-lg\">\r\n                    {{ match.player1Score }} - {{ match.player2Score }}\r\n                  </span>\r\n                </td>\r\n                <td class=\"p-3\">\r\n                  {{ match.player2Name || getPlayerName(match.player2Id) }}\r\n                </td>\r\n                <td class=\"p-3 text-center\">\r\n                  <div class=\"flex justify-center space-x-2\">\r\n                    <button\r\n                      class=\"bg-blue-600 px-3 py-1 text-white rounded hover:bg-blue-700 transition text-sm\"\r\n                      (click)=\"editMatch(match)\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      class=\"bg-red-600 px-3 py-1 text-white rounded hover:bg-red-700 transition text-sm\"\r\n                      (click)=\"deleteMatchFromList(match.matchId)\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <!-- Pagination -->\r\n        <div *ngIf=\"totalPages > 1\" class=\"flex justify-center mt-6\">\r\n          <div class=\"flex space-x-2\">\r\n            <button\r\n              class=\"bg-gray-600 px-3 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n              [disabled]=\"currentPage === 1\"\r\n              (click)=\"changePage(currentPage - 1)\"\r\n            >\r\n              Previous\r\n            </button>\r\n\r\n            <span\r\n              *ngFor=\"let page of [].constructor(totalPages); let i = index\"\r\n              class=\"flex\"\r\n            >\r\n              <button\r\n                class=\"px-3 py-2 text-white rounded transition\"\r\n                [class.bg-blue-600]=\"currentPage === i + 1\"\r\n                [class.bg-gray-600]=\"currentPage !== i + 1\"\r\n                [class.hover:bg-blue-700]=\"currentPage === i + 1\"\r\n                [class.hover:bg-gray-700]=\"currentPage !== i + 1\"\r\n                (click)=\"changePage(i + 1)\"\r\n              >\r\n                {{ i + 1 }}\r\n              </button>\r\n            </span>\r\n\r\n            <button\r\n              class=\"bg-gray-600 px-3 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n              [disabled]=\"currentPage === totalPages\"\r\n              (click)=\"changePage(currentPage + 1)\"\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"text-center mt-4 text-gray-300\">\r\n          Showing {{ (currentPage - 1) * itemsPerPage + 1 }} -\r\n          {{ Math.min(currentPage * itemsPerPage, allMatches.length) }} of\r\n          {{ allMatches.length }} matches\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Quick Actions -->\r\n    </div>\r\n    <!-- End Friendlies Tab -->\r\n\r\n    <!-- Delete Confirmation Modal -->\r\n    <div\r\n      *ngIf=\"showDeleteModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n        <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm Delete</h2>\r\n        <p class=\"text-gray-300\">\r\n          Are you sure you want to delete\r\n          <strong>{{ selectedPlayerToDelete?.fullName }}</strong\r\n          >?\r\n        </p>\r\n        <div class=\"mt-4 flex justify-end\">\r\n          <button\r\n            class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n            (click)=\"showDeleteModal = false\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n            (click)=\"deleteConfirmedPlayer()\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Player Modal -->\r\n    <div\r\n      *ngIf=\"showModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n        <h2 class=\"text-lg font-bold mb-4 text-white\">\r\n          Add New Friendly Player\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          [(ngModel)]=\"friendlyPlayerName\"\r\n          class=\"border border-gray-600 p-2 w-full bg-gray-800 text-white rounded placeholder-gray-400\"\r\n          placeholder=\"Enter player name\"\r\n        />\r\n        <div class=\"mt-4 flex justify-end\">\r\n          <button\r\n            class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n            (click)=\"closeModal()\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n            (click)=\"addPlayer()\"\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Record Match Modal -->\r\n    <div\r\n      *ngIf=\"showRecordMatchModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div\r\n        class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg w-96 max-h-[90vh] overflow-y-auto\"\r\n      >\r\n        <h2 class=\"text-lg font-bold mb-4 text-white\">\r\n          {{ selectedPlayerForMatch ? \"Edit Match\" : \"Record New Match\" }}\r\n        </h2>\r\n\r\n        <!-- Player selection for new match -->\r\n        <div *ngIf=\"!selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 1</label\r\n          >\r\n          <select\r\n            [(ngModel)]=\"matchForm.player1Id\"\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n          >\r\n            <option [ngValue]=\"0\">Select Player 1...</option>\r\n            <option\r\n              *ngFor=\"let player of getAllActivePlayers()\"\r\n              [ngValue]=\"player.playerId\"\r\n            >\r\n              {{ player.fullName }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div *ngIf=\"!selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 2</label\r\n          >\r\n          <select\r\n            [(ngModel)]=\"matchForm.player2Id\"\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n          >\r\n            <option [ngValue]=\"0\">Select Player 2...</option>\r\n            <option\r\n              *ngFor=\"\r\n                let opponent of getOpponentsForPlayer(matchForm.player1Id)\r\n              \"\r\n              [ngValue]=\"opponent.playerId\"\r\n            >\r\n              {{ opponent.fullName }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- Fixed player names for edit mode -->\r\n        <div *ngIf=\"selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 1</label\r\n          >\r\n          <div\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-700 text-white\"\r\n          >\r\n            {{\r\n              selectedPlayerForMatch.player1Name ||\r\n                getPlayerName(matchForm.player1Id)\r\n            }}\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 2</label\r\n          >\r\n          <div\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-700 text-white\"\r\n          >\r\n            {{\r\n              selectedPlayerForMatch.player2Name ||\r\n                getPlayerName(matchForm.player2Id)\r\n            }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"grid grid-cols-2 gap-4 mb-4\">\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n              >Player 1 Score</label\r\n            >\r\n            <input\r\n              type=\"number\"\r\n              [(ngModel)]=\"matchForm.player1Score\"\r\n              min=\"0\"\r\n              (input)=\"validateScore('player1')\"\r\n              placeholder=\"Enter score\"\r\n              class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n              >Player 2 Score</label\r\n            >\r\n            <input\r\n              type=\"number\"\r\n              [(ngModel)]=\"matchForm.player2Score\"\r\n              min=\"0\"\r\n              (input)=\"validateScore('player2')\"\r\n              placeholder=\"Enter score\"\r\n              class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex justify-end space-x-4\">\r\n          <button\r\n            class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n            (click)=\"closeRecordMatchModal()\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n            (click)=\"selectedPlayerForMatch ? updateMatch() : recordNewMatch()\"\r\n            [disabled]=\"\r\n              !matchForm.player1Id ||\r\n              !matchForm.player2Id ||\r\n              (!selectedPlayerForMatch &&\r\n                matchForm.player1Id === matchForm.player2Id) ||\r\n              (matchForm.player1Score === 0 && matchForm.player2Score === 0) ||\r\n              isRecordingMatch\r\n            \"\r\n          >\r\n            {{\r\n              isRecordingMatch\r\n                ? \"Processing...\"\r\n                : selectedPlayerForMatch\r\n                ? \"Update Match\"\r\n                : \"Record Match\"\r\n            }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FriendlyMatchService } from '../../core/services/friendly-match.service';\r\nimport { FriendlyMessageService } from '../../core/services/friendly-message.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DateFilter } from 'friendly-match-types';\r\nimport { calculateUnreadCount } from 'friendly-message-types';\r\n\r\n@Component({\r\n  selector: 'app-friendlies',\r\n  templateUrl: './friendlies.component.html',\r\n  styleUrls: ['./friendlies.component.css'],\r\n})\r\nexport class FriendliesComponent implements OnInit {\r\n  // Tab management\r\n  activeTab: 'friendlies' = 'friendlies';\r\n\r\n  // Sidebar state\r\n  isSidebarOpen = false;\r\n\r\n  // Players data\r\n  players: any[] = [];\r\n  selectedPlayer: any = null;\r\n  displayMatches: any[] = [];\r\n\r\n  // Modals\r\n  showModal = false;\r\n  showDeleteModal = false;\r\n  showRecordMatchModal = false;\r\n  selectedPlayerToDelete: any = null;\r\n  selectedPlayerForMatch: any = null;\r\n\r\n  // Form data (for friendly matches)\r\n  friendlyPlayerName = '';\r\n  matchForm = {\r\n    player1Id: 0,\r\n    player2Id: 0,\r\n    player1Score: null as number | null,\r\n    player2Score: null as number | null,\r\n    playedOn: new Date(),\r\n  };\r\n\r\n  // Loading states\r\n  isRecordingMatch = false;\r\n\r\n  // Statistics\r\n  totalPlayers = 0;\r\n  totalMatches = 0;\r\n  totalUnreadFriendlyMessages = 0;\r\n\r\n  // All matches pagination\r\n  allMatches: any[] = [];\r\n  currentPage = 1;\r\n  itemsPerPage = 10;\r\n  totalPages = 0;\r\n  Math = Math; // Make Math available in template\r\n\r\n  // Filter options\r\n  filterForm = {\r\n    playerId: 0,\r\n    opponentIds: [] as number[],\r\n    dateFilter: DateFilter.AllTime,\r\n  };\r\n  DateFilter = DateFilter; // Make enum available in template\r\n\r\n  constructor(\r\n    private friendlyMatchService: FriendlyMatchService,\r\n    private friendlyMessageService: FriendlyMessageService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadPlayers();\r\n    this.loadAllMatches();\r\n    this.loadUnreadFriendlyMessagesCount();\r\n  }\r\n\r\n  loadUnreadFriendlyMessagesCount(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: any) => {\r\n        if (response.success && response.messages) {\r\n          this.totalUnreadFriendlyMessages = calculateUnreadCount(\r\n            response.messages\r\n          );\r\n        } else {\r\n          this.totalUnreadFriendlyMessages = 0;\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading unread friendly messages count:', error);\r\n        this.totalUnreadFriendlyMessages = 0;\r\n      },\r\n    });\r\n  }\r\n\r\n  toggleSidebar(): void {\r\n    this.isSidebarOpen = !this.isSidebarOpen;\r\n  }\r\n\r\n  loadPlayers(): void {\r\n    this.friendlyMatchService.getAllFriendlyPlayers().subscribe({\r\n      next: (players: any) => {\r\n        this.players = players;\r\n        this.totalPlayers = players.length;\r\n        this.calculateStatistics();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل اللاعبين',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  selectPlayer(player: any): void {\r\n    this.selectedPlayer = player;\r\n    this.loadPlayerMatches(player.playerId);\r\n  }\r\n\r\n  loadPlayerMatches(playerId: number): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        // Get the player's name\r\n        const player = this.players.find((p) => p.playerId === playerId);\r\n        const playerName = player?.fullName;\r\n\r\n        this.displayMatches = matches.filter(\r\n          (match: any) =>\r\n            match.player1Name === playerName || match.player2Name === playerName\r\n        );\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل مباريات اللاعب',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  calculateStatistics(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        this.totalMatches = matches.length;\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل الإحصائيات',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Modal methods (for friendly players)\r\n  openModal(): void {\r\n    this.showModal = true;\r\n    this.friendlyPlayerName = '';\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.showModal = false;\r\n    this.friendlyPlayerName = '';\r\n  }\r\n\r\n  addPlayer(): void {\r\n    if (!this.friendlyPlayerName.trim()) {\r\n      this.toastr.warning('الرجاء إدخال اسم اللاعب', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    this.friendlyMatchService\r\n      .addFriendlyPlayerAsync(this.friendlyPlayerName)\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success(\r\n              `تم إضافة اللاعب ${this.friendlyPlayerName} بنجاح`,\r\n              'تم الإضافة'\r\n            );\r\n            // Refresh cache and reload players\r\n            this.friendlyMatchService.refreshFriendlyPlayers();\r\n            this.loadPlayers();\r\n            this.closeModal();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل إضافة اللاعب',\r\n              'خطأ في الإضافة'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء إضافة اللاعب',\r\n            'خطأ في الإضافة'\r\n          );\r\n        },\r\n      });\r\n  }\r\n\r\n  confirmDelete(player: any, event: Event): void {\r\n    event.stopPropagation();\r\n    this.selectedPlayerToDelete = player;\r\n    this.showDeleteModal = true;\r\n  }\r\n\r\n  deleteConfirmedPlayer(): void {\r\n    if (!this.selectedPlayerToDelete) return;\r\n\r\n    this.friendlyMatchService\r\n      .deleteFriendlyPlayerAsync(this.selectedPlayerToDelete.playerId)\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success(\r\n              `تم حذف اللاعب ${this.selectedPlayerToDelete.fullName} بنجاح`,\r\n              'تم الحذف'\r\n            );\r\n            // Refresh cache and reload players\r\n            this.friendlyMatchService.refreshFriendlyPlayers();\r\n            this.loadPlayers();\r\n            if (\r\n              this.selectedPlayer?.playerId ===\r\n              this.selectedPlayerToDelete.playerId\r\n            ) {\r\n              this.selectedPlayer = null;\r\n              this.displayMatches = [];\r\n            }\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل حذف اللاعب',\r\n              'خطأ في الحذف'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message || error.message || 'حصل خطأ أثناء حذف اللاعب',\r\n            'خطأ في الحذف'\r\n          );\r\n        },\r\n      });\r\n\r\n    this.showDeleteModal = false;\r\n    this.selectedPlayerToDelete = null;\r\n  }\r\n\r\n  getActivePlayersCount(): number {\r\n    return this.players.filter((p) => p.isActive).length;\r\n  }\r\n\r\n  getRecentMatches(): any[] {\r\n    return this.displayMatches.slice(0, 10);\r\n  }\r\n\r\n  // Record Match Modal methods\r\n  openRecordMatchModal(player?: any): void {\r\n    this.selectedPlayerForMatch = player || null;\r\n    this.matchForm.player1Id = player?.playerId || 0;\r\n    this.matchForm.player2Id = 0;\r\n    this.matchForm.player1Score = null;\r\n    this.matchForm.player2Score = null;\r\n    this.matchForm.playedOn = new Date();\r\n    this.showRecordMatchModal = true;\r\n  }\r\n\r\n  closeRecordMatchModal(): void {\r\n    this.showRecordMatchModal = false;\r\n    this.selectedPlayerForMatch = null;\r\n    this.matchForm = {\r\n      player1Id: 0,\r\n      player2Id: 0,\r\n      player1Score: 0,\r\n      player2Score: 0,\r\n      playedOn: new Date(),\r\n    };\r\n  }\r\n\r\n  recordNewMatch(): void {\r\n    if (!this.matchForm.player1Id || !this.matchForm.player2Id) {\r\n      this.toastr.warning('الرجاء اختيار كلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    // Only check for same player in new match mode, not edit mode\r\n    if (\r\n      !this.selectedPlayerForMatch &&\r\n      this.matchForm.player1Id === this.matchForm.player2Id\r\n    ) {\r\n      this.toastr.warning(\r\n        'لا يمكن أن يكون اللاعب الأول والثاني نفس الشخص',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === null ||\r\n      this.matchForm.player2Score === null\r\n    ) {\r\n      this.toastr.warning('الرجاء إدخال النقاط لكلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (this.matchForm.player1Score < 0 || this.matchForm.player2Score < 0) {\r\n      this.toastr.warning('لا يمكن أن تكون النقاط سالبة', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === 0 &&\r\n      this.matchForm.player2Score === 0\r\n    ) {\r\n      this.toastr.warning(\r\n        'يجب أن يكون لدى لاعب واحد على الأقل نقاط إيجابية (0-0 غير مسموح)',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    const matchData = {\r\n      player1Id: this.matchForm.player1Id,\r\n      player2Id: this.matchForm.player2Id,\r\n      player1Score: this.matchForm.player1Score,\r\n      player2Score: this.matchForm.player2Score,\r\n      playedOn: this.matchForm.playedOn,\r\n    };\r\n\r\n    this.isRecordingMatch = true;\r\n\r\n    this.friendlyMatchService.recordFriendlyMatchAsync(matchData).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          // Get player names for the toast message\r\n          const player1 = this.players.find(\r\n            (p) => p.playerId === this.matchForm.player1Id\r\n          );\r\n          const player2 = this.players.find(\r\n            (p) => p.playerId === this.matchForm.player2Id\r\n          );\r\n\r\n          this.toastr.success(\r\n            `تم تسجيل المباراة بنجاح: ${player1?.fullName} (${this.matchForm.player1Score}) - ${player2?.fullName} (${this.matchForm.player2Score})`,\r\n            'تم تسجيل المباراة'\r\n          );\r\n\r\n          // Refresh cache and reload data\r\n          this.friendlyMatchService.refreshFriendlyMatches();\r\n          this.friendlyMatchService.refreshFriendlyPlayers();\r\n          this.loadPlayers();\r\n          this.calculateStatistics();\r\n          if (this.selectedPlayer) {\r\n            this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n          }\r\n          this.loadAllMatches();\r\n          this.closeRecordMatchModal();\r\n        } else {\r\n          this.toastr.error(\r\n            response.message || 'فشل تسجيل المباراة',\r\n            'خطأ في التسجيل'\r\n          );\r\n        }\r\n        this.isRecordingMatch = false;\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تسجيل المباراة',\r\n          'خطأ في التسجيل'\r\n        );\r\n        this.isRecordingMatch = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  getOpponentsForPlayer(playerId: number): any[] {\r\n    // In edit mode, allow selecting any player except the current player1\r\n    if (this.selectedPlayerForMatch) {\r\n      return this.players.filter(\r\n        (p) => p.playerId !== playerId && p.isActive !== false\r\n      );\r\n    }\r\n    // In new match mode, filter out the selected player1\r\n    return this.players.filter(\r\n      (p) => p.playerId !== playerId && p.isActive !== false\r\n    );\r\n  }\r\n\r\n  getAllActivePlayers(): any[] {\r\n    // If isActive is undefined, consider all players as active\r\n    return this.players.filter((p) => p.isActive !== false);\r\n  }\r\n\r\n  validateScore(player: 'player1' | 'player2'): void {\r\n    if (player === 'player1') {\r\n      if (\r\n        this.matchForm.player1Score !== null &&\r\n        this.matchForm.player1Score < 0\r\n      ) {\r\n        this.matchForm.player1Score = 0;\r\n      }\r\n    } else {\r\n      if (\r\n        this.matchForm.player2Score !== null &&\r\n        this.matchForm.player2Score < 0\r\n      ) {\r\n        this.matchForm.player2Score = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  // All matches management\r\n  loadAllMatches(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        this.allMatches = matches.sort(\r\n          (a: any, b: any) =>\r\n            new Date(b.playedOn).getTime() - new Date(a.playedOn).getTime()\r\n        );\r\n        this.totalMatches = matches.length;\r\n        this.totalPages = Math.ceil(this.allMatches.length / this.itemsPerPage);\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Cache-based filtering\r\n  loadFilteredMatchesFromCache(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (allMatches: any) => {\r\n        let filteredMatches = [...allMatches];\r\n\r\n        // Apply date filter\r\n        if (this.filterForm.dateFilter !== DateFilter.AllTime) {\r\n          const now = new Date();\r\n          let cutoffDate: Date;\r\n\r\n          switch (this.filterForm.dateFilter) {\r\n            case DateFilter.Today:\r\n              cutoffDate = new Date(\r\n                now.getFullYear(),\r\n                now.getMonth(),\r\n                now.getDate()\r\n              );\r\n              break;\r\n            case DateFilter.Last3Days:\r\n              cutoffDate = new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            case DateFilter.LastWeek:\r\n              cutoffDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            case DateFilter.LastMonth:\r\n              cutoffDate = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            default:\r\n              cutoffDate = new Date(0);\r\n          }\r\n\r\n          filteredMatches = filteredMatches.filter(\r\n            (match) => new Date(match.playedOn) >= cutoffDate\r\n          );\r\n        }\r\n\r\n        // Apply player filter\r\n        if (this.filterForm.playerId) {\r\n          // Get the selected player's name\r\n          const selectedPlayer = this.players.find(\r\n            (p) => p.playerId === this.filterForm.playerId\r\n          );\r\n          const selectedPlayerName = selectedPlayer?.fullName;\r\n\r\n          filteredMatches = filteredMatches.filter((match) => {\r\n            const isMatch =\r\n              match.player1Name === selectedPlayerName ||\r\n              match.player2Name === selectedPlayerName;\r\n\r\n            return isMatch;\r\n          });\r\n\r\n          // Reorder matches so selected player is always Player 1\r\n          filteredMatches = this.reorderMatchesForSelectedPlayer(\r\n            filteredMatches,\r\n            selectedPlayerName\r\n          );\r\n        }\r\n\r\n        // Apply opponent filter\r\n        if (\r\n          this.filterForm.opponentIds &&\r\n          this.filterForm.opponentIds.length > 0\r\n        ) {\r\n          // Get opponent names\r\n          const opponentNames = this.filterForm.opponentIds\r\n            .map((id) => {\r\n              const player = this.players.find((p) => p.playerId === id);\r\n              return player?.fullName;\r\n            })\r\n            .filter((name) => name);\r\n\r\n          filteredMatches = filteredMatches.filter(\r\n            (match) =>\r\n              opponentNames.includes(match.player1Name) ||\r\n              opponentNames.includes(match.player2Name)\r\n          );\r\n        }\r\n\r\n        // Sort by date (newest first)\r\n        filteredMatches.sort(\r\n          (a, b) =>\r\n            new Date(b.playedOn).getTime() - new Date(a.playedOn).getTime()\r\n        );\r\n\r\n        this.allMatches = filteredMatches;\r\n        this.totalMatches = filteredMatches.length;\r\n        this.totalPages = Math.ceil(this.allMatches.length / this.itemsPerPage);\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات المفلترة',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Helper method to reorder matches so selected player is always Player 1\r\n  private reorderMatchesForSelectedPlayer(\r\n    matches: any[],\r\n    selectedPlayerName: string\r\n  ): any[] {\r\n    return matches.map((match) => {\r\n      // If the selected player is already Player 1, keep as is\r\n      if (match.player1Name === selectedPlayerName) {\r\n        return match;\r\n      }\r\n\r\n      // If the selected player is Player 2, swap the players\r\n      if (match.player2Name === selectedPlayerName) {\r\n        return {\r\n          ...match,\r\n          player1Name: match.player2Name,\r\n          player2Name: match.player1Name,\r\n          player1Score: match.player2Score,\r\n          player2Score: match.player1Score,\r\n          player1Id: match.player2Id,\r\n          player2Id: match.player1Id,\r\n        };\r\n      }\r\n\r\n      // If neither player matches (shouldn't happen with our filter), keep as is\r\n      return match;\r\n    });\r\n  }\r\n\r\n  loadFilteredMatches(): void {\r\n    const filter: any = {\r\n      page: this.currentPage,\r\n      pageSize: this.itemsPerPage,\r\n      dateFilter: this.filterForm.dateFilter,\r\n    };\r\n\r\n    if (this.filterForm.playerId) {\r\n      filter.playerId = this.filterForm.playerId;\r\n    }\r\n    if (this.filterForm.opponentIds && this.filterForm.opponentIds.length > 0) {\r\n      filter.opponentIds = this.filterForm.opponentIds;\r\n    }\r\n\r\n    this.friendlyMatchService.getFilteredMatches(filter).subscribe({\r\n      next: (result: any) => {\r\n        this.allMatches = result.matches;\r\n        this.totalMatches = result.totalCount;\r\n        this.totalPages = result.totalPages;\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات المفلترة',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  onFilterChange(): void {\r\n    this.currentPage = 1;\r\n    this.loadFilteredMatchesFromCache();\r\n  }\r\n\r\n  clearFilters(): void {\r\n    this.filterForm = {\r\n      playerId: 0,\r\n      opponentIds: [],\r\n      dateFilter: DateFilter.AllTime,\r\n    };\r\n    this.currentPage = 1;\r\n    this.loadAllMatches();\r\n  }\r\n\r\n  getPaginatedMatches(): any[] {\r\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n    const endIndex = startIndex + this.itemsPerPage;\r\n    return this.allMatches.slice(startIndex, endIndex);\r\n  }\r\n\r\n  changePage(page: number): void {\r\n    if (page >= 1 && page <= this.totalPages) {\r\n      this.currentPage = page;\r\n    }\r\n  }\r\n\r\n  getPlayerName(playerId: number): string {\r\n    const player = this.players.find((p) => p.playerId === playerId);\r\n    return player ? player.fullName : 'Unknown Player';\r\n  }\r\n\r\n  // Edit match functionality\r\n  editMatch(match: any): void {\r\n    // Find player IDs by names\r\n    const player1 = this.players.find((p) => p.fullName === match.player1Name);\r\n    const player2 = this.players.find((p) => p.fullName === match.player2Name);\r\n\r\n    this.matchForm = {\r\n      player1Id: player1?.playerId || 0,\r\n      player2Id: player2?.playerId || 0,\r\n      player1Score: match.player1Score,\r\n      player2Score: match.player2Score,\r\n      playedOn: new Date(match.playedOn),\r\n    };\r\n    this.selectedPlayerForMatch = match;\r\n    this.showRecordMatchModal = true;\r\n  }\r\n\r\n  updateMatch(): void {\r\n    if (!this.selectedPlayerForMatch) return;\r\n\r\n    if (!this.matchForm.player1Id || !this.matchForm.player2Id) {\r\n      this.toastr.warning('الرجاء اختيار كلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    // In edit mode, we don't need to check for same player since names are fixed\r\n\r\n    if (\r\n      this.matchForm.player1Score === null ||\r\n      this.matchForm.player2Score === null\r\n    ) {\r\n      this.toastr.warning('الرجاء إدخال النقاط لكلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (this.matchForm.player1Score < 0 || this.matchForm.player2Score < 0) {\r\n      this.toastr.warning('لا يمكن أن تكون النقاط سالبة', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === 0 &&\r\n      this.matchForm.player2Score === 0\r\n    ) {\r\n      this.toastr.warning(\r\n        'يجب أن يكون لدى لاعب واحد على الأقل نقاط إيجابية (0-0 غير مسموح)',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.isRecordingMatch = true;\r\n\r\n    this.friendlyMatchService\r\n      .updateFriendlyMatchAsync(this.selectedPlayerForMatch.matchId, {\r\n        player1Id: this.matchForm.player1Id,\r\n        player2Id: this.matchForm.player2Id,\r\n        player1Score: this.matchForm.player1Score,\r\n        player2Score: this.matchForm.player2Score,\r\n      })\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            // Get player names for the toast message\r\n            const player1 = this.players.find(\r\n              (p) => p.playerId === this.matchForm.player1Id\r\n            );\r\n            const player2 = this.players.find(\r\n              (p) => p.playerId === this.matchForm.player2Id\r\n            );\r\n\r\n            this.toastr.success(\r\n              `تم تحديث المباراة بنجاح: ${player1?.fullName} (${this.matchForm.player1Score}) - ${player2?.fullName} (${this.matchForm.player2Score})`,\r\n              'تم تحديث المباراة'\r\n            );\r\n\r\n            // Refresh cache and reload data\r\n            this.friendlyMatchService.refreshFriendlyMatches();\r\n            this.loadAllMatches();\r\n            this.calculateStatistics();\r\n            if (this.selectedPlayer) {\r\n              this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n            }\r\n            this.closeRecordMatchModal();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل تحديث المباراة',\r\n              'خطأ في التحديث'\r\n            );\r\n          }\r\n          this.isRecordingMatch = false;\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء تحديث المباراة',\r\n            'خطأ في التحديث'\r\n          );\r\n          this.isRecordingMatch = false;\r\n        },\r\n      });\r\n  }\r\n\r\n  deleteMatchFromList(matchId: number): void {\r\n    if (confirm('هل أنت متأكد من حذف هذه المباراة؟')) {\r\n      this.friendlyMatchService.deleteFriendlyMatchAsync(matchId).subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم حذف المباراة بنجاح', 'تم الحذف');\r\n            // Refresh cache and reload data\r\n            this.friendlyMatchService.refreshFriendlyMatches();\r\n            this.loadAllMatches();\r\n            this.calculateStatistics();\r\n            if (this.selectedPlayer) {\r\n              this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n            }\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل حذف المباراة',\r\n              'خطأ في الحذف'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء حذف المباراة',\r\n            'خطأ في الحذف'\r\n          );\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div\r\n  class=\"container mx-auto p-4 flex flex-col sm:flex-row overflow-hidden h-screen\"\r\n>\r\n  <!-- Chats List -->\r\n  <div\r\n    class=\"w-full sm:w-1/3 border-r border-gray-600 sm:block\"\r\n    [ngClass]=\"{ hidden: selectedChat }\"\r\n  >\r\n    <div class=\"flex items-center justify-between mb-6\">\r\n      <h2 class=\"text-2xl font-bold text-white\">📬 Friendly Inbox</h2>\r\n    </div>\r\n\r\n    <!-- No Chats -->\r\n    <div *ngIf=\"playerChats.length === 0\" class=\"text-center text-gray-300\">\r\n      No friendly messages here 📭\r\n    </div>\r\n\r\n    <!-- Chats List -->\r\n    <div\r\n      *ngIf=\"playerChats.length > 0\"\r\n      class=\"space-y-2 overflow-y-auto max-h-[calc(100vh-120px)]\"\r\n    >\r\n      <div\r\n        *ngFor=\"let chat of playerChats; trackBy: trackByPlayerId\"\r\n        class=\"p-4 backdrop-blur-sm border border-gray-600 rounded-lg hover:bg-gray-700 cursor-pointer flex items-center justify-between\"\r\n        (click)=\"openChat(chat.senderId)\"\r\n      >\r\n        <div>\r\n          <p class=\"font-bold text-white\">{{ chat.senderFullName }}</p>\r\n          <p class=\"text-sm text-gray-300 truncate\">{{ chat.lastMessage }}</p>\r\n        </div>\r\n        <span\r\n          *ngIf=\"chat.unreadCount > 0\"\r\n          class=\"bg-green-600 text-white text-xs font-bold rounded-full px-2 py-1\"\r\n        >\r\n          {{ chat.unreadCount }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Chat View -->\r\n  <div\r\n    class=\"w-full sm:w-2/3 flex flex-col h-full relative\"\r\n    [ngClass]=\"{ block: selectedChat, 'hidden sm:flex': !selectedChat }\"\r\n  >\r\n    <div *ngIf=\"selectedChat; else noChatSelected\" class=\"flex flex-col h-full\">\r\n      <!-- Chat Header - Fixed -->\r\n      <div\r\n        class=\"fixed left-0 right-0 z-40 p-2 backdrop-blur-sm border-b border-gray-600 flex items-center justify-between bg-black bg-opacity-90\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n        [style.top.px]=\"navbarHeight\"\r\n      >\r\n        <div class=\"flex items-center\">\r\n          <button\r\n            (click)=\"closeChat()\"\r\n            class=\"mr-4 text-gray-300 hover:text-white transition\"\r\n          >\r\n            <i class=\"fa-solid fa-arrow-left\" style=\"color: #ffffff\"></i>\r\n          </button>\r\n          <div>\r\n            <p class=\"font-bold text-white text-sm p-0\">\r\n              {{ selectedChat.senderFullName }}\r\n            </p>\r\n            <p class=\"text-xs text-gray-400 p-0\">\r\n              {{ selectedChat.senderPhoneNumber }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Messages - Scrollable Area with padding for fixed header and footer -->\r\n      <div\r\n        #messagesContainer\r\n        class=\"flex-1 p-4 overflow-y-auto backdrop-blur-sm\"\r\n        [style.margin-top.px]=\"navbarHeight + 80\"\r\n        style=\"margin-bottom: 80px\"\r\n      >\r\n        <div\r\n          *ngFor=\"\r\n            let message of selectedChat.messages;\r\n            trackBy: trackByMessageId\r\n          \"\r\n          class=\"mb-4\"\r\n          [ngClass]=\"{\r\n            'text-right': !message.isFromAdmin,\r\n            'text-left': message.isFromAdmin\r\n          }\"\r\n        >\r\n          <div\r\n            class=\"inline-block p-3 rounded-lg max-w-xs\"\r\n            [ngClass]=\"{\r\n              'bg-green-700': !message.isFromAdmin,\r\n              'bg-gray-700 ': message.isFromAdmin\r\n            }\"\r\n          >\r\n            <p class=\"text-white\">{{ message.content }}</p>\r\n            <p class=\"text-xs mt-1 text-gray-300\">\r\n              {{ message.sentAt | date : \"MMM d, y, hh:mm a\" }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Reply Input - Fixed -->\r\n      <div\r\n        class=\"fixed bottom-0 left-0 right-0 z-50 p-4 bg-black bg-opacity-90 backdrop-blur-sm border-t border-gray-600\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n      >\r\n        <form (ngSubmit)=\"sendReply()\" class=\"flex items-center gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"replyMessages[selectedChat.messages[0].id]\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n            (ngModelChange)=\"\r\n              replyMessages[selectedChat.messages[0].id] = $event\r\n            \"\r\n            placeholder=\"Write your reply...\"\r\n            class=\"flex-1 p-2 border border-gray-600 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-600 placeholder-gray-400\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 transition disabled:bg-gray-600\"\r\n            [disabled]=\"!replyMessages[selectedChat.messages[0].id]\"\r\n          >\r\n            Reply\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Placeholder when no chat is selected -->\r\n    <ng-template #noChatSelected>\r\n      <div class=\"w-full flex items-center justify-center text-gray-300\">\r\n        Select a friendly chat to view messages 📩\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { FriendlyMessageService } from '../../../core/services/friendly-message.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {\r\n  FriendlyMessageDto,\r\n  FriendlyMessageResponse,\r\n} from 'friendly-message-types';\r\nimport { Subscription } from 'rxjs';\r\n\r\ninterface PlayerChat {\r\n  senderId: string; // استخدام string فقط للتوافق مع GUID\r\n  senderFullName: string;\r\n  senderPhoneNumber: string; // إضافة رقم الهاتف\r\n  lastMessage: string;\r\n  lastMessageDate: string;\r\n  unreadCount: number;\r\n  messages: FriendlyMessageDto[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-friendly-inbox',\r\n  templateUrl: './friendly-inbox.component.html',\r\n  styleUrls: ['./friendly-inbox.component.css'],\r\n})\r\nexport class FriendlyInboxComponent\r\n  implements OnInit, AfterViewChecked, OnDestroy\r\n{\r\n  playerChats: PlayerChat[] = [];\r\n  selectedPlayerId: string | null = null;\r\n  selectedChat: PlayerChat | null = null;\r\n  replyMessages: { [messageId: number]: string } = {};\r\n  private updateStatusSubscription?: Subscription;\r\n  private refreshSubscription?: Subscription;\r\n  navbarHeight = 60; // default navbar height\r\n\r\n  @ViewChild('messagesContainer')\r\n  messagesContainer!: ElementRef<HTMLDivElement>;\r\n\r\n  constructor(\r\n    private friendlyMessageService: FriendlyMessageService,\r\n    private toastr: ToastrService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadFriendlyMessages();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.updateStatusSubscription) {\r\n      this.updateStatusSubscription.unsubscribe();\r\n    }\r\n    if (this.refreshSubscription) {\r\n      this.refreshSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private loadFriendlyMessages(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: FriendlyMessageResponse) => {\r\n        if (response.success && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n\r\n          // عرض رسالة النجاح مع عدد الرسائل\r\n          const totalMessages = response.messages.length;\r\n          const unreadMessages = response.messages.filter(\r\n            (msg) => !msg.isRead && !msg.isFromAdmin\r\n          ).length;\r\n        } else {\r\n          this.toastr.error(response.message || 'لا يوجد رسائل ودية');\r\n        }\r\n      },\r\n      error: (err: any) => {\r\n        this.toastr.error(\r\n          err.error?.message || err.message || 'حصل خطأ أثناء جلب الرسائل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Add refresh method for immediate updates\r\n  refreshMessages(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: FriendlyMessageResponse) => {\r\n        if (response.success && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n\r\n          // عرض رسالة التحديث مع عدد الرسائل\r\n          const totalMessages = response.messages.length;\r\n          const unreadMessages = response.messages.filter(\r\n            (msg) => !msg.isRead && !msg.isFromAdmin\r\n          ).length;\r\n\r\n          if (totalMessages > 0) {\r\n            this.toastr.info(\r\n              `تم تحديث ${totalMessages} رسالة${\r\n                unreadMessages > 0\r\n                  ? ` (${unreadMessages} رسالة غير مقروءة)`\r\n                  : ''\r\n              }`,\r\n              'تم تحديث الرسائل'\r\n            );\r\n          } else {\r\n            this.toastr.info('لا توجد رسائل ودية حالياً', 'معلومات');\r\n          }\r\n        } else {\r\n          this.toastr.error(response.message || 'لا يوجد رسائل ودية');\r\n        }\r\n      },\r\n      error: (err: any) => {\r\n        this.toastr.error(\r\n          err.error?.message || err.message || 'حصل خطأ أثناء جلب الرسائل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.selectedChat && this.messagesContainer) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  groupMessagesBySender(messages: FriendlyMessageDto[]): PlayerChat[] {\r\n    const chatMap: { [senderId: string | number]: PlayerChat } = {};\r\n    messages.forEach((msg) => {\r\n      // استخدام senderId كـ playerId (قد يكون string أو number)\r\n      let playerId = msg.senderId || msg.playerId;\r\n\r\n      // إذا كان senderId هو GUID، نستخدمه كما هو\r\n      if (typeof playerId === 'string' && playerId.includes('-')) {\r\n        // هذا GUID، نستخدمه كما هو\r\n      } else if (typeof playerId === 'string') {\r\n        // محاولة تحويل إلى number\r\n        const parsedId = parseInt(playerId, 10);\r\n        if (!isNaN(parsedId) && parsedId > 0) {\r\n          playerId = parsedId;\r\n        }\r\n      }\r\n\r\n      // تأكد من أن playerId موجود\r\n      if (!playerId) {\r\n        return; // تخطي هذه الرسالة\r\n      }\r\n\r\n      if (!chatMap[playerId]) {\r\n        chatMap[playerId] = {\r\n          senderId: String(playerId), // تحويل إلى string\r\n          senderFullName:\r\n            msg.senderFullName || msg.playerFullName || `اللاعب ${playerId}`, // fallback للاسم\r\n          senderPhoneNumber: msg.senderPhoneNumber || 'غير متوفر', // استخدام الحقل الصحيح مع fallback\r\n          lastMessage: '',\r\n          lastMessageDate: '',\r\n          unreadCount: 0,\r\n          messages: [],\r\n        };\r\n      }\r\n      chatMap[playerId].messages.push(msg);\r\n      if (!msg.isFromAdmin && !msg.isRead) {\r\n        chatMap[playerId].unreadCount++;\r\n      }\r\n    });\r\n\r\n    const result = Object.values(chatMap).map((chat) => {\r\n      // ترتيب الرسائل من الأقدم للأحدث\r\n      chat.messages = chat.messages.sort(\r\n        (a, b) => new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n      );\r\n      // آخر رسالة\r\n      const lastMsg = chat.messages[chat.messages.length - 1];\r\n      chat.lastMessage = lastMsg?.content ?? '';\r\n      chat.lastMessageDate = lastMsg?.sentAt ?? '';\r\n      return chat;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  openChat(playerId: string): void {\r\n    this.selectedPlayerId = playerId;\r\n    this.selectedChat =\r\n      this.playerChats.find((chat) => chat.senderId === playerId) || null;\r\n\r\n    if (this.selectedChat) {\r\n      // تأكد من وجود اسم اللاعب\r\n      if (!this.selectedChat.senderFullName) {\r\n        this.selectedChat.senderFullName = `اللاعب ${this.selectedChat.senderId}`;\r\n      }\r\n      // Mark messages as read when opening chat\r\n      this.selectedChat.messages\r\n        .filter((msg) => !msg.isRead && !msg.isFromAdmin)\r\n        .forEach((msg) => {\r\n          this.friendlyMessageService.markMessageAsRead(msg.id).subscribe({\r\n            next: (response: any) => {\r\n              if (response.success) {\r\n                msg.isRead = true;\r\n                this.selectedChat!.unreadCount =\r\n                  this.selectedChat!.messages.filter(\r\n                    (m) => !m.isRead && !m.isFromAdmin\r\n                  ).length;\r\n                this.cdr.detectChanges();\r\n              }\r\n            },\r\n            error: (err: any) => {\r\n              this.toastr.error(\r\n                err.error?.message ||\r\n                  err.message ||\r\n                  'حصل خطأ أثناء تحديث حالة الرسالة',\r\n                'خطأ في التحديث'\r\n              );\r\n            },\r\n          });\r\n        });\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  closeChat(): void {\r\n    this.selectedPlayerId = null;\r\n    this.selectedChat = null;\r\n    this.replyMessages = {};\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  sendReply(): void {\r\n    if (!this.selectedChat) {\r\n      this.toastr.warning('الرجاء اختيار محادثة');\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedChat.senderId) {\r\n      this.toastr.error('خطأ: معرف اللاعب غير صحيح');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !this.selectedChat.messages ||\r\n      this.selectedChat.messages.length === 0\r\n    ) {\r\n      this.toastr.error('خطأ: لا توجد رسائل في هذه المحادثة');\r\n      return;\r\n    }\r\n\r\n    const replyContent =\r\n      this.replyMessages[this.selectedChat.messages[0].id]?.trim();\r\n    if (!replyContent) {\r\n      this.toastr.warning('الرجاء كتابة رد');\r\n      return;\r\n    }\r\n\r\n    this.friendlyMessageService\r\n      .sendAdminReply(this.selectedChat.senderId, replyContent)\r\n      .subscribe({\r\n        next: (response: FriendlyMessageResponse) => {\r\n          if (response.success) {\r\n            const playerName =\r\n              this.selectedChat!.senderFullName ||\r\n              `اللاعب ${this.selectedChat!.senderId}`;\r\n            this.toastr.success(\r\n              `تم إرسال الرد بنجاح إلى ${playerName}`,\r\n              'تم الإرسال'\r\n            );\r\n            this.replyMessages[this.selectedChat!.messages[0].id] = '';\r\n\r\n            const newMessage: FriendlyMessageDto = {\r\n              id: Math.random(),\r\n              senderId: this.selectedChat!.senderId,\r\n              senderFullName:\r\n                this.selectedChat!.senderFullName ||\r\n                `اللاعب ${this.selectedChat!.senderId}`,\r\n              senderPhoneNumber:\r\n                this.selectedChat!.senderPhoneNumber || 'غير متوفر',\r\n              content: replyContent,\r\n              isRead: true,\r\n              sentAt: new Date().toISOString(),\r\n              isFromAdmin: true,\r\n              messageType: 'admin_reply',\r\n            };\r\n\r\n            // تحديث الرسائل في المحادثة المحددة\r\n            this.selectedChat!.messages.push(newMessage);\r\n            this.selectedChat!.messages.sort(\r\n              (a, b) =>\r\n                new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n            );\r\n\r\n            // تحديث آخر رسالة في قائمة المحادثات\r\n            this.selectedChat!.lastMessage = replyContent;\r\n            this.selectedChat!.lastMessageDate = newMessage.sentAt;\r\n\r\n            // تحديث اسم اللاعب إذا كان غير موجود\r\n            if (!this.selectedChat!.senderFullName) {\r\n              this.selectedChat!.senderFullName = `اللاعب ${\r\n                this.selectedChat!.senderId\r\n              }`;\r\n            }\r\n\r\n            // إعادة ترتيب قائمة المحادثات حسب الأحدث\r\n            this.playerChats.sort(\r\n              (a, b) =>\r\n                new Date(b.lastMessageDate).getTime() -\r\n                new Date(a.lastMessageDate).getTime()\r\n            );\r\n\r\n            // تحديث المحادثة المحددة بعد إعادة الترتيب\r\n            this.selectedChat =\r\n              this.playerChats.find(\r\n                (chat) => chat.senderId === this.selectedPlayerId\r\n              ) || null;\r\n\r\n            this.cdr.detectChanges();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل إرسال الرد',\r\n              'خطأ في الإرسال'\r\n            );\r\n          }\r\n        },\r\n        error: (err: any) => {\r\n          this.toastr.error(\r\n            err.error?.message || err.message || 'حصل خطأ أثناء إرسال الرد',\r\n            'خطأ في الإرسال'\r\n          );\r\n        },\r\n      });\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    if (this.messagesContainer) {\r\n      const container = this.messagesContainer.nativeElement;\r\n      container.scrollTop = container.scrollHeight;\r\n    }\r\n  }\r\n\r\n  trackByPlayerId(index: number, chat: PlayerChat): string {\r\n    return chat.senderId;\r\n  }\r\n\r\n  trackByMessageId(index: number, message: FriendlyMessageDto): number {\r\n    return message.id;\r\n  }\r\n}\r\n","<div class=\"md:container mx-auto\">\n  <!-- Teams Tournament Dashboard -->\n  <div class=\"p-6\">\n    <!-- Header -->\n    <div class=\"mb-6\">\n      <h2 class=\"text-2xl font-bold text-white mb-4\">\n        Teams Tournament Management\n      </h2>\n\n      <!-- Quick Actions -->\n      <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n        <button\n          class=\"bg-green-600 text-white p-4 rounded-lg hover:bg-green-700 transition-all\"\n          (click)=\"openCreateTournamentModal()\"\n        >\n          <h3 class=\"text-lg font-bold\">Create Tournament</h3>\n          <p class=\"text-sm\">Create a new teams tournament</p>\n        </button>\n\n        <button\n          class=\"bg-purple-600 text-white p-4 rounded-lg hover:bg-purple-700 transition-all\"\n          (click)=\"showAddPlayerModal = true\"\n        >\n          <h3 class=\"text-lg font-bold\">Add Player</h3>\n          <p class=\"text-sm\">Add new player to the pool</p>\n        </button>\n\n        <div class=\"bg-gray-700 p-4 rounded-lg\">\n          <h3 class=\"text-lg font-bold text-white\">Statistics</h3>\n          <p class=\"text-sm text-gray-300\">\n            Tournaments: {{ tournaments.length }}\n          </p>\n          <p class=\"text-sm text-gray-300\">\n            Available Players: {{ availablePlayers.length }}\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Loading Tournaments -->\n    <div *ngIf=\"isLoadingTournaments\" class=\"flex justify-center py-8\">\n      <div\n        class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n      ></div>\n    </div>\n\n    <!-- Tournaments List -->\n    <div *ngIf=\"!isLoadingTournaments\" class=\"space-y-4\">\n      <h3 class=\"text-xl font-semibold text-white\">All Tournaments</h3>\n\n      <div *ngIf=\"tournaments.length === 0\" class=\"text-center py-8\">\n        <p class=\"text-gray-400\">No tournaments created yet.</p>\n      </div>\n    </div>\n\n    <!-- Tournament Players Section -->\n    <div class=\"mt-8\">\n      <h3 class=\"text-xl font-semibold text-white mb-4\">Tournament Players</h3>\n\n      <div *ngIf=\"isLoadingPlayers\" class=\"flex justify-center py-8\">\n        <div\n          class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n        ></div>\n      </div>\n\n      <!-- Players Grid -->\n      <div\n        *ngIf=\"!isLoadingPlayers && availablePlayers.length > 0\"\n        class=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\"\n      >\n        <div\n          *ngFor=\"let player of availablePlayers\"\n          class=\"bg-black bg-opacity-50 p-4 rounded-lg cursor-pointer hover:bg-gray-400 transition-all border-2 border-gray-600\"\n          (click)=\"selectPlayer(player)\"\n        >\n          <div class=\"text-center\">\n            <div class=\"text-base font-bold text-white\">\n              {{ player.fullName }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div\n        *ngIf=\"!isLoadingPlayers && availablePlayers.length === 0\"\n        class=\"text-center py-8\"\n      >\n        <p class=\"text-gray-400\">No players available. Add players first.</p>\n      </div>\n    </div>\n  </div>\n\n  <!-- Create Tournament Modal -->\n  <div\n    *ngIf=\"showCreateTournamentModal\"\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n  >\n    <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Create New Tournament</h2>\n\n      <div class=\"space-y-4\">\n        <div>\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n            >Tournament Name</label\n          >\n          <input\n            type=\"text\"\n            [(ngModel)]=\"createTournamentForm.name\"\n            placeholder=\"Enter tournament name\"\n            class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded placeholder-gray-400\"\n          />\n        </div>\n\n        <div>\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n            >Scoring System</label\n          >\n          <select\n            [(ngModel)]=\"createTournamentForm.systemOfScoring\"\n            class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded\"\n          >\n            <option value=\"Classic\">Classic (Win/Draw/Loss)</option>\n            <option value=\"Points\">Points System</option>\n          </select>\n        </div>\n\n        <div class=\"grid grid-cols-2 gap-4\">\n          <div>\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n              >Teams Count</label\n            >\n            <input\n              type=\"number\"\n              [(ngModel)]=\"createTournamentForm.teamCount\"\n              min=\"2\"\n              max=\"16\"\n              class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded\"\n            />\n          </div>\n          <div>\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n              >Players per Team</label\n            >\n            <input\n              type=\"number\"\n              [(ngModel)]=\"createTournamentForm.playersPerTeam\"\n              min=\"1\"\n              max=\"10\"\n              class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"flex justify-end space-x-4 mt-6\">\n        <button\n          (click)=\"closeCreateTournamentModal()\"\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n        >\n          Cancel\n        </button>\n        <button\n          (click)=\"createTournament()\"\n          [disabled]=\"isCreatingTournament || !createTournamentForm.name.trim()\"\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition disabled:opacity-50\"\n        >\n          {{ isCreatingTournament ? \"Creating...\" : \"Create Tournament\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Create Team Modal -->\n  <div\n    *ngIf=\"showCreateTeamModal\"\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n  >\n    <div\n      class=\"bg-gray-800 p-6 rounded-lg max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\"\n    >\n      <h2 class=\"text-lg font-bold mb-4 text-white\">\n        Create Team for {{ activeTournament?.name }}\n      </h2>\n\n      <div class=\"mb-4\">\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n          >Team Name</label\n        >\n        <input\n          type=\"text\"\n          [(ngModel)]=\"createTeamForm.teamName\"\n          placeholder=\"Enter team name\"\n          class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded placeholder-gray-400\"\n        />\n      </div>\n\n      <div class=\"mb-4\">\n        <label class=\"block text-sm font-medium mb-2 text-gray-300\">\n          Select Players ({{ createTeamForm.playerIds.length }}/{{\n            activeTournament?.playersPerTeam\n          }})\n        </label>\n\n        <!-- Loading Players -->\n        <div *ngIf=\"isLoadingPlayers\" class=\"flex justify-center py-4\">\n          <div\n            class=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"\n          ></div>\n        </div>\n\n        <!-- No Players Message -->\n        <div\n          *ngIf=\"!isLoadingPlayers && availablePlayers.length === 0\"\n          class=\"text-center py-4 text-gray-400\"\n        >\n          No players available. Add players first.\n        </div>\n\n        <!-- Players Grid -->\n        <div\n          *ngIf=\"!isLoadingPlayers && availablePlayers.length > 0\"\n          class=\"grid grid-cols-1 md:grid-cols-2 gap-2 max-h-60 overflow-y-auto\"\n        >\n          <div\n            *ngFor=\"let player of availablePlayers\"\n            (click)=\"togglePlayerSelection(player.playerId)\"\n            class=\"p-3 rounded border cursor-pointer transition-all\"\n            [class.bg-blue-600]=\"isPlayerSelected(player.playerId)\"\n            [class.border-blue-500]=\"isPlayerSelected(player.playerId)\"\n            [class.bg-gray-700]=\"!isPlayerSelected(player.playerId)\"\n            [class.border-gray-600]=\"!isPlayerSelected(player.playerId)\"\n          >\n            <div class=\"text-white font-medium\">{{ player.fullName }}</div>\n            <div class=\"text-xs text-gray-300\">\n              Tournaments: {{ player.multiParticipations }} | Titles:\n              {{ player.multiTitlesWon }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"flex justify-end space-x-4 mt-6\">\n        <button\n          (click)=\"closeCreateTeamModal()\"\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n        >\n          Cancel\n        </button>\n        <button\n          (click)=\"createTeam()\"\n          [disabled]=\"\n            isCreatingTeam ||\n            !createTeamForm.teamName.trim() ||\n            createTeamForm.playerIds.length !== activeTournament?.playersPerTeam\n          \"\n          class=\"bg-blue-600 px-4 py-2 text-white rounded hover:bg-blue-700 transition disabled:opacity-50\"\n        >\n          {{ isCreatingTeam ? \"Creating...\" : \"Create Team\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Add Player Modal -->\n  <div\n    *ngIf=\"showAddPlayerModal\"\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n  >\n    <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Add New Player</h2>\n\n      <input\n        type=\"text\"\n        [(ngModel)]=\"newPlayerName\"\n        placeholder=\"Enter player name\"\n        class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded placeholder-gray-400\"\n      />\n\n      <div class=\"flex justify-end space-x-4 mt-6\">\n        <button\n          (click)=\"showAddPlayerModal = false\"\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n        >\n          Cancel\n        </button>\n        <button\n          (click)=\"addNewPlayer()\"\n          [disabled]=\"isAddingPlayer || !newPlayerName.trim()\"\n          class=\"bg-purple-600 px-4 py-2 text-white rounded hover:bg-purple-700 transition disabled:opacity-50\"\n        >\n          {{ isAddingPlayer ? \"Adding...\" : \"Add Player\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Record Match Result Modal -->\n  <div\n    *ngIf=\"showRecordResultModal\"\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n  >\n    <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Record Match Result</h2>\n\n      <div class=\"grid grid-cols-2 gap-4 mb-4\">\n        <div>\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n            >{{ getPlayerName(selectedPlayer1Id) }}\n          </label>\n          <input\n            type=\"number\"\n            [(ngModel)]=\"recordingScore1\"\n            min=\"0\"\n            class=\"w-full px-3 py-2 border border-gray-600 bg-gray-700 text-white rounded\"\n          />\n        </div>\n        <div>\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n            >{{ getPlayerName(selectedPlayer2Id) }}\n          </label>\n          <input\n            type=\"number\"\n            [(ngModel)]=\"recordingScore2\"\n            min=\"0\"\n            class=\"w-full px-3 py-2 border border-gray-600 bg-gray-700 text-white rounded\"\n          />\n        </div>\n      </div>\n\n      <div\n        *ngIf=\"activeTournament?.systemOfScoring === 'Classic'\"\n        class=\"mb-4 text-xs text-gray-400\"\n      >\n        Classic System: Winner will be determined automatically based on scores\n      </div>\n\n      <div class=\"flex justify-end space-x-4\">\n        <button\n          (click)=\"closeRecordResultModal()\"\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n        >\n          Cancel\n        </button>\n        <button\n          (click)=\"recordMatchResult()\"\n          [disabled]=\"\n            isRecordingResult ||\n            recordingScore1 === null ||\n            recordingScore2 === null\n          \"\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition disabled:opacity-50\"\n        >\n          {{ isRecordingResult ? \"Recording...\" : \"Record Result\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Player Matches Modal -->\n  <div\n    *ngIf=\"showPlayerMatchesModal\"\n    class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n  >\n    <div\n      class=\"bg-gray-800 rounded-lg p-6 w-full max-w-4xl max-h-[90vh] overflow-y-auto\"\n    >\n      <!-- Modal Header -->\n      <div class=\"flex justify-between items-center mb-6\">\n        <h3 class=\"text-2xl font-bold text-white\">\n          Matches for {{ selectedPlayer?.fullName }}\n        </h3>\n        <button\n          (click)=\"closePlayerMatchesModal()\"\n          class=\"text-gray-400 hover:text-white text-2xl font-bold transition-colors\"\n        >\n          ×\n        </button>\n      </div>\n\n      <!-- Loading State -->\n      <div *ngIf=\"isLoadingMatches\" class=\"flex justify-center py-8\">\n        <div\n          class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n        ></div>\n      </div>\n\n      <!-- Matches List -->\n      <div\n        *ngIf=\"\n          !isLoadingMatches &&\n          getPlayerMatches(selectedPlayer?.playerId || 0).length > 0\n        \"\n        class=\"space-y-4\"\n      >\n        <div\n          *ngFor=\"let match of getPlayerMatches(selectedPlayer?.playerId || 0)\"\n          class=\"bg-gray-700 rounded-lg p-4\"\n        >\n          <div class=\"flex justify-between items-center\">\n            <div class=\"flex-1\">\n              <span class=\"text-white font-semibold\">{{\n                match.player1Name\n              }}</span>\n            </div>\n\n            <div class=\"px-4 text-center\">\n              <div *ngIf=\"match.isCompleted\" class=\"font-bold text-lg\">\n                <span\n                  [class]=\"\n                    (match.score1 || 0) > (match.score2 || 0)\n                      ? 'text-green-400'\n                      : (match.score1 || 0) < (match.score2 || 0)\n                      ? 'text-red-400'\n                      : 'text-yellow-400'\n                  \"\n                >\n                  {{ match.score1 || 0 }}\n                </span>\n                <span class=\"text-white mx-2\">-</span>\n                <span\n                  [class]=\"\n                    (match.score2 || 0) > (match.score1 || 0)\n                      ? 'text-green-400'\n                      : (match.score2 || 0) < (match.score1 || 0)\n                      ? 'text-red-400'\n                      : 'text-yellow-400'\n                  \"\n                >\n                  {{ match.score2 || 0 }}\n                </span>\n              </div>\n              <div *ngIf=\"!match.isCompleted\" class=\"text-gray-400 text-sm\">\n                Pending\n                <button\n                  *ngIf=\"activeTournament?.status === 'Started'\"\n                  (click)=\"openRecordResultModal(match)\"\n                  class=\"ml-2 bg-green-600 hover:bg-green-700 text-white px-2 py-1 rounded text-xs transition-all\"\n                >\n                  Record\n                </button>\n              </div>\n            </div>\n\n            <!-- Undo Button for completed matches -->\n            <div\n              *ngIf=\"\n                match.isCompleted && activeTournament?.status === 'Started'\n              \"\n              class=\"ml-2\"\n            >\n              <button\n                (click)=\"undoMatchResult(match)\"\n                class=\"bg-red-600 hover:bg-red-700 text-white px-2 py-1 rounded text-xs transition-all\"\n              >\n                Undo\n              </button>\n            </div>\n            <div class=\"flex-1 text-right\">\n              <span class=\"text-white font-semibold\">{{\n                match.player2Name\n              }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- No Matches Message -->\n      <div\n        *ngIf=\"\n          !isLoadingMatches &&\n          getPlayerMatches(selectedPlayer?.playerId || 0).length === 0\n        \"\n        class=\"text-center py-8\"\n      >\n        <p class=\"text-gray-400\">No matches found for this player.</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PlayersComponent } from './players/players.component';\r\nimport { InboxComponent } from './inbox/inbox.component';\r\nimport { FriendliesComponent } from './friendlies/friendlies.component';\r\nimport { FriendlyInboxComponent } from './friendlies/friendly-inbox/friendly-inbox.component';\r\nimport { TeamsDashboardComponent } from './teams-dashboard/teams-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlayersComponent },\r\n  { path: 'players', component: PlayersComponent },\r\n  { path: 'inbox', component: InboxComponent },\r\n  { path: 'friendlies', component: FriendliesComponent },\r\n  { path: 'friendly-inbox', component: FriendlyInboxComponent },\r\n  { path: 'teams-dashboard', component: TeamsDashboardComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport {\n  MultiTournamentService,\n  CreateTournamentDto,\n  TeamCreateDto,\n  MultiTournamentDto,\n  PlayerDetail,\n  AddPlayerDto,\n  TeamMatchesDto,\n  MatchDetail,\n  ApiResponse,\n} from '../../core/services/multi-tournament.service';\n\n@Component({\n  selector: 'app-teams-dashboard',\n  templateUrl: './teams-dashboard.component.html',\n  styleUrls: ['./teams-dashboard.component.css'],\n})\nexport class TeamsDashboardComponent implements OnInit {\n  // Data\n  tournaments: MultiTournamentDto[] = [];\n  activeTournament: MultiTournamentDto | null = null;\n  availablePlayers: PlayerDetail[] = [];\n  tournamentMatches: TeamMatchesDto[] = [];\n  selectedPlayer: PlayerDetail | null = null;\n\n  // Modals\n  showCreateTournamentModal = false;\n  showCreateTeamModal = false;\n  showAddPlayerModal = false;\n  showRecordResultModal = false;\n  showPlayerMatchesModal = false;\n\n  // Forms\n  createTournamentForm: CreateTournamentDto = {\n    name: '',\n    systemOfScoring: 'Classic',\n    teamCount: 4,\n    playersPerTeam: 3,\n  };\n\n  createTeamForm: TeamCreateDto = {\n    teamName: '',\n    playerIds: [],\n  };\n\n  newPlayerName = '';\n\n  // Match Recording\n  selectedMatchId: number | null = null;\n  selectedPlayer1Id: number | null = null;\n  selectedPlayer2Id: number | null = null;\n  recordingScore1: number | null = null;\n  recordingScore2: number | null = null;\n\n  // Loading States\n  isLoadingTournaments = false;\n  isLoadingPlayers = false;\n  isLoadingMatches = false;\n  isCreatingTournament = false;\n  isCreatingTeam = false;\n  isAddingPlayer = false;\n  isRecordingResult = false;\n\n  constructor(\n    private multiTournamentService: MultiTournamentService,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadTournaments();\n    this.loadAvailablePlayers();\n  }\n\n  // Tournament Management\n  loadTournaments(): void {\n    this.isLoadingTournaments = true;\n\n    this.multiTournamentService.getAllTournaments().subscribe({\n      next: (response: ApiResponse<MultiTournamentDto[]>) => {\n        if (response.success && response.data) {\n          this.tournaments = response.data;\n          this.activeTournament =\n            this.tournaments.find((t) => t.isActive) || null;\n\n          if (this.activeTournament) {\n            this.loadTournamentMatches();\n          }\n        }\n        this.isLoadingTournaments = false;\n      },\n      error: (error) => {\n        console.error('Error loading tournaments:', error);\n        this.toastr.error('خطأ في تحميل البطولات', 'خطأ');\n        this.isLoadingTournaments = false;\n      },\n    });\n  }\n\n  createTournament(): void {\n    if (!this.createTournamentForm.name.trim()) {\n      this.toastr.warning('يرجى إدخال اسم البطولة', 'تحذير');\n      return;\n    }\n\n    this.isCreatingTournament = true;\n\n    this.multiTournamentService\n      .createTournament(this.createTournamentForm)\n      .subscribe({\n        next: (response: ApiResponse) => {\n          if (response.success) {\n            this.toastr.success('تم إنشاء البطولة بنجاح', 'نجاح');\n            this.loadTournaments();\n            this.closeCreateTournamentModal();\n          } else {\n            this.toastr.error(\n              response.message || 'فشل في إنشاء البطولة',\n              'خطأ'\n            );\n          }\n          this.isCreatingTournament = false;\n        },\n        error: (error) => {\n          console.error('Error creating tournament:', error);\n          this.toastr.error('خطأ في إنشاء البطولة', 'خطأ');\n          this.isCreatingTournament = false;\n        },\n      });\n  }\n\n  // Modal Controls\n  openCreateTournamentModal(): void {\n    this.createTournamentForm = {\n      name: '',\n      systemOfScoring: 'Classic',\n      teamCount: 4,\n      playersPerTeam: 3,\n    };\n    this.showCreateTournamentModal = true;\n  }\n\n  closeCreateTournamentModal(): void {\n    this.showCreateTournamentModal = false;\n  }\n\n  // Helper Methods\n  getRemainingTeams(tournament: MultiTournamentDto): number {\n    return tournament.teamCount - tournament.teams.length;\n  }\n\n  canStartTournament(tournament: MultiTournamentDto): boolean {\n    return (\n      tournament.status === 'Created' &&\n      tournament.teams.length === tournament.teamCount\n    );\n  }\n\n  getStatusColor(status: string): string {\n    switch (status) {\n      case 'Created':\n        return 'text-yellow-400';\n      case 'Started':\n        return 'text-green-400';\n      case 'Finished':\n        return 'text-blue-400';\n      default:\n        return 'text-gray-400';\n    }\n  }\n\n  // Player Management\n  loadAvailablePlayers(): void {\n    this.isLoadingPlayers = true;\n\n    this.multiTournamentService.getAllPlayers().subscribe({\n      next: (response: ApiResponse<PlayerDetail[]>) => {\n        if (response.success && response.data) {\n          this.availablePlayers = response.data.filter((p) => p.isActive);\n        }\n        this.isLoadingPlayers = false;\n      },\n      error: (error) => {\n        console.error('Error loading players:', error);\n        this.toastr.error('خطأ في تحميل اللاعبين', 'خطأ');\n        this.isLoadingPlayers = false;\n      },\n    });\n  }\n\n  // Match Management\n  loadTournamentMatches(): void {\n    if (!this.activeTournament) return;\n\n    this.isLoadingMatches = true;\n\n    this.multiTournamentService.getActiveTournamentMatches().subscribe({\n      next: (response: ApiResponse<TeamMatchesDto[]>) => {\n        if (response.success && response.data) {\n          this.tournamentMatches = response.data;\n        }\n        this.isLoadingMatches = false;\n      },\n      error: (error) => {\n        console.error('Error loading tournament matches:', error);\n        this.toastr.error('خطأ في تحميل المباريات', 'خطأ');\n        this.isLoadingMatches = false;\n      },\n    });\n  }\n\n  // Start Tournament\n  startTournament(tournament: MultiTournamentDto): void {\n    if (confirm(`هل أنت متأكد من بدء البطولة \"${tournament.name}\"؟`)) {\n      this.multiTournamentService\n        .startTournament(tournament.multiTournamentId)\n        .subscribe({\n          next: (response: ApiResponse) => {\n            if (response.success) {\n              this.toastr.success('تم بدء البطولة بنجاح', 'نجاح');\n              this.loadTournaments();\n            } else {\n              this.toastr.error(\n                response.message || 'فشل في بدء البطولة',\n                'خطأ'\n              );\n            }\n          },\n          error: (error) => {\n            console.error('Error starting tournament:', error);\n            this.toastr.error('خطأ في بدء البطولة', 'خطأ');\n          },\n        });\n    }\n  }\n\n  // Finish Tournament\n  finishTournament(tournament: MultiTournamentDto): void {\n    if (confirm(`هل أنت متأكد من إنهاء البطولة \"${tournament.name}\"؟`)) {\n      this.multiTournamentService\n        .finishTournament(tournament.multiTournamentId)\n        .subscribe({\n          next: (response: ApiResponse) => {\n            if (response.success) {\n              this.toastr.success('تم إنهاء البطولة بنجاح', 'نجاح');\n              this.loadTournaments();\n            } else {\n              this.toastr.error(\n                response.message || 'فشل في إنهاء البطولة',\n                'خطأ'\n              );\n            }\n          },\n          error: (error) => {\n            console.error('Error finishing tournament:', error);\n            this.toastr.error('خطأ في إنهاء البطولة', 'خطأ');\n          },\n        });\n    }\n  }\n\n  // Delete Tournament\n  deleteTournament(tournament: MultiTournamentDto): void {\n    if (\n      confirm(\n        `هل أنت متأكد من حذف البطولة \"${tournament.name}\"؟ سيتم حذف كل البيانات المرتبطة بها.`\n      )\n    ) {\n      this.multiTournamentService\n        .deleteTournament(tournament.multiTournamentId)\n        .subscribe({\n          next: (response: ApiResponse) => {\n            if (response.success) {\n              this.toastr.success('تم حذف البطولة بنجاح', 'نجاح');\n              this.loadTournaments();\n            } else {\n              this.toastr.error(\n                response.message || 'فشل في حذف البطولة',\n                'خطأ'\n              );\n            }\n          },\n          error: (error) => {\n            console.error('Error deleting tournament:', error);\n            this.toastr.error('خطأ في حذف البطولة', 'خطأ');\n          },\n        });\n    }\n  }\n\n  // Create Team\n  createTeam(): void {\n    if (!this.createTeamForm.teamName.trim()) {\n      this.toastr.warning('يرجى إدخال اسم الفريق', 'تحذير');\n      return;\n    }\n\n    if (\n      this.createTeamForm.playerIds.length !==\n      (this.activeTournament?.playersPerTeam || 3)\n    ) {\n      this.toastr.warning(\n        `يجب اختيار ${this.activeTournament?.playersPerTeam} لاعبين بالضبط`,\n        'تحذير'\n      );\n      return;\n    }\n\n    if (!this.activeTournament) return;\n\n    this.isCreatingTeam = true;\n\n    this.multiTournamentService\n      .createTeam(this.activeTournament.multiTournamentId, this.createTeamForm)\n      .subscribe({\n        next: (response: ApiResponse) => {\n          if (response.success) {\n            this.toastr.success('تم إنشاء الفريق بنجاح', 'نجاح');\n            this.loadTournaments();\n            this.closeCreateTeamModal();\n          } else {\n            this.toastr.error(response.message || 'فشل في إنشاء الفريق', 'خطأ');\n          }\n          this.isCreatingTeam = false;\n        },\n        error: (error) => {\n          console.error('Error creating team:', error);\n          this.toastr.error('خطأ في إنشاء الفريق', 'خطأ');\n          this.isCreatingTeam = false;\n        },\n      });\n  }\n\n  // Add Player\n  addNewPlayer(): void {\n    if (!this.newPlayerName.trim()) {\n      this.toastr.warning('يرجى إدخال اسم اللاعب', 'تحذير');\n      return;\n    }\n\n    this.isAddingPlayer = true;\n\n    this.multiTournamentService\n      .addNewPlayer({ fullName: this.newPlayerName.trim() })\n      .subscribe({\n        next: (response: ApiResponse<PlayerDetail>) => {\n          if (response.success) {\n            this.toastr.success(\n              `تم إضافة اللاعب ${this.newPlayerName} بنجاح`,\n              'نجاح'\n            );\n            this.loadAvailablePlayers();\n            this.showAddPlayerModal = false;\n            this.newPlayerName = '';\n          } else {\n            this.toastr.error(response.message || 'فشل في إضافة اللاعب', 'خطأ');\n          }\n          this.isAddingPlayer = false;\n        },\n        error: (error) => {\n          console.error('Error adding player:', error);\n          this.toastr.error('خطأ في إضافة اللاعب', 'خطأ');\n          this.isAddingPlayer = false;\n        },\n      });\n  }\n\n  // Team Management\n  togglePlayerSelection(playerId: number): void {\n    const index = this.createTeamForm.playerIds.indexOf(playerId);\n    if (index === -1) {\n      if (\n        this.createTeamForm.playerIds.length <\n        (this.activeTournament?.playersPerTeam || 3)\n      ) {\n        this.createTeamForm.playerIds.push(playerId);\n      } else {\n        this.toastr.warning(\n          `يمكن اختيار ${this.activeTournament?.playersPerTeam} لاعبين فقط`,\n          'تحذير'\n        );\n      }\n    } else {\n      this.createTeamForm.playerIds.splice(index, 1);\n    }\n  }\n\n  isPlayerSelected(playerId: number): boolean {\n    return this.createTeamForm.playerIds.includes(playerId);\n  }\n\n  // Match Recording\n  recordMatchResult(): void {\n    if (!this.selectedMatchId || !this.activeTournament) return;\n\n    let requestBody: any = {};\n\n    if (this.activeTournament.systemOfScoring === 'Classic') {\n      // Classic system: determine winner automatically based on scores\n      if (this.recordingScore1! > this.recordingScore2!) {\n        requestBody.winnerId = this.selectedPlayer1Id;\n      } else if (this.recordingScore2! > this.recordingScore1!) {\n        requestBody.winnerId = this.selectedPlayer2Id;\n      } else {\n        requestBody.winnerId = null; // Draw\n      }\n    } else {\n      // Points system: send scores directly\n      requestBody.score1 = this.recordingScore1;\n      requestBody.score2 = this.recordingScore2;\n    }\n\n    this.isRecordingResult = true;\n\n    this.multiTournamentService\n      .recordMatchResult(this.selectedMatchId, requestBody)\n      .subscribe({\n        next: (response: ApiResponse) => {\n          if (response.success) {\n            this.toastr.success('تم تسجيل نتيجة المباراة بنجاح', 'نجاح');\n            this.loadTournaments();\n            this.loadTournamentMatches();\n            this.closeRecordResultModal();\n          } else {\n            this.toastr.error(\n              response.message || 'فشل في تسجيل النتيجة',\n              'خطأ'\n            );\n          }\n          this.isRecordingResult = false;\n        },\n        error: (error) => {\n          console.error('Error recording match result:', error);\n          this.toastr.error('خطأ في تسجيل نتيجة المباراة', 'خطأ');\n          this.isRecordingResult = false;\n        },\n      });\n  }\n\n  undoMatchResult(match: MatchDetail): void {\n    if (confirm('هل أنت متأكد من إلغاء نتيجة هذه المباراة؟')) {\n      this.multiTournamentService\n        .undoMatchResult(match.multiMatchId)\n        .subscribe({\n          next: (response: ApiResponse) => {\n            if (response.success) {\n              this.toastr.success('تم إلغاء نتيجة المباراة بنجاح', 'نجاح');\n              this.loadTournaments();\n              this.loadTournamentMatches();\n            } else {\n              this.toastr.error(\n                response.message || 'فشل في إلغاء النتيجة',\n                'خطأ'\n              );\n            }\n          },\n          error: (error) => {\n            console.error('Error undoing match result:', error);\n            this.toastr.error('خطأ في إلغاء نتيجة المباراة', 'خطأ');\n          },\n        });\n    }\n  }\n\n  // Modal Controls\n  openCreateTeamModal(tournament: MultiTournamentDto): void {\n    this.activeTournament = tournament;\n    this.createTeamForm = {\n      teamName: '',\n      playerIds: [],\n    };\n    this.showCreateTeamModal = true;\n  }\n\n  closeCreateTeamModal(): void {\n    this.showCreateTeamModal = false;\n    this.activeTournament = null;\n  }\n\n  closeRecordResultModal(): void {\n    this.showRecordResultModal = false;\n    this.selectedMatchId = null;\n    this.selectedPlayer1Id = null;\n    this.selectedPlayer2Id = null;\n    this.recordingScore1 = null;\n    this.recordingScore2 = null;\n  }\n\n  getTrophyIcon(position: number): string {\n    switch (position) {\n      case 1:\n        return '🥇';\n      case 2:\n        return '🥈';\n      case 3:\n        return '🥉';\n      default:\n        return '';\n    }\n  }\n\n  canFinishTournament(tournament: MultiTournamentDto): boolean {\n    return tournament.status === 'Started';\n  }\n\n  canDeleteTournament(tournament: MultiTournamentDto): boolean {\n    return tournament.status === 'Created';\n  }\n\n  openRecordResultModal(match: MatchDetail): void {\n    this.selectedMatchId = match.multiMatchId;\n    this.selectedPlayer1Id = match.player1Id;\n    this.selectedPlayer2Id = match.player2Id;\n    this.recordingScore1 = null;\n    this.recordingScore2 = null;\n    this.showRecordResultModal = true;\n    // Close player matches modal when opening record result modal\n    this.showPlayerMatchesModal = false;\n  }\n\n  // Close Player Matches Modal\n  closePlayerMatchesModal(): void {\n    this.showPlayerMatchesModal = false;\n    this.selectedPlayer = null;\n  }\n\n  // Player Selection\n  selectPlayer(player: PlayerDetail): void {\n    this.selectedPlayer = player;\n    this.showPlayerMatchesModal = true;\n    this.loadTournamentMatches();\n  }\n\n  // Get Player Matches\n  getPlayerMatches(playerId: number): MatchDetail[] {\n    if (!this.tournamentMatches || this.tournamentMatches.length === 0) {\n      return [];\n    }\n\n    const playerMatches: MatchDetail[] = [];\n\n    this.tournamentMatches.forEach((fixture) => {\n      fixture.matches.forEach((match) => {\n        if (match.player1Id === playerId || match.player2Id === playerId) {\n          playerMatches.push(match);\n        }\n      });\n    });\n\n    return playerMatches;\n  }\n\n  // Get Player Name by ID\n  getPlayerName(playerId: number | null): string {\n    if (!playerId) return 'Unknown Player';\n\n    const player = this.availablePlayers.find((p) => p.playerId === playerId);\n    return player ? player.fullName : 'Unknown Player';\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { PlayersComponent } from './players/players.component';\r\nimport { InboxComponent } from './inbox/inbox.component';\r\nimport { FriendliesComponent } from './friendlies/friendlies.component';\r\nimport { FriendlyInboxComponent } from './friendlies/friendly-inbox/friendly-inbox.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FindPlayerPipe } from '../pipes/find-player.pipe';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { UtcToLocalPipe } from '../pipes/utcToLocal.pipe';\r\nimport { PlayerModule } from '../player/player.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { TeamsDashboardComponent } from './teams-dashboard/teams-dashboard.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlayersComponent,\r\n    InboxComponent,\r\n    FriendliesComponent,\r\n    FriendlyInboxComponent,\r\n    FindPlayerPipe,\r\n    UtcToLocalPipe,\r\n    TeamsDashboardComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    PlayerModule,\r\n    SharedModule,\r\n  ],\r\n})\r\nexport class AdminModule {}\r\n"],"x_google_ignoreList":[0,2]}