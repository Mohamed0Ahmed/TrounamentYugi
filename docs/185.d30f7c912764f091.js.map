{"version":3,"file":"185.d30f7c912764f091.js","mappings":"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","names":["ReplaySubject","Subject","constructor","_bufferSize","Infinity","_windowTime","_timestampProvider","dateTimestampProvider","super","this","_buffer","_infiniteTimeWindow","Math","max","next","value","isStopped","push","now","_trimBuffer","_subscribe","subscriber","_throwIfClosed","subscription","_innerSubscribe","copy","slice","i","length","closed","_checkFinalizedStatuses","adjustedBufferSize","splice","last","AdminDashboardService","playerService","matchService","leagueService","messageService","noteService","essentialDataCache$","BehaviorSubject","secondaryDataCache","Map","lastEssentialUpdate","lastSecondaryUpdate","CACHE_DURATION","SECONDARY_CACHE_DURATION","getEssentialData","forceRefresh","Date","asObservable","pipe","filter","data","loadEssentialDataFromServer","tap","catchError","error","of","getEmptyDashboardData","shareReplay","configOrBufferSize","windowTime","scheduler","bufferSize","refCount","share","connector","resetOnError","resetOnComplete","resetOnRefCountZero","getSecondaryData","type","lastUpdate","get","hasValidCache","has","loadSecondaryDataFromServer","set","forkJoin","players","getAdminPlayers","matches","getAdminMatches","currentLeague","getAdminCurrentLeague","map","response","league","allLeagues","getAdminAllLeagues","notes","getAdminNotes","messages","getAdminMessages","messagesList","Array","isArray","stats","totalPlayers","totalMatches","totalMatchesLeft","m","isCompleted","totalMessagesLeft","isRead","isFromAdmin","invalidateCache","delete","clear","getCurrentEssentialData","updateMessageCount","count","current","i0","i1","i2","i3","i4","i5","factory","ɵfac","providedIn","player_r16","_r18","$implicit","ctx_r17","selectPlayer","$event","ctx_r19","confirmDelete","ctx_r15","selectedPlayer","playerId","fullName","PlayersComponent_ul_6_li_1_Template","ctx_r0","_r21","ctx_r20","openModal","match_r23","_r26","ctx_r25","updateMatch","matchId","player1Id","ctx_r27","player2Id","ctx_r28","ctx_r29","resetMatch","i_r24","player1Name","player2Name","score1","score2","_c0","ctx_r22","loadingMatches","PlayersComponent_div_9_tr_15_Template","ctx_r2","displayMatches","ctx_r3","_r31","ctx_r30","openStartLeagueModal","_r33","ctx_r32","showEndLeagueModal","_r35","ctx_r34","onTournamentStageButtonClick","ctx_r6","tournamentStageButtonText","PlayersComponent_div_23_p_9_Template","PlayersComponent_div_23_p_10_Template","PlayersComponent_div_23_p_11_Template","ctx_r7","leagueData","description","typeOfLeague","createdOn","name","league_r39","_r42","ctx_r41","openDeleteLeagueModal","leagueId","_c1","i_r40","leagueName","isFinished","leagueType","systemOfLeague","_r44","ctx_r43","closeDeleteLeagueModal","ctx_r45","deleteConfirmedLeague","ctx_r9","selectedLeagueToDelete","_r47","ctx_r46","showDeleteModal","ctx_r48","deleteConfirmedPlayer","ctx_r10","selectedPlayerToDelete","_r50","ctx_r49","newPlayerName","ctx_r51","closeModal","ctx_r52","addPlayer","ctx_r11","_r54","ctx_r53","newLeague","ctx_r55","ctx_r56","ctx_r57","ctx_r58","closeStartLeagueModal","ctx_r59","startLeague","ctx_r12","_r61","ctx_r60","ctx_r62","resetTournament","id","_r70","note_r64","ctx_r68","toggleHideNote","_r73","ctx_r71","_r76","ctx_r74","toggleDeleteNote","PlayersComponent_div_68_div_15_div_1_button_5_Template","PlayersComponent_div_68_div_15_div_1_button_6_Template","content","isHidden","PlayersComponent_div_68_div_15_div_1_Template","isDeleted","_r79","ctx_r78","newNote","ctx_r80","sendNote","PlayersComponent_div_68_div_15_Template","ctx_r81","closeNoteModal","ctx_r14","PlayersComponent","toastr","adminDashboardService","playerMatches","showModal","isSidebarOpen","showNoteModal","showDeleteLeagueModal","requestQueue","isProcessingQueue","showResetModal","showStartLeagueModal","totalMessages","leagues","currentMatches","showTournamentStageButton","tournamentStageButtonAction","ngOnInit","loadEssentialData","ngOnDestroy","loadCurrentLeagueFromServer","subscribe","updateTournamentStageButton","err","toggleSidebar","player","loadMatches","sort","a","b","nameA","toLowerCase","nameB","localeCompare","match","forEach","addToQueue","request","processQueue","_this","_asyncToGenerator","shift","winnerId","Promise","resolve","reject","success","message","deletePlayer","event","stopPropagation","warning","trim","resetLeague","DeleteLeague","find","l","res","note","toggleMarHide","noteId","DeleteNote","openNoteModal","loadCurrentMatches","LeagueType","Groups","startGroupStage","groupMatches","stage","TournamentStage","GroupStage","tournamentStage","quarterMatches","QuarterFinals","semiMatches","SemiFinals","finalMatches","Final","allGroupMatchesCompleted","every","allQuarterMatchesCompleted","allSemiMatchesCompleted","startQuarterStage","startSemiFinalStage","startFinalStage","createGroupsAndMatches","startKnockoutStage","startSemiFinals","startFinal","i6","selectors","decls","vars","consts","template","rf","ctx","PlayersComponent_ul_6_Template","PlayersComponent_button_7_Template","PlayersComponent_div_9_Template","PlayersComponent_div_17_Template","PlayersComponent_button_18_Template","PlayersComponent_button_19_Template","PlayersComponent_button_20_Template","PlayersComponent_div_23_Template","PlayersComponent_tr_62_Template","PlayersComponent_div_63_Template","PlayersComponent_div_64_Template","PlayersComponent_div_65_Template","PlayersComponent_div_66_Template","PlayersComponent_div_67_Template","PlayersComponent_div_68_Template","_c2","chat_r6","unreadCount","_r10","openChat","senderId","InboxComponent_div_6_div_1_span_6_Template","senderFullName","lastMessage","InboxComponent_div_6_div_1_Template","ctx_r1","playerChats","trackByPlayerId","message_r13","sentAt","_r15","closeChat","InboxComponent_div_8_div_12_Template","ctx_r16","sendReply","replyMessages","selectedChat","ctx_r18","navbarHeight","_c3","senderPhoneNumber","trackByMessageId","_c4","InboxComponent","cdr","selectedPlayerId","loadAdminMessages","updateStatusSubscription","unsubscribe","refreshSubscription","loadFromServer","loadFromCache","groupedMessages","groupMessagesBySender","lastMessageDate","getTime","refreshMessages","ngAfterViewChecked","messagesContainer","scrollToBottom","loadMessages","getMessages","processMessages","detectChanges","chatMap","msg","Object","values","chat","lastMsg","toggleMarkMessage","replyContent","sendAdminReply","newMessage","random","toISOString","container","nativeElement","scrollTop","scrollHeight","index","viewQuery","InboxComponent_div_5_Template","InboxComponent_div_6_Template","InboxComponent_div_8_Template","InboxComponent_ng_template_9_Template","_c5","_c6","_r3","player_r11","_r13","openRecordMatchModal","FriendliesComponent_ul_6_li_1_Template","_r17","totalUnreadFriendlyMessages","player_r18","match_r19","editMatch","deleteMatchFromList","playedOn","ctx_r5","getPlayerName","player1Score","player2Score","i_r25","_r27","ctx_r26","changePage","ctx_r23","currentPage","_r29","FriendliesComponent_div_78_span_4_Template","totalPages","_r32","ctx_r31","ctx_r33","ctx_r36","ctx_r37","ctx_r8","player_r43","_r45","ctx_r44","matchForm","FriendliesComponent_div_83_div_4_option_6_Template","ctx_r38","getAllActivePlayers","opponent_r47","_r49","FriendliesComponent_div_83_div_5_option_6_Template","ctx_r39","getOpponentsForPlayer","ctx_r40","selectedPlayerForMatch","FriendliesComponent_div_83_div_4_Template","FriendliesComponent_div_83_div_5_Template","FriendliesComponent_div_83_div_6_Template","FriendliesComponent_div_83_div_7_Template","_r51","ctx_r50","validateScore","ctx_r54","closeRecordMatchModal","recordNewMatch","isRecordingMatch","FriendlyInboxComponent_div_6_div_1_span_6_Template","FriendlyInboxComponent_div_6_div_1_Template","FriendlyInboxComponent_div_8_div_12_Template","routes","path","component","FriendliesComponent","friendlyMatchService","friendlyMessageService","showRecordMatchModal","allMatches","itemsPerPage","filterForm","opponentIds","dateFilter","DateFilter","AllTime","loadPlayers","loadAllMatches","loadUnreadFriendlyMessagesCount","getAllMessages","calculateUnreadCount","console","log","getAllFriendlyPlayers","calculateStatistics","loadPlayerMatches","getAllFriendlyMatches","playerName","p","addFriendlyPlayerAsync","refreshFriendlyPlayers","deleteFriendlyPlayerAsync","getActivePlayersCount","isActive","getRecentMatches","matchData","recordFriendlyMatchAsync","player1","player2","refreshFriendlyMatches","ceil","loadFilteredMatchesFromCache","filteredMatches","cutoffDate","Today","getFullYear","getMonth","getDate","Last3Days","LastWeek","LastMonth","selectedPlayerName","reorderMatchesForSelectedPlayer","opponentNames","includes","loadFilteredMatches","page","pageSize","getFilteredMatches","result","totalCount","onFilterChange","clearFilters","getPaginatedMatches","startIndex","updateFriendlyMatchAsync","confirm","deleteFriendlyMatchAsync","FriendliesComponent_ul_6_Template","FriendliesComponent_button_7_Template","FriendliesComponent_div_9_Template","FriendliesComponent_div_17_Template","FriendliesComponent_option_58_Template","FriendliesComponent_tr_77_Template","FriendliesComponent_div_78_Template","FriendliesComponent_div_81_Template","FriendliesComponent_div_82_Template","FriendliesComponent_div_83_Template","min","FriendlyInboxComponent","loadFriendlyMessages","unreadMessages","info","parsedId","parseInt","isNaN","String","playerFullName","markMessageAsRead","messageType","FriendlyInboxComponent_div_5_Template","FriendlyInboxComponent_div_6_Template","FriendlyInboxComponent_div_8_Template","FriendlyInboxComponent_ng_template_9_Template","AdminRoutingModule","RouterModule","forChild","AdminModule","CommonModule","FormsModule","HttpClientModule","PlayerModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./src/app/core/services/admin-dashboard.service.ts","./node_modules/rxjs/dist/esm/internal/operators/shareReplay.js","./src/app/admin/players/players.component.html","./src/app/admin/players/players.component.ts","./src/app/admin/inbox/inbox.component.html","./src/app/admin/inbox/inbox.component.ts","./src/app/admin/friendlies/friendlies.component.html","./src/app/admin/friendlies/friendly-inbox/friendly-inbox.component.html","./src/app/admin/admin-routing.module.ts","./src/app/admin/friendlies/friendlies.component.ts","./src/app/admin/friendlies/friendly-inbox/friendly-inbox.component.ts","./src/app/admin/admin.module.ts"],"sourcesContent":["import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject, forkJoin, of } from 'rxjs';\r\nimport { map, tap, catchError, shareReplay, filter } from 'rxjs/operators';\r\nimport { PlayerService } from './player.service';\r\nimport { MatchService } from './match.service';\r\nimport { LeagueService } from './league.service';\r\nimport { MessageService } from './message.service';\r\nimport { NoteService } from './note.service';\r\nimport {\r\n  Player,\r\n  Match,\r\n  League,\r\n  AllLeagueRank,\r\n  Note,\r\n  Message,\r\n} from '../../models/interfaces';\r\n\r\nexport interface AdminDashboardData {\r\n  players: Player[];\r\n  matches: Match[];\r\n  currentLeague: League | null;\r\n  allLeagues: AllLeagueRank[];\r\n  notes: Note[];\r\n  messages: Message[];\r\n  stats: {\r\n    totalPlayers: number;\r\n    totalMatches: number;\r\n    totalMatchesLeft: number;\r\n    totalMessagesLeft: number;\r\n  };\r\n}\r\n\r\nexport interface AdminSecondaryData {\r\n  allLeagues: AllLeagueRank[];\r\n  notes: Note[];\r\n  messages: Message[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminDashboardService {\r\n  private essentialDataCache$ = new BehaviorSubject<AdminDashboardData | null>(\r\n    null\r\n  );\r\n  private secondaryDataCache = new Map<string, any>();\r\n  private lastEssentialUpdate = 0;\r\n  private lastSecondaryUpdate = new Map<string, number>();\r\n  private readonly CACHE_DURATION = 900000; // 15 minutes\r\n  private readonly SECONDARY_CACHE_DURATION = 900000; // 15 minutes (same as main cache)\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private matchService: MatchService,\r\n    private leagueService: LeagueService,\r\n    private messageService: MessageService,\r\n    private noteService: NoteService\r\n  ) {}\r\n\r\n  /**\r\n   * Get essential dashboard data with smart caching\r\n   */\r\n  getEssentialData(forceRefresh = false): Observable<AdminDashboardData> {\r\n    const now = Date.now();\r\n    const hasValidCache =\r\n      this.essentialDataCache$.value &&\r\n      now - this.lastEssentialUpdate < this.CACHE_DURATION;\r\n\r\n    if (!forceRefresh && hasValidCache) {\r\n      return this.essentialDataCache$\r\n        .asObservable()\r\n        .pipe(filter((data): data is AdminDashboardData => data !== null));\r\n    }\r\n\r\n    return this.loadEssentialDataFromServer().pipe(\r\n      tap((data) => {\r\n        this.essentialDataCache$.next(data);\r\n        this.lastEssentialUpdate = now;\r\n      }),\r\n      catchError((error) => {\r\n        // Return cached data if available, otherwise empty state\r\n        return of(\r\n          this.essentialDataCache$.value || this.getEmptyDashboardData()\r\n        );\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get secondary data with smart caching\r\n   */\r\n  getSecondaryData(\r\n    type: 'leagues' | 'notes' | 'messages',\r\n    forceRefresh = false\r\n  ): Observable<any> {\r\n    const now = Date.now();\r\n    const lastUpdate = this.lastSecondaryUpdate.get(type) || 0;\r\n    const hasValidCache =\r\n      this.secondaryDataCache.has(type) &&\r\n      now - lastUpdate < this.SECONDARY_CACHE_DURATION;\r\n\r\n    if (!forceRefresh && hasValidCache) {\r\n      return of(this.secondaryDataCache.get(type));\r\n    }\r\n\r\n    return this.loadSecondaryDataFromServer(type).pipe(\r\n      tap((data) => {\r\n        this.secondaryDataCache.set(type, data);\r\n        this.lastSecondaryUpdate.set(type, now);\r\n      }),\r\n      catchError((error) => {\r\n        // Return cached data if available\r\n        return of(this.secondaryDataCache.get(type) || []);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load essential data from server using parallel requests\r\n   */\r\n  private loadEssentialDataFromServer(): Observable<AdminDashboardData> {\r\n    return forkJoin({\r\n      players: this.playerService.getAdminPlayers(),\r\n      matches: this.matchService.getAdminMatches(),\r\n      currentLeague: this.leagueService.getAdminCurrentLeague().pipe(\r\n        map((response) => response.league),\r\n        catchError(() => of(null))\r\n      ),\r\n      allLeagues: this.leagueService\r\n        .getAdminAllLeagues()\r\n        .pipe(catchError(() => of([]))),\r\n      notes: this.noteService.getAdminNotes().pipe(\r\n        map((response) => response.notes),\r\n        catchError(() => of([]))\r\n      ),\r\n      messages: this.messageService.getAdminMessages().pipe(\r\n        map((response) => response.messages || []),\r\n        catchError(() => of([]))\r\n      ),\r\n    }).pipe(\r\n      map(\r\n        ({ players, matches, currentLeague, allLeagues, notes, messages }) => {\r\n          const messagesList = Array.isArray(messages) ? messages : [];\r\n          return {\r\n            players: players as Player[],\r\n            matches: matches as Match[],\r\n            currentLeague,\r\n            allLeagues: allLeagues as AllLeagueRank[],\r\n            notes: notes as Note[],\r\n            messages: messagesList as Message[],\r\n            stats: {\r\n              totalPlayers: players.length,\r\n              totalMatches: matches.length,\r\n              totalMatchesLeft: matches.filter((m) => !m.isCompleted).length,\r\n              totalMessagesLeft: messagesList.filter(\r\n                (m: any) => !m.isRead && !m.isFromAdmin\r\n              ).length,\r\n            },\r\n          };\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load secondary data from server\r\n   */\r\n  private loadSecondaryDataFromServer(type: string): Observable<any> {\r\n    switch (type) {\r\n      case 'leagues':\r\n        return this.leagueService.getAdminAllLeagues();\r\n      case 'notes':\r\n        return this.noteService\r\n          .getAdminNotes()\r\n          .pipe(map((response) => response.notes));\r\n      case 'messages':\r\n        return this.messageService\r\n          .getAdminMessages()\r\n          .pipe(map((response) => response.messages || []));\r\n      default:\r\n        return of([]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update cached data after mutations\r\n   */\r\n  invalidateCache(\r\n    type: 'essential' | 'leagues' | 'notes' | 'messages' | 'all'\r\n  ): void {\r\n    switch (type) {\r\n      case 'essential':\r\n        this.lastEssentialUpdate = 0;\r\n        break;\r\n      case 'leagues':\r\n      case 'notes':\r\n      case 'messages':\r\n        this.lastSecondaryUpdate.set(type, 0);\r\n        this.secondaryDataCache.delete(type);\r\n        break;\r\n      case 'all':\r\n        this.lastEssentialUpdate = 0;\r\n        this.lastSecondaryUpdate.clear();\r\n        this.secondaryDataCache.clear();\r\n        break;\r\n    }\r\n  }\r\n\r\n  // ✅ تم حذف Background refresh تماماً - مالوش لازمة أصلاً\r\n\r\n  /**\r\n   * Get current cached essential data\r\n   */\r\n  getCurrentEssentialData(): AdminDashboardData | null {\r\n    return this.essentialDataCache$.value;\r\n  }\r\n\r\n  /**\r\n   * Update message count in stats\r\n   */\r\n  updateMessageCount(count: number): void {\r\n    const current = this.essentialDataCache$.value;\r\n    if (current) {\r\n      current.stats.totalMessagesLeft = count;\r\n      this.essentialDataCache$.next(current);\r\n    }\r\n  }\r\n\r\n  private getEmptyDashboardData(): AdminDashboardData {\r\n    return {\r\n      players: [],\r\n      matches: [],\r\n      currentLeague: null,\r\n      allLeagues: [],\r\n      notes: [],\r\n      messages: [],\r\n      stats: {\r\n        totalPlayers: 0,\r\n        totalMatches: 0,\r\n        totalMatchesLeft: 0,\r\n        totalMessagesLeft: 0,\r\n      },\r\n    };\r\n  }\r\n}\r\n","import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let bufferSize;\n    let refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n    }\n    else {\n        bufferSize = (configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity);\n    }\n    return share({\n        connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount,\n    });\n}\n","<!-- Admin Update Status Component -->\r\n\r\n<div class=\"block sm:flex transition-all duration-600\">\r\n  <!-- Sidebar -->\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white transition-all duration-600\"\r\n    [ngClass]=\"{\r\n      'w-64 p-4 sm:min-h-screen': isSidebarOpen,\r\n      'w-0 p-0': !isSidebarOpen\r\n    }\"\r\n  >\r\n    <h2\r\n      class=\"text-lg font-bold mb-4 flex justify-between overflow-hidden text-white\"\r\n    >\r\n      Players\r\n      <button (click)=\"toggleSidebar()\" class=\"text-gray-300 text-3xl\">\r\n        ×\r\n      </button>\r\n    </h2>\r\n    <ul *ngIf=\"isSidebarOpen\">\r\n      <li\r\n        *ngFor=\"let player of players\"\r\n        class=\"flex items-center justify-between p-2 cursor-pointer rounded-md hover:bg-gray-700\"\r\n        [class.bg-blue-600]=\"selectedPlayer?.playerId === player.playerId\"\r\n        (click)=\"selectPlayer(player)\"\r\n      >\r\n        <span class=\"text-white\">{{ player.fullName }}</span>\r\n        <button\r\n          (click)=\"confirmDelete(player, $event)\"\r\n          class=\"bg-red-600 px-2 py-1 text-sm rounded text-white hover:bg-red-700 transition\"\r\n        >\r\n          X\r\n        </button>\r\n      </li>\r\n    </ul>\r\n    <button\r\n      *ngIf=\"isSidebarOpen\"\r\n      class=\"mt-4 w-full bg-green-600 p-2 rounded text-white hover:bg-green-700 transition\"\r\n      (click)=\"openModal()\"\r\n    >\r\n      Add Player\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Main Content -->\r\n  <div\r\n    class=\"sm:flex-1 sm:p-2 transition-all duration-600 sm:container sm:mx-auto\"\r\n  >\r\n    <div *ngIf=\"selectedPlayer\" class=\"sm:w-4/6 mx-auto\">\r\n      <h2 class=\"text-2xl font-bold mb-4 text-center text-white\">\r\n        Matches for {{ selectedPlayer.fullName }}\r\n      </h2>\r\n\r\n      <table class=\"w-full border-collapse border border-gray-600 text-center\">\r\n        <thead>\r\n          <tr class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white\">\r\n            <th class=\"border border-gray-600 p-2\">Player 1</th>\r\n            <th class=\"border border-gray-600 p-2\">Player 2</th>\r\n            <th class=\"border border-gray-600 p-2\">Result</th>\r\n            <th class=\"border border-gray-600 p-2\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let match of displayMatches; let i = index\"\r\n            class=\"border border-gray-600\"\r\n            [ngClass]=\"i % 2 === 0 ? 'bg-gray-900' : 'bg-gray-950'\"\r\n          >\r\n            <td class=\"p-2 font-bold text-white\">{{ match.player1Name }}</td>\r\n            <td class=\"p-2 font-bold text-white\">{{ match.player2Name }}</td>\r\n            <td class=\"p-2 font-bold text-white\">\r\n              {{ match.score1 }} - {{ match.score2 }}\r\n            </td>\r\n            <td class=\"p-2\">\r\n              <button\r\n                class=\"bg-blue-600 px-2 py-1 rounded text-white hover:bg-blue-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, match.player1Id)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Win P1\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-blue-600 px-2 py-1 rounded text-white mx-1 hover:bg-blue-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, match.player2Id)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Win P2\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-yellow-600 px-2 py-1 rounded text-white hover:bg-yellow-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, null)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Draw\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-gray-600 px-2 py-1 rounded text-white ml-2 hover:bg-gray-700 transition-all\"\r\n                (click)=\"resetMatch(match.matchId)\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Undo\" }}\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <hr class=\"my-3 border-gray-600\" />\r\n\r\n    <!-- القائمة الأولية -->\r\n    <div>\r\n      <div class=\"flex justify-evenly pt-5\">\r\n        <button\r\n          (click)=\"toggleSidebar()\"\r\n          class=\"bg-blue-600 text-white px-3 py-2 rounded mb-4 hover:bg-blue-700 transition\"\r\n        >\r\n          ☰ Players\r\n        </button>\r\n        <button\r\n          routerLink=\"/admin/inbox\"\r\n          class=\"bg-orange-600 hover:bg-orange-700 text-white mb-4 px-3 py-2 rounded transition-all relative\"\r\n        >\r\n          Inbox\r\n          <div\r\n            class=\"absolute -top-2 -right-2 w-[30px] h-[30px] rounded-full bg-green-600 flex justify-center items-center\"\r\n            *ngIf=\"totalMessagesLeft > 0\"\r\n          >\r\n            <h4 class=\"text-white font-bold\">{{ totalMessagesLeft }}</h4>\r\n          </div>\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 text-white px-3 py-2 rounded mb-4 hover:bg-green-700 transition\"\r\n          (click)=\"openStartLeagueModal()\"\r\n          *ngIf=\"leagueData == null\"\r\n        >\r\n          Start New League\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 text-white px-3 py-2 rounded mb-4 hover:bg-red-700 transition\"\r\n          *ngIf=\"leagueData != null\"\r\n          (click)=\"showEndLeagueModal = true\"\r\n          s\r\n        >\r\n          End League\r\n        </button>\r\n        <!-- Tournament Stage Button -->\r\n        <button\r\n          class=\"bg-purple-600 text-white px-3 py-2 rounded mb-4 hover:bg-purple-700 transition\"\r\n          *ngIf=\"showTournamentStageButton && leagueData != null\"\r\n          (click)=\"onTournamentStageButtonClick()\"\r\n        >\r\n          {{ tournamentStageButtonText }}\r\n        </button>\r\n        <button\r\n          class=\"bg-indigo-600 text-white px-3 py-2 rounded mb-4 hover:bg-indigo-700 transition\"\r\n          (click)=\"openNoteModal()\"\r\n        >\r\n          Notes\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\"\r\n        *ngIf=\"leagueData\"\r\n      >\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">\r\n            League Description\r\n          </h3>\r\n          <p class=\"font-bold text-gray-300\">{{ leagueData.description }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">League Type</h3>\r\n          <p\r\n            *ngIf=\"leagueData.typeOfLeague === 0\"\r\n            class=\"font-bold text-gray-300\"\r\n          >\r\n            Single\r\n          </p>\r\n          <p\r\n            *ngIf=\"leagueData.typeOfLeague === 1\"\r\n            class=\"font-bold text-gray-300\"\r\n          >\r\n            Multi\r\n          </p>\r\n          <p\r\n            *ngIf=\"leagueData.typeOfLeague === 2\"\r\n            class=\"font-bold text-gray-300\"\r\n          >\r\n            Groups\r\n          </p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Start Date</h3>\r\n          <p class=\"font-bold text-gray-300\">\r\n            {{ leagueData.createdOn | date : \"fullDate\" }}\r\n          </p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">League Name</h3>\r\n          <p class=\"font-bold text-gray-300\">{{ leagueData.name }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8 container mx-auto\">\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">\r\n            Remaining Matches\r\n          </h3>\r\n          <p class=\"text-3xl font-bold text-red-500\">{{ totalMatchesLeft }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Total Matches</h3>\r\n          <p class=\"text-3xl font-bold text-green-500\">{{ totalMatches }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Total Players</h3>\r\n          <p class=\"text-3xl font-bold text-blue-500\">{{ totalPlayers }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- كل البطولات -->\r\n    <div class=\"text-center\">\r\n      <h2\r\n        class=\"mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-4xl lg:text-4xl text-white\"\r\n      >\r\n        All Leagues\r\n      </h2>\r\n\r\n      <div class=\"max-h-[350px] overflow-x-auto\">\r\n        <table class=\"min-w-full divide-y-2 divide-gray-600\">\r\n          <thead class=\"sticky top-0 bg-black bg-opacity-50 backdrop-blur-sm\">\r\n            <tr class=\"*:font-medium *:text-white\">\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Name</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Status</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Type</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League System</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Date</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">Winner</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"divide-y divide-gray-600\">\r\n            <tr\r\n              *ngFor=\"let league of leagues; let i = index\"\r\n              class=\"*:font-bold *:first:font-medium\"\r\n              [ngClass]=\"{\r\n                'bg-gray-900': i % 2 === 0,\r\n                'bg-gray-950': i % 2 !== 0\r\n              }\"\r\n            >\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ league.leagueName }}\r\n              </td>\r\n              <td\r\n                class=\"px-3 py-2 whitespace-nowrap\"\r\n                [class.text-green-500]=\"!league.isFinished\"\r\n                [class.text-red-500]=\"league.isFinished\"\r\n              >\r\n                {{ !league.isFinished ? \"Live Now!!\" : \"Finished\" }}\r\n              </td>\r\n\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{\r\n                  league.leagueType === 0\r\n                    ? \"Single\"\r\n                    : league.leagueType === 1\r\n                    ? \"Multi\"\r\n                    : league.leagueType === 2\r\n                    ? \"Groups\"\r\n                    : \"Unknown\"\r\n                }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{\r\n                  league.systemOfLeague === 0\r\n                    ? \"Points\"\r\n                    : league.systemOfLeague === 1\r\n                    ? \"Classic\"\r\n                    : \"Unknown\"\r\n                }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ league.createdOn | date : \"yyyy/MM/dd\" }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{\r\n                  league.players && league.players.length > 0\r\n                    ? league.players[0].fullName\r\n                    : \"No Winner Yet\"\r\n                }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap\">\r\n                <button\r\n                  (click)=\"openDeleteLeagueModal(league.leagueId)\"\r\n                  class=\"bg-red-600 text-white px-3 py-2 rounded hover:bg-red-700 transition\"\r\n                >\r\n                  Delete League\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Delete League Modal -->\r\n  <div\r\n    *ngIf=\"showDeleteLeagueModal\"\r\n    class=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\r\n  >\r\n    <div\r\n      class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg shadow-lg w-96\"\r\n    >\r\n      <h2 class=\"text-xl font-bold text-white mb-4\">Confirm Delete</h2>\r\n      <p class=\"text-gray-300 mb-6\">\r\n        Are you sure you want to delete league \"{{\r\n          selectedLeagueToDelete?.leagueName\r\n        }}\"?\r\n      </p>\r\n      <div class=\"flex justify-end space-x-4\">\r\n        <button\r\n          (click)=\"closeDeleteLeagueModal()\"\r\n          class=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 transition\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          (click)=\"deleteConfirmedLeague()\"\r\n          class=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Delete Confirmation Modal -->\r\n  <div\r\n    *ngIf=\"showDeleteModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm Delete</h2>\r\n      <p class=\"text-gray-300\">\r\n        Are you sure you want to delete\r\n        <strong>{{ selectedPlayerToDelete?.fullName }}</strong\r\n        >?\r\n      </p>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"showDeleteModal = false\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n          (click)=\"deleteConfirmedPlayer()\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Add Player Modal -->\r\n  <div\r\n    *ngIf=\"showModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Add New Player</h2>\r\n      <input\r\n        type=\"text\"\r\n        [(ngModel)]=\"newPlayerName\"\r\n        class=\"border border-gray-600 p-2 w-full bg-gray-800 text-white rounded placeholder-gray-400\"\r\n        placeholder=\"Enter player name\"\r\n      />\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n          (click)=\"closeModal()\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n          (click)=\"addPlayer()\"\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Start League Modal -->\r\n  <div\r\n    *ngIf=\"showStartLeagueModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg w-96\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Start New League</h2>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Name</label\r\n        >\r\n        <input\r\n          type=\"text\"\r\n          [(ngModel)]=\"newLeague.name\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          placeholder=\"Enter league name\"\r\n        />\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Description</label\r\n        >\r\n        <textarea\r\n          [(ngModel)]=\"newLeague.description\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          placeholder=\"Enter league description\"\r\n          rows=\"3\"\r\n        ></textarea>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Type</label\r\n        >\r\n        <select\r\n          [(ngModel)]=\"newLeague.typeOfLeague\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n        >\r\n          <option [ngValue]=\"0\">Single</option>\r\n          <option [ngValue]=\"1\">Multi</option>\r\n          <option [ngValue]=\"2\">Groups</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >System Of League</label\r\n        >\r\n        <select\r\n          [(ngModel)]=\"newLeague.systemOfLeague\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n        >\r\n          <option [ngValue]=\"0\">Points</option>\r\n          <option [ngValue]=\"1\">Classic</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"closeStartLeagueModal()\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n          (click)=\"startLeague()\"\r\n        >\r\n          Start League\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- End League Confirmation Modal -->\r\n  <div\r\n    *ngIf=\"showEndLeagueModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm End League</h2>\r\n      <p class=\"text-gray-300\">\r\n        Are you sure you want to end the current league? This action cannot be\r\n        undone.\r\n      </p>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"showEndLeagueModal = false\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n          (click)=\"resetTournament(leagueData!.id)\"\r\n        >\r\n          Confirm End\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Notes Modal -->\r\n  <div\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    *ngIf=\"showNoteModal\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-4 rounded-lg\">\r\n      <div>\r\n        <h2 class=\"font-bold text-white text-center\">Add New Note</h2>\r\n        <div>\r\n          <label for=\"Notes\">\r\n            <span class=\"text-sm font-medium text-gray-300\">Notes</span>\r\n            <div class=\"relative m-2 overflow-hidden rounded border-gray-600\">\r\n              <textarea\r\n                id=\"Notes\"\r\n                class=\"w-full resize-none p-3 border border-gray-600 bg-gray-800 text-white placeholder-gray-400\"\r\n                rows=\"4\"\r\n                [(ngModel)]=\"newNote\"\r\n              ></textarea>\r\n              <div class=\"flex items-center justify-end gap-2 p-1.5\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"rounded p-2 font-bold text-white bg-green-600 hover:bg-green-700 transition\"\r\n                  (click)=\"sendNote()\"\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div class=\"p-6\">\r\n        <div *ngFor=\"let note of notes\">\r\n          <div\r\n            class=\"mt-4 flex items-center justify-end\"\r\n            *ngIf=\"note.isDeleted == false\"\r\n          >\r\n            <p class=\"font-bold px-3 text-white\">\r\n              {{ note.content }}\r\n            </p>\r\n            <button\r\n              class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n              (click)=\"toggleDeleteNote(note.id)\"\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n              (click)=\"toggleHideNote(note)\"\r\n              *ngIf=\"note.isHidden == true\"\r\n            >\r\n              Show\r\n            </button>\r\n            <button\r\n              class=\"bg-purple-600 px-4 py-2 text-white rounded hover:bg-purple-700 transition\"\r\n              (click)=\"toggleHideNote(note)\"\r\n              *ngIf=\"note.isHidden == false\"\r\n            >\r\n              Hide\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n        (click)=\"closeNoteModal()\"\r\n      >\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { MatchService } from 'src/app/core/services/match.service';\r\nimport { PlayerService } from './../../core/services/player.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  Player,\r\n  Match,\r\n  StartLeagueDto,\r\n  League,\r\n  AllLeagueRank,\r\n  Note,\r\n  TournamentStage,\r\n  LeagueType,\r\n} from 'src/app/models/interfaces';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LeagueService } from 'src/app/core/services/league.service';\r\nimport { NoteService } from 'src/app/core/services/note.service';\r\nimport {\r\n  AdminDashboardService,\r\n  AdminDashboardData,\r\n} from 'src/app/core/services/admin-dashboard.service';\r\nimport { Subscription, interval } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-players',\r\n  templateUrl: './players.component.html',\r\n  styleUrls: ['./players.component.css'],\r\n})\r\nexport class PlayersComponent implements OnInit, OnDestroy {\r\n  players: Player[] = [];\r\n  selectedPlayer: Player | null = null;\r\n  playerMatches: Match[] = [];\r\n  displayMatches: Match[] = [];\r\n  notes: Note[] = [];\r\n  showModal = false;\r\n  newPlayerName = '';\r\n  isSidebarOpen = false;\r\n  showDeleteModal = false;\r\n  showNoteModal = false;\r\n  showDeleteLeagueModal = false;\r\n  showEndLeagueModal = false;\r\n  loadingMatches: { [matchId: number]: boolean } = {};\r\n  private requestQueue: Array<() => Promise<void>> = [];\r\n  private isProcessingQueue = false;\r\n  showResetModal: boolean = false;\r\n  leagueData: League | null = null;\r\n  showStartLeagueModal: boolean = false;\r\n  newLeague: StartLeagueDto = {\r\n    name: '',\r\n    description: '',\r\n    typeOfLeague: 0,\r\n    systemOfLeague: 0,\r\n  };\r\n  totalMessagesLeft: number = 0;\r\n  totalPlayers: number = 0;\r\n  totalMatches: number = 0;\r\n  totalMatchesLeft: number = 0;\r\n  totalMessages: number = 0;\r\n  leagues: AllLeagueRank[] = [];\r\n  newNote: string = '';\r\n  selectedLeagueToDelete: AllLeagueRank | null = null;\r\n\r\n  // New properties for tournament stage management\r\n  currentMatches: Match[] = [];\r\n  showTournamentStageButton = false;\r\n  tournamentStageButtonText = '';\r\n  tournamentStageButtonAction: (() => void) | null = null;\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private matchService: MatchService,\r\n    private toastr: ToastrService,\r\n    private leagueService: LeagueService,\r\n    private noteService: NoteService,\r\n    private adminDashboardService: AdminDashboardService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // تحميل البيانات الأساسية مع Smart Caching\r\n    this.loadEssentialData();\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  private loadCurrentLeagueFromServer(): void {\r\n    this.leagueService.getAdminCurrentLeague().subscribe({\r\n      next: (data) => {\r\n        this.leagueData = data.league;\r\n        this.updateTournamentStageButton(); // Update button state when league data changes\r\n      },\r\n      error: (err) => {\r\n        this.leagueData = null;\r\n        this.updateTournamentStageButton(); // Update button state when league data changes\r\n      },\r\n    });\r\n  }\r\n\r\n  private loadEssentialData(): void {\r\n    this.adminDashboardService.getEssentialData().subscribe({\r\n      next: (data: AdminDashboardData) => {\r\n        // ✅ عرض جميع البيانات فوراً من الكاش\r\n        this.players = data.players;\r\n        this.currentMatches = data.matches;\r\n        this.leagueData = data.currentLeague;\r\n        this.leagues = data.allLeagues;\r\n        this.notes = data.notes;\r\n\r\n        // ✅ عرض إحصائيات كاملة بما فيها عدد الرسائل\r\n        this.totalPlayers = data.stats.totalPlayers;\r\n        this.totalMatches = data.stats.totalMatches;\r\n        this.totalMatchesLeft = data.stats.totalMatchesLeft;\r\n        this.totalMessagesLeft = data.stats.totalMessagesLeft;\r\n\r\n        // Update tournament stage button\r\n        this.updateTournamentStageButton();\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حدث خطأ أثناء تحميل البيانات');\r\n      },\r\n    });\r\n  }\r\n\r\n  toggleSidebar(): void {\r\n    this.isSidebarOpen = !this.isSidebarOpen;\r\n    this.selectedPlayer = null;\r\n  }\r\n\r\n  selectPlayer(player: Player): void {\r\n    this.selectedPlayer = player;\r\n    this.loadMatches();\r\n  }\r\n\r\n  loadMatches(): void {\r\n    if (!this.selectedPlayer) return;\r\n    this.matchService.getAdminMatches().subscribe((matches) => {\r\n      this.playerMatches = matches\r\n        .filter(\r\n          (m) =>\r\n            m.player1Id === this.selectedPlayer!.playerId ||\r\n            m.player2Id === this.selectedPlayer!.playerId\r\n        )\r\n        .sort((a, b) => {\r\n          const nameA =\r\n            (a.player1Id === this.selectedPlayer!.playerId\r\n              ? a.player2Name\r\n              : a.player1Name\r\n            )?.toLowerCase() ?? '';\r\n          const nameB =\r\n            (b.player1Id === this.selectedPlayer!.playerId\r\n              ? b.player2Name\r\n              : b.player1Name\r\n            )?.toLowerCase() ?? '';\r\n          return nameA.localeCompare(nameB);\r\n        });\r\n      this.displayMatches = this.playerMatches.map((match) => {\r\n        if (match.player2Id === this.selectedPlayer!.playerId) {\r\n          return {\r\n            ...match,\r\n            player1Name: match.player2Name,\r\n            player2Name: match.player1Name,\r\n            score1: match.score2,\r\n            score2: match.score1,\r\n            player1Id: match.player2Id,\r\n            player2Id: match.player1Id,\r\n          };\r\n        }\r\n        return { ...match };\r\n      });\r\n      this.playerMatches.forEach((match) => {\r\n        this.loadingMatches[match.matchId] = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  private addToQueue(request: () => Promise<void>): void {\r\n    this.requestQueue.push(request);\r\n    this.processQueue();\r\n  }\r\n\r\n  private async processQueue(): Promise<void> {\r\n    if (this.isProcessingQueue || this.requestQueue.length === 0) return;\r\n\r\n    this.isProcessingQueue = true;\r\n    const request = this.requestQueue.shift();\r\n\r\n    if (request) {\r\n      try {\r\n        await request();\r\n      } catch (error) {}\r\n    }\r\n\r\n    this.isProcessingQueue = false;\r\n    this.processQueue();\r\n  }\r\n\r\n  updateMatch(matchId: number, winnerId: number | null) {\r\n    this.loadingMatches[matchId] = true;\r\n\r\n    this.addToQueue(\r\n      () =>\r\n        new Promise<void>((resolve, reject) => {\r\n          this.matchService.updateMatch(matchId, winnerId).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                this.toastr.success(response.message);\r\n                // Invalidate cache and reload essential data\r\n                this.adminDashboardService.invalidateCache('essential');\r\n                this.loadEssentialData();\r\n                this.loadMatches();\r\n              } else {\r\n                this.toastr.error(response.message);\r\n              }\r\n              this.loadingMatches[matchId] = false;\r\n              resolve();\r\n            },\r\n            error: (error) => {\r\n              this.toastr.error(error.error.message);\r\n              this.loadingMatches[matchId] = false;\r\n              reject(error);\r\n            },\r\n          });\r\n        })\r\n    );\r\n  }\r\n\r\n  resetMatch(matchId: number) {\r\n    this.loadingMatches[matchId] = true;\r\n\r\n    this.addToQueue(\r\n      () =>\r\n        new Promise<void>((resolve, reject) => {\r\n          this.matchService.resetMatch(matchId).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                this.toastr.success(response.message);\r\n                this.loadMatches();\r\n              } else {\r\n                this.toastr.error(response.message, 'Error');\r\n              }\r\n              this.loadingMatches[matchId] = false;\r\n              resolve();\r\n            },\r\n            error: (error) => {\r\n              this.toastr.error(error.error.message);\r\n              this.loadingMatches[matchId] = false;\r\n              reject(error);\r\n            },\r\n          });\r\n        })\r\n    );\r\n  }\r\n\r\n  deletePlayer(playerId: number, event: Event): void {\r\n    event.stopPropagation();\r\n    this.playerService.deletePlayer(playerId).subscribe(() => {\r\n      this.toastr.warning('Player deleted!', 'Deleted');\r\n      this.loadMatches();\r\n      // Invalidate cache and reload essential data\r\n      this.adminDashboardService.invalidateCache('essential');\r\n      this.loadEssentialData();\r\n      this.updateTournamentStageButton(); // Update button state after deleting player\r\n      if (this.selectedPlayer?.playerId === playerId) {\r\n        this.selectedPlayer = null;\r\n        this.playerMatches = [];\r\n        this.displayMatches = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal(): void {\r\n    this.showModal = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.showModal = false;\r\n    this.newPlayerName = '';\r\n  }\r\n\r\n  addPlayer(): void {\r\n    if (!this.newPlayerName.trim()) return;\r\n    this.playerService.addPlayer(this.newPlayerName).subscribe((response) => {\r\n      if (response.success) {\r\n        this.toastr.success(response.message);\r\n        // Invalidate cache and reload essential data\r\n        this.adminDashboardService.invalidateCache('essential');\r\n        this.loadEssentialData();\r\n        this.loadMatches();\r\n        this.closeModal();\r\n      } else this.toastr.warning(response.message);\r\n    });\r\n  }\r\n\r\n  selectedPlayerToDelete: { playerId: number; fullName: string } | null = null;\r\n\r\n  confirmDelete(player: { playerId: number; fullName: string }, event: Event) {\r\n    event.stopPropagation();\r\n    this.selectedPlayerToDelete = player;\r\n    this.showDeleteModal = true;\r\n  }\r\n\r\n  deleteConfirmedPlayer() {\r\n    if (this.selectedPlayerToDelete) {\r\n      this.playerService\r\n        .deletePlayer(this.selectedPlayerToDelete.playerId)\r\n        .subscribe((response) => {\r\n          if (response.success) {\r\n            this.toastr.success(response.message);\r\n            // Invalidate cache and reload essential data\r\n            this.adminDashboardService.invalidateCache('essential');\r\n            this.loadEssentialData();\r\n            this.loadMatches();\r\n          } else {\r\n            this.toastr.error(response.message, 'Error');\r\n          }\r\n        });\r\n\r\n      this.showDeleteModal = false;\r\n      this.selectedPlayerToDelete = null;\r\n    }\r\n  }\r\n\r\n  resetTournament(id: number): void {\r\n    this.leagueService.resetLeague(id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.showResetModal = false;\r\n          this.loadMatches();\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n          this.showEndLeagueModal = false;\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  openStartLeagueModal(): void {\r\n    this.showStartLeagueModal = true;\r\n    this.newLeague = {\r\n      name: '',\r\n      description: '',\r\n      typeOfLeague: 0,\r\n      systemOfLeague: 0,\r\n    };\r\n  }\r\n\r\n  closeStartLeagueModal(): void {\r\n    this.showStartLeagueModal = false;\r\n  }\r\n\r\n  startLeague(): void {\r\n    if (!this.newLeague.name.trim()) {\r\n      this.toastr.error('League name is required', 'Error');\r\n      return;\r\n    }\r\n\r\n    this.leagueService.startLeague(this.newLeague).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.closeStartLeagueModal();\r\n          this.loadMatches();\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message, 'Error');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n        // console.error(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  DeleteLeague(id: number): void {\r\n    this.leagueService.DeleteLeague(id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.showDeleteLeagueModal = false;\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  openDeleteLeagueModal(leagueId: number): void {\r\n    this.selectedLeagueToDelete =\r\n      this.leagues.find((l) => l.leagueId === leagueId) || null;\r\n    this.showDeleteLeagueModal = true;\r\n  }\r\n\r\n  closeDeleteLeagueModal(): void {\r\n    this.showDeleteLeagueModal = false;\r\n    this.selectedLeagueToDelete = null;\r\n  }\r\n\r\n  deleteConfirmedLeague(): void {\r\n    if (this.selectedLeagueToDelete) {\r\n      this.DeleteLeague(this.selectedLeagueToDelete.leagueId);\r\n      this.leagues = this.leagues.filter(\r\n        (l) => l.leagueId !== this.selectedLeagueToDelete?.leagueId\r\n      );\r\n      this.closeDeleteLeagueModal();\r\n    }\r\n  }\r\n\r\n  sendNote(): void {\r\n    if (!this.newNote.trim()) return;\r\n\r\n    this.noteService.sendNote(this.newNote).subscribe({\r\n      next: (res) => {\r\n        this.toastr.success(res.message);\r\n        this.newNote = '';\r\n        // Invalidate cache and reload all data\r\n        this.adminDashboardService.invalidateCache('essential');\r\n        this.loadEssentialData();\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتبعت الملاحظة'),\r\n    });\r\n  }\r\n\r\n  toggleHideNote(note: any): void {\r\n    this.noteService.toggleMarHide(note.id, !note.isHidden).subscribe({\r\n      next: (res) => {\r\n        this.toastr.success(res.message);\r\n        this.loadEssentialData(); // ✅ محل getNotes()\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتغير الظهور'),\r\n    });\r\n  }\r\n\r\n  toggleDeleteNote(noteId: number): void {\r\n    this.noteService.DeleteNote(noteId, false).subscribe({\r\n      next: (res) => {\r\n        this.toastr.warning(res.message);\r\n        this.loadEssentialData(); // ✅ محل getNotes()\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتحذف '),\r\n    });\r\n  }\r\n\r\n  openNoteModal(): void {\r\n    this.showNoteModal = true;\r\n  }\r\n  closeNoteModal(): void {\r\n    this.showNoteModal = false;\r\n  }\r\n\r\n  // New method to load current matches for tournament stage logic\r\n  private loadCurrentMatches(): void {\r\n    this.matchService.getAdminMatches().subscribe({\r\n      next: (matches) => {\r\n        this.currentMatches = matches;\r\n        this.updateTournamentStageButton();\r\n      },\r\n      error: (err) => {\r\n        this.currentMatches = [];\r\n        this.updateTournamentStageButton(); // Update button state even on error\r\n      },\r\n    });\r\n  }\r\n\r\n  // Method to determine tournament stage and update button\r\n  private updateTournamentStageButton(): void {\r\n    // Only show button for Groups type leagues\r\n    if (\r\n      !this.leagueData ||\r\n      this.leagueData.typeOfLeague !== LeagueType.Groups\r\n    ) {\r\n      this.showTournamentStageButton = false;\r\n      return;\r\n    }\r\n\r\n    // Check if there are players but no matches (need to start group stage)\r\n    if (this.totalPlayers > 0 && this.currentMatches.length === 0) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'Start Group Stage';\r\n      this.tournamentStageButtonAction = () => this.startGroupStage();\r\n      return;\r\n    }\r\n\r\n    // Check current stage based on matches\r\n    const groupMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.GroupStage ||\r\n        m.tournamentStage === 'GroupStage'\r\n    );\r\n    const quarterMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.QuarterFinals ||\r\n        m.tournamentStage === 'QuarterFinals'\r\n    );\r\n    const semiMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.SemiFinals ||\r\n        m.tournamentStage === 'SemiFinals'\r\n    );\r\n    const finalMatches = this.currentMatches.filter(\r\n      (m) => m.stage === TournamentStage.Final || m.tournamentStage === 'Final'\r\n    );\r\n\r\n    // Check if all matches in a stage are completed\r\n    const allGroupMatchesCompleted =\r\n      groupMatches.length > 0 &&\r\n      groupMatches.every((match) => match.isCompleted);\r\n    const allQuarterMatchesCompleted =\r\n      quarterMatches.length > 0 &&\r\n      quarterMatches.every((match) => match.isCompleted);\r\n    const allSemiMatchesCompleted =\r\n      semiMatches.length > 0 && semiMatches.every((match) => match.isCompleted);\r\n\r\n    // Show quarter button when group stage is completed and no quarter matches exist\r\n    if (\r\n      groupMatches.length > 0 &&\r\n      allGroupMatchesCompleted &&\r\n      quarterMatches.length === 0\r\n    ) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'Start Quarter';\r\n      this.tournamentStageButtonAction = () => this.startQuarterStage();\r\n      return;\r\n    }\r\n\r\n    // Show semi button when quarter stage is completed and no semi matches exist\r\n    if (\r\n      quarterMatches.length > 0 &&\r\n      allQuarterMatchesCompleted &&\r\n      semiMatches.length === 0\r\n    ) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'Start Semi Final';\r\n      this.tournamentStageButtonAction = () => this.startSemiFinalStage();\r\n      return;\r\n    }\r\n\r\n    // Show final button when semi stage is completed and no final matches exist\r\n    if (\r\n      semiMatches.length > 0 &&\r\n      allSemiMatchesCompleted &&\r\n      finalMatches.length === 0\r\n    ) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'Start Final';\r\n      this.tournamentStageButtonAction = () => this.startFinalStage();\r\n      return;\r\n    }\r\n\r\n    if (finalMatches.length > 0) {\r\n      // Final stage is active, hide button\r\n      this.showTournamentStageButton = false;\r\n      return;\r\n    }\r\n\r\n    // Default: hide button\r\n    this.showTournamentStageButton = false;\r\n  }\r\n\r\n  // Tournament stage action methods\r\n  startGroupStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.createGroupsAndMatches(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  startQuarterStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startKnockoutStage(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n        // console.error(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  startSemiFinalStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startSemiFinals(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  startFinalStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startFinal(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  // Method to handle tournament stage button click\r\n  onTournamentStageButtonClick(): void {\r\n    if (this.tournamentStageButtonAction) {\r\n      this.tournamentStageButtonAction();\r\n    }\r\n  }\r\n}\r\n","<div\r\n  class=\"container mx-auto p-4 flex flex-col sm:flex-row overflow-hidden h-screen\"\r\n>\r\n  <!-- Chats List -->\r\n  <div\r\n    class=\"w-full sm:w-1/3 border-r border-gray-600 sm:block\"\r\n    [ngClass]=\"{ hidden: selectedChat }\"\r\n  >\r\n    <div class=\"flex items-center justify-between mb-6\">\r\n      <h2 class=\"text-2xl font-bold text-white\">📥 Inbox</h2>\r\n    </div>\r\n\r\n    <!-- No Chats -->\r\n    <div *ngIf=\"playerChats.length === 0\" class=\"text-center text-gray-300\">\r\n      No messages here 📭\r\n    </div>\r\n\r\n    <!-- Chats List -->\r\n    <div\r\n      *ngIf=\"playerChats.length > 0\"\r\n      class=\"space-y-2 overflow-y-auto max-h-[calc(100vh-120px)]\"\r\n    >\r\n      <div\r\n        *ngFor=\"let chat of playerChats; trackBy: trackByPlayerId\"\r\n        class=\"p-4 backdrop-blur-sm border border-gray-600 rounded-lg hover:bg-gray-700 cursor-pointer flex items-center justify-between\"\r\n        (click)=\"openChat(chat.senderId)\"\r\n      >\r\n        <div>\r\n          <p class=\"font-bold text-white\">{{ chat.senderFullName }}</p>\r\n          <p class=\"text-sm text-gray-300 truncate\">{{ chat.lastMessage }}</p>\r\n        </div>\r\n        <span\r\n          *ngIf=\"chat.unreadCount > 0\"\r\n          class=\"bg-green-600 text-white text-xs font-bold rounded-full px-2 py-1\"\r\n        >\r\n          {{ chat.unreadCount }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Chat View -->\r\n  <div\r\n    class=\"w-full sm:w-2/3 flex flex-col h-full relative\"\r\n    [ngClass]=\"{ block: selectedChat, 'hidden sm:flex': !selectedChat }\"\r\n  >\r\n    <div *ngIf=\"selectedChat; else noChatSelected\" class=\"flex flex-col h-full\">\r\n      <!-- Chat Header - Fixed -->\r\n      <div\r\n        class=\"fixed left-0 right-0 z-40 p-2 backdrop-blur-sm border-b border-gray-600 flex items-center justify-between bg-black bg-opacity-90\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n        [style.top.px]=\"navbarHeight\"\r\n      >\r\n        <div class=\"flex items-center\">\r\n          <button\r\n            (click)=\"closeChat()\"\r\n            class=\"mr-4 text-gray-300 hover:text-white transition\"\r\n          >\r\n            <i class=\"fa-solid fa-arrow-left\" style=\"color: #ffffff\"></i>\r\n          </button>\r\n          <div>\r\n            <p class=\"font-bold text-white text-sm p-0\">\r\n              {{ selectedChat.senderFullName }}\r\n            </p>\r\n            <p class=\"text-xs text-gray-400 p-0\">\r\n              {{ selectedChat.senderPhoneNumber }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Messages - Scrollable Area with padding for fixed header and footer -->\r\n      <div\r\n        #messagesContainer\r\n        class=\"flex-1 p-4 overflow-y-auto backdrop-blur-sm\"\r\n        [style.margin-top.px]=\"navbarHeight + 80\"\r\n        style=\"margin-bottom: 80px\"\r\n      >\r\n        <div\r\n          *ngFor=\"\r\n            let message of selectedChat.messages;\r\n            trackBy: trackByMessageId\r\n          \"\r\n          class=\"mb-4\"\r\n          [ngClass]=\"{\r\n            'text-right': !message.isFromAdmin,\r\n            'text-left': message.isFromAdmin\r\n          }\"\r\n        >\r\n          <div\r\n            class=\"inline-block p-3 rounded-lg max-w-xs\"\r\n            [ngClass]=\"{\r\n              'bg-green-700': !message.isFromAdmin,\r\n              'bg-gray-700 ': message.isFromAdmin\r\n            }\"\r\n          >\r\n            <p class=\"text-white\">{{ message.content }}</p>\r\n            <p class=\"text-xs mt-1 text-gray-300\">\r\n              {{ message.sentAt | date : \"MMM d, y, hh:mm a\" }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Reply Input - Fixed -->\r\n      <div\r\n        class=\"fixed bottom-0 left-0 right-0 z-50 p-4 bg-black bg-opacity-90 backdrop-blur-sm border-t border-gray-600\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n      >\r\n        <form (ngSubmit)=\"sendReply()\" class=\"flex items-center gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"replyMessages[selectedChat.messages[0].id]\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n            (ngModelChange)=\"\r\n              replyMessages[selectedChat.messages[0].id] = $event\r\n            \"\r\n            placeholder=\"Write your reply...\"\r\n            class=\"flex-1 p-2 border border-gray-600 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-600 placeholder-gray-400\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 transition disabled:bg-gray-600\"\r\n            [disabled]=\"!replyMessages[selectedChat.messages[0].id]\"\r\n          >\r\n            Reply\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Placeholder when no chat is selected -->\r\n    <ng-template #noChatSelected>\r\n      <div class=\"w-full flex items-center justify-center text-gray-300\">\r\n        Select a chat to view messages 📩\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { MessageService } from 'src/app/core/services/message.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Message } from 'src/app/models/interfaces';\r\nimport { AdminDashboardService } from 'src/app/core/services/admin-dashboard.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\ninterface PlayerChat {\r\n  senderId: string;\r\n  senderFullName: string;\r\n  senderPhoneNumber: string;\r\n  lastMessage: string;\r\n  lastMessageDate: string;\r\n  unreadCount: number;\r\n  messages: Message[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-inbox',\r\n  templateUrl: './inbox.component.html',\r\n  styleUrls: ['./inbox.component.css'],\r\n})\r\nexport class InboxComponent implements OnInit, AfterViewChecked, OnDestroy {\r\n  playerChats: PlayerChat[] = [];\r\n  selectedPlayerId: string | null = null;\r\n  selectedChat: PlayerChat | null = null;\r\n  replyMessages: { [messageId: number]: string } = {};\r\n  private updateStatusSubscription?: Subscription;\r\n  private refreshSubscription?: Subscription;\r\n  navbarHeight = 60; // default navbar height\r\n\r\n  @ViewChild('messagesContainer')\r\n  messagesContainer!: ElementRef<HTMLDivElement>;\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private toastr: ToastrService,\r\n    private cdr: ChangeDetectorRef,\r\n    private adminDashboardService: AdminDashboardService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadAdminMessages();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.updateStatusSubscription) {\r\n      this.updateStatusSubscription.unsubscribe();\r\n    }\r\n    if (this.refreshSubscription) {\r\n      this.refreshSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n  private loadAdminMessages(): void {\r\n    // Always load fresh data from server for immediate updates\r\n    this.loadFromServer();\r\n  }\r\n\r\n  private loadFromCache(): void {\r\n    // تم إلغاء الكاش للادمن، سيتم التحميل دائماً من السيرفر\r\n    this.loadFromServer();\r\n  }\r\n\r\n  private loadFromServer(): void {\r\n    this.adminDashboardService.getSecondaryData('messages').subscribe({\r\n      next: (messages) => {\r\n        if (messages && messages.length > 0) {\r\n          const groupedMessages = this.groupMessagesBySender(messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n  \r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  // Add refresh method for immediate updates\r\n  refreshMessages(): void {\r\n    this.messageService.getAdminMessages().subscribe({\r\n      next: (response) => {\r\n        if (response && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n          \r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.selectedChat && this.messagesContainer) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  loadMessages(): void {\r\n    this.messageService.getMessages().subscribe({\r\n      next: (response) => {\r\n        if (response && response.messages) {\r\n          this.processMessages(response.messages);\r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل الآن');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حصل خطأ أثناء جلب الرسائل');\r\n      },\r\n    });\r\n  }\r\n\r\n  private processMessages(messages: Message[]): void {\r\n    const groupedMessages = this.groupMessagesBySender(messages);\r\n    // ترتيب حسب الأحدث (آخر رسالة)\r\n    this.playerChats = groupedMessages.sort(\r\n      (a, b) =>\r\n        new Date(b.lastMessageDate).getTime() -\r\n        new Date(a.lastMessageDate).getTime()\r\n    );\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  groupMessagesBySender(messages: Message[]): PlayerChat[] {\r\n    const chatMap: { [senderId: string]: PlayerChat } = {};\r\n    messages\r\n      .filter((msg) => !msg.isDeleted)\r\n      .forEach((msg) => {\r\n        const playerId = msg.isFromAdmin ? msg.senderId : msg.senderId;\r\n        if (!chatMap[playerId]) {\r\n          chatMap[playerId] = {\r\n            senderId: playerId,\r\n            senderFullName: msg.senderFullName,\r\n            senderPhoneNumber: msg.senderPhoneNumber,\r\n            lastMessage: '',\r\n            lastMessageDate: '',\r\n            unreadCount: 0,\r\n            messages: [],\r\n          };\r\n        }\r\n        chatMap[playerId].messages.push(msg);\r\n        if (!msg.isFromAdmin && !msg.isRead) {\r\n          chatMap[playerId].unreadCount++;\r\n        }\r\n      });\r\n\r\n    return Object.values(chatMap).map((chat) => {\r\n      // ترتيب الرسائل من الأقدم للأحدث\r\n      chat.messages = chat.messages.sort(\r\n        (a, b) => new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n      );\r\n      // آخر رسالة\r\n      const lastMsg = chat.messages[chat.messages.length - 1];\r\n      chat.lastMessage = lastMsg?.content ?? '';\r\n      chat.lastMessageDate = lastMsg?.sentAt ?? '';\r\n      return chat;\r\n    });\r\n  }\r\n\r\n  openChat(playerId: string): void {\r\n    this.selectedPlayerId = playerId;\r\n    this.selectedChat =\r\n      this.playerChats.find((chat) => chat.senderId === playerId) || null;\r\n    if (this.selectedChat) {\r\n      this.selectedChat.messages\r\n        .filter((msg) => !msg.isRead && !msg.isFromAdmin)\r\n        .forEach((msg) => {\r\n          this.messageService.toggleMarkMessage(msg.id, true).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                msg.isRead = true;\r\n                this.selectedChat!.unreadCount =\r\n                  this.selectedChat!.messages.filter(\r\n                    (m) => !m.isRead && !m.isFromAdmin\r\n                  ).length;\r\n                this.cdr.detectChanges();\r\n              }\r\n            },\r\n            error: (err) => {\r\n              this.toastr.error('حصل خطأ أثناء تحديث حالة الرسالة');\r\n            },\r\n          });\r\n        });\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  closeChat(): void {\r\n    this.selectedPlayerId = null;\r\n    this.selectedChat = null;\r\n    this.replyMessages = {};\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  sendReply(): void {\r\n    if (!this.selectedChat) {\r\n      this.toastr.warning('الرجاء اختيار محادثة');\r\n      return;\r\n    }\r\n    const replyContent =\r\n      this.replyMessages[this.selectedChat.messages[0].id]?.trim();\r\n    if (!replyContent) {\r\n      this.toastr.warning('الرجاء كتابة رد');\r\n      return;\r\n    }\r\n\r\n    this.messageService\r\n      .sendAdminReply(this.selectedChat.senderId, replyContent)\r\n      .subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم إرسال الرد');\r\n            this.replyMessages[this.selectedChat!.messages[0].id] = '';\r\n\r\n            const newMessage: Message = {\r\n              id: Math.random(),\r\n              senderId: this.selectedChat!.senderId,\r\n              senderFullName: 'Admin',\r\n              senderPhoneNumber: '',\r\n              content: replyContent,\r\n              isRead: true,\r\n              isDeleted: false,\r\n              sentAt: new Date().toISOString(),\r\n              isFromAdmin: true,\r\n            };\r\n\r\n            // تحديث الرسائل في المحادثة المحددة\r\n            this.selectedChat!.messages.push(newMessage);\r\n            this.selectedChat!.messages.sort(\r\n              (a, b) =>\r\n                new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n            );\r\n\r\n            // تحديث آخر رسالة في قائمة المحادثات\r\n            this.selectedChat!.lastMessage = replyContent;\r\n            this.selectedChat!.lastMessageDate = newMessage.sentAt;\r\n\r\n            // إعادة ترتيب قائمة المحادثات حسب الأحدث\r\n            this.playerChats.sort(\r\n              (a, b) =>\r\n                new Date(b.lastMessageDate).getTime() -\r\n                new Date(a.lastMessageDate).getTime()\r\n            );\r\n\r\n            // تحديث المحادثة المحددة بعد إعادة الترتيب\r\n            this.selectedChat =\r\n              this.playerChats.find(\r\n                (chat) => chat.senderId === this.selectedPlayerId\r\n              ) || null;\r\n\r\n            this.cdr.detectChanges();\r\n          } else {\r\n            this.toastr.error(response.message || 'فشل إرسال الرد');\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.toastr.error('حصل خطأ أثناء إرسال الرد');\r\n        },\r\n      });\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    if (this.messagesContainer) {\r\n      const container = this.messagesContainer.nativeElement;\r\n      container.scrollTop = container.scrollHeight;\r\n    }\r\n  }\r\n\r\n  trackByPlayerId(index: number, chat: PlayerChat): string {\r\n    return chat.senderId;\r\n  }\r\n\r\n  trackByMessageId(index: number, message: Message): number {\r\n    return message.id;\r\n  }\r\n}\r\n","<!-- Friendlies Dashboard Component -->\r\n\r\n<div class=\"block sm:flex transition-all duration-600\">\r\n  <!-- Sidebar -->\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white transition-all duration-600\"\r\n    [ngClass]=\"{\r\n      'w-64 p-4 sm:min-h-screen': isSidebarOpen,\r\n      'w-0 p-0': !isSidebarOpen\r\n    }\"\r\n  >\r\n    <h2\r\n      class=\"text-lg font-bold mb-4 flex justify-between overflow-hidden text-white\"\r\n    >\r\n      Friendly Players\r\n      <button (click)=\"toggleSidebar()\" class=\"text-gray-300 text-3xl\">\r\n        ×\r\n      </button>\r\n    </h2>\r\n    <ul *ngIf=\"isSidebarOpen\">\r\n      <li\r\n        *ngFor=\"let player of players\"\r\n        class=\"flex items-center justify-between p-2 cursor-pointer rounded-md hover:bg-gray-700\"\r\n        [class.bg-blue-600]=\"selectedPlayer?.playerId === player.playerId\"\r\n        (click)=\"selectPlayer(player)\"\r\n      >\r\n        <span\r\n          class=\"text-white cursor-pointer hover:text-blue-300\"\r\n          (click)=\"openRecordMatchModal()\"\r\n          >{{ player.fullName }}</span\r\n        >\r\n        <button\r\n          (click)=\"confirmDelete(player, $event)\"\r\n          class=\"bg-red-600 px-2 py-1 text-sm rounded text-white hover:bg-red-700 transition\"\r\n        >\r\n          X\r\n        </button>\r\n      </li>\r\n    </ul>\r\n    <button\r\n      *ngIf=\"isSidebarOpen\"\r\n      class=\"mt-4 w-full bg-green-600 p-2 rounded text-white hover:bg-green-700 transition\"\r\n      (click)=\"openModal()\"\r\n    >\r\n      Add Player\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Main Content -->\r\n  <div\r\n    class=\"sm:flex-1 sm:p-2 transition-all duration-600 sm:container sm:mx-auto\"\r\n  >\r\n    <div *ngIf=\"selectedPlayer\" class=\"sm:w-4/6 mx-auto\">\r\n      <h2 class=\"text-2xl font-bold mb-4 text-center text-white\">\r\n        Friendly Matches for {{ selectedPlayer.fullName }}\r\n      </h2>\r\n    </div>\r\n    <hr class=\"my-3 border-gray-600\" />\r\n\r\n    <!-- القائمة الأولية -->\r\n    <div>\r\n      <div class=\"flex justify-evenly pt-5\">\r\n        <button\r\n          (click)=\"toggleSidebar()\"\r\n          class=\"bg-blue-600 text-white px-3 py-2 rounded mb-4 hover:bg-blue-700 transition\"\r\n        >\r\n          ☰ Players\r\n        </button>\r\n\r\n        <button\r\n          routerLink=\"/admin/friendly-inbox\"\r\n          class=\"bg-purple-600 hover:bg-purple-700 text-white mb-4 px-3 py-2 rounded transition-all relative\"\r\n        >\r\n          📬 Friendly Inbox\r\n          <div\r\n            class=\"absolute -top-2 -right-2 w-[30px] h-[30px] rounded-full bg-green-600 flex justify-center items-center\"\r\n            *ngIf=\"totalUnreadFriendlyMessages > 0\"\r\n          >\r\n            <h4 class=\"text-white font-bold\">\r\n              {{ totalUnreadFriendlyMessages }}\r\n            </h4>\r\n          </div>\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"text-center mb-8\">\r\n        <h2\r\n          class=\"mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-4xl lg:text-4xl text-white\"\r\n        >\r\n          Quick Actions\r\n        </h2>\r\n\r\n        <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4\">\r\n          <button\r\n            class=\"bg-teal-600 text-white p-4 rounded-lg hover:bg-teal-700 transition-all\"\r\n            (click)=\"openRecordMatchModal()\"\r\n            [disabled]=\"players.length === 0\"\r\n          >\r\n            <h3 class=\"text-lg font-bold\">Record Match</h3>\r\n            <p class=\"text-sm\">Record a new friendly match</p>\r\n          </button>\r\n\r\n          <button\r\n            class=\"bg-green-600 text-white p-4 rounded-lg hover:bg-green-700 transition-all\"\r\n            (click)=\"openModal()\"\r\n          >\r\n            <h3 class=\"text-lg font-bold\">Add New Player</h3>\r\n            <p class=\"text-sm\">Register a new friendly player</p>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- All Matches Section -->\r\n    <div class=\"mt-8\">\r\n      <!-- Filters Section -->\r\n      <div class=\"mb-6 p-2 bg-gray-800 rounded-lg\">\r\n        <div class=\"mb-4\">\r\n          <h4 class=\"text-lg font-semibold text-white\">Filter Matches</h4>\r\n        </div>\r\n        <div class=\"grid grid-cols-2 md:grid-cols-2 gap-4\">\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n              >Date Range</label\r\n            >\r\n            <select\r\n              [(ngModel)]=\"filterForm.dateFilter\"\r\n              (ngModelChange)=\"onFilterChange()\"\r\n              class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n            >\r\n              <option [ngValue]=\"DateFilter.AllTime\">All Time</option>\r\n              <option [ngValue]=\"DateFilter.Today\">Today</option>\r\n              <option [ngValue]=\"DateFilter.Last3Days\">Last 3 Days</option>\r\n              <option [ngValue]=\"DateFilter.LastWeek\">Last Week</option>\r\n              <option [ngValue]=\"DateFilter.LastMonth\">Last Month</option>\r\n            </select>\r\n          </div>\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n              >Player</label\r\n            >\r\n            <select\r\n              [(ngModel)]=\"filterForm.playerId\"\r\n              (ngModelChange)=\"onFilterChange()\"\r\n              class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n            >\r\n              <option [ngValue]=\"0\">All Players</option>\r\n              <option\r\n                *ngFor=\"let player of getAllActivePlayers()\"\r\n                [ngValue]=\"player.playerId\"\r\n              >\r\n                {{ player.fullName }}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex justify-center mt-4\">\r\n          <button\r\n            class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n            (click)=\"clearFilters()\"\r\n          >\r\n            Clear Filters\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"overflow-x-auto\">\r\n        <table class=\"w-full text-white\">\r\n          <thead class=\"text-center\">\r\n            <tr class=\"border-b border-gray-600 text-center\">\r\n              <th class=\"p-3\">Date</th>\r\n              <th class=\"p-3\">Player 1</th>\r\n              <th class=\"p-3\">Score</th>\r\n              <th class=\"p-3\">Player 2</th>\r\n              <th class=\"p-3\">Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr\r\n              *ngFor=\"let match of getPaginatedMatches()\"\r\n              class=\"border-b border-gray-700 hover:bg-gray-800\"\r\n            >\r\n              <td class=\"p-3\">\r\n                {{ match.playedOn | date : \"shortDate\" }}\r\n              </td>\r\n              <td class=\"p-3\">\r\n                {{ match.player1Name || getPlayerName(match.player1Id) }}\r\n              </td>\r\n              <td class=\"p-3 text-center\">\r\n                <span class=\"font-bold text-lg\">\r\n                  {{ match.player1Score }} - {{ match.player2Score }}\r\n                </span>\r\n              </td>\r\n              <td class=\"p-3\">\r\n                {{ match.player2Name || getPlayerName(match.player2Id) }}\r\n              </td>\r\n              <td class=\"p-3 text-center\">\r\n                <div class=\"flex justify-center space-x-2\">\r\n                  <button\r\n                    class=\"bg-blue-600 px-3 py-1 text-white rounded hover:bg-blue-700 transition text-sm\"\r\n                    (click)=\"editMatch(match)\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    class=\"bg-red-600 px-3 py-1 text-white rounded hover:bg-red-700 transition text-sm\"\r\n                    (click)=\"deleteMatchFromList(match.matchId)\"\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <!-- Pagination -->\r\n      <div *ngIf=\"totalPages > 1\" class=\"flex justify-center mt-6\">\r\n        <div class=\"flex space-x-2\">\r\n          <button\r\n            class=\"bg-gray-600 px-3 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n            [disabled]=\"currentPage === 1\"\r\n            (click)=\"changePage(currentPage - 1)\"\r\n          >\r\n            Previous\r\n          </button>\r\n\r\n          <span\r\n            *ngFor=\"let page of [].constructor(totalPages); let i = index\"\r\n            class=\"flex\"\r\n          >\r\n            <button\r\n              class=\"px-3 py-2 text-white rounded transition\"\r\n              [class.bg-blue-600]=\"currentPage === i + 1\"\r\n              [class.bg-gray-600]=\"currentPage !== i + 1\"\r\n              [class.hover:bg-blue-700]=\"currentPage === i + 1\"\r\n              [class.hover:bg-gray-700]=\"currentPage !== i + 1\"\r\n              (click)=\"changePage(i + 1)\"\r\n            >\r\n              {{ i + 1 }}\r\n            </button>\r\n          </span>\r\n\r\n          <button\r\n            class=\"bg-gray-600 px-3 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n            [disabled]=\"currentPage === totalPages\"\r\n            (click)=\"changePage(currentPage + 1)\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"text-center mt-4 text-gray-300\">\r\n        Showing {{ (currentPage - 1) * itemsPerPage + 1 }} -\r\n        {{ Math.min(currentPage * itemsPerPage, allMatches.length) }} of\r\n        {{ allMatches.length }} matches\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Quick Actions -->\r\n  </div>\r\n\r\n  <!-- Delete Confirmation Modal -->\r\n  <div\r\n    *ngIf=\"showDeleteModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm Delete</h2>\r\n      <p class=\"text-gray-300\">\r\n        Are you sure you want to delete\r\n        <strong>{{ selectedPlayerToDelete?.fullName }}</strong\r\n        >?\r\n      </p>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"showDeleteModal = false\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n          (click)=\"deleteConfirmedPlayer()\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Add Player Modal -->\r\n  <div\r\n    *ngIf=\"showModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Add New Friendly Player</h2>\r\n      <input\r\n        type=\"text\"\r\n        [(ngModel)]=\"newPlayerName\"\r\n        class=\"border border-gray-600 p-2 w-full bg-gray-800 text-white rounded placeholder-gray-400\"\r\n        placeholder=\"Enter player name\"\r\n      />\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n          (click)=\"closeModal()\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n          (click)=\"addPlayer()\"\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Record Match Modal -->\r\n  <div\r\n    *ngIf=\"showRecordMatchModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div\r\n      class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg w-96 max-h-[90vh] overflow-y-auto\"\r\n    >\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">\r\n        {{ selectedPlayerForMatch ? \"Edit Match\" : \"Record New Match\" }}\r\n      </h2>\r\n\r\n      <!-- Player selection for new match -->\r\n      <div *ngIf=\"!selectedPlayerForMatch\" class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >Player 1</label\r\n        >\r\n        <select\r\n          [(ngModel)]=\"matchForm.player1Id\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n        >\r\n          <option [ngValue]=\"0\">Select Player 1...</option>\r\n          <option\r\n            *ngFor=\"let player of getAllActivePlayers()\"\r\n            [ngValue]=\"player.playerId\"\r\n          >\r\n            {{ player.fullName }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n\r\n      <div *ngIf=\"!selectedPlayerForMatch\" class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >Player 2</label\r\n        >\r\n        <select\r\n          [(ngModel)]=\"matchForm.player2Id\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n        >\r\n          <option [ngValue]=\"0\">Select Player 2...</option>\r\n          <option\r\n            *ngFor=\"let opponent of getOpponentsForPlayer(matchForm.player1Id)\"\r\n            [ngValue]=\"opponent.playerId\"\r\n          >\r\n            {{ opponent.fullName }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n\r\n      <!-- Fixed player names for edit mode -->\r\n      <div *ngIf=\"selectedPlayerForMatch\" class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >Player 1</label\r\n        >\r\n        <div\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-700 text-white\"\r\n        >\r\n          {{\r\n            selectedPlayerForMatch.player1Name ||\r\n              getPlayerName(matchForm.player1Id)\r\n          }}\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"selectedPlayerForMatch\" class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >Player 2</label\r\n        >\r\n        <div\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-700 text-white\"\r\n        >\r\n          {{\r\n            selectedPlayerForMatch.player2Name ||\r\n              getPlayerName(matchForm.player2Id)\r\n          }}\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"grid grid-cols-2 gap-4 mb-4\">\r\n        <div>\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 1 Score</label\r\n          >\r\n          <input\r\n            type=\"number\"\r\n            [(ngModel)]=\"matchForm.player1Score\"\r\n            min=\"0\"\r\n            (input)=\"validateScore('player1')\"\r\n            placeholder=\"Enter score\"\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 2 Score</label\r\n          >\r\n          <input\r\n            type=\"number\"\r\n            [(ngModel)]=\"matchForm.player2Score\"\r\n            min=\"0\"\r\n            (input)=\"validateScore('player2')\"\r\n            placeholder=\"Enter score\"\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"flex justify-end space-x-4\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n          (click)=\"closeRecordMatchModal()\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n          (click)=\"selectedPlayerForMatch ? updateMatch() : recordNewMatch()\"\r\n          [disabled]=\"\r\n            !matchForm.player1Id ||\r\n            !matchForm.player2Id ||\r\n            (!selectedPlayerForMatch &&\r\n              matchForm.player1Id === matchForm.player2Id) ||\r\n            (matchForm.player1Score === 0 && matchForm.player2Score === 0) ||\r\n            isRecordingMatch\r\n          \"\r\n        >\r\n          {{\r\n            isRecordingMatch\r\n              ? \"Processing...\"\r\n              : selectedPlayerForMatch\r\n              ? \"Update Match\"\r\n              : \"Record Match\"\r\n          }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<div\r\n  class=\"container mx-auto p-4 flex flex-col sm:flex-row overflow-hidden h-screen\"\r\n>\r\n  <!-- Chats List -->\r\n  <div\r\n    class=\"w-full sm:w-1/3 border-r border-gray-600 sm:block\"\r\n    [ngClass]=\"{ hidden: selectedChat }\"\r\n  >\r\n    <div class=\"flex items-center justify-between mb-6\">\r\n      <h2 class=\"text-2xl font-bold text-white\">📬 Friendly Inbox</h2>\r\n    </div>\r\n\r\n    <!-- No Chats -->\r\n    <div *ngIf=\"playerChats.length === 0\" class=\"text-center text-gray-300\">\r\n      No friendly messages here 📭\r\n    </div>\r\n\r\n    <!-- Chats List -->\r\n    <div\r\n      *ngIf=\"playerChats.length > 0\"\r\n      class=\"space-y-2 overflow-y-auto max-h-[calc(100vh-120px)]\"\r\n    >\r\n      <div\r\n        *ngFor=\"let chat of playerChats; trackBy: trackByPlayerId\"\r\n        class=\"p-4 backdrop-blur-sm border border-gray-600 rounded-lg hover:bg-gray-700 cursor-pointer flex items-center justify-between\"\r\n        (click)=\"openChat(chat.senderId)\"\r\n      >\r\n        <div>\r\n          <p class=\"font-bold text-white\">{{ chat.senderFullName }}</p>\r\n          <p class=\"text-sm text-gray-300 truncate\">{{ chat.lastMessage }}</p>\r\n        </div>\r\n        <span\r\n          *ngIf=\"chat.unreadCount > 0\"\r\n          class=\"bg-green-600 text-white text-xs font-bold rounded-full px-2 py-1\"\r\n        >\r\n          {{ chat.unreadCount }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Chat View -->\r\n  <div\r\n    class=\"w-full sm:w-2/3 flex flex-col h-full relative\"\r\n    [ngClass]=\"{ block: selectedChat, 'hidden sm:flex': !selectedChat }\"\r\n  >\r\n    <div *ngIf=\"selectedChat; else noChatSelected\" class=\"flex flex-col h-full\">\r\n      <!-- Chat Header - Fixed -->\r\n      <div\r\n        class=\"fixed left-0 right-0 z-40 p-2 backdrop-blur-sm border-b border-gray-600 flex items-center justify-between bg-black bg-opacity-90\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n        [style.top.px]=\"navbarHeight\"\r\n      >\r\n        <div class=\"flex items-center\">\r\n          <button\r\n            (click)=\"closeChat()\"\r\n            class=\"mr-4 text-gray-300 hover:text-white transition\"\r\n          >\r\n            <i class=\"fa-solid fa-arrow-left\" style=\"color: #ffffff\"></i>\r\n          </button>\r\n          <div>\r\n            <p class=\"font-bold text-white text-sm p-0\">\r\n              {{ selectedChat.senderFullName }}\r\n            </p>\r\n            <p class=\"text-xs text-gray-400 p-0\">\r\n              {{ selectedChat.senderPhoneNumber }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Messages - Scrollable Area with padding for fixed header and footer -->\r\n      <div\r\n        #messagesContainer\r\n        class=\"flex-1 p-4 overflow-y-auto backdrop-blur-sm\"\r\n        [style.margin-top.px]=\"navbarHeight + 80\"\r\n        style=\"margin-bottom: 80px\"\r\n      >\r\n        <div\r\n          *ngFor=\"\r\n            let message of selectedChat.messages;\r\n            trackBy: trackByMessageId\r\n          \"\r\n          class=\"mb-4\"\r\n          [ngClass]=\"{\r\n            'text-right': !message.isFromAdmin,\r\n            'text-left': message.isFromAdmin\r\n          }\"\r\n        >\r\n          <div\r\n            class=\"inline-block p-3 rounded-lg max-w-xs\"\r\n            [ngClass]=\"{\r\n              'bg-green-700': !message.isFromAdmin,\r\n              'bg-gray-700 ': message.isFromAdmin\r\n            }\"\r\n          >\r\n            <p class=\"text-white\">{{ message.content }}</p>\r\n            <p class=\"text-xs mt-1 text-gray-300\">\r\n              {{ message.sentAt | date : \"MMM d, y, hh:mm a\" }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Reply Input - Fixed -->\r\n      <div\r\n        class=\"fixed bottom-0 left-0 right-0 z-50 p-4 bg-black bg-opacity-90 backdrop-blur-sm border-t border-gray-600\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n      >\r\n        <form (ngSubmit)=\"sendReply()\" class=\"flex items-center gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"replyMessages[selectedChat.messages[0].id]\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n            (ngModelChange)=\"\r\n              replyMessages[selectedChat.messages[0].id] = $event\r\n            \"\r\n            placeholder=\"Write your reply...\"\r\n            class=\"flex-1 p-2 border border-gray-600 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-600 placeholder-gray-400\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 transition disabled:bg-gray-600\"\r\n            [disabled]=\"!replyMessages[selectedChat.messages[0].id]\"\r\n          >\r\n            Reply\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Placeholder when no chat is selected -->\r\n    <ng-template #noChatSelected>\r\n      <div class=\"w-full flex items-center justify-center text-gray-300\">\r\n        Select a friendly chat to view messages 📩\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PlayersComponent } from './players/players.component';\r\nimport { InboxComponent } from './inbox/inbox.component';\r\nimport { FriendliesComponent } from './friendlies/friendlies.component';\r\nimport { FriendlyInboxComponent } from './friendlies/friendly-inbox/friendly-inbox.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlayersComponent },\r\n  { path: 'players', component: PlayersComponent },\r\n  { path: 'inbox', component: InboxComponent },\r\n  { path: 'friendlies', component: FriendliesComponent },\r\n  { path: 'friendly-inbox', component: FriendlyInboxComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FriendlyMatchService } from '../../core/services/friendly-match.service';\r\nimport { FriendlyMessageService } from '../../core/services/friendly-message.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DateFilter } from 'friendly-match-types';\r\nimport { calculateUnreadCount } from 'friendly-message-types';\r\n\r\n@Component({\r\n  selector: 'app-friendlies',\r\n  templateUrl: './friendlies.component.html',\r\n  styleUrls: ['./friendlies.component.css'],\r\n})\r\nexport class FriendliesComponent implements OnInit {\r\n  // Sidebar state\r\n  isSidebarOpen = false;\r\n\r\n  // Players data\r\n  players: any[] = [];\r\n  selectedPlayer: any = null;\r\n  displayMatches: any[] = [];\r\n\r\n  // Modals\r\n  showModal = false;\r\n  showDeleteModal = false;\r\n  showRecordMatchModal = false;\r\n  selectedPlayerToDelete: any = null;\r\n  selectedPlayerForMatch: any = null;\r\n\r\n  // Form data\r\n  newPlayerName = '';\r\n  matchForm = {\r\n    player1Id: 0,\r\n    player2Id: 0,\r\n    player1Score: null as number | null,\r\n    player2Score: null as number | null,\r\n    playedOn: new Date(),\r\n  };\r\n\r\n  // Loading states\r\n  isRecordingMatch = false;\r\n\r\n  // Statistics\r\n  totalPlayers = 0;\r\n  totalMatches = 0;\r\n  totalUnreadFriendlyMessages = 0;\r\n\r\n  // All matches pagination\r\n  allMatches: any[] = [];\r\n  currentPage = 1;\r\n  itemsPerPage = 10;\r\n  totalPages = 0;\r\n  Math = Math; // Make Math available in template\r\n\r\n  // Filter options\r\n  filterForm = {\r\n    playerId: 0,\r\n    opponentIds: [] as number[],\r\n    dateFilter: DateFilter.AllTime,\r\n  };\r\n  DateFilter = DateFilter; // Make enum available in template\r\n\r\n  constructor(\r\n    private friendlyMatchService: FriendlyMatchService,\r\n    private friendlyMessageService: FriendlyMessageService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadPlayers();\r\n    this.loadAllMatches();\r\n    this.loadUnreadFriendlyMessagesCount();\r\n  }\r\n\r\n  loadUnreadFriendlyMessagesCount(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: any) => {\r\n        if (response.success && response.messages) {\r\n          this.totalUnreadFriendlyMessages = calculateUnreadCount(\r\n            response.messages\r\n          );\r\n        } else {\r\n          this.totalUnreadFriendlyMessages = 0;\r\n        }\r\n        console.log(this.totalUnreadFriendlyMessages);\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading unread friendly messages count:', error);\r\n        this.totalUnreadFriendlyMessages = 0;\r\n      },\r\n    });\r\n  }\r\n\r\n  toggleSidebar(): void {\r\n    this.isSidebarOpen = !this.isSidebarOpen;\r\n  }\r\n\r\n  loadPlayers(): void {\r\n    this.friendlyMatchService.getAllFriendlyPlayers().subscribe({\r\n      next: (players: any) => {\r\n        this.players = players;\r\n        this.totalPlayers = players.length;\r\n        this.calculateStatistics();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل اللاعبين',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  selectPlayer(player: any): void {\r\n    this.selectedPlayer = player;\r\n    this.loadPlayerMatches(player.playerId);\r\n  }\r\n\r\n  loadPlayerMatches(playerId: number): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        // Get the player's name\r\n        const player = this.players.find((p) => p.playerId === playerId);\r\n        const playerName = player?.fullName;\r\n\r\n        this.displayMatches = matches.filter(\r\n          (match: any) =>\r\n            match.player1Name === playerName || match.player2Name === playerName\r\n        );\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل مباريات اللاعب',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  calculateStatistics(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        this.totalMatches = matches.length;\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل الإحصائيات',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Modal methods\r\n  openModal(): void {\r\n    this.showModal = true;\r\n    this.newPlayerName = '';\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.showModal = false;\r\n    this.newPlayerName = '';\r\n  }\r\n\r\n  addPlayer(): void {\r\n    if (!this.newPlayerName.trim()) {\r\n      this.toastr.warning('الرجاء إدخال اسم اللاعب', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    this.friendlyMatchService\r\n      .addFriendlyPlayerAsync(this.newPlayerName)\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success(\r\n              `تم إضافة اللاعب ${this.newPlayerName} بنجاح`,\r\n              'تم الإضافة'\r\n            );\r\n            // Refresh cache and reload players\r\n            this.friendlyMatchService.refreshFriendlyPlayers();\r\n            this.loadPlayers();\r\n            this.closeModal();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل إضافة اللاعب',\r\n              'خطأ في الإضافة'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء إضافة اللاعب',\r\n            'خطأ في الإضافة'\r\n          );\r\n        },\r\n      });\r\n  }\r\n\r\n  confirmDelete(player: any, event: Event): void {\r\n    event.stopPropagation();\r\n    this.selectedPlayerToDelete = player;\r\n    this.showDeleteModal = true;\r\n  }\r\n\r\n  deleteConfirmedPlayer(): void {\r\n    if (!this.selectedPlayerToDelete) return;\r\n\r\n    this.friendlyMatchService\r\n      .deleteFriendlyPlayerAsync(this.selectedPlayerToDelete.playerId)\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success(\r\n              `تم حذف اللاعب ${this.selectedPlayerToDelete.fullName} بنجاح`,\r\n              'تم الحذف'\r\n            );\r\n            // Refresh cache and reload players\r\n            this.friendlyMatchService.refreshFriendlyPlayers();\r\n            this.loadPlayers();\r\n            if (\r\n              this.selectedPlayer?.playerId ===\r\n              this.selectedPlayerToDelete.playerId\r\n            ) {\r\n              this.selectedPlayer = null;\r\n              this.displayMatches = [];\r\n            }\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل حذف اللاعب',\r\n              'خطأ في الحذف'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message || error.message || 'حصل خطأ أثناء حذف اللاعب',\r\n            'خطأ في الحذف'\r\n          );\r\n        },\r\n      });\r\n\r\n    this.showDeleteModal = false;\r\n    this.selectedPlayerToDelete = null;\r\n  }\r\n\r\n  getActivePlayersCount(): number {\r\n    return this.players.filter((p) => p.isActive).length;\r\n  }\r\n\r\n  getRecentMatches(): any[] {\r\n    return this.displayMatches.slice(0, 10);\r\n  }\r\n\r\n  // Record Match Modal methods\r\n  openRecordMatchModal(player?: any): void {\r\n    this.selectedPlayerForMatch = player || null;\r\n    this.matchForm.player1Id = player?.playerId || 0;\r\n    this.matchForm.player2Id = 0;\r\n    this.matchForm.player1Score = null;\r\n    this.matchForm.player2Score = null;\r\n    this.matchForm.playedOn = new Date();\r\n    this.showRecordMatchModal = true;\r\n  }\r\n\r\n  closeRecordMatchModal(): void {\r\n    this.showRecordMatchModal = false;\r\n    this.selectedPlayerForMatch = null;\r\n    this.matchForm = {\r\n      player1Id: 0,\r\n      player2Id: 0,\r\n      player1Score: 0,\r\n      player2Score: 0,\r\n      playedOn: new Date(),\r\n    };\r\n  }\r\n\r\n  recordNewMatch(): void {\r\n    if (!this.matchForm.player1Id || !this.matchForm.player2Id) {\r\n      this.toastr.warning('الرجاء اختيار كلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    // Only check for same player in new match mode, not edit mode\r\n    if (\r\n      !this.selectedPlayerForMatch &&\r\n      this.matchForm.player1Id === this.matchForm.player2Id\r\n    ) {\r\n      this.toastr.warning(\r\n        'لا يمكن أن يكون اللاعب الأول والثاني نفس الشخص',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === null ||\r\n      this.matchForm.player2Score === null\r\n    ) {\r\n      this.toastr.warning('الرجاء إدخال النقاط لكلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (this.matchForm.player1Score < 0 || this.matchForm.player2Score < 0) {\r\n      this.toastr.warning('لا يمكن أن تكون النقاط سالبة', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === 0 &&\r\n      this.matchForm.player2Score === 0\r\n    ) {\r\n      this.toastr.warning(\r\n        'يجب أن يكون لدى لاعب واحد على الأقل نقاط إيجابية (0-0 غير مسموح)',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    const matchData = {\r\n      player1Id: this.matchForm.player1Id,\r\n      player2Id: this.matchForm.player2Id,\r\n      player1Score: this.matchForm.player1Score,\r\n      player2Score: this.matchForm.player2Score,\r\n      playedOn: this.matchForm.playedOn,\r\n    };\r\n\r\n    this.isRecordingMatch = true;\r\n\r\n    this.friendlyMatchService.recordFriendlyMatchAsync(matchData).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          // Get player names for the toast message\r\n          const player1 = this.players.find(\r\n            (p) => p.playerId === this.matchForm.player1Id\r\n          );\r\n          const player2 = this.players.find(\r\n            (p) => p.playerId === this.matchForm.player2Id\r\n          );\r\n\r\n          this.toastr.success(\r\n            `تم تسجيل المباراة بنجاح: ${player1?.fullName} (${this.matchForm.player1Score}) - ${player2?.fullName} (${this.matchForm.player2Score})`,\r\n            'تم تسجيل المباراة'\r\n          );\r\n\r\n          // Refresh cache and reload data\r\n          this.friendlyMatchService.refreshFriendlyMatches();\r\n          this.friendlyMatchService.refreshFriendlyPlayers();\r\n          this.loadPlayers();\r\n          this.calculateStatistics();\r\n          if (this.selectedPlayer) {\r\n            this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n          }\r\n          this.loadAllMatches();\r\n          this.closeRecordMatchModal();\r\n        } else {\r\n          this.toastr.error(\r\n            response.message || 'فشل تسجيل المباراة',\r\n            'خطأ في التسجيل'\r\n          );\r\n        }\r\n        this.isRecordingMatch = false;\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تسجيل المباراة',\r\n          'خطأ في التسجيل'\r\n        );\r\n        this.isRecordingMatch = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  getOpponentsForPlayer(playerId: number): any[] {\r\n    // In edit mode, allow selecting any player except the current player1\r\n    if (this.selectedPlayerForMatch) {\r\n      return this.players.filter(\r\n        (p) => p.playerId !== playerId && p.isActive !== false\r\n      );\r\n    }\r\n    // In new match mode, filter out the selected player1\r\n    return this.players.filter(\r\n      (p) => p.playerId !== playerId && p.isActive !== false\r\n    );\r\n  }\r\n\r\n  getAllActivePlayers(): any[] {\r\n    // If isActive is undefined, consider all players as active\r\n    return this.players.filter((p) => p.isActive !== false);\r\n  }\r\n\r\n  validateScore(player: 'player1' | 'player2'): void {\r\n    if (player === 'player1') {\r\n      if (\r\n        this.matchForm.player1Score !== null &&\r\n        this.matchForm.player1Score < 0\r\n      ) {\r\n        this.matchForm.player1Score = 0;\r\n      }\r\n    } else {\r\n      if (\r\n        this.matchForm.player2Score !== null &&\r\n        this.matchForm.player2Score < 0\r\n      ) {\r\n        this.matchForm.player2Score = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  // All matches management\r\n  loadAllMatches(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        this.allMatches = matches.sort(\r\n          (a: any, b: any) =>\r\n            new Date(b.playedOn).getTime() - new Date(a.playedOn).getTime()\r\n        );\r\n        this.totalMatches = matches.length;\r\n        this.totalPages = Math.ceil(this.allMatches.length / this.itemsPerPage);\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Cache-based filtering\r\n  loadFilteredMatchesFromCache(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (allMatches: any) => {\r\n        let filteredMatches = [...allMatches];\r\n\r\n        // Apply date filter\r\n        if (this.filterForm.dateFilter !== DateFilter.AllTime) {\r\n          const now = new Date();\r\n          let cutoffDate: Date;\r\n\r\n          switch (this.filterForm.dateFilter) {\r\n            case DateFilter.Today:\r\n              cutoffDate = new Date(\r\n                now.getFullYear(),\r\n                now.getMonth(),\r\n                now.getDate()\r\n              );\r\n              break;\r\n            case DateFilter.Last3Days:\r\n              cutoffDate = new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            case DateFilter.LastWeek:\r\n              cutoffDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            case DateFilter.LastMonth:\r\n              cutoffDate = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            default:\r\n              cutoffDate = new Date(0);\r\n          }\r\n\r\n          filteredMatches = filteredMatches.filter(\r\n            (match) => new Date(match.playedOn) >= cutoffDate\r\n          );\r\n        }\r\n\r\n        // Apply player filter\r\n        if (this.filterForm.playerId) {\r\n          // Get the selected player's name\r\n          const selectedPlayer = this.players.find(\r\n            (p) => p.playerId === this.filterForm.playerId\r\n          );\r\n          const selectedPlayerName = selectedPlayer?.fullName;\r\n\r\n          filteredMatches = filteredMatches.filter((match) => {\r\n            const isMatch =\r\n              match.player1Name === selectedPlayerName ||\r\n              match.player2Name === selectedPlayerName;\r\n\r\n            return isMatch;\r\n          });\r\n\r\n          // Reorder matches so selected player is always Player 1\r\n          filteredMatches = this.reorderMatchesForSelectedPlayer(\r\n            filteredMatches,\r\n            selectedPlayerName\r\n          );\r\n        }\r\n\r\n        // Apply opponent filter\r\n        if (\r\n          this.filterForm.opponentIds &&\r\n          this.filterForm.opponentIds.length > 0\r\n        ) {\r\n          // Get opponent names\r\n          const opponentNames = this.filterForm.opponentIds\r\n            .map((id) => {\r\n              const player = this.players.find((p) => p.playerId === id);\r\n              return player?.fullName;\r\n            })\r\n            .filter((name) => name);\r\n\r\n          filteredMatches = filteredMatches.filter(\r\n            (match) =>\r\n              opponentNames.includes(match.player1Name) ||\r\n              opponentNames.includes(match.player2Name)\r\n          );\r\n        }\r\n\r\n        // Sort by date (newest first)\r\n        filteredMatches.sort(\r\n          (a, b) =>\r\n            new Date(b.playedOn).getTime() - new Date(a.playedOn).getTime()\r\n        );\r\n\r\n        this.allMatches = filteredMatches;\r\n        this.totalMatches = filteredMatches.length;\r\n        this.totalPages = Math.ceil(this.allMatches.length / this.itemsPerPage);\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات المفلترة',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Helper method to reorder matches so selected player is always Player 1\r\n  private reorderMatchesForSelectedPlayer(\r\n    matches: any[],\r\n    selectedPlayerName: string\r\n  ): any[] {\r\n    return matches.map((match) => {\r\n      // If the selected player is already Player 1, keep as is\r\n      if (match.player1Name === selectedPlayerName) {\r\n        return match;\r\n      }\r\n\r\n      // If the selected player is Player 2, swap the players\r\n      if (match.player2Name === selectedPlayerName) {\r\n        return {\r\n          ...match,\r\n          player1Name: match.player2Name,\r\n          player2Name: match.player1Name,\r\n          player1Score: match.player2Score,\r\n          player2Score: match.player1Score,\r\n          player1Id: match.player2Id,\r\n          player2Id: match.player1Id,\r\n        };\r\n      }\r\n\r\n      // If neither player matches (shouldn't happen with our filter), keep as is\r\n      return match;\r\n    });\r\n  }\r\n\r\n  loadFilteredMatches(): void {\r\n    const filter: any = {\r\n      page: this.currentPage,\r\n      pageSize: this.itemsPerPage,\r\n      dateFilter: this.filterForm.dateFilter,\r\n    };\r\n\r\n    if (this.filterForm.playerId) {\r\n      filter.playerId = this.filterForm.playerId;\r\n    }\r\n    if (this.filterForm.opponentIds && this.filterForm.opponentIds.length > 0) {\r\n      filter.opponentIds = this.filterForm.opponentIds;\r\n    }\r\n\r\n    this.friendlyMatchService.getFilteredMatches(filter).subscribe({\r\n      next: (result: any) => {\r\n        this.allMatches = result.matches;\r\n        this.totalMatches = result.totalCount;\r\n        this.totalPages = result.totalPages;\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات المفلترة',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  onFilterChange(): void {\r\n    this.currentPage = 1;\r\n    this.loadFilteredMatchesFromCache();\r\n  }\r\n\r\n  clearFilters(): void {\r\n    this.filterForm = {\r\n      playerId: 0,\r\n      opponentIds: [],\r\n      dateFilter: DateFilter.AllTime,\r\n    };\r\n    this.currentPage = 1;\r\n    this.loadAllMatches();\r\n  }\r\n\r\n  getPaginatedMatches(): any[] {\r\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n    const endIndex = startIndex + this.itemsPerPage;\r\n    return this.allMatches.slice(startIndex, endIndex);\r\n  }\r\n\r\n  changePage(page: number): void {\r\n    if (page >= 1 && page <= this.totalPages) {\r\n      this.currentPage = page;\r\n    }\r\n  }\r\n\r\n  getPlayerName(playerId: number): string {\r\n    const player = this.players.find((p) => p.playerId === playerId);\r\n    return player ? player.fullName : 'Unknown Player';\r\n  }\r\n\r\n  // Edit match functionality\r\n  editMatch(match: any): void {\r\n    // Find player IDs by names\r\n    const player1 = this.players.find((p) => p.fullName === match.player1Name);\r\n    const player2 = this.players.find((p) => p.fullName === match.player2Name);\r\n\r\n    this.matchForm = {\r\n      player1Id: player1?.playerId || 0,\r\n      player2Id: player2?.playerId || 0,\r\n      player1Score: match.player1Score,\r\n      player2Score: match.player2Score,\r\n      playedOn: new Date(match.playedOn),\r\n    };\r\n    this.selectedPlayerForMatch = match;\r\n    this.showRecordMatchModal = true;\r\n  }\r\n\r\n  updateMatch(): void {\r\n    if (!this.selectedPlayerForMatch) return;\r\n\r\n    if (!this.matchForm.player1Id || !this.matchForm.player2Id) {\r\n      this.toastr.warning('الرجاء اختيار كلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    // In edit mode, we don't need to check for same player since names are fixed\r\n\r\n    if (\r\n      this.matchForm.player1Score === null ||\r\n      this.matchForm.player2Score === null\r\n    ) {\r\n      this.toastr.warning('الرجاء إدخال النقاط لكلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (this.matchForm.player1Score < 0 || this.matchForm.player2Score < 0) {\r\n      this.toastr.warning('لا يمكن أن تكون النقاط سالبة', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === 0 &&\r\n      this.matchForm.player2Score === 0\r\n    ) {\r\n      this.toastr.warning(\r\n        'يجب أن يكون لدى لاعب واحد على الأقل نقاط إيجابية (0-0 غير مسموح)',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.isRecordingMatch = true;\r\n\r\n    this.friendlyMatchService\r\n      .updateFriendlyMatchAsync(this.selectedPlayerForMatch.matchId, {\r\n        player1Id: this.matchForm.player1Id,\r\n        player2Id: this.matchForm.player2Id,\r\n        player1Score: this.matchForm.player1Score,\r\n        player2Score: this.matchForm.player2Score,\r\n      })\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            // Get player names for the toast message\r\n            const player1 = this.players.find(\r\n              (p) => p.playerId === this.matchForm.player1Id\r\n            );\r\n            const player2 = this.players.find(\r\n              (p) => p.playerId === this.matchForm.player2Id\r\n            );\r\n\r\n            this.toastr.success(\r\n              `تم تحديث المباراة بنجاح: ${player1?.fullName} (${this.matchForm.player1Score}) - ${player2?.fullName} (${this.matchForm.player2Score})`,\r\n              'تم تحديث المباراة'\r\n            );\r\n\r\n            // Refresh cache and reload data\r\n            this.friendlyMatchService.refreshFriendlyMatches();\r\n            this.loadAllMatches();\r\n            this.calculateStatistics();\r\n            if (this.selectedPlayer) {\r\n              this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n            }\r\n            this.closeRecordMatchModal();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل تحديث المباراة',\r\n              'خطأ في التحديث'\r\n            );\r\n          }\r\n          this.isRecordingMatch = false;\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء تحديث المباراة',\r\n            'خطأ في التحديث'\r\n          );\r\n          this.isRecordingMatch = false;\r\n        },\r\n      });\r\n  }\r\n\r\n  deleteMatchFromList(matchId: number): void {\r\n    if (confirm('هل أنت متأكد من حذف هذه المباراة؟')) {\r\n      this.friendlyMatchService.deleteFriendlyMatchAsync(matchId).subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم حذف المباراة بنجاح', 'تم الحذف');\r\n            // Refresh cache and reload data\r\n            this.friendlyMatchService.refreshFriendlyMatches();\r\n            this.loadAllMatches();\r\n            this.calculateStatistics();\r\n            if (this.selectedPlayer) {\r\n              this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n            }\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل حذف المباراة',\r\n              'خطأ في الحذف'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء حذف المباراة',\r\n            'خطأ في الحذف'\r\n          );\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { FriendlyMessageService } from '../../../core/services/friendly-message.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {\r\n  FriendlyMessageDto,\r\n  FriendlyMessageResponse,\r\n} from 'friendly-message-types';\r\nimport { Subscription } from 'rxjs';\r\n\r\ninterface PlayerChat {\r\n  senderId: string; // استخدام string فقط للتوافق مع GUID\r\n  senderFullName: string;\r\n  senderPhoneNumber: string; // إضافة رقم الهاتف\r\n  lastMessage: string;\r\n  lastMessageDate: string;\r\n  unreadCount: number;\r\n  messages: FriendlyMessageDto[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-friendly-inbox',\r\n  templateUrl: './friendly-inbox.component.html',\r\n  styleUrls: ['./friendly-inbox.component.css'],\r\n})\r\nexport class FriendlyInboxComponent\r\n  implements OnInit, AfterViewChecked, OnDestroy\r\n{\r\n  playerChats: PlayerChat[] = [];\r\n  selectedPlayerId: string | null = null;\r\n  selectedChat: PlayerChat | null = null;\r\n  replyMessages: { [messageId: number]: string } = {};\r\n  private updateStatusSubscription?: Subscription;\r\n  private refreshSubscription?: Subscription;\r\n  navbarHeight = 60; // default navbar height\r\n\r\n  @ViewChild('messagesContainer')\r\n  messagesContainer!: ElementRef<HTMLDivElement>;\r\n\r\n  constructor(\r\n    private friendlyMessageService: FriendlyMessageService,\r\n    private toastr: ToastrService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadFriendlyMessages();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.updateStatusSubscription) {\r\n      this.updateStatusSubscription.unsubscribe();\r\n    }\r\n    if (this.refreshSubscription) {\r\n      this.refreshSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private loadFriendlyMessages(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: FriendlyMessageResponse) => {\r\n        if (response.success && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n\r\n          // عرض رسالة النجاح مع عدد الرسائل\r\n          const totalMessages = response.messages.length;\r\n          const unreadMessages = response.messages.filter(\r\n            (msg) => !msg.isRead && !msg.isFromAdmin\r\n          ).length;\r\n        } else {\r\n          this.toastr.error(response.message || 'لا يوجد رسائل ودية');\r\n        }\r\n      },\r\n      error: (err: any) => {\r\n        this.toastr.error(\r\n          err.error?.message || err.message || 'حصل خطأ أثناء جلب الرسائل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Add refresh method for immediate updates\r\n  refreshMessages(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: FriendlyMessageResponse) => {\r\n        if (response.success && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n\r\n          // عرض رسالة التحديث مع عدد الرسائل\r\n          const totalMessages = response.messages.length;\r\n          const unreadMessages = response.messages.filter(\r\n            (msg) => !msg.isRead && !msg.isFromAdmin\r\n          ).length;\r\n\r\n          if (totalMessages > 0) {\r\n            this.toastr.info(\r\n              `تم تحديث ${totalMessages} رسالة${\r\n                unreadMessages > 0\r\n                  ? ` (${unreadMessages} رسالة غير مقروءة)`\r\n                  : ''\r\n              }`,\r\n              'تم تحديث الرسائل'\r\n            );\r\n          } else {\r\n            this.toastr.info('لا توجد رسائل ودية حالياً', 'معلومات');\r\n          }\r\n        } else {\r\n          this.toastr.error(response.message || 'لا يوجد رسائل ودية');\r\n        }\r\n      },\r\n      error: (err: any) => {\r\n        this.toastr.error(\r\n          err.error?.message || err.message || 'حصل خطأ أثناء جلب الرسائل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.selectedChat && this.messagesContainer) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  groupMessagesBySender(messages: FriendlyMessageDto[]): PlayerChat[] {\r\n    const chatMap: { [senderId: string | number]: PlayerChat } = {};\r\n    messages.forEach((msg) => {\r\n      // استخدام senderId كـ playerId (قد يكون string أو number)\r\n      let playerId = msg.senderId || msg.playerId;\r\n\r\n      // إذا كان senderId هو GUID، نستخدمه كما هو\r\n      if (typeof playerId === 'string' && playerId.includes('-')) {\r\n        // هذا GUID، نستخدمه كما هو\r\n      } else if (typeof playerId === 'string') {\r\n        // محاولة تحويل إلى number\r\n        const parsedId = parseInt(playerId, 10);\r\n        if (!isNaN(parsedId) && parsedId > 0) {\r\n          playerId = parsedId;\r\n        }\r\n      }\r\n\r\n      // تأكد من أن playerId موجود\r\n      if (!playerId) {\r\n        return; // تخطي هذه الرسالة\r\n      }\r\n\r\n      if (!chatMap[playerId]) {\r\n        chatMap[playerId] = {\r\n          senderId: String(playerId), // تحويل إلى string\r\n          senderFullName:\r\n            msg.senderFullName || msg.playerFullName || `اللاعب ${playerId}`, // fallback للاسم\r\n          senderPhoneNumber: msg.senderPhoneNumber || 'غير متوفر', // استخدام الحقل الصحيح مع fallback\r\n          lastMessage: '',\r\n          lastMessageDate: '',\r\n          unreadCount: 0,\r\n          messages: [],\r\n        };\r\n      }\r\n      chatMap[playerId].messages.push(msg);\r\n      if (!msg.isFromAdmin && !msg.isRead) {\r\n        chatMap[playerId].unreadCount++;\r\n      }\r\n    });\r\n\r\n    const result = Object.values(chatMap).map((chat) => {\r\n      // ترتيب الرسائل من الأقدم للأحدث\r\n      chat.messages = chat.messages.sort(\r\n        (a, b) => new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n      );\r\n      // آخر رسالة\r\n      const lastMsg = chat.messages[chat.messages.length - 1];\r\n      chat.lastMessage = lastMsg?.content ?? '';\r\n      chat.lastMessageDate = lastMsg?.sentAt ?? '';\r\n      return chat;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  openChat(playerId: string): void {\r\n    this.selectedPlayerId = playerId;\r\n    this.selectedChat =\r\n      this.playerChats.find((chat) => chat.senderId === playerId) || null;\r\n\r\n    if (this.selectedChat) {\r\n      // تأكد من وجود اسم اللاعب\r\n      if (!this.selectedChat.senderFullName) {\r\n        this.selectedChat.senderFullName = `اللاعب ${this.selectedChat.senderId}`;\r\n      }\r\n      // Mark messages as read when opening chat\r\n      this.selectedChat.messages\r\n        .filter((msg) => !msg.isRead && !msg.isFromAdmin)\r\n        .forEach((msg) => {\r\n          this.friendlyMessageService.markMessageAsRead(msg.id).subscribe({\r\n            next: (response: any) => {\r\n              if (response.success) {\r\n                msg.isRead = true;\r\n                this.selectedChat!.unreadCount =\r\n                  this.selectedChat!.messages.filter(\r\n                    (m) => !m.isRead && !m.isFromAdmin\r\n                  ).length;\r\n                this.cdr.detectChanges();\r\n              }\r\n            },\r\n            error: (err: any) => {\r\n              this.toastr.error(\r\n                err.error?.message ||\r\n                  err.message ||\r\n                  'حصل خطأ أثناء تحديث حالة الرسالة',\r\n                'خطأ في التحديث'\r\n              );\r\n            },\r\n          });\r\n        });\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  closeChat(): void {\r\n    this.selectedPlayerId = null;\r\n    this.selectedChat = null;\r\n    this.replyMessages = {};\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  sendReply(): void {\r\n    if (!this.selectedChat) {\r\n      this.toastr.warning('الرجاء اختيار محادثة');\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedChat.senderId) {\r\n      this.toastr.error('خطأ: معرف اللاعب غير صحيح');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !this.selectedChat.messages ||\r\n      this.selectedChat.messages.length === 0\r\n    ) {\r\n      this.toastr.error('خطأ: لا توجد رسائل في هذه المحادثة');\r\n      return;\r\n    }\r\n\r\n    const replyContent =\r\n      this.replyMessages[this.selectedChat.messages[0].id]?.trim();\r\n    if (!replyContent) {\r\n      this.toastr.warning('الرجاء كتابة رد');\r\n      return;\r\n    }\r\n\r\n    this.friendlyMessageService\r\n      .sendAdminReply(this.selectedChat.senderId, replyContent)\r\n      .subscribe({\r\n        next: (response: FriendlyMessageResponse) => {\r\n          if (response.success) {\r\n            const playerName =\r\n              this.selectedChat!.senderFullName ||\r\n              `اللاعب ${this.selectedChat!.senderId}`;\r\n            this.toastr.success(\r\n              `تم إرسال الرد بنجاح إلى ${playerName}`,\r\n              'تم الإرسال'\r\n            );\r\n            this.replyMessages[this.selectedChat!.messages[0].id] = '';\r\n\r\n            const newMessage: FriendlyMessageDto = {\r\n              id: Math.random(),\r\n              senderId: this.selectedChat!.senderId,\r\n              senderFullName:\r\n                this.selectedChat!.senderFullName ||\r\n                `اللاعب ${this.selectedChat!.senderId}`,\r\n              senderPhoneNumber:\r\n                this.selectedChat!.senderPhoneNumber || 'غير متوفر',\r\n              content: replyContent,\r\n              isRead: true,\r\n              sentAt: new Date().toISOString(),\r\n              isFromAdmin: true,\r\n              messageType: 'admin_reply',\r\n            };\r\n\r\n            // تحديث الرسائل في المحادثة المحددة\r\n            this.selectedChat!.messages.push(newMessage);\r\n            this.selectedChat!.messages.sort(\r\n              (a, b) =>\r\n                new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n            );\r\n\r\n            // تحديث آخر رسالة في قائمة المحادثات\r\n            this.selectedChat!.lastMessage = replyContent;\r\n            this.selectedChat!.lastMessageDate = newMessage.sentAt;\r\n\r\n            // تحديث اسم اللاعب إذا كان غير موجود\r\n            if (!this.selectedChat!.senderFullName) {\r\n              this.selectedChat!.senderFullName = `اللاعب ${\r\n                this.selectedChat!.senderId\r\n              }`;\r\n            }\r\n\r\n            // إعادة ترتيب قائمة المحادثات حسب الأحدث\r\n            this.playerChats.sort(\r\n              (a, b) =>\r\n                new Date(b.lastMessageDate).getTime() -\r\n                new Date(a.lastMessageDate).getTime()\r\n            );\r\n\r\n            // تحديث المحادثة المحددة بعد إعادة الترتيب\r\n            this.selectedChat =\r\n              this.playerChats.find(\r\n                (chat) => chat.senderId === this.selectedPlayerId\r\n              ) || null;\r\n\r\n            this.cdr.detectChanges();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل إرسال الرد',\r\n              'خطأ في الإرسال'\r\n            );\r\n          }\r\n        },\r\n        error: (err: any) => {\r\n          this.toastr.error(\r\n            err.error?.message || err.message || 'حصل خطأ أثناء إرسال الرد',\r\n            'خطأ في الإرسال'\r\n          );\r\n        },\r\n      });\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    if (this.messagesContainer) {\r\n      const container = this.messagesContainer.nativeElement;\r\n      container.scrollTop = container.scrollHeight;\r\n    }\r\n  }\r\n\r\n  trackByPlayerId(index: number, chat: PlayerChat): string {\r\n    return chat.senderId;\r\n  }\r\n\r\n  trackByMessageId(index: number, message: FriendlyMessageDto): number {\r\n    return message.id;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { PlayersComponent } from './players/players.component';\r\nimport { InboxComponent } from './inbox/inbox.component';\r\nimport { FriendliesComponent } from './friendlies/friendlies.component';\r\nimport { FriendlyInboxComponent } from './friendlies/friendly-inbox/friendly-inbox.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FindPlayerPipe } from '../pipes/find-player.pipe';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { UtcToLocalPipe } from '../pipes/utcToLocal.pipe';\r\nimport { PlayerModule } from '../player/player.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlayersComponent,\r\n    InboxComponent,\r\n    FriendliesComponent,\r\n    FriendlyInboxComponent,\r\n    FindPlayerPipe,\r\n    UtcToLocalPipe,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    PlayerModule,\r\n    SharedModule,\r\n  ],\r\n})\r\nexport class AdminModule {}\r\n"],"x_google_ignoreList":[0,2]}