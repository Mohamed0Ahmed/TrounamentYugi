{"version":3,"file":"367.5d73c502ca9f41ee.js","mappings":"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","names":["ReplaySubject","Subject","constructor","_bufferSize","Infinity","_windowTime","_timestampProvider","dateTimestampProvider","super","this","_buffer","_infiniteTimeWindow","Math","max","next","value","isStopped","push","now","_trimBuffer","_subscribe","subscriber","_throwIfClosed","subscription","_innerSubscribe","copy","slice","i","length","closed","_checkFinalizedStatuses","adjustedBufferSize","splice","last","AdminDashboardService","playerService","matchService","leagueService","messageService","noteService","essentialDataCache$","BehaviorSubject","secondaryDataCache","Map","lastEssentialUpdate","lastSecondaryUpdate","CACHE_DURATION","SECONDARY_CACHE_DURATION","getEssentialData","forceRefresh","Date","asObservable","pipe","filter","data","loadEssentialDataFromServer","tap","catchError","error","of","getEmptyDashboardData","shareReplay","configOrBufferSize","windowTime","scheduler","bufferSize","refCount","share","connector","resetOnError","resetOnComplete","resetOnRefCountZero","getSecondaryData","type","lastUpdate","get","hasValidCache","has","loadSecondaryDataFromServer","set","forkJoin","players","getAdminPlayers","matches","getAdminMatches","currentLeague","getAdminCurrentLeague","map","response","league","allLeagues","getAdminAllLeagues","notes","getAdminNotes","messages","getAdminMessages","messagesList","Array","isArray","stats","totalPlayers","totalMatches","totalMatchesLeft","m","isCompleted","totalMessagesLeft","isRead","isFromAdmin","invalidateCache","delete","clear","getCurrentEssentialData","updateMessageCount","count","current","i0","i1","i2","i3","i4","i5","factory","ɵfac","providedIn","player_r16","_r18","$implicit","ctx_r17","selectPlayer","$event","ctx_r19","confirmDelete","ctx_r15","selectedPlayer","playerId","fullName","PlayersComponent_ul_6_li_1_Template","ctx_r0","_r21","ctx_r20","openModal","match_r23","_r26","ctx_r25","updateMatch","matchId","player1Id","ctx_r27","player2Id","ctx_r28","ctx_r29","resetMatch","i_r24","player1Name","player2Name","score1","score2","_c0","ctx_r22","loadingMatches","PlayersComponent_div_9_tr_15_Template","ctx_r2","displayMatches","ctx_r3","_r31","ctx_r30","openStartLeagueModal","_r33","ctx_r32","showEndLeagueModal","_r35","ctx_r34","onTournamentStageButtonClick","ctx_r6","tournamentStageButtonText","PlayersComponent_div_25_span_10_Template","PlayersComponent_div_25_span_11_Template","PlayersComponent_div_25_span_12_Template","PlayersComponent_div_25_span_18_Template","PlayersComponent_div_25_span_19_Template","ctx_r7","leagueData","description","typeOfLeague","getLeagueTypeText","systemOfLeague","undefined","getSystemTypeText","createdOn","name","league_r41","_r44","ctx_r43","openDeleteLeagueModal","leagueId","_c1","i_r42","leagueName","isFinished","ctx_r8","getLeagueTypeTextForTable","leagueType","getSystemTypeTextForTable","getWinnerForLeague","_r46","ctx_r45","closeDeleteLeagueModal","ctx_r47","deleteConfirmedLeague","ctx_r9","selectedLeagueToDelete","_r49","ctx_r48","showDeleteModal","ctx_r50","deleteConfirmedPlayer","ctx_r10","selectedPlayerToDelete","_r52","ctx_r51","newPlayerName","ctx_r53","closeModal","ctx_r54","addPlayer","ctx_r11","_r57","ctx_r56","newLeague","roundsPerMatch","ctx_r55","_r59","ctx_r58","ctx_r60","ctx_r61","ctx_r62","PlayersComponent_div_68_div_30_Template","ctx_r63","closeStartLeagueModal","ctx_r64","startLeague","ctx_r12","_r66","ctx_r65","ctx_r67","resetTournament","id","_r75","note_r69","ctx_r73","toggleHideNote","_r78","ctx_r76","_r81","ctx_r79","toggleDeleteNote","PlayersComponent_div_70_div_15_div_1_button_5_Template","PlayersComponent_div_70_div_15_div_1_button_6_Template","content","isHidden","PlayersComponent_div_70_div_15_div_1_Template","isDeleted","_r84","ctx_r83","newNote","ctx_r85","sendNote","PlayersComponent_div_70_div_15_Template","ctx_r86","closeNoteModal","ctx_r14","PlayersComponent","toastr","adminDashboardService","playerMatches","showModal","isSidebarOpen","showNoteModal","showDeleteLeagueModal","showStartLeagueModal","totalMessages","leagues","currentMatches","showTournamentStageButton","tournamentStageButtonAction","requestQueue","isProcessingQueue","showResetModal","ngOnInit","loadEssentialData","ngOnDestroy","subscribe","reverse","updateTournamentStageButton","err","toggleSidebar","player","loadMatches","sort","a","b","nameA","toLowerCase","nameB","localeCompare","match","forEach","addToQueue","request","processQueue","_this","_asyncToGenerator","shift","winnerId","Promise","resolve","reject","success","message","deletePlayer","event","stopPropagation","warning","trim","resetLeague","DeleteLeague","find","l","res","note","toggleMarHide","noteId","DeleteNote","openNoteModal","LeagueType","Groups","startGroupStage","groupMatches","stage","TournamentStage","GroupStage","tournamentStage","quarterMatches","QuarterFinals","semiMatches","SemiFinals","finalMatches","Final","allGroupMatchesCompleted","every","allQuarterMatchesCompleted","allSemiMatchesCompleted","startQuarterStage","startSemiFinalStage","startFinalStage","createGroupsAndMatches","startKnockoutStage","startSemiFinals","startFinal","Single","Multi","system","SystemOfLeague","Points","Classic","systemType","String","knockoutMatches","finalMatch","i6","selectors","decls","vars","consts","template","rf","ctx","PlayersComponent_ul_6_Template","PlayersComponent_button_7_Template","PlayersComponent_div_9_Template","PlayersComponent_div_17_Template","PlayersComponent_button_20_Template","PlayersComponent_button_21_Template","PlayersComponent_button_22_Template","PlayersComponent_div_25_Template","PlayersComponent_tr_64_Template","PlayersComponent_div_65_Template","PlayersComponent_div_66_Template","PlayersComponent_div_67_Template","PlayersComponent_div_68_Template","PlayersComponent_div_69_Template","PlayersComponent_div_70_Template","_c2","chat_r6","unreadCount","_r10","openChat","senderId","InboxComponent_div_6_div_1_span_6_Template","senderFullName","lastMessage","InboxComponent_div_6_div_1_Template","ctx_r1","playerChats","trackByPlayerId","message_r13","sentAt","_r15","closeChat","InboxComponent_div_8_div_12_Template","ctx_r16","sendReply","replyMessages","selectedChat","ctx_r18","navbarHeight","_c3","senderPhoneNumber","trackByMessageId","_c4","InboxComponent","cdr","selectedPlayerId","loadAdminMessages","updateStatusSubscription","unsubscribe","refreshSubscription","loadFromServer","loadFromCache","groupedMessages","groupMessagesBySender","lastMessageDate","getTime","refreshMessages","ngAfterViewChecked","messagesContainer","scrollToBottom","loadMessages","getMessages","processMessages","detectChanges","chatMap","msg","Object","values","chat","lastMsg","toggleMarkMessage","replyContent","sendAdminReply","newMessage","random","toISOString","container","nativeElement","scrollTop","scrollHeight","index","viewQuery","InboxComponent_div_5_Template","InboxComponent_div_6_Template","InboxComponent_div_8_Template","InboxComponent_ng_template_9_Template","_c5","_c6","_r3","player_r7","_r9","openRecordMatchModal","FriendliesComponent_ul_6_li_1_Template","_r13","totalUnreadFriendlyMessages","player_r19","match_r20","_r22","ctx_r21","editMatch","ctx_r23","deleteMatchFromList","playedOn","getPlayerName","player1Score","player2Score","i_r26","_r28","changePage","ctx_r24","currentPage","_r30","FriendliesComponent_div_9_div_70_span_4_Template","ctx_r31","totalPages","FriendliesComponent_div_9_div_1_Template","FriendliesComponent_div_9_div_9_Template","ctx_r35","ctx_r36","filterForm","dateFilter","ctx_r37","onFilterChange","ctx_r38","ctx_r39","FriendliesComponent_div_9_option_50_Template","ctx_r40","clearFilters","FriendliesComponent_div_9_tr_69_Template","FriendliesComponent_div_9_div_70_Template","DateFilter","AllTime","Today","Last3Days","LastWeek","LastMonth","getAllActivePlayers","getPaginatedMatches","itemsPerPage","min","allMatches","_r42","ctx_r41","_r45","ctx_r44","friendlyPlayerName","ctx_r46","ctx_r4","player_r53","_r55","matchForm","FriendliesComponent_div_12_div_4_option_6_Template","opponent_r57","FriendliesComponent_div_12_div_5_option_6_Template","ctx_r49","getOpponentsForPlayer","selectedPlayerForMatch","FriendliesComponent_div_12_div_4_Template","FriendliesComponent_div_12_div_5_Template","FriendliesComponent_div_12_div_6_Template","FriendliesComponent_div_12_div_7_Template","_r61","validateScore","closeRecordMatchModal","ctx_r66","recordNewMatch","ctx_r5","isRecordingMatch","FriendliesComponent","friendlyMatchService","friendlyMessageService","activeTab","showRecordMatchModal","opponentIds","loadPlayers","loadAllMatches","loadUnreadFriendlyMessagesCount","getAllMessages","calculateUnreadCount","console","getAllFriendlyPlayers","calculateStatistics","loadPlayerMatches","getAllFriendlyMatches","playerName","p","addFriendlyPlayerAsync","refreshFriendlyPlayers","deleteFriendlyPlayerAsync","getActivePlayersCount","isActive","getRecentMatches","matchData","recordFriendlyMatchAsync","player1","player2","refreshFriendlyMatches","ceil","loadFilteredMatchesFromCache","filteredMatches","cutoffDate","getFullYear","getMonth","getDate","selectedPlayerName","reorderMatchesForSelectedPlayer","opponentNames","includes","loadFilteredMatches","page","pageSize","getFilteredMatches","result","totalCount","startIndex","updateFriendlyMatchAsync","confirm","deleteFriendlyMatchAsync","FriendliesComponent_ul_6_Template","FriendliesComponent_button_7_Template","FriendliesComponent_div_9_Template","FriendliesComponent_div_10_Template","FriendliesComponent_div_11_Template","FriendliesComponent_div_12_Template","FriendlyInboxComponent_div_6_div_1_span_6_Template","FriendlyInboxComponent_div_6_div_1_Template","FriendlyInboxComponent_div_8_div_12_Template","FriendlyInboxComponent","loadFriendlyMessages","unreadMessages","info","parsedId","parseInt","isNaN","playerFullName","markMessageAsRead","messageType","FriendlyInboxComponent_div_5_Template","FriendlyInboxComponent_div_6_Template","FriendlyInboxComponent_div_8_Template","FriendlyInboxComponent_ng_template_9_Template","activeTournament","_r24","tournament_r15","openCreateTeamModal","getRemainingTeams","ctx_r26","startTournament","finishTournament","_r34","deleteTournament","playerName_r38","TeamsDashboardComponent_div_29_div_4_div_1_div_21_div_4_span_4_Template","team_r36","teamName","getTeamPlayersNames","TeamsDashboardComponent_div_29_div_4_div_1_div_21_div_4_Template","teams","TeamsDashboardComponent_div_29_div_4_div_1_button_17_Template","TeamsDashboardComponent_div_29_div_4_div_1_button_18_Template","TeamsDashboardComponent_div_29_div_4_div_1_button_19_Template","TeamsDashboardComponent_div_29_div_4_div_1_button_20_Template","TeamsDashboardComponent_div_29_div_4_div_1_div_21_Template","TeamsDashboardComponent_div_29_div_4_div_1_div_22_Template","getStatusColor","status","teamCount","playersPerTeam","systemOfScoring","canStartTournament","canFinishTournament","canDeleteTournament","TeamsDashboardComponent_div_29_div_4_div_1_Template","ctx_r13","tournaments","TeamsDashboardComponent_div_29_div_3_Template","TeamsDashboardComponent_div_29_div_4_Template","player_r41","_r43","ctx_r42","TeamsDashboardComponent_div_40_div_1_Template","filteredPlayers","playerSearchTerm","TeamsDashboardComponent_div_41_p_1_Template","TeamsDashboardComponent_div_41_p_2_Template","_r47","createTournamentForm","closeCreateTournamentModal","ctx_r52","createTournament","isCreatingTournament","player_r57","_r60","ctx_r59","togglePlayerSelection","TeamsDashboardComponent_div_43_div_13_div_1_div_5_Template","isPlayerSelected","multiParticipations","multiTitlesWon","TeamsDashboardComponent_div_43_div_13_div_1_Template","availablePlayers","_r62","createTeamForm","TeamsDashboardComponent_div_43_div_11_Template","TeamsDashboardComponent_div_43_div_12_Template","TeamsDashboardComponent_div_43_div_13_Template","closeCreateTeamModal","createTeam","playerIds","isLoadingPlayers","isCreatingTeam","showAddPlayerModal","ctx_r68","addNewPlayer","isAddingPlayer","_r71","ctx_r70","recordingScore1","ctx_r72","recordingScore2","TeamsDashboardComponent_div_45_div_13_Template","closeRecordResultModal","ctx_r74","recordMatchResult","selectedPlayer1Id","selectedPlayer2Id","isRecordingResult","match_r83","_r91","ctx_r89","openRecordResultModal","TeamsDashboardComponent_div_46_div_15_div_1_div_7_button_2_Template","_r94","ctx_r92","undoMatchResult","TeamsDashboardComponent_div_46_div_15_div_1_div_6_Template","TeamsDashboardComponent_div_46_div_15_div_1_div_7_Template","TeamsDashboardComponent_div_46_div_15_div_1_div_8_Template","ctx_r82","TeamsDashboardComponent_div_46_div_15_div_1_Template","filteredPlayerMatches","ctx_r95","opponentSearchTerm","TeamsDashboardComponent_div_46_div_16_p_1_Template","TeamsDashboardComponent_div_46_div_16_p_2_Template","ctx_r77","_r98","ctx_r97","closeConfirmStartTournamentModal","ctx_r99","confirmStartTournament","ctx_r78","tournamentToConfirm","_r101","ctx_r100","closeConfirmFinishTournamentModal","ctx_r102","confirmFinishTournament","_r104","ctx_r103","closeConfirmDeleteTournamentModal","ctx_r105","confirmDeleteTournament","ctx_r80","_r107","ctx_r106","closeConfirmUndoMatchModal","ctx_r108","confirmUndoMatchResult","ctx_r81","matchToUndo","_r110","ctx_r109","closePlayerMatchesModal","ctx_r111","ctx_r112","filterPlayerMatches","TeamsDashboardComponent_div_46_div_14_Template","TeamsDashboardComponent_div_46_div_15_Template","TeamsDashboardComponent_div_46_div_16_Template","TeamsDashboardComponent_div_46_div_17_Template","TeamsDashboardComponent_div_46_div_18_Template","TeamsDashboardComponent_div_46_div_19_Template","TeamsDashboardComponent_div_46_div_20_Template","isLoadingMatches","showConfirmStartTournamentModal","showConfirmFinishTournamentModal","showConfirmDeleteTournamentModal","showConfirmUndoMatchModal","routes","path","component","title","TeamsDashboardComponent","multiTournamentService","tournamentMatches","showCreateTournamentModal","showCreateTeamModal","showRecordResultModal","showPlayerMatchesModal","selectedMatchId","isLoadingTournaments","loadTournaments","loadAvailablePlayers","getAllTournaments","t","loadTournamentMatches","openCreateTournamentModal","tournament","getAllPlayers","getActiveTournamentMatches","getPlayerMatches","openConfirmStartTournamentModal","multiTournamentId","openConfirmFinishTournamentModal","openConfirmDeleteTournamentModal","indexOf","requestBody","openConfirmUndoMatchModal","multiMatchId","getTrophyIcon","position","fixture","team","filterPlayers","searchTerm","searchLower","TeamsDashboardComponent_p_26_Template","TeamsDashboardComponent_p_27_Template","TeamsDashboardComponent_div_28_Template","TeamsDashboardComponent_div_29_Template","TeamsDashboardComponent_div_39_Template","TeamsDashboardComponent_div_40_Template","TeamsDashboardComponent_div_41_Template","TeamsDashboardComponent_div_42_Template","TeamsDashboardComponent_div_43_Template","TeamsDashboardComponent_div_44_Template","TeamsDashboardComponent_div_45_Template","TeamsDashboardComponent_div_46_Template","AdminRoutingModule","RouterModule","forChild","AdminModule","CommonModule","FormsModule","HttpClientModule","PlayerModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./src/app/core/services/admin-dashboard.service.ts","./node_modules/rxjs/dist/esm/internal/operators/shareReplay.js","./src/app/admin/players/players.component.html","./src/app/admin/players/players.component.ts","./src/app/admin/inbox/inbox.component.html","./src/app/admin/inbox/inbox.component.ts","./src/app/admin/friendlies/friendlies.component.html","./src/app/admin/friendlies/friendlies.component.ts","./src/app/admin/friendlies/friendly-inbox/friendly-inbox.component.html","./src/app/admin/friendlies/friendly-inbox/friendly-inbox.component.ts","./src/app/admin/teams-dashboard/teams-dashboard.component.html","./src/app/admin/admin-routing.module.ts","./src/app/admin/teams-dashboard/teams-dashboard.component.ts","./src/app/admin/admin.module.ts"],"sourcesContent":["import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject, forkJoin, of } from 'rxjs';\r\nimport { map, tap, catchError, shareReplay, filter } from 'rxjs/operators';\r\nimport { PlayerService } from './player.service';\r\nimport { MatchService } from './match.service';\r\nimport { LeagueService } from './league.service';\r\nimport { MessageService } from './message.service';\r\nimport { NoteService } from './note.service';\r\nimport {\r\n  Player,\r\n  Match,\r\n  League,\r\n  AllLeagueRank,\r\n  Note,\r\n  Message,\r\n} from '../../models/interfaces';\r\n\r\nexport interface AdminDashboardData {\r\n  players: Player[];\r\n  matches: Match[];\r\n  currentLeague: League | null;\r\n  allLeagues: AllLeagueRank[];\r\n  notes: Note[];\r\n  messages: Message[];\r\n  stats: {\r\n    totalPlayers: number;\r\n    totalMatches: number;\r\n    totalMatchesLeft: number;\r\n    totalMessagesLeft: number;\r\n  };\r\n}\r\n\r\nexport interface AdminSecondaryData {\r\n  allLeagues: AllLeagueRank[];\r\n  notes: Note[];\r\n  messages: Message[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminDashboardService {\r\n  private essentialDataCache$ = new BehaviorSubject<AdminDashboardData | null>(\r\n    null\r\n  );\r\n  private secondaryDataCache = new Map<string, any>();\r\n  private lastEssentialUpdate = 0;\r\n  private lastSecondaryUpdate = new Map<string, number>();\r\n  private readonly CACHE_DURATION = 900000; // 15 minutes\r\n  private readonly SECONDARY_CACHE_DURATION = 900000; // 15 minutes (same as main cache)\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private matchService: MatchService,\r\n    private leagueService: LeagueService,\r\n    private messageService: MessageService,\r\n    private noteService: NoteService\r\n  ) {}\r\n\r\n  /**\r\n   * Get essential dashboard data with smart caching\r\n   */\r\n  getEssentialData(forceRefresh = false): Observable<AdminDashboardData> {\r\n    const now = Date.now();\r\n    const hasValidCache =\r\n      this.essentialDataCache$.value &&\r\n      now - this.lastEssentialUpdate < this.CACHE_DURATION;\r\n\r\n    if (!forceRefresh && hasValidCache) {\r\n      return this.essentialDataCache$\r\n        .asObservable()\r\n        .pipe(filter((data): data is AdminDashboardData => data !== null));\r\n    }\r\n\r\n    return this.loadEssentialDataFromServer().pipe(\r\n      tap((data) => {\r\n        this.essentialDataCache$.next(data);\r\n        this.lastEssentialUpdate = now;\r\n      }),\r\n      catchError((error) => {\r\n        // Return cached data if available, otherwise empty state\r\n        return of(\r\n          this.essentialDataCache$.value || this.getEmptyDashboardData()\r\n        );\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get secondary data with smart caching\r\n   */\r\n  getSecondaryData(\r\n    type: 'leagues' | 'notes' | 'messages',\r\n    forceRefresh = false\r\n  ): Observable<any> {\r\n    const now = Date.now();\r\n    const lastUpdate = this.lastSecondaryUpdate.get(type) || 0;\r\n    const hasValidCache =\r\n      this.secondaryDataCache.has(type) &&\r\n      now - lastUpdate < this.SECONDARY_CACHE_DURATION;\r\n\r\n    if (!forceRefresh && hasValidCache) {\r\n      return of(this.secondaryDataCache.get(type));\r\n    }\r\n\r\n    return this.loadSecondaryDataFromServer(type).pipe(\r\n      tap((data) => {\r\n        this.secondaryDataCache.set(type, data);\r\n        this.lastSecondaryUpdate.set(type, now);\r\n      }),\r\n      catchError((error) => {\r\n        // Return cached data if available\r\n        return of(this.secondaryDataCache.get(type) || []);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load essential data from server using parallel requests\r\n   */\r\n  private loadEssentialDataFromServer(): Observable<AdminDashboardData> {\r\n    return forkJoin({\r\n      players: this.playerService.getAdminPlayers(),\r\n      matches: this.matchService.getAdminMatches(),\r\n      currentLeague: this.leagueService.getAdminCurrentLeague().pipe(\r\n        map((response) => response.league),\r\n        catchError(() => of(null))\r\n      ),\r\n      allLeagues: this.leagueService\r\n        .getAdminAllLeagues()\r\n        .pipe(catchError(() => of([]))),\r\n      notes: this.noteService.getAdminNotes().pipe(\r\n        map((response) => response.notes),\r\n        catchError(() => of([]))\r\n      ),\r\n      messages: this.messageService.getAdminMessages().pipe(\r\n        map((response) => response.messages || []),\r\n        catchError(() => of([]))\r\n      ),\r\n    }).pipe(\r\n      map(\r\n        ({ players, matches, currentLeague, allLeagues, notes, messages }) => {\r\n          const messagesList = Array.isArray(messages) ? messages : [];\r\n          return {\r\n            players: players as Player[],\r\n            matches: matches as Match[],\r\n            currentLeague,\r\n            allLeagues: allLeagues as AllLeagueRank[],\r\n            notes: notes as Note[],\r\n            messages: messagesList as Message[],\r\n            stats: {\r\n              totalPlayers: players.length,\r\n              totalMatches: matches.length,\r\n              totalMatchesLeft: matches.filter((m) => !m.isCompleted).length,\r\n              totalMessagesLeft: messagesList.filter(\r\n                (m: any) => !m.isRead && !m.isFromAdmin\r\n              ).length,\r\n            },\r\n          };\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load secondary data from server\r\n   */\r\n  private loadSecondaryDataFromServer(type: string): Observable<any> {\r\n    switch (type) {\r\n      case 'leagues':\r\n        return this.leagueService.getAdminAllLeagues();\r\n      case 'notes':\r\n        return this.noteService\r\n          .getAdminNotes()\r\n          .pipe(map((response) => response.notes));\r\n      case 'messages':\r\n        return this.messageService\r\n          .getAdminMessages()\r\n          .pipe(map((response) => response.messages || []));\r\n      default:\r\n        return of([]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update cached data after mutations\r\n   */\r\n  invalidateCache(\r\n    type: 'essential' | 'leagues' | 'notes' | 'messages' | 'all'\r\n  ): void {\r\n    switch (type) {\r\n      case 'essential':\r\n        this.lastEssentialUpdate = 0;\r\n        break;\r\n      case 'leagues':\r\n      case 'notes':\r\n      case 'messages':\r\n        this.lastSecondaryUpdate.set(type, 0);\r\n        this.secondaryDataCache.delete(type);\r\n        break;\r\n      case 'all':\r\n        this.lastEssentialUpdate = 0;\r\n        this.lastSecondaryUpdate.clear();\r\n        this.secondaryDataCache.clear();\r\n        break;\r\n    }\r\n  }\r\n\r\n  // ✅ تم حذف Background refresh تماماً - مالوش لازمة أصلاً\r\n\r\n  /**\r\n   * Get current cached essential data\r\n   */\r\n  getCurrentEssentialData(): AdminDashboardData | null {\r\n    return this.essentialDataCache$.value;\r\n  }\r\n\r\n  /**\r\n   * Update message count in stats\r\n   */\r\n  updateMessageCount(count: number): void {\r\n    const current = this.essentialDataCache$.value;\r\n    if (current) {\r\n      current.stats.totalMessagesLeft = count;\r\n      this.essentialDataCache$.next(current);\r\n    }\r\n  }\r\n\r\n  private getEmptyDashboardData(): AdminDashboardData {\r\n    return {\r\n      players: [],\r\n      matches: [],\r\n      currentLeague: null,\r\n      allLeagues: [],\r\n      notes: [],\r\n      messages: [],\r\n      stats: {\r\n        totalPlayers: 0,\r\n        totalMatches: 0,\r\n        totalMatchesLeft: 0,\r\n        totalMessagesLeft: 0,\r\n      },\r\n    };\r\n  }\r\n}\r\n","import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let bufferSize;\n    let refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n    }\n    else {\n        bufferSize = (configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity);\n    }\n    return share({\n        connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount,\n    });\n}\n","<!-- Admin Update Status Component -->\r\n\r\n<div class=\"block sm:flex transition-all duration-600\">\r\n  <!-- Sidebar -->\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white transition-all duration-600\"\r\n    [ngClass]=\"{\r\n      'w-64 p-4 sm:min-h-screen': isSidebarOpen,\r\n      'w-0 p-0': !isSidebarOpen\r\n    }\"\r\n  >\r\n    <h2\r\n      class=\"text-lg font-bold mb-4 flex justify-between overflow-hidden text-white\"\r\n    >\r\n      Players\r\n      <button (click)=\"toggleSidebar()\" class=\"text-gray-300 text-3xl\">\r\n        ×\r\n      </button>\r\n    </h2>\r\n    <ul *ngIf=\"isSidebarOpen\">\r\n      <li\r\n        *ngFor=\"let player of players\"\r\n        class=\"flex items-center justify-between p-2 cursor-pointer rounded-md hover:bg-gray-700\"\r\n        [class.bg-blue-600]=\"selectedPlayer?.playerId === player.playerId\"\r\n        (click)=\"selectPlayer(player)\"\r\n      >\r\n        <span class=\"text-white\">{{ player.fullName }}</span>\r\n        <button\r\n          (click)=\"confirmDelete(player, $event)\"\r\n          class=\"bg-red-600 px-2 py-1 text-sm rounded text-white hover:bg-red-700 transition\"\r\n        >\r\n          X\r\n        </button>\r\n      </li>\r\n    </ul>\r\n    <button\r\n      *ngIf=\"isSidebarOpen\"\r\n      class=\"mt-4 w-full bg-green-600 p-2 rounded text-white hover:bg-green-700 transition\"\r\n      (click)=\"openModal()\"\r\n    >\r\n      Add Player\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Main Content -->\r\n  <div\r\n    class=\"sm:flex-1 sm:p-2 transition-all duration-600 sm:container sm:mx-auto\"\r\n  >\r\n    <div *ngIf=\"selectedPlayer\" class=\"sm:w-4/6 mx-auto\">\r\n      <h2 class=\"text-2xl font-bold mb-4 text-center text-white\">\r\n        Matches for {{ selectedPlayer.fullName }}\r\n      </h2>\r\n\r\n      <table class=\"w-full border-collapse border border-gray-600 text-center\">\r\n        <thead>\r\n          <tr class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white\">\r\n            <th class=\"border border-gray-600 p-2\">Player 1</th>\r\n            <th class=\"border border-gray-600 p-2\">Player 2</th>\r\n            <th class=\"border border-gray-600 p-2\">Result</th>\r\n            <th class=\"border border-gray-600 p-2\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let match of displayMatches; let i = index\"\r\n            class=\"border border-gray-600\"\r\n            [ngClass]=\"i % 2 === 0 ? 'bg-gray-900' : 'bg-gray-950'\"\r\n          >\r\n            <td class=\"p-2 font-bold text-white\">{{ match.player1Name }}</td>\r\n            <td class=\"p-2 font-bold text-white\">{{ match.player2Name }}</td>\r\n            <td class=\"p-2 font-bold text-white\">\r\n              {{ match.score1 }} - {{ match.score2 }}\r\n            </td>\r\n            <td class=\"p-2\">\r\n              <button\r\n                class=\"bg-blue-600 px-2 py-1 rounded text-white hover:bg-blue-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, match.player1Id)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Win P1\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-blue-600 px-2 py-1 rounded text-white mx-1 hover:bg-blue-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, match.player2Id)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Win P2\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-yellow-600 px-2 py-1 rounded text-white hover:bg-yellow-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, null)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Draw\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-gray-600 px-2 py-1 rounded text-white ml-2 hover:bg-gray-700 transition-all\"\r\n                (click)=\"resetMatch(match.matchId)\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Undo\" }}\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <hr class=\"my-3 border-gray-600\" />\r\n\r\n    <!-- القائمة الأولية -->\r\n    <div>\r\n      <div class=\"grid grid-cols-3 lg:grid-cols-5 gap-4 pt-5\">\r\n        <button\r\n          (click)=\"toggleSidebar()\"\r\n          class=\"bg-blue-600 text-white px-3 py-2 rounded mb-4 hover:bg-blue-700 transition\"\r\n        >\r\n          ☰ Players\r\n        </button>\r\n        <button\r\n          routerLink=\"/admin/inbox\"\r\n          class=\"bg-orange-600 hover:bg-orange-700 text-white mb-4 px-3 py-2 rounded transition-all relative\"\r\n        >\r\n          Inbox\r\n          <div\r\n            class=\"absolute -top-2 -right-2 w-[30px] h-[30px] rounded-full bg-green-600 flex justify-center items-center\"\r\n            *ngIf=\"totalMessagesLeft > 0\"\r\n          >\r\n            <h4 class=\"text-white font-bold\">{{ totalMessagesLeft }}</h4>\r\n          </div>\r\n        </button>\r\n        <button\r\n          routerLink=\"/admin/teams-dashboard\"\r\n          class=\"bg-blue-600 hover:bg-blue-700 text-white mb-4 px-3 py-2 rounded transition-all\"\r\n        >\r\n          👥 Teams Tournament\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 text-white px-3 py-2 rounded mb-4 hover:bg-green-700 transition\"\r\n          (click)=\"openStartLeagueModal()\"\r\n          *ngIf=\"leagueData == null\"\r\n        >\r\n          Start New League\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 text-white px-3 py-2 rounded mb-4 hover:bg-red-700 transition\"\r\n          *ngIf=\"leagueData != null\"\r\n          (click)=\"showEndLeagueModal = true\"\r\n          s\r\n        >\r\n          End League\r\n        </button>\r\n        <!-- Tournament Stage Button -->\r\n        <button\r\n          class=\"bg-purple-600 text-white px-3 py-2 rounded mb-4 hover:bg-purple-700 transition font-bold\"\r\n          *ngIf=\"showTournamentStageButton && leagueData != null\"\r\n          (click)=\"onTournamentStageButtonClick()\"\r\n        >\r\n          🏆 {{ tournamentStageButtonText }}\r\n        </button>\r\n        <button\r\n          class=\"bg-indigo-600 text-white px-3 py-2 rounded mb-4 hover:bg-indigo-700 transition\"\r\n          (click)=\"openNoteModal()\"\r\n        >\r\n          Notes\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\"\r\n        *ngIf=\"leagueData\"\r\n      >\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">\r\n            League Description\r\n          </h3>\r\n          <p class=\"font-bold text-gray-300\">{{ leagueData.description }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">نوع البطولة</h3>\r\n          <p class=\"font-bold text-gray-300\">\r\n            <span *ngIf=\"leagueData.typeOfLeague === 0\">👤</span>\r\n            <span *ngIf=\"leagueData.typeOfLeague === 1\">👥</span>\r\n            <span *ngIf=\"leagueData.typeOfLeague === 2\">🏆</span>\r\n            {{ getLeagueTypeText(leagueData.typeOfLeague) }}\r\n          </p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">نظام البطولة</h3>\r\n          <p class=\"font-bold text-gray-300\">\r\n            <span *ngIf=\"leagueData.systemOfLeague === 0\">📊</span>\r\n            <span *ngIf=\"leagueData.systemOfLeague === 1\">⚔️</span>\r\n            {{\r\n              leagueData.systemOfLeague !== undefined\r\n                ? getSystemTypeText(leagueData.systemOfLeague)\r\n                : \"غير محدد\"\r\n            }}\r\n          </p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Start Date</h3>\r\n          <p class=\"font-bold text-gray-300\">\r\n            {{ leagueData.createdOn | date : \"fullDate\" }}\r\n          </p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">League Name</h3>\r\n          <p class=\"font-bold text-gray-300\">{{ leagueData.name }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8 container mx-auto\">\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">\r\n            Remaining Matches\r\n          </h3>\r\n          <p class=\"text-3xl font-bold text-red-500\">{{ totalMatchesLeft }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Total Matches</h3>\r\n          <p class=\"text-3xl font-bold text-green-500\">{{ totalMatches }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Total Players</h3>\r\n          <p class=\"text-3xl font-bold text-blue-500\">{{ totalPlayers }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- كل البطولات -->\r\n    <div class=\"text-center\">\r\n      <h2\r\n        class=\"mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-4xl lg:text-4xl text-white\"\r\n      >\r\n        All Leagues\r\n      </h2>\r\n\r\n      <div class=\"max-h-[350px] overflow-x-auto\">\r\n        <table class=\"min-w-full divide-y-2 divide-gray-600\">\r\n          <thead class=\"sticky top-0 bg-black bg-opacity-50 backdrop-blur-sm\">\r\n            <tr class=\"*:font-medium *:text-white\">\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Name</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Status</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Type</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League System</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Date</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">Winner</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"divide-y divide-gray-600\">\r\n            <tr\r\n              *ngFor=\"let league of leagues; let i = index\"\r\n              class=\"*:font-bold *:first:font-medium\"\r\n              [ngClass]=\"{\r\n                'bg-gray-900': i % 2 === 0,\r\n                'bg-gray-950': i % 2 !== 0\r\n              }\"\r\n            >\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ league.leagueName }}\r\n              </td>\r\n              <td\r\n                class=\"px-3 py-2 whitespace-nowrap\"\r\n                [class.text-green-500]=\"!league.isFinished\"\r\n                [class.text-red-500]=\"league.isFinished\"\r\n              >\r\n                {{ !league.isFinished ? \"Live Now!!\" : \"Finished\" }}\r\n              </td>\r\n\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ getLeagueTypeTextForTable(league.leagueType) }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ getSystemTypeTextForTable(league.systemOfLeague) }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ league.createdOn | date : \"yyyy/MM/dd\" }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ getWinnerForLeague(league) }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap\">\r\n                <button\r\n                  (click)=\"openDeleteLeagueModal(league.leagueId)\"\r\n                  class=\"bg-red-600 text-white px-3 py-2 rounded hover:bg-red-700 transition\"\r\n                >\r\n                  Delete League\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Delete League Modal -->\r\n  <div\r\n    *ngIf=\"showDeleteLeagueModal\"\r\n    class=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\r\n  >\r\n    <div\r\n      class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg shadow-lg w-96\"\r\n    >\r\n      <h2 class=\"text-xl font-bold text-white mb-4\">Confirm Delete</h2>\r\n      <p class=\"text-gray-300 mb-6\">\r\n        Are you sure you want to delete league \"{{\r\n          selectedLeagueToDelete?.leagueName\r\n        }}\"?\r\n      </p>\r\n      <div class=\"flex justify-end space-x-4\">\r\n        <button\r\n          (click)=\"closeDeleteLeagueModal()\"\r\n          class=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 transition\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          (click)=\"deleteConfirmedLeague()\"\r\n          class=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Delete Confirmation Modal -->\r\n  <div\r\n    *ngIf=\"showDeleteModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm Delete</h2>\r\n      <p class=\"text-gray-300\">\r\n        Are you sure you want to delete\r\n        <strong>{{ selectedPlayerToDelete?.fullName }}</strong\r\n        >?\r\n      </p>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"showDeleteModal = false\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n          (click)=\"deleteConfirmedPlayer()\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Add Player Modal -->\r\n  <div\r\n    *ngIf=\"showModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Add New Player</h2>\r\n      <input\r\n        type=\"text\"\r\n        [(ngModel)]=\"newPlayerName\"\r\n        class=\"border border-gray-600 p-2 w-full bg-gray-800 text-white rounded placeholder-gray-400\"\r\n        placeholder=\"Enter player name\"\r\n      />\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n          (click)=\"closeModal()\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n          (click)=\"addPlayer()\"\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Start League Modal -->\r\n  <div\r\n    *ngIf=\"showStartLeagueModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg w-96\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Start New League</h2>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Name</label\r\n        >\r\n        <input\r\n          type=\"text\"\r\n          [(ngModel)]=\"newLeague.name\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          placeholder=\"Enter league name\"\r\n        />\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Description</label\r\n        >\r\n        <textarea\r\n          [(ngModel)]=\"newLeague.description\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          placeholder=\"Enter league description\"\r\n          rows=\"3\"\r\n        ></textarea>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Type</label\r\n        >\r\n        <select\r\n          [(ngModel)]=\"newLeague.typeOfLeague\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n        >\r\n          <option [ngValue]=\"0\">Single</option>\r\n          <option [ngValue]=\"1\">Multi</option>\r\n          <option [ngValue]=\"2\">Groups</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >System Of League</label\r\n        >\r\n        <select\r\n          [(ngModel)]=\"newLeague.systemOfLeague\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n        >\r\n          <option [ngValue]=\"0\">Points</option>\r\n          <option [ngValue]=\"1\">Classic</option>\r\n        </select>\r\n      </div>\r\n      <!-- Rounds Per Match field - only shown when Points system is selected -->\r\n      <div class=\"mb-4\" *ngIf=\"newLeague.systemOfLeague === 0\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >Rounds Per Match</label\r\n        >\r\n        <input\r\n          type=\"number\"\r\n          [(ngModel)]=\"newLeague.roundsPerMatch\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          placeholder=\"Enter number of rounds per match (e.g., 3)\"\r\n        />\r\n        <small class=\"text-gray-400 text-xs mt-1 block\">\r\n          Number of rounds each player will play in a match (Points system only)\r\n        </small>\r\n      </div>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"closeStartLeagueModal()\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n          (click)=\"startLeague()\"\r\n        >\r\n          Start League\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- End League Confirmation Modal -->\r\n  <div\r\n    *ngIf=\"showEndLeagueModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm End League</h2>\r\n      <p class=\"text-gray-300\">\r\n        Are you sure you want to end the current league? This action cannot be\r\n        undone.\r\n      </p>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"showEndLeagueModal = false\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n          (click)=\"resetTournament(leagueData!.id)\"\r\n        >\r\n          Confirm End\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Notes Modal -->\r\n  <div\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    *ngIf=\"showNoteModal\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-4 rounded-lg\">\r\n      <div>\r\n        <h2 class=\"font-bold text-white text-center\">Add New Note</h2>\r\n        <div>\r\n          <label for=\"Notes\">\r\n            <span class=\"text-sm font-medium text-gray-300\">Notes</span>\r\n            <div class=\"relative m-2 overflow-hidden rounded border-gray-600\">\r\n              <textarea\r\n                id=\"Notes\"\r\n                class=\"w-full resize-none p-3 border border-gray-600 bg-gray-800 text-white placeholder-gray-400\"\r\n                rows=\"4\"\r\n                [(ngModel)]=\"newNote\"\r\n              ></textarea>\r\n              <div class=\"flex items-center justify-end gap-2 p-1.5\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"rounded p-2 font-bold text-white bg-green-600 hover:bg-green-700 transition\"\r\n                  (click)=\"sendNote()\"\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div class=\"p-6\">\r\n        <div *ngFor=\"let note of notes\">\r\n          <div\r\n            class=\"mt-4 flex items-center justify-end\"\r\n            *ngIf=\"note.isDeleted == false\"\r\n          >\r\n            <p class=\"font-bold px-3 text-white\">\r\n              {{ note.content }}\r\n            </p>\r\n            <button\r\n              class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n              (click)=\"toggleDeleteNote(note.id)\"\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n              (click)=\"toggleHideNote(note)\"\r\n              *ngIf=\"note.isHidden == true\"\r\n            >\r\n              Show\r\n            </button>\r\n            <button\r\n              class=\"bg-purple-600 px-4 py-2 text-white rounded hover:bg-purple-700 transition\"\r\n              (click)=\"toggleHideNote(note)\"\r\n              *ngIf=\"note.isHidden == false\"\r\n            >\r\n              Hide\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n        (click)=\"closeNoteModal()\"\r\n      >\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { MatchService } from 'src/app/core/services/match.service';\r\nimport { PlayerService } from './../../core/services/player.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  Player,\r\n  Match,\r\n  StartLeagueDto,\r\n  League,\r\n  AllLeagueRank,\r\n  Note,\r\n  TournamentStage,\r\n  LeagueType,\r\n  SystemOfLeague,\r\n} from 'src/app/models/interfaces';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LeagueService } from 'src/app/core/services/league.service';\r\nimport { NoteService } from 'src/app/core/services/note.service';\r\nimport {\r\n  AdminDashboardService,\r\n  AdminDashboardData,\r\n} from 'src/app/core/services/admin-dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-players',\r\n  templateUrl: './players.component.html',\r\n  styleUrls: ['./players.component.css'],\r\n})\r\nexport class PlayersComponent implements OnInit, OnDestroy {\r\n  // Main data properties\r\n  players: Player[] = [];\r\n  selectedPlayer: Player | null = null;\r\n  playerMatches: Match[] = [];\r\n  displayMatches: Match[] = [];\r\n  notes: Note[] = [];\r\n\r\n  // UI state properties\r\n  showModal = false;\r\n  newPlayerName = '';\r\n  isSidebarOpen = false;\r\n  showDeleteModal = false;\r\n  showNoteModal = false;\r\n  showDeleteLeagueModal = false;\r\n  showEndLeagueModal = false;\r\n  loadingMatches: { [matchId: number]: boolean } = {};\r\n\r\n  // League management properties\r\n  leagueData: League | null = null;\r\n  showStartLeagueModal: boolean = false;\r\n  newLeague: StartLeagueDto = {\r\n    name: '',\r\n    description: '',\r\n    typeOfLeague: 0,\r\n    systemOfLeague: 0,\r\n    roundsPerMatch: 3, // Default value for Points system\r\n  };\r\n\r\n  // Statistics properties\r\n  totalMessagesLeft: number = 0;\r\n  totalPlayers: number = 0;\r\n  totalMatches: number = 0;\r\n  totalMatchesLeft: number = 0;\r\n  totalMessages: number = 0;\r\n  leagues: AllLeagueRank[] = [];\r\n  newNote: string = '';\r\n  selectedLeagueToDelete: AllLeagueRank | null = null;\r\n\r\n  // Tournament stage management properties\r\n  currentMatches: Match[] = [];\r\n  showTournamentStageButton = false;\r\n  tournamentStageButtonText = '';\r\n  tournamentStageButtonAction: (() => void) | null = null;\r\n\r\n  // Queue management properties\r\n  private requestQueue: Array<() => Promise<void>> = [];\r\n  private isProcessingQueue = false;\r\n  showResetModal: boolean = false;\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private matchService: MatchService,\r\n    private toastr: ToastrService,\r\n    private leagueService: LeagueService,\r\n    private noteService: NoteService,\r\n    private adminDashboardService: AdminDashboardService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // تحميل البيانات الأساسية مع Smart Caching\r\n    this.loadEssentialData();\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  private loadEssentialData(): void {\r\n    this.adminDashboardService.getEssentialData().subscribe({\r\n      next: (data: AdminDashboardData) => {\r\n        // ✅ عرض جميع البيانات فوراً من الكاش\r\n        this.players = data.players;\r\n        this.currentMatches = data.matches;\r\n        this.leagueData = data.currentLeague;\r\n        this.leagues = data.allLeagues.reverse();\r\n\r\n        this.notes = data.notes;\r\n\r\n        // ✅ عرض إحصائيات كاملة بما فيها عدد الرسائل\r\n        this.totalPlayers = data.stats.totalPlayers;\r\n        this.totalMatches = data.stats.totalMatches;\r\n        this.totalMatchesLeft = data.stats.totalMatchesLeft;\r\n        this.totalMessagesLeft = data.stats.totalMessagesLeft;\r\n\r\n        // Update tournament stage button\r\n        this.updateTournamentStageButton();\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حدث خطأ أثناء تحميل البيانات');\r\n      },\r\n    });\r\n  }\r\n\r\n  toggleSidebar(): void {\r\n    this.isSidebarOpen = !this.isSidebarOpen;\r\n    this.selectedPlayer = null;\r\n  }\r\n\r\n  selectPlayer(player: Player): void {\r\n    this.selectedPlayer = player;\r\n    this.loadMatches();\r\n  }\r\n\r\n  loadMatches(): void {\r\n    if (!this.selectedPlayer) return;\r\n    this.matchService.getAdminMatches().subscribe((matches) => {\r\n      this.playerMatches = matches\r\n        .filter(\r\n          (m) =>\r\n            m.player1Id === this.selectedPlayer!.playerId ||\r\n            m.player2Id === this.selectedPlayer!.playerId\r\n        )\r\n        .sort((a, b) => {\r\n          const nameA =\r\n            (a.player1Id === this.selectedPlayer!.playerId\r\n              ? a.player2Name\r\n              : a.player1Name\r\n            )?.toLowerCase() ?? '';\r\n          const nameB =\r\n            (b.player1Id === this.selectedPlayer!.playerId\r\n              ? b.player2Name\r\n              : b.player1Name\r\n            )?.toLowerCase() ?? '';\r\n          return nameA.localeCompare(nameB);\r\n        });\r\n      this.displayMatches = this.playerMatches.map((match) => {\r\n        if (match.player2Id === this.selectedPlayer!.playerId) {\r\n          return {\r\n            ...match,\r\n            player1Name: match.player2Name,\r\n            player2Name: match.player1Name,\r\n            score1: match.score2,\r\n            score2: match.score1,\r\n            player1Id: match.player2Id,\r\n            player2Id: match.player1Id,\r\n          };\r\n        }\r\n        return { ...match };\r\n      });\r\n      this.playerMatches.forEach((match) => {\r\n        this.loadingMatches[match.matchId] = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  private addToQueue(request: () => Promise<void>): void {\r\n    this.requestQueue.push(request);\r\n    this.processQueue();\r\n  }\r\n\r\n  private async processQueue(): Promise<void> {\r\n    if (this.isProcessingQueue || this.requestQueue.length === 0) return;\r\n\r\n    this.isProcessingQueue = true;\r\n    const request = this.requestQueue.shift();\r\n\r\n    if (request) {\r\n      try {\r\n        await request();\r\n      } catch (error) {}\r\n    }\r\n\r\n    this.isProcessingQueue = false;\r\n    this.processQueue();\r\n  }\r\n\r\n  updateMatch(matchId: number, winnerId: number | null) {\r\n    this.loadingMatches[matchId] = true;\r\n\r\n    this.addToQueue(\r\n      () =>\r\n        new Promise<void>((resolve, reject) => {\r\n          this.matchService.updateMatch(matchId, winnerId).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                this.toastr.success(response.message);\r\n                // Invalidate cache and reload essential data\r\n                this.adminDashboardService.invalidateCache('essential');\r\n                this.loadEssentialData();\r\n                this.loadMatches();\r\n              } else {\r\n                this.toastr.error(response.message);\r\n              }\r\n              this.loadingMatches[matchId] = false;\r\n              resolve();\r\n            },\r\n            error: (error) => {\r\n              this.toastr.error(error.error.message);\r\n              this.loadingMatches[matchId] = false;\r\n              reject(error);\r\n            },\r\n          });\r\n        })\r\n    );\r\n  }\r\n\r\n  resetMatch(matchId: number) {\r\n    this.loadingMatches[matchId] = true;\r\n\r\n    this.addToQueue(\r\n      () =>\r\n        new Promise<void>((resolve, reject) => {\r\n          this.matchService.resetMatch(matchId).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                this.toastr.success(response.message);\r\n                this.loadMatches();\r\n              } else {\r\n                this.toastr.error(response.message, 'Error');\r\n              }\r\n              this.loadingMatches[matchId] = false;\r\n              resolve();\r\n            },\r\n            error: (error) => {\r\n              this.toastr.error(error.error.message);\r\n              this.loadingMatches[matchId] = false;\r\n              reject(error);\r\n            },\r\n          });\r\n        })\r\n    );\r\n  }\r\n\r\n  deletePlayer(playerId: number, event: Event): void {\r\n    event.stopPropagation();\r\n    this.playerService.deletePlayer(playerId).subscribe(() => {\r\n      this.toastr.warning('Player deleted!', 'Deleted');\r\n      this.loadMatches();\r\n      // Invalidate cache and reload essential data\r\n      this.adminDashboardService.invalidateCache('essential');\r\n      this.loadEssentialData();\r\n      this.updateTournamentStageButton(); // Update button state after deleting player\r\n      if (this.selectedPlayer?.playerId === playerId) {\r\n        this.selectedPlayer = null;\r\n        this.playerMatches = [];\r\n        this.displayMatches = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal(): void {\r\n    this.showModal = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.showModal = false;\r\n    this.newPlayerName = '';\r\n  }\r\n\r\n  addPlayer(): void {\r\n    if (!this.newPlayerName.trim()) return;\r\n    this.playerService.addPlayer(this.newPlayerName).subscribe((response) => {\r\n      if (response.success) {\r\n        this.toastr.success(response.message);\r\n        // Invalidate cache and reload essential data\r\n        this.adminDashboardService.invalidateCache('essential');\r\n        this.loadEssentialData();\r\n        this.loadMatches();\r\n        this.closeModal();\r\n      } else this.toastr.warning(response.message);\r\n    });\r\n  }\r\n\r\n  selectedPlayerToDelete: { playerId: number; fullName: string } | null = null;\r\n\r\n  confirmDelete(player: { playerId: number; fullName: string }, event: Event) {\r\n    event.stopPropagation();\r\n    this.selectedPlayerToDelete = player;\r\n    this.showDeleteModal = true;\r\n  }\r\n\r\n  deleteConfirmedPlayer() {\r\n    if (this.selectedPlayerToDelete) {\r\n      this.playerService\r\n        .deletePlayer(this.selectedPlayerToDelete.playerId)\r\n        .subscribe((response) => {\r\n          if (response.success) {\r\n            this.toastr.success(response.message);\r\n            // Invalidate cache and reload essential data\r\n            this.adminDashboardService.invalidateCache('essential');\r\n            this.loadEssentialData();\r\n            this.loadMatches();\r\n          } else {\r\n            this.toastr.error(response.message, 'Error');\r\n          }\r\n        });\r\n\r\n      this.showDeleteModal = false;\r\n      this.selectedPlayerToDelete = null;\r\n    }\r\n  }\r\n\r\n  resetTournament(id: number): void {\r\n    this.leagueService.resetLeague(id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.showResetModal = false;\r\n          this.loadMatches();\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n          this.showEndLeagueModal = false;\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  openStartLeagueModal(): void {\r\n    this.showStartLeagueModal = true;\r\n    this.newLeague = {\r\n      name: '',\r\n      description: '',\r\n      typeOfLeague: 0,\r\n      systemOfLeague: 0,\r\n      roundsPerMatch: 3, // Default value for Points system\r\n    };\r\n  }\r\n\r\n  closeStartLeagueModal(): void {\r\n    this.showStartLeagueModal = false;\r\n  }\r\n\r\n  startLeague(): void {\r\n    if (!this.newLeague.name.trim()) {\r\n      this.toastr.error('League name is required', 'Error');\r\n      return;\r\n    }\r\n\r\n    // Validate rounds per match for Points system\r\n    if (\r\n      this.newLeague.systemOfLeague === 0 &&\r\n      (!this.newLeague.roundsPerMatch || this.newLeague.roundsPerMatch < 1)\r\n    ) {\r\n      this.toastr.error(\r\n        'Rounds per match is required for Points system and must be at least 1',\r\n        'Error'\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.leagueService.startLeague(this.newLeague).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.closeStartLeagueModal();\r\n          this.loadMatches();\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message, 'Error');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n        // console.error(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  DeleteLeague(id: number): void {\r\n    this.leagueService.DeleteLeague(id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.showDeleteLeagueModal = false;\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  openDeleteLeagueModal(leagueId: number): void {\r\n    this.selectedLeagueToDelete =\r\n      this.leagues.find((l) => l.leagueId === leagueId) || null;\r\n    this.showDeleteLeagueModal = true;\r\n  }\r\n\r\n  closeDeleteLeagueModal(): void {\r\n    this.showDeleteLeagueModal = false;\r\n    this.selectedLeagueToDelete = null;\r\n  }\r\n\r\n  deleteConfirmedLeague(): void {\r\n    if (this.selectedLeagueToDelete) {\r\n      this.DeleteLeague(this.selectedLeagueToDelete.leagueId);\r\n      this.leagues = this.leagues.filter(\r\n        (l) => l.leagueId !== this.selectedLeagueToDelete?.leagueId\r\n      );\r\n      this.closeDeleteLeagueModal();\r\n    }\r\n  }\r\n\r\n  sendNote(): void {\r\n    if (!this.newNote.trim()) return;\r\n\r\n    this.noteService.sendNote(this.newNote).subscribe({\r\n      next: (res) => {\r\n        this.toastr.success(res.message);\r\n        this.newNote = '';\r\n        // Invalidate cache and reload all data\r\n        this.adminDashboardService.invalidateCache('essential');\r\n        this.loadEssentialData();\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتبعت الملاحظة'),\r\n    });\r\n  }\r\n\r\n  toggleHideNote(note: any): void {\r\n    this.noteService.toggleMarHide(note.id, !note.isHidden).subscribe({\r\n      next: (res) => {\r\n        this.toastr.success(res.message);\r\n        this.loadEssentialData(); // ✅ محل getNotes()\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتغير الظهور'),\r\n    });\r\n  }\r\n\r\n  toggleDeleteNote(noteId: number): void {\r\n    this.noteService.DeleteNote(noteId, false).subscribe({\r\n      next: (res) => {\r\n        this.toastr.warning(res.message);\r\n        this.loadEssentialData(); // ✅ محل getNotes()\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتحذف '),\r\n    });\r\n  }\r\n\r\n  openNoteModal(): void {\r\n    this.showNoteModal = true;\r\n  }\r\n  closeNoteModal(): void {\r\n    this.showNoteModal = false;\r\n  }\r\n\r\n  // Method to determine tournament stage and update button\r\n  // This method checks the current tournament stage and shows appropriate buttons\r\n  // For Groups type leagues, it shows buttons to progress through tournament stages\r\n  private updateTournamentStageButton(): void {\r\n    // Only show button for Groups type leagues\r\n    if (!this.leagueData) {\r\n      this.showTournamentStageButton = false;\r\n      return;\r\n    }\r\n\r\n    // Check if it's a Groups type league (can be string 'Groups' or number 2)\r\n    const leagueType = this.leagueData.typeOfLeague as any;\r\n    const isGroupsLeague =\r\n      leagueType === LeagueType.Groups ||\r\n      leagueType === 'Groups' ||\r\n      leagueType === 2;\r\n\r\n    if (!isGroupsLeague) {\r\n      this.showTournamentStageButton = false;\r\n      return;\r\n    }\r\n\r\n    // Check if there are players but no matches (need to start group stage)\r\n    if (this.totalPlayers > 0 && this.currentMatches.length === 0) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'ابدأ دور المجموعات';\r\n      this.tournamentStageButtonAction = () => this.startGroupStage();\r\n      return;\r\n    }\r\n\r\n    // Check current stage based on matches\r\n    const groupMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.GroupStage ||\r\n        m.tournamentStage === 'GroupStage'\r\n    );\r\n    const quarterMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.QuarterFinals ||\r\n        m.tournamentStage === 'QuarterFinals'\r\n    );\r\n    const semiMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.SemiFinals ||\r\n        m.tournamentStage === 'SemiFinals'\r\n    );\r\n    const finalMatches = this.currentMatches.filter(\r\n      (m) => m.stage === TournamentStage.Final || m.tournamentStage === 'Final'\r\n    );\r\n\r\n    // Check if all matches in a stage are completed\r\n    const allGroupMatchesCompleted =\r\n      groupMatches.length > 0 &&\r\n      groupMatches.every((match) => match.isCompleted);\r\n    const allQuarterMatchesCompleted =\r\n      quarterMatches.length > 0 &&\r\n      quarterMatches.every((match) => match.isCompleted);\r\n    const allSemiMatchesCompleted =\r\n      semiMatches.length > 0 && semiMatches.every((match) => match.isCompleted);\r\n\r\n    // Show quarter button when group stage is completed and no quarter matches exist\r\n    if (\r\n      groupMatches.length > 0 &&\r\n      allGroupMatchesCompleted &&\r\n      quarterMatches.length === 0\r\n    ) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'ابدأ دور ربع النهائي';\r\n      this.tournamentStageButtonAction = () => this.startQuarterStage();\r\n      return;\r\n    }\r\n\r\n    // Show semi button when quarter stage is completed and no semi matches exist\r\n    if (\r\n      quarterMatches.length > 0 &&\r\n      allQuarterMatchesCompleted &&\r\n      semiMatches.length === 0\r\n    ) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'ابدأ دور نصف النهائي';\r\n      this.tournamentStageButtonAction = () => this.startSemiFinalStage();\r\n      return;\r\n    }\r\n\r\n    // Show final button when semi stage is completed and no final matches exist\r\n    if (\r\n      semiMatches.length > 0 &&\r\n      allSemiMatchesCompleted &&\r\n      finalMatches.length === 0\r\n    ) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'ابدأ النهائي';\r\n      this.tournamentStageButtonAction = () => this.startFinalStage();\r\n      return;\r\n    }\r\n\r\n    if (finalMatches.length > 0) {\r\n      // Final stage is active, hide button\r\n\r\n      this.showTournamentStageButton = false;\r\n      return;\r\n    }\r\n\r\n    // Default: hide button\r\n    this.showTournamentStageButton = false;\r\n  }\r\n\r\n  // Tournament stage action methods\r\n  startGroupStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.createGroupsAndMatches(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  startQuarterStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startKnockoutStage(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n        // console.error(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  startSemiFinalStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startSemiFinals(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  startFinalStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startFinal(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  // Method to handle tournament stage button click\r\n  onTournamentStageButtonClick(): void {\r\n    if (this.tournamentStageButtonAction) {\r\n      this.tournamentStageButtonAction();\r\n    }\r\n  }\r\n\r\n  // Helper method to get readable league type\r\n  getLeagueTypeText(type: LeagueType): string {\r\n    switch (type) {\r\n      case LeagueType.Single:\r\n        return 'بطولة فردية';\r\n      case LeagueType.Multi:\r\n        return 'بطولة متعددة';\r\n      case LeagueType.Groups:\r\n        return 'بطولة مجموعات';\r\n      default:\r\n        return 'غير محدد';\r\n    }\r\n  }\r\n\r\n  // Helper method to get readable system type\r\n  getSystemTypeText(system: SystemOfLeague): string {\r\n    switch (system) {\r\n      case SystemOfLeague.Points:\r\n        return 'نظام النقاط';\r\n      case SystemOfLeague.Classic:\r\n        return 'النظام الكلاسيكي';\r\n      default:\r\n        return 'غير محدد';\r\n    }\r\n  }\r\n\r\n  // Helper method to get readable league type for table (handles both string and number)\r\n  getLeagueTypeTextForTable(leagueType: any): string {\r\n    if (leagueType === 0 || leagueType === 'Single') {\r\n      return 'بطولة فردية';\r\n    } else if (leagueType === 1 || leagueType === 'Multi') {\r\n      return 'بطولة متعددة';\r\n    } else if (leagueType === 2 || leagueType === 'Groups') {\r\n      return 'بطولة مجموعات';\r\n    } else {\r\n      return 'غير محدد';\r\n    }\r\n  }\r\n\r\n  // Helper method to get readable system type for table (handles both string and number)\r\n  getSystemTypeTextForTable(systemType: any): string {\r\n    if (systemType === 0 || systemType === 'Points') {\r\n      return 'نظام النقاط';\r\n    } else if (systemType === 1 || systemType === 'Classic') {\r\n      return 'النظام الكلاسيكي';\r\n    } else {\r\n      return 'غير محدد';\r\n    }\r\n  }\r\n\r\n  // دالة جديدة لتحديد الفائز بناءً على نوع البطولة\r\n  getWinnerForLeague(league: AllLeagueRank): string {\r\n    // إذا كانت البطولة من نوع المجموعات\r\n    if (\r\n      league.leagueType === 2 ||\r\n      league.leagueType === LeagueType.Groups ||\r\n      String(league.leagueType) === 'Groups'\r\n    ) {\r\n      // البحث عن ماتش الفاينال في knockoutMatches\r\n      if (league.knockoutMatches && league.knockoutMatches.length > 0) {\r\n        const finalMatch = league.knockoutMatches.find((match) => {\r\n          const stage = match.stage || match.tournamentStage;\r\n          return stage === 'Final';\r\n        });\r\n\r\n        if (finalMatch && finalMatch.isCompleted && finalMatch.winnerId) {\r\n          // البحث عن اسم الفائز\r\n          if (finalMatch.winnerId === finalMatch.player1Id) {\r\n            return finalMatch.player1Name;\r\n          } else if (finalMatch.winnerId === finalMatch.player2Id) {\r\n            return finalMatch.player2Name;\r\n          }\r\n        }\r\n      }\r\n\r\n      // إذا لم نجد فائز في الفاينال، نبحث في الماتشات العادية\r\n      if (league.matches && league.matches.length > 0) {\r\n        const finalMatch = league.matches.find((match) => {\r\n          const stage = match.stage || match.tournamentStage;\r\n          return stage === 'Final';\r\n        });\r\n\r\n        if (finalMatch && finalMatch.isCompleted && finalMatch.winnerId) {\r\n          if (finalMatch.winnerId === finalMatch.player1Id) {\r\n            return finalMatch.player1Name;\r\n          } else if (finalMatch.winnerId === finalMatch.player2Id) {\r\n            return finalMatch.player2Name;\r\n          }\r\n        }\r\n      }\r\n\r\n      // إذا لم نجد فائز بعد، نعود للطريقة القديمة\r\n      return league.players && league.players.length > 0\r\n        ? league.players[0].fullName\r\n        : 'No Winner Yet';\r\n    }\r\n\r\n    // للبطولات الأخرى (فردية أو متعددة)، نستخدم الطريقة القديمة\r\n    return league.players && league.players.length > 0\r\n      ? league.players[0].fullName\r\n      : 'No Winner Yet';\r\n  }\r\n}\r\n","<div\r\n  class=\"container mx-auto p-4 flex flex-col sm:flex-row overflow-hidden h-screen\"\r\n>\r\n  <!-- Chats List -->\r\n  <div\r\n    class=\"w-full sm:w-1/3 border-r border-gray-600 sm:block\"\r\n    [ngClass]=\"{ hidden: selectedChat }\"\r\n  >\r\n    <div class=\"flex items-center justify-between mb-6\">\r\n      <h2 class=\"text-2xl font-bold text-white\">📥 Inbox</h2>\r\n    </div>\r\n\r\n    <!-- No Chats -->\r\n    <div *ngIf=\"playerChats.length === 0\" class=\"text-center text-gray-300\">\r\n      No messages here 📭\r\n    </div>\r\n\r\n    <!-- Chats List -->\r\n    <div\r\n      *ngIf=\"playerChats.length > 0\"\r\n      class=\"space-y-2 overflow-y-auto max-h-[calc(100vh-120px)]\"\r\n    >\r\n      <div\r\n        *ngFor=\"let chat of playerChats; trackBy: trackByPlayerId\"\r\n        class=\"p-4 backdrop-blur-sm border border-gray-600 rounded-lg hover:bg-gray-700 cursor-pointer flex items-center justify-between\"\r\n        (click)=\"openChat(chat.senderId)\"\r\n      >\r\n        <div>\r\n          <p class=\"font-bold text-white\">{{ chat.senderFullName }}</p>\r\n          <p class=\"text-sm text-gray-300 truncate\">{{ chat.lastMessage }}</p>\r\n        </div>\r\n        <span\r\n          *ngIf=\"chat.unreadCount > 0\"\r\n          class=\"bg-green-600 text-white text-xs font-bold rounded-full px-2 py-1\"\r\n        >\r\n          {{ chat.unreadCount }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Chat View -->\r\n  <div\r\n    class=\"w-full sm:w-2/3 flex flex-col h-full relative\"\r\n    [ngClass]=\"{ block: selectedChat, 'hidden sm:flex': !selectedChat }\"\r\n  >\r\n    <div *ngIf=\"selectedChat; else noChatSelected\" class=\"flex flex-col h-full\">\r\n      <!-- Chat Header - Fixed -->\r\n      <div\r\n        class=\"fixed left-0 right-0 z-40 p-2 backdrop-blur-sm border-b border-gray-600 flex items-center justify-between bg-black bg-opacity-90\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n        [style.top.px]=\"navbarHeight\"\r\n      >\r\n        <div class=\"flex items-center\">\r\n          <button\r\n            (click)=\"closeChat()\"\r\n            class=\"mr-4 text-gray-300 hover:text-white transition\"\r\n          >\r\n            <i class=\"fa-solid fa-arrow-left\" style=\"color: #ffffff\"></i>\r\n          </button>\r\n          <div>\r\n            <p class=\"font-bold text-white text-sm p-0\">\r\n              {{ selectedChat.senderFullName }}\r\n            </p>\r\n            <p class=\"text-xs text-gray-400 p-0\">\r\n              {{ selectedChat.senderPhoneNumber }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Messages - Scrollable Area with padding for fixed header and footer -->\r\n      <div\r\n        #messagesContainer\r\n        class=\"flex-1 p-4 overflow-y-auto backdrop-blur-sm\"\r\n        [style.margin-top.px]=\"navbarHeight + 80\"\r\n        style=\"margin-bottom: 80px\"\r\n      >\r\n        <div\r\n          *ngFor=\"\r\n            let message of selectedChat.messages;\r\n            trackBy: trackByMessageId\r\n          \"\r\n          class=\"mb-4\"\r\n          [ngClass]=\"{\r\n            'text-right': !message.isFromAdmin,\r\n            'text-left': message.isFromAdmin\r\n          }\"\r\n        >\r\n          <div\r\n            class=\"inline-block p-3 rounded-lg max-w-xs\"\r\n            [ngClass]=\"{\r\n              'bg-green-700': !message.isFromAdmin,\r\n              'bg-gray-700 ': message.isFromAdmin\r\n            }\"\r\n          >\r\n            <p class=\"text-white\">{{ message.content }}</p>\r\n            <p class=\"text-xs mt-1 text-gray-300\">\r\n              {{ message.sentAt | date : \"MMM d, y, hh:mm a\" }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Reply Input - Fixed -->\r\n      <div\r\n        class=\"fixed bottom-0 left-0 right-0 z-50 p-4 bg-black bg-opacity-90 backdrop-blur-sm border-t border-gray-600\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n      >\r\n        <form (ngSubmit)=\"sendReply()\" class=\"flex items-center gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"replyMessages[selectedChat.messages[0].id]\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n            (ngModelChange)=\"\r\n              replyMessages[selectedChat.messages[0].id] = $event\r\n            \"\r\n            placeholder=\"Write your reply...\"\r\n            class=\"flex-1 p-2 border border-gray-600 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-600 placeholder-gray-400\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 transition disabled:bg-gray-600\"\r\n            [disabled]=\"!replyMessages[selectedChat.messages[0].id]\"\r\n          >\r\n            Reply\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Placeholder when no chat is selected -->\r\n    <ng-template #noChatSelected>\r\n      <div class=\"w-full flex items-center justify-center text-gray-300\">\r\n        Select a chat to view messages 📩\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { MessageService } from 'src/app/core/services/message.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Message } from 'src/app/models/interfaces';\r\nimport { AdminDashboardService } from 'src/app/core/services/admin-dashboard.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\ninterface PlayerChat {\r\n  senderId: string;\r\n  senderFullName: string;\r\n  senderPhoneNumber: string;\r\n  lastMessage: string;\r\n  lastMessageDate: string;\r\n  unreadCount: number;\r\n  messages: Message[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-inbox',\r\n  templateUrl: './inbox.component.html',\r\n  styleUrls: ['./inbox.component.css'],\r\n})\r\nexport class InboxComponent implements OnInit, AfterViewChecked, OnDestroy {\r\n  playerChats: PlayerChat[] = [];\r\n  selectedPlayerId: string | null = null;\r\n  selectedChat: PlayerChat | null = null;\r\n  replyMessages: { [messageId: number]: string } = {};\r\n  private updateStatusSubscription?: Subscription;\r\n  private refreshSubscription?: Subscription;\r\n  navbarHeight = 60; // default navbar height\r\n\r\n  @ViewChild('messagesContainer')\r\n  messagesContainer!: ElementRef<HTMLDivElement>;\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private toastr: ToastrService,\r\n    private cdr: ChangeDetectorRef,\r\n    private adminDashboardService: AdminDashboardService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadAdminMessages();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.updateStatusSubscription) {\r\n      this.updateStatusSubscription.unsubscribe();\r\n    }\r\n    if (this.refreshSubscription) {\r\n      this.refreshSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n  private loadAdminMessages(): void {\r\n    // Always load fresh data from server for immediate updates\r\n    this.loadFromServer();\r\n  }\r\n\r\n  private loadFromCache(): void {\r\n    // تم إلغاء الكاش للادمن، سيتم التحميل دائماً من السيرفر\r\n    this.loadFromServer();\r\n  }\r\n\r\n  private loadFromServer(): void {\r\n    this.adminDashboardService.getSecondaryData('messages').subscribe({\r\n      next: (messages) => {\r\n        if (messages && messages.length > 0) {\r\n          const groupedMessages = this.groupMessagesBySender(messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n  \r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  // Add refresh method for immediate updates\r\n  refreshMessages(): void {\r\n    this.messageService.getAdminMessages().subscribe({\r\n      next: (response) => {\r\n        if (response && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n          \r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.selectedChat && this.messagesContainer) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  loadMessages(): void {\r\n    this.messageService.getMessages().subscribe({\r\n      next: (response) => {\r\n        if (response && response.messages) {\r\n          this.processMessages(response.messages);\r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل الآن');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حصل خطأ أثناء جلب الرسائل');\r\n      },\r\n    });\r\n  }\r\n\r\n  private processMessages(messages: Message[]): void {\r\n    const groupedMessages = this.groupMessagesBySender(messages);\r\n    // ترتيب حسب الأحدث (آخر رسالة)\r\n    this.playerChats = groupedMessages.sort(\r\n      (a, b) =>\r\n        new Date(b.lastMessageDate).getTime() -\r\n        new Date(a.lastMessageDate).getTime()\r\n    );\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  groupMessagesBySender(messages: Message[]): PlayerChat[] {\r\n    const chatMap: { [senderId: string]: PlayerChat } = {};\r\n    messages\r\n      .filter((msg) => !msg.isDeleted)\r\n      .forEach((msg) => {\r\n        const playerId = msg.isFromAdmin ? msg.senderId : msg.senderId;\r\n        if (!chatMap[playerId]) {\r\n          chatMap[playerId] = {\r\n            senderId: playerId,\r\n            senderFullName: msg.senderFullName,\r\n            senderPhoneNumber: msg.senderPhoneNumber,\r\n            lastMessage: '',\r\n            lastMessageDate: '',\r\n            unreadCount: 0,\r\n            messages: [],\r\n          };\r\n        }\r\n        chatMap[playerId].messages.push(msg);\r\n        if (!msg.isFromAdmin && !msg.isRead) {\r\n          chatMap[playerId].unreadCount++;\r\n        }\r\n      });\r\n\r\n    return Object.values(chatMap).map((chat) => {\r\n      // ترتيب الرسائل من الأقدم للأحدث\r\n      chat.messages = chat.messages.sort(\r\n        (a, b) => new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n      );\r\n      // آخر رسالة\r\n      const lastMsg = chat.messages[chat.messages.length - 1];\r\n      chat.lastMessage = lastMsg?.content ?? '';\r\n      chat.lastMessageDate = lastMsg?.sentAt ?? '';\r\n      return chat;\r\n    });\r\n  }\r\n\r\n  openChat(playerId: string): void {\r\n    this.selectedPlayerId = playerId;\r\n    this.selectedChat =\r\n      this.playerChats.find((chat) => chat.senderId === playerId) || null;\r\n    if (this.selectedChat) {\r\n      this.selectedChat.messages\r\n        .filter((msg) => !msg.isRead && !msg.isFromAdmin)\r\n        .forEach((msg) => {\r\n          this.messageService.toggleMarkMessage(msg.id, true).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                msg.isRead = true;\r\n                this.selectedChat!.unreadCount =\r\n                  this.selectedChat!.messages.filter(\r\n                    (m) => !m.isRead && !m.isFromAdmin\r\n                  ).length;\r\n                this.cdr.detectChanges();\r\n              }\r\n            },\r\n            error: (err) => {\r\n              this.toastr.error('حصل خطأ أثناء تحديث حالة الرسالة');\r\n            },\r\n          });\r\n        });\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  closeChat(): void {\r\n    this.selectedPlayerId = null;\r\n    this.selectedChat = null;\r\n    this.replyMessages = {};\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  sendReply(): void {\r\n    if (!this.selectedChat) {\r\n      this.toastr.warning('الرجاء اختيار محادثة');\r\n      return;\r\n    }\r\n    const replyContent =\r\n      this.replyMessages[this.selectedChat.messages[0].id]?.trim();\r\n    if (!replyContent) {\r\n      this.toastr.warning('الرجاء كتابة رد');\r\n      return;\r\n    }\r\n\r\n    this.messageService\r\n      .sendAdminReply(this.selectedChat.senderId, replyContent)\r\n      .subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم إرسال الرد');\r\n            this.replyMessages[this.selectedChat!.messages[0].id] = '';\r\n\r\n            const newMessage: Message = {\r\n              id: Math.random(),\r\n              senderId: this.selectedChat!.senderId,\r\n              senderFullName: 'Admin',\r\n              senderPhoneNumber: '',\r\n              content: replyContent,\r\n              isRead: true,\r\n              isDeleted: false,\r\n              sentAt: new Date().toISOString(),\r\n              isFromAdmin: true,\r\n            };\r\n\r\n            // تحديث الرسائل في المحادثة المحددة\r\n            this.selectedChat!.messages.push(newMessage);\r\n            this.selectedChat!.messages.sort(\r\n              (a, b) =>\r\n                new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n            );\r\n\r\n            // تحديث آخر رسالة في قائمة المحادثات\r\n            this.selectedChat!.lastMessage = replyContent;\r\n            this.selectedChat!.lastMessageDate = newMessage.sentAt;\r\n\r\n            // إعادة ترتيب قائمة المحادثات حسب الأحدث\r\n            this.playerChats.sort(\r\n              (a, b) =>\r\n                new Date(b.lastMessageDate).getTime() -\r\n                new Date(a.lastMessageDate).getTime()\r\n            );\r\n\r\n            // تحديث المحادثة المحددة بعد إعادة الترتيب\r\n            this.selectedChat =\r\n              this.playerChats.find(\r\n                (chat) => chat.senderId === this.selectedPlayerId\r\n              ) || null;\r\n\r\n            this.cdr.detectChanges();\r\n          } else {\r\n            this.toastr.error(response.message || 'فشل إرسال الرد');\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.toastr.error('حصل خطأ أثناء إرسال الرد');\r\n        },\r\n      });\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    if (this.messagesContainer) {\r\n      const container = this.messagesContainer.nativeElement;\r\n      container.scrollTop = container.scrollHeight;\r\n    }\r\n  }\r\n\r\n  trackByPlayerId(index: number, chat: PlayerChat): string {\r\n    return chat.senderId;\r\n  }\r\n\r\n  trackByMessageId(index: number, message: Message): number {\r\n    return message.id;\r\n  }\r\n}\r\n","<!-- Friendlies Dashboard Component -->\r\n\r\n<div class=\"block sm:flex transition-all duration-600\">\r\n  <!-- Sidebar -->\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white transition-all duration-600\"\r\n    [ngClass]=\"{\r\n      'w-64 p-4 sm:min-h-screen': isSidebarOpen,\r\n      'w-0 p-0': !isSidebarOpen\r\n    }\"\r\n  >\r\n    <h2\r\n      class=\"text-lg font-bold mb-4 flex justify-between overflow-hidden text-white\"\r\n    >\r\n      Friendly Players\r\n      <button (click)=\"toggleSidebar()\" class=\"text-gray-300 text-3xl\">\r\n        ×\r\n      </button>\r\n    </h2>\r\n    <ul *ngIf=\"isSidebarOpen\">\r\n      <li\r\n        *ngFor=\"let player of players\"\r\n        class=\"flex items-center justify-between p-2 cursor-pointer rounded-md hover:bg-gray-700\"\r\n        [class.bg-blue-600]=\"selectedPlayer?.playerId === player.playerId\"\r\n        (click)=\"selectPlayer(player)\"\r\n      >\r\n        <span\r\n          class=\"text-white cursor-pointer hover:text-blue-300\"\r\n          (click)=\"openRecordMatchModal()\"\r\n          >{{ player.fullName }}</span\r\n        >\r\n        <button\r\n          (click)=\"confirmDelete(player, $event)\"\r\n          class=\"bg-red-600 px-2 py-1 text-sm rounded text-white hover:bg-red-700 transition\"\r\n        >\r\n          X\r\n        </button>\r\n      </li>\r\n    </ul>\r\n    <button\r\n      *ngIf=\"isSidebarOpen\"\r\n      class=\"mt-4 w-full bg-green-600 p-2 rounded text-white hover:bg-green-700 transition\"\r\n      (click)=\"openModal()\"\r\n    >\r\n      Add Player\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Main Content -->\r\n  <div\r\n    class=\"sm:flex-1 sm:p-2 transition-all duration-600 sm:container sm:mx-auto\"\r\n  >\r\n \r\n    <!-- Friendlies Tab Content -->\r\n    <div *ngIf=\"activeTab === 'friendlies'\">\r\n      <div *ngIf=\"selectedPlayer\" class=\"sm:w-4/6 mx-auto\">\r\n        <h2 class=\"text-2xl font-bold mb-4 text-center text-white\">\r\n          Friendly Matches for {{ selectedPlayer.fullName }}\r\n        </h2>\r\n      </div>\r\n      <hr class=\"my-3 border-gray-600\" />\r\n\r\n      <!-- القائمة الأولية -->\r\n      <div>\r\n        <div class=\"flex justify-evenly pt-5\">\r\n          <button\r\n            (click)=\"toggleSidebar()\"\r\n            class=\"bg-blue-600 text-white px-3 py-2 rounded mb-4 hover:bg-blue-700 transition\"\r\n          >\r\n            ☰ Players\r\n          </button>\r\n\r\n          <button\r\n            routerLink=\"/admin/friendly-inbox\"\r\n            class=\"bg-purple-600 hover:bg-purple-700 text-white mb-4 px-3 py-2 rounded transition-all relative\"\r\n          >\r\n            📬 Friendly Inbox\r\n            <div\r\n              class=\"absolute -top-2 -right-2 w-[30px] h-[30px] rounded-full bg-green-600 flex justify-center items-center\"\r\n              *ngIf=\"totalUnreadFriendlyMessages > 0\"\r\n            >\r\n              <h4 class=\"text-white font-bold\">\r\n                {{ totalUnreadFriendlyMessages }}\r\n              </h4>\r\n            </div>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"text-center mb-8\">\r\n          <h2\r\n            class=\"mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-4xl lg:text-4xl text-white\"\r\n          >\r\n            Quick Actions\r\n          </h2>\r\n\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4\">\r\n            <button\r\n              class=\"bg-teal-600 text-white p-4 rounded-lg hover:bg-teal-700 transition-all\"\r\n              (click)=\"openRecordMatchModal()\"\r\n              [disabled]=\"players.length === 0\"\r\n            >\r\n              <h3 class=\"text-lg font-bold\">Record Match</h3>\r\n              <p class=\"text-sm\">Record a new friendly match</p>\r\n            </button>\r\n\r\n            <button\r\n              class=\"bg-green-600 text-white p-4 rounded-lg hover:bg-green-700 transition-all\"\r\n              (click)=\"openModal()\"\r\n            >\r\n              <h3 class=\"text-lg font-bold\">Add New Player</h3>\r\n              <p class=\"text-sm\">Register a new friendly player</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- All Matches Section -->\r\n      <div class=\"mt-8\">\r\n        <!-- Filters Section -->\r\n        <div class=\"mb-6 p-2 bg-gray-800 rounded-lg\">\r\n          <div class=\"mb-4\">\r\n            <h4 class=\"text-lg font-semibold text-white\">Filter Matches</h4>\r\n          </div>\r\n          <div class=\"grid grid-cols-2 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n                >Date Range</label\r\n              >\r\n              <select\r\n                [(ngModel)]=\"filterForm.dateFilter\"\r\n                (ngModelChange)=\"onFilterChange()\"\r\n                class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n              >\r\n                <option [ngValue]=\"DateFilter.AllTime\">All Time</option>\r\n                <option [ngValue]=\"DateFilter.Today\">Today</option>\r\n                <option [ngValue]=\"DateFilter.Last3Days\">Last 3 Days</option>\r\n                <option [ngValue]=\"DateFilter.LastWeek\">Last Week</option>\r\n                <option [ngValue]=\"DateFilter.LastMonth\">Last Month</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n                >Player</label\r\n              >\r\n              <select\r\n                [(ngModel)]=\"filterForm.playerId\"\r\n                (ngModelChange)=\"onFilterChange()\"\r\n                class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n              >\r\n                <option [ngValue]=\"0\">All Players</option>\r\n                <option\r\n                  *ngFor=\"let player of getAllActivePlayers()\"\r\n                  [ngValue]=\"player.playerId\"\r\n                >\r\n                  {{ player.fullName }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"flex justify-center mt-4\">\r\n            <button\r\n              class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n              (click)=\"clearFilters()\"\r\n            >\r\n              Clear Filters\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"w-full text-white\">\r\n            <thead class=\"text-center\">\r\n              <tr class=\"border-b border-gray-600 text-center\">\r\n                <th class=\"p-3\">Date</th>\r\n                <th class=\"p-3\">Player 1</th>\r\n                <th class=\"p-3\">Score</th>\r\n                <th class=\"p-3\">Player 2</th>\r\n                <th class=\"p-3\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                *ngFor=\"let match of getPaginatedMatches()\"\r\n                class=\"border-b border-gray-700 hover:bg-gray-800\"\r\n              >\r\n                <td class=\"p-3\">\r\n                  {{ match.playedOn | date : \"shortDate\" }}\r\n                </td>\r\n                <td class=\"p-3\">\r\n                  {{ match.player1Name || getPlayerName(match.player1Id) }}\r\n                </td>\r\n                <td class=\"p-3 text-center\">\r\n                  <span class=\"font-bold text-lg\">\r\n                    {{ match.player1Score }} - {{ match.player2Score }}\r\n                  </span>\r\n                </td>\r\n                <td class=\"p-3\">\r\n                  {{ match.player2Name || getPlayerName(match.player2Id) }}\r\n                </td>\r\n                <td class=\"p-3 text-center\">\r\n                  <div class=\"flex justify-center space-x-2\">\r\n                    <button\r\n                      class=\"bg-blue-600 px-3 py-1 text-white rounded hover:bg-blue-700 transition text-sm\"\r\n                      (click)=\"editMatch(match)\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      class=\"bg-red-600 px-3 py-1 text-white rounded hover:bg-red-700 transition text-sm\"\r\n                      (click)=\"deleteMatchFromList(match.matchId)\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <!-- Pagination -->\r\n        <div *ngIf=\"totalPages > 1\" class=\"flex justify-center mt-6\">\r\n          <div class=\"flex space-x-2\">\r\n            <button\r\n              class=\"bg-gray-600 px-3 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n              [disabled]=\"currentPage === 1\"\r\n              (click)=\"changePage(currentPage - 1)\"\r\n            >\r\n              Previous\r\n            </button>\r\n\r\n            <span\r\n              *ngFor=\"let page of [].constructor(totalPages); let i = index\"\r\n              class=\"flex\"\r\n            >\r\n              <button\r\n                class=\"px-3 py-2 text-white rounded transition\"\r\n                [class.bg-blue-600]=\"currentPage === i + 1\"\r\n                [class.bg-gray-600]=\"currentPage !== i + 1\"\r\n                [class.hover:bg-blue-700]=\"currentPage === i + 1\"\r\n                [class.hover:bg-gray-700]=\"currentPage !== i + 1\"\r\n                (click)=\"changePage(i + 1)\"\r\n              >\r\n                {{ i + 1 }}\r\n              </button>\r\n            </span>\r\n\r\n            <button\r\n              class=\"bg-gray-600 px-3 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n              [disabled]=\"currentPage === totalPages\"\r\n              (click)=\"changePage(currentPage + 1)\"\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"text-center mt-4 text-gray-300\">\r\n          Showing {{ (currentPage - 1) * itemsPerPage + 1 }} -\r\n          {{ Math.min(currentPage * itemsPerPage, allMatches.length) }} of\r\n          {{ allMatches.length }} matches\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Quick Actions -->\r\n    </div>\r\n    <!-- End Friendlies Tab -->\r\n\r\n    <!-- Delete Confirmation Modal -->\r\n    <div\r\n      *ngIf=\"showDeleteModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n        <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm Delete</h2>\r\n        <p class=\"text-gray-300\">\r\n          Are you sure you want to delete\r\n          <strong>{{ selectedPlayerToDelete?.fullName }}</strong\r\n          >?\r\n        </p>\r\n        <div class=\"mt-4 flex justify-end\">\r\n          <button\r\n            class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n            (click)=\"showDeleteModal = false\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n            (click)=\"deleteConfirmedPlayer()\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Player Modal -->\r\n    <div\r\n      *ngIf=\"showModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n        <h2 class=\"text-lg font-bold mb-4 text-white\">\r\n          Add New Friendly Player\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          [(ngModel)]=\"friendlyPlayerName\"\r\n          class=\"border border-gray-600 p-2 w-full bg-gray-800 text-white rounded placeholder-gray-400\"\r\n          placeholder=\"Enter player name\"\r\n        />\r\n        <div class=\"mt-4 flex justify-end\">\r\n          <button\r\n            class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n            (click)=\"closeModal()\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n            (click)=\"addPlayer()\"\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Record Match Modal -->\r\n    <div\r\n      *ngIf=\"showRecordMatchModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div\r\n        class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg w-96 max-h-[90vh] overflow-y-auto\"\r\n      >\r\n        <h2 class=\"text-lg font-bold mb-4 text-white\">\r\n          {{ selectedPlayerForMatch ? \"Edit Match\" : \"Record New Match\" }}\r\n        </h2>\r\n\r\n        <!-- Player selection for new match -->\r\n        <div *ngIf=\"!selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 1</label\r\n          >\r\n          <select\r\n            [(ngModel)]=\"matchForm.player1Id\"\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n          >\r\n            <option [ngValue]=\"0\">Select Player 1...</option>\r\n            <option\r\n              *ngFor=\"let player of getAllActivePlayers()\"\r\n              [ngValue]=\"player.playerId\"\r\n            >\r\n              {{ player.fullName }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div *ngIf=\"!selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 2</label\r\n          >\r\n          <select\r\n            [(ngModel)]=\"matchForm.player2Id\"\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n          >\r\n            <option [ngValue]=\"0\">Select Player 2...</option>\r\n            <option\r\n              *ngFor=\"\r\n                let opponent of getOpponentsForPlayer(matchForm.player1Id)\r\n              \"\r\n              [ngValue]=\"opponent.playerId\"\r\n            >\r\n              {{ opponent.fullName }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- Fixed player names for edit mode -->\r\n        <div *ngIf=\"selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 1</label\r\n          >\r\n          <div\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-700 text-white\"\r\n          >\r\n            {{\r\n              selectedPlayerForMatch.player1Name ||\r\n                getPlayerName(matchForm.player1Id)\r\n            }}\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 2</label\r\n          >\r\n          <div\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-700 text-white\"\r\n          >\r\n            {{\r\n              selectedPlayerForMatch.player2Name ||\r\n                getPlayerName(matchForm.player2Id)\r\n            }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"grid grid-cols-2 gap-4 mb-4\">\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n              >Player 1 Score</label\r\n            >\r\n            <input\r\n              type=\"number\"\r\n              [(ngModel)]=\"matchForm.player1Score\"\r\n              min=\"0\"\r\n              (input)=\"validateScore('player1')\"\r\n              placeholder=\"Enter score\"\r\n              class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n              >Player 2 Score</label\r\n            >\r\n            <input\r\n              type=\"number\"\r\n              [(ngModel)]=\"matchForm.player2Score\"\r\n              min=\"0\"\r\n              (input)=\"validateScore('player2')\"\r\n              placeholder=\"Enter score\"\r\n              class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex justify-end space-x-4\">\r\n          <button\r\n            class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n            (click)=\"closeRecordMatchModal()\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n            (click)=\"selectedPlayerForMatch ? updateMatch() : recordNewMatch()\"\r\n            [disabled]=\"\r\n              !matchForm.player1Id ||\r\n              !matchForm.player2Id ||\r\n              (!selectedPlayerForMatch &&\r\n                matchForm.player1Id === matchForm.player2Id) ||\r\n              (matchForm.player1Score === 0 && matchForm.player2Score === 0) ||\r\n              isRecordingMatch\r\n            \"\r\n          >\r\n            {{\r\n              isRecordingMatch\r\n                ? \"Processing...\"\r\n                : selectedPlayerForMatch\r\n                ? \"Update Match\"\r\n                : \"Record Match\"\r\n            }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FriendlyMatchService } from '../../core/services/friendly-match.service';\r\nimport { FriendlyMessageService } from '../../core/services/friendly-message.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DateFilter } from 'friendly-match-types';\r\nimport { calculateUnreadCount } from 'friendly-message-types';\r\n\r\n@Component({\r\n  selector: 'app-friendlies',\r\n  templateUrl: './friendlies.component.html',\r\n  styleUrls: ['./friendlies.component.css'],\r\n})\r\nexport class FriendliesComponent implements OnInit {\r\n  // Tab management\r\n  activeTab: 'friendlies' = 'friendlies';\r\n\r\n  // Sidebar state\r\n  isSidebarOpen = false;\r\n\r\n  // Players data\r\n  players: any[] = [];\r\n  selectedPlayer: any = null;\r\n  displayMatches: any[] = [];\r\n\r\n  // Modals\r\n  showModal = false;\r\n  showDeleteModal = false;\r\n  showRecordMatchModal = false;\r\n  selectedPlayerToDelete: any = null;\r\n  selectedPlayerForMatch: any = null;\r\n\r\n  // Form data (for friendly matches)\r\n  friendlyPlayerName = '';\r\n  matchForm = {\r\n    player1Id: 0,\r\n    player2Id: 0,\r\n    player1Score: null as number | null,\r\n    player2Score: null as number | null,\r\n    playedOn: new Date(),\r\n  };\r\n\r\n  // Loading states\r\n  isRecordingMatch = false;\r\n\r\n  // Statistics\r\n  totalPlayers = 0;\r\n  totalMatches = 0;\r\n  totalUnreadFriendlyMessages = 0;\r\n\r\n  // All matches pagination\r\n  allMatches: any[] = [];\r\n  currentPage = 1;\r\n  itemsPerPage = 10;\r\n  totalPages = 0;\r\n  Math = Math; // Make Math available in template\r\n\r\n  // Filter options\r\n  filterForm = {\r\n    playerId: 0,\r\n    opponentIds: [] as number[],\r\n    dateFilter: DateFilter.AllTime,\r\n  };\r\n  DateFilter = DateFilter; // Make enum available in template\r\n\r\n  constructor(\r\n    private friendlyMatchService: FriendlyMatchService,\r\n    private friendlyMessageService: FriendlyMessageService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadPlayers();\r\n    this.loadAllMatches();\r\n    this.loadUnreadFriendlyMessagesCount();\r\n  }\r\n\r\n  loadUnreadFriendlyMessagesCount(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: any) => {\r\n        if (response.success && response.messages) {\r\n          this.totalUnreadFriendlyMessages = calculateUnreadCount(\r\n            response.messages\r\n          );\r\n        } else {\r\n          this.totalUnreadFriendlyMessages = 0;\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading unread friendly messages count:', error);\r\n        this.totalUnreadFriendlyMessages = 0;\r\n      },\r\n    });\r\n  }\r\n\r\n  toggleSidebar(): void {\r\n    this.isSidebarOpen = !this.isSidebarOpen;\r\n  }\r\n\r\n  loadPlayers(): void {\r\n    this.friendlyMatchService.getAllFriendlyPlayers().subscribe({\r\n      next: (players: any) => {\r\n        this.players = players;\r\n        this.totalPlayers = players.length;\r\n        this.calculateStatistics();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل اللاعبين',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  selectPlayer(player: any): void {\r\n    this.selectedPlayer = player;\r\n    this.loadPlayerMatches(player.playerId);\r\n  }\r\n\r\n  loadPlayerMatches(playerId: number): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        // Get the player's name\r\n        const player = this.players.find((p) => p.playerId === playerId);\r\n        const playerName = player?.fullName;\r\n\r\n        this.displayMatches = matches.filter(\r\n          (match: any) =>\r\n            match.player1Name === playerName || match.player2Name === playerName\r\n        );\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل مباريات اللاعب',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  calculateStatistics(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        this.totalMatches = matches.length;\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل الإحصائيات',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Modal methods (for friendly players)\r\n  openModal(): void {\r\n    this.showModal = true;\r\n    this.friendlyPlayerName = '';\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.showModal = false;\r\n    this.friendlyPlayerName = '';\r\n  }\r\n\r\n  addPlayer(): void {\r\n    if (!this.friendlyPlayerName.trim()) {\r\n      this.toastr.warning('الرجاء إدخال اسم اللاعب', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    this.friendlyMatchService\r\n      .addFriendlyPlayerAsync(this.friendlyPlayerName)\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success(\r\n              `تم إضافة اللاعب ${this.friendlyPlayerName} بنجاح`,\r\n              'تم الإضافة'\r\n            );\r\n            // Refresh cache and reload players\r\n            this.friendlyMatchService.refreshFriendlyPlayers();\r\n            this.loadPlayers();\r\n            this.closeModal();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل إضافة اللاعب',\r\n              'خطأ في الإضافة'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء إضافة اللاعب',\r\n            'خطأ في الإضافة'\r\n          );\r\n        },\r\n      });\r\n  }\r\n\r\n  confirmDelete(player: any, event: Event): void {\r\n    event.stopPropagation();\r\n    this.selectedPlayerToDelete = player;\r\n    this.showDeleteModal = true;\r\n  }\r\n\r\n  deleteConfirmedPlayer(): void {\r\n    if (!this.selectedPlayerToDelete) return;\r\n\r\n    this.friendlyMatchService\r\n      .deleteFriendlyPlayerAsync(this.selectedPlayerToDelete.playerId)\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success(\r\n              `تم حذف اللاعب ${this.selectedPlayerToDelete.fullName} بنجاح`,\r\n              'تم الحذف'\r\n            );\r\n            // Refresh cache and reload players\r\n            this.friendlyMatchService.refreshFriendlyPlayers();\r\n            this.loadPlayers();\r\n            if (\r\n              this.selectedPlayer?.playerId ===\r\n              this.selectedPlayerToDelete.playerId\r\n            ) {\r\n              this.selectedPlayer = null;\r\n              this.displayMatches = [];\r\n            }\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل حذف اللاعب',\r\n              'خطأ في الحذف'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message || error.message || 'حصل خطأ أثناء حذف اللاعب',\r\n            'خطأ في الحذف'\r\n          );\r\n        },\r\n      });\r\n\r\n    this.showDeleteModal = false;\r\n    this.selectedPlayerToDelete = null;\r\n  }\r\n\r\n  getActivePlayersCount(): number {\r\n    return this.players.filter((p) => p.isActive).length;\r\n  }\r\n\r\n  getRecentMatches(): any[] {\r\n    return this.displayMatches.slice(0, 10);\r\n  }\r\n\r\n  // Record Match Modal methods\r\n  openRecordMatchModal(player?: any): void {\r\n    this.selectedPlayerForMatch = player || null;\r\n    this.matchForm.player1Id = player?.playerId || 0;\r\n    this.matchForm.player2Id = 0;\r\n    this.matchForm.player1Score = null;\r\n    this.matchForm.player2Score = null;\r\n    this.matchForm.playedOn = new Date();\r\n    this.showRecordMatchModal = true;\r\n  }\r\n\r\n  closeRecordMatchModal(): void {\r\n    this.showRecordMatchModal = false;\r\n    this.selectedPlayerForMatch = null;\r\n    this.matchForm = {\r\n      player1Id: 0,\r\n      player2Id: 0,\r\n      player1Score: 0,\r\n      player2Score: 0,\r\n      playedOn: new Date(),\r\n    };\r\n  }\r\n\r\n  recordNewMatch(): void {\r\n    if (!this.matchForm.player1Id || !this.matchForm.player2Id) {\r\n      this.toastr.warning('الرجاء اختيار كلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    // Only check for same player in new match mode, not edit mode\r\n    if (\r\n      !this.selectedPlayerForMatch &&\r\n      this.matchForm.player1Id === this.matchForm.player2Id\r\n    ) {\r\n      this.toastr.warning(\r\n        'لا يمكن أن يكون اللاعب الأول والثاني نفس الشخص',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === null ||\r\n      this.matchForm.player2Score === null\r\n    ) {\r\n      this.toastr.warning('الرجاء إدخال النقاط لكلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (this.matchForm.player1Score < 0 || this.matchForm.player2Score < 0) {\r\n      this.toastr.warning('لا يمكن أن تكون النقاط سالبة', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === 0 &&\r\n      this.matchForm.player2Score === 0\r\n    ) {\r\n      this.toastr.warning(\r\n        'يجب أن يكون لدى لاعب واحد على الأقل نقاط إيجابية (0-0 غير مسموح)',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    const matchData = {\r\n      player1Id: this.matchForm.player1Id,\r\n      player2Id: this.matchForm.player2Id,\r\n      player1Score: this.matchForm.player1Score,\r\n      player2Score: this.matchForm.player2Score,\r\n      playedOn: this.matchForm.playedOn,\r\n    };\r\n\r\n    this.isRecordingMatch = true;\r\n\r\n    this.friendlyMatchService.recordFriendlyMatchAsync(matchData).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          // Get player names for the toast message\r\n          const player1 = this.players.find(\r\n            (p) => p.playerId === this.matchForm.player1Id\r\n          );\r\n          const player2 = this.players.find(\r\n            (p) => p.playerId === this.matchForm.player2Id\r\n          );\r\n\r\n          this.toastr.success(\r\n            `تم تسجيل المباراة بنجاح: ${player1?.fullName} (${this.matchForm.player1Score}) - ${player2?.fullName} (${this.matchForm.player2Score})`,\r\n            'تم تسجيل المباراة'\r\n          );\r\n\r\n          // Refresh cache and reload data\r\n          this.friendlyMatchService.refreshFriendlyMatches();\r\n          this.friendlyMatchService.refreshFriendlyPlayers();\r\n          this.loadPlayers();\r\n          this.calculateStatistics();\r\n          if (this.selectedPlayer) {\r\n            this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n          }\r\n          this.loadAllMatches();\r\n          this.closeRecordMatchModal();\r\n        } else {\r\n          this.toastr.error(\r\n            response.message || 'فشل تسجيل المباراة',\r\n            'خطأ في التسجيل'\r\n          );\r\n        }\r\n        this.isRecordingMatch = false;\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تسجيل المباراة',\r\n          'خطأ في التسجيل'\r\n        );\r\n        this.isRecordingMatch = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  getOpponentsForPlayer(playerId: number): any[] {\r\n    // In edit mode, allow selecting any player except the current player1\r\n    if (this.selectedPlayerForMatch) {\r\n      return this.players.filter(\r\n        (p) => p.playerId !== playerId && p.isActive !== false\r\n      );\r\n    }\r\n    // In new match mode, filter out the selected player1\r\n    return this.players.filter(\r\n      (p) => p.playerId !== playerId && p.isActive !== false\r\n    );\r\n  }\r\n\r\n  getAllActivePlayers(): any[] {\r\n    // If isActive is undefined, consider all players as active\r\n    return this.players.filter((p) => p.isActive !== false);\r\n  }\r\n\r\n  validateScore(player: 'player1' | 'player2'): void {\r\n    if (player === 'player1') {\r\n      if (\r\n        this.matchForm.player1Score !== null &&\r\n        this.matchForm.player1Score < 0\r\n      ) {\r\n        this.matchForm.player1Score = 0;\r\n      }\r\n    } else {\r\n      if (\r\n        this.matchForm.player2Score !== null &&\r\n        this.matchForm.player2Score < 0\r\n      ) {\r\n        this.matchForm.player2Score = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  // All matches management\r\n  loadAllMatches(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        this.allMatches = matches.sort(\r\n          (a: any, b: any) =>\r\n            new Date(b.playedOn).getTime() - new Date(a.playedOn).getTime()\r\n        );\r\n        this.totalMatches = matches.length;\r\n        this.totalPages = Math.ceil(this.allMatches.length / this.itemsPerPage);\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Cache-based filtering\r\n  loadFilteredMatchesFromCache(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (allMatches: any) => {\r\n        let filteredMatches = [...allMatches];\r\n\r\n        // Apply date filter\r\n        if (this.filterForm.dateFilter !== DateFilter.AllTime) {\r\n          const now = new Date();\r\n          let cutoffDate: Date;\r\n\r\n          switch (this.filterForm.dateFilter) {\r\n            case DateFilter.Today:\r\n              cutoffDate = new Date(\r\n                now.getFullYear(),\r\n                now.getMonth(),\r\n                now.getDate()\r\n              );\r\n              break;\r\n            case DateFilter.Last3Days:\r\n              cutoffDate = new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            case DateFilter.LastWeek:\r\n              cutoffDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            case DateFilter.LastMonth:\r\n              cutoffDate = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            default:\r\n              cutoffDate = new Date(0);\r\n          }\r\n\r\n          filteredMatches = filteredMatches.filter(\r\n            (match) => new Date(match.playedOn) >= cutoffDate\r\n          );\r\n        }\r\n\r\n        // Apply player filter\r\n        if (this.filterForm.playerId) {\r\n          // Get the selected player's name\r\n          const selectedPlayer = this.players.find(\r\n            (p) => p.playerId === this.filterForm.playerId\r\n          );\r\n          const selectedPlayerName = selectedPlayer?.fullName;\r\n\r\n          filteredMatches = filteredMatches.filter((match) => {\r\n            const isMatch =\r\n              match.player1Name === selectedPlayerName ||\r\n              match.player2Name === selectedPlayerName;\r\n\r\n            return isMatch;\r\n          });\r\n\r\n          // Reorder matches so selected player is always Player 1\r\n          filteredMatches = this.reorderMatchesForSelectedPlayer(\r\n            filteredMatches,\r\n            selectedPlayerName\r\n          );\r\n        }\r\n\r\n        // Apply opponent filter\r\n        if (\r\n          this.filterForm.opponentIds &&\r\n          this.filterForm.opponentIds.length > 0\r\n        ) {\r\n          // Get opponent names\r\n          const opponentNames = this.filterForm.opponentIds\r\n            .map((id) => {\r\n              const player = this.players.find((p) => p.playerId === id);\r\n              return player?.fullName;\r\n            })\r\n            .filter((name) => name);\r\n\r\n          filteredMatches = filteredMatches.filter(\r\n            (match) =>\r\n              opponentNames.includes(match.player1Name) ||\r\n              opponentNames.includes(match.player2Name)\r\n          );\r\n        }\r\n\r\n        // Sort by date (newest first)\r\n        filteredMatches.sort(\r\n          (a, b) =>\r\n            new Date(b.playedOn).getTime() - new Date(a.playedOn).getTime()\r\n        );\r\n\r\n        this.allMatches = filteredMatches;\r\n        this.totalMatches = filteredMatches.length;\r\n        this.totalPages = Math.ceil(this.allMatches.length / this.itemsPerPage);\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات المفلترة',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Helper method to reorder matches so selected player is always Player 1\r\n  private reorderMatchesForSelectedPlayer(\r\n    matches: any[],\r\n    selectedPlayerName: string\r\n  ): any[] {\r\n    return matches.map((match) => {\r\n      // If the selected player is already Player 1, keep as is\r\n      if (match.player1Name === selectedPlayerName) {\r\n        return match;\r\n      }\r\n\r\n      // If the selected player is Player 2, swap the players\r\n      if (match.player2Name === selectedPlayerName) {\r\n        return {\r\n          ...match,\r\n          player1Name: match.player2Name,\r\n          player2Name: match.player1Name,\r\n          player1Score: match.player2Score,\r\n          player2Score: match.player1Score,\r\n          player1Id: match.player2Id,\r\n          player2Id: match.player1Id,\r\n        };\r\n      }\r\n\r\n      // If neither player matches (shouldn't happen with our filter), keep as is\r\n      return match;\r\n    });\r\n  }\r\n\r\n  loadFilteredMatches(): void {\r\n    const filter: any = {\r\n      page: this.currentPage,\r\n      pageSize: this.itemsPerPage,\r\n      dateFilter: this.filterForm.dateFilter,\r\n    };\r\n\r\n    if (this.filterForm.playerId) {\r\n      filter.playerId = this.filterForm.playerId;\r\n    }\r\n    if (this.filterForm.opponentIds && this.filterForm.opponentIds.length > 0) {\r\n      filter.opponentIds = this.filterForm.opponentIds;\r\n    }\r\n\r\n    this.friendlyMatchService.getFilteredMatches(filter).subscribe({\r\n      next: (result: any) => {\r\n        this.allMatches = result.matches;\r\n        this.totalMatches = result.totalCount;\r\n        this.totalPages = result.totalPages;\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات المفلترة',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  onFilterChange(): void {\r\n    this.currentPage = 1;\r\n    this.loadFilteredMatchesFromCache();\r\n  }\r\n\r\n  clearFilters(): void {\r\n    this.filterForm = {\r\n      playerId: 0,\r\n      opponentIds: [],\r\n      dateFilter: DateFilter.AllTime,\r\n    };\r\n    this.currentPage = 1;\r\n    this.loadAllMatches();\r\n  }\r\n\r\n  getPaginatedMatches(): any[] {\r\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n    const endIndex = startIndex + this.itemsPerPage;\r\n    return this.allMatches.slice(startIndex, endIndex);\r\n  }\r\n\r\n  changePage(page: number): void {\r\n    if (page >= 1 && page <= this.totalPages) {\r\n      this.currentPage = page;\r\n    }\r\n  }\r\n\r\n  getPlayerName(playerId: number): string {\r\n    const player = this.players.find((p) => p.playerId === playerId);\r\n    return player ? player.fullName : 'Unknown Player';\r\n  }\r\n\r\n  // Edit match functionality\r\n  editMatch(match: any): void {\r\n    // Find player IDs by names\r\n    const player1 = this.players.find((p) => p.fullName === match.player1Name);\r\n    const player2 = this.players.find((p) => p.fullName === match.player2Name);\r\n\r\n    this.matchForm = {\r\n      player1Id: player1?.playerId || 0,\r\n      player2Id: player2?.playerId || 0,\r\n      player1Score: match.player1Score,\r\n      player2Score: match.player2Score,\r\n      playedOn: new Date(match.playedOn),\r\n    };\r\n    this.selectedPlayerForMatch = match;\r\n    this.showRecordMatchModal = true;\r\n  }\r\n\r\n  updateMatch(): void {\r\n    if (!this.selectedPlayerForMatch) return;\r\n\r\n    if (!this.matchForm.player1Id || !this.matchForm.player2Id) {\r\n      this.toastr.warning('الرجاء اختيار كلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    // In edit mode, we don't need to check for same player since names are fixed\r\n\r\n    if (\r\n      this.matchForm.player1Score === null ||\r\n      this.matchForm.player2Score === null\r\n    ) {\r\n      this.toastr.warning('الرجاء إدخال النقاط لكلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (this.matchForm.player1Score < 0 || this.matchForm.player2Score < 0) {\r\n      this.toastr.warning('لا يمكن أن تكون النقاط سالبة', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === 0 &&\r\n      this.matchForm.player2Score === 0\r\n    ) {\r\n      this.toastr.warning(\r\n        'يجب أن يكون لدى لاعب واحد على الأقل نقاط إيجابية (0-0 غير مسموح)',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.isRecordingMatch = true;\r\n\r\n    this.friendlyMatchService\r\n      .updateFriendlyMatchAsync(this.selectedPlayerForMatch.matchId, {\r\n        player1Id: this.matchForm.player1Id,\r\n        player2Id: this.matchForm.player2Id,\r\n        player1Score: this.matchForm.player1Score,\r\n        player2Score: this.matchForm.player2Score,\r\n      })\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            // Get player names for the toast message\r\n            const player1 = this.players.find(\r\n              (p) => p.playerId === this.matchForm.player1Id\r\n            );\r\n            const player2 = this.players.find(\r\n              (p) => p.playerId === this.matchForm.player2Id\r\n            );\r\n\r\n            this.toastr.success(\r\n              `تم تحديث المباراة بنجاح: ${player1?.fullName} (${this.matchForm.player1Score}) - ${player2?.fullName} (${this.matchForm.player2Score})`,\r\n              'تم تحديث المباراة'\r\n            );\r\n\r\n            // Refresh cache and reload data\r\n            this.friendlyMatchService.refreshFriendlyMatches();\r\n            this.loadAllMatches();\r\n            this.calculateStatistics();\r\n            if (this.selectedPlayer) {\r\n              this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n            }\r\n            this.closeRecordMatchModal();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل تحديث المباراة',\r\n              'خطأ في التحديث'\r\n            );\r\n          }\r\n          this.isRecordingMatch = false;\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء تحديث المباراة',\r\n            'خطأ في التحديث'\r\n          );\r\n          this.isRecordingMatch = false;\r\n        },\r\n      });\r\n  }\r\n\r\n  deleteMatchFromList(matchId: number): void {\r\n    if (confirm('هل أنت متأكد من حذف هذه المباراة؟')) {\r\n      this.friendlyMatchService.deleteFriendlyMatchAsync(matchId).subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم حذف المباراة بنجاح', 'تم الحذف');\r\n            // Refresh cache and reload data\r\n            this.friendlyMatchService.refreshFriendlyMatches();\r\n            this.loadAllMatches();\r\n            this.calculateStatistics();\r\n            if (this.selectedPlayer) {\r\n              this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n            }\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل حذف المباراة',\r\n              'خطأ في الحذف'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء حذف المباراة',\r\n            'خطأ في الحذف'\r\n          );\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div\r\n  class=\"container mx-auto p-4 flex flex-col sm:flex-row overflow-hidden h-screen\"\r\n>\r\n  <!-- Chats List -->\r\n  <div\r\n    class=\"w-full sm:w-1/3 border-r border-gray-600 sm:block\"\r\n    [ngClass]=\"{ hidden: selectedChat }\"\r\n  >\r\n    <div class=\"flex items-center justify-between mb-6\">\r\n      <h2 class=\"text-2xl font-bold text-white\">📬 Friendly Inbox</h2>\r\n    </div>\r\n\r\n    <!-- No Chats -->\r\n    <div *ngIf=\"playerChats.length === 0\" class=\"text-center text-gray-300\">\r\n      No friendly messages here 📭\r\n    </div>\r\n\r\n    <!-- Chats List -->\r\n    <div\r\n      *ngIf=\"playerChats.length > 0\"\r\n      class=\"space-y-2 overflow-y-auto max-h-[calc(100vh-120px)]\"\r\n    >\r\n      <div\r\n        *ngFor=\"let chat of playerChats; trackBy: trackByPlayerId\"\r\n        class=\"p-4 backdrop-blur-sm border border-gray-600 rounded-lg hover:bg-gray-700 cursor-pointer flex items-center justify-between\"\r\n        (click)=\"openChat(chat.senderId)\"\r\n      >\r\n        <div>\r\n          <p class=\"font-bold text-white\">{{ chat.senderFullName }}</p>\r\n          <p class=\"text-sm text-gray-300 truncate\">{{ chat.lastMessage }}</p>\r\n        </div>\r\n        <span\r\n          *ngIf=\"chat.unreadCount > 0\"\r\n          class=\"bg-green-600 text-white text-xs font-bold rounded-full px-2 py-1\"\r\n        >\r\n          {{ chat.unreadCount }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Chat View -->\r\n  <div\r\n    class=\"w-full sm:w-2/3 flex flex-col h-full relative\"\r\n    [ngClass]=\"{ block: selectedChat, 'hidden sm:flex': !selectedChat }\"\r\n  >\r\n    <div *ngIf=\"selectedChat; else noChatSelected\" class=\"flex flex-col h-full\">\r\n      <!-- Chat Header - Fixed -->\r\n      <div\r\n        class=\"fixed left-0 right-0 z-40 p-2 backdrop-blur-sm border-b border-gray-600 flex items-center justify-between bg-black bg-opacity-90\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n        [style.top.px]=\"navbarHeight\"\r\n      >\r\n        <div class=\"flex items-center\">\r\n          <button\r\n            (click)=\"closeChat()\"\r\n            class=\"mr-4 text-gray-300 hover:text-white transition\"\r\n          >\r\n            <i class=\"fa-solid fa-arrow-left\" style=\"color: #ffffff\"></i>\r\n          </button>\r\n          <div>\r\n            <p class=\"font-bold text-white text-sm p-0\">\r\n              {{ selectedChat.senderFullName }}\r\n            </p>\r\n            <p class=\"text-xs text-gray-400 p-0\">\r\n              {{ selectedChat.senderPhoneNumber }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Messages - Scrollable Area with padding for fixed header and footer -->\r\n      <div\r\n        #messagesContainer\r\n        class=\"flex-1 p-4 overflow-y-auto backdrop-blur-sm\"\r\n        [style.margin-top.px]=\"navbarHeight + 80\"\r\n        style=\"margin-bottom: 80px\"\r\n      >\r\n        <div\r\n          *ngFor=\"\r\n            let message of selectedChat.messages;\r\n            trackBy: trackByMessageId\r\n          \"\r\n          class=\"mb-4\"\r\n          [ngClass]=\"{\r\n            'text-right': !message.isFromAdmin,\r\n            'text-left': message.isFromAdmin\r\n          }\"\r\n        >\r\n          <div\r\n            class=\"inline-block p-3 rounded-lg max-w-xs\"\r\n            [ngClass]=\"{\r\n              'bg-green-700': !message.isFromAdmin,\r\n              'bg-gray-700 ': message.isFromAdmin\r\n            }\"\r\n          >\r\n            <p class=\"text-white\">{{ message.content }}</p>\r\n            <p class=\"text-xs mt-1 text-gray-300\">\r\n              {{ message.sentAt | date : \"MMM d, y, hh:mm a\" }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Reply Input - Fixed -->\r\n      <div\r\n        class=\"fixed bottom-0 left-0 right-0 z-50 p-4 bg-black bg-opacity-90 backdrop-blur-sm border-t border-gray-600\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n      >\r\n        <form (ngSubmit)=\"sendReply()\" class=\"flex items-center gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"replyMessages[selectedChat.messages[0].id]\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n            (ngModelChange)=\"\r\n              replyMessages[selectedChat.messages[0].id] = $event\r\n            \"\r\n            placeholder=\"Write your reply...\"\r\n            class=\"flex-1 p-2 border border-gray-600 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-600 placeholder-gray-400\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 transition disabled:bg-gray-600\"\r\n            [disabled]=\"!replyMessages[selectedChat.messages[0].id]\"\r\n          >\r\n            Reply\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Placeholder when no chat is selected -->\r\n    <ng-template #noChatSelected>\r\n      <div class=\"w-full flex items-center justify-center text-gray-300\">\r\n        Select a friendly chat to view messages 📩\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { FriendlyMessageService } from '../../../core/services/friendly-message.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {\r\n  FriendlyMessageDto,\r\n  FriendlyMessageResponse,\r\n} from 'friendly-message-types';\r\nimport { Subscription } from 'rxjs';\r\n\r\ninterface PlayerChat {\r\n  senderId: string; // استخدام string فقط للتوافق مع GUID\r\n  senderFullName: string;\r\n  senderPhoneNumber: string; // إضافة رقم الهاتف\r\n  lastMessage: string;\r\n  lastMessageDate: string;\r\n  unreadCount: number;\r\n  messages: FriendlyMessageDto[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-friendly-inbox',\r\n  templateUrl: './friendly-inbox.component.html',\r\n  styleUrls: ['./friendly-inbox.component.css'],\r\n})\r\nexport class FriendlyInboxComponent\r\n  implements OnInit, AfterViewChecked, OnDestroy\r\n{\r\n  playerChats: PlayerChat[] = [];\r\n  selectedPlayerId: string | null = null;\r\n  selectedChat: PlayerChat | null = null;\r\n  replyMessages: { [messageId: number]: string } = {};\r\n  private updateStatusSubscription?: Subscription;\r\n  private refreshSubscription?: Subscription;\r\n  navbarHeight = 60; // default navbar height\r\n\r\n  @ViewChild('messagesContainer')\r\n  messagesContainer!: ElementRef<HTMLDivElement>;\r\n\r\n  constructor(\r\n    private friendlyMessageService: FriendlyMessageService,\r\n    private toastr: ToastrService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadFriendlyMessages();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.updateStatusSubscription) {\r\n      this.updateStatusSubscription.unsubscribe();\r\n    }\r\n    if (this.refreshSubscription) {\r\n      this.refreshSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private loadFriendlyMessages(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: FriendlyMessageResponse) => {\r\n        if (response.success && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n\r\n          // عرض رسالة النجاح مع عدد الرسائل\r\n          const totalMessages = response.messages.length;\r\n          const unreadMessages = response.messages.filter(\r\n            (msg) => !msg.isRead && !msg.isFromAdmin\r\n          ).length;\r\n        } else {\r\n          this.toastr.error(response.message || 'لا يوجد رسائل ودية');\r\n        }\r\n      },\r\n      error: (err: any) => {\r\n        this.toastr.error(\r\n          err.error?.message || err.message || 'حصل خطأ أثناء جلب الرسائل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Add refresh method for immediate updates\r\n  refreshMessages(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: FriendlyMessageResponse) => {\r\n        if (response.success && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n\r\n          // عرض رسالة التحديث مع عدد الرسائل\r\n          const totalMessages = response.messages.length;\r\n          const unreadMessages = response.messages.filter(\r\n            (msg) => !msg.isRead && !msg.isFromAdmin\r\n          ).length;\r\n\r\n          if (totalMessages > 0) {\r\n            this.toastr.info(\r\n              `تم تحديث ${totalMessages} رسالة${\r\n                unreadMessages > 0\r\n                  ? ` (${unreadMessages} رسالة غير مقروءة)`\r\n                  : ''\r\n              }`,\r\n              'تم تحديث الرسائل'\r\n            );\r\n          } else {\r\n            this.toastr.info('لا توجد رسائل ودية حالياً', 'معلومات');\r\n          }\r\n        } else {\r\n          this.toastr.error(response.message || 'لا يوجد رسائل ودية');\r\n        }\r\n      },\r\n      error: (err: any) => {\r\n        this.toastr.error(\r\n          err.error?.message || err.message || 'حصل خطأ أثناء جلب الرسائل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.selectedChat && this.messagesContainer) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  groupMessagesBySender(messages: FriendlyMessageDto[]): PlayerChat[] {\r\n    const chatMap: { [senderId: string | number]: PlayerChat } = {};\r\n    messages.forEach((msg) => {\r\n      // استخدام senderId كـ playerId (قد يكون string أو number)\r\n      let playerId = msg.senderId || msg.playerId;\r\n\r\n      // إذا كان senderId هو GUID، نستخدمه كما هو\r\n      if (typeof playerId === 'string' && playerId.includes('-')) {\r\n        // هذا GUID، نستخدمه كما هو\r\n      } else if (typeof playerId === 'string') {\r\n        // محاولة تحويل إلى number\r\n        const parsedId = parseInt(playerId, 10);\r\n        if (!isNaN(parsedId) && parsedId > 0) {\r\n          playerId = parsedId;\r\n        }\r\n      }\r\n\r\n      // تأكد من أن playerId موجود\r\n      if (!playerId) {\r\n        return; // تخطي هذه الرسالة\r\n      }\r\n\r\n      if (!chatMap[playerId]) {\r\n        chatMap[playerId] = {\r\n          senderId: String(playerId), // تحويل إلى string\r\n          senderFullName:\r\n            msg.senderFullName || msg.playerFullName || `اللاعب ${playerId}`, // fallback للاسم\r\n          senderPhoneNumber: msg.senderPhoneNumber || 'غير متوفر', // استخدام الحقل الصحيح مع fallback\r\n          lastMessage: '',\r\n          lastMessageDate: '',\r\n          unreadCount: 0,\r\n          messages: [],\r\n        };\r\n      }\r\n      chatMap[playerId].messages.push(msg);\r\n      if (!msg.isFromAdmin && !msg.isRead) {\r\n        chatMap[playerId].unreadCount++;\r\n      }\r\n    });\r\n\r\n    const result = Object.values(chatMap).map((chat) => {\r\n      // ترتيب الرسائل من الأقدم للأحدث\r\n      chat.messages = chat.messages.sort(\r\n        (a, b) => new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n      );\r\n      // آخر رسالة\r\n      const lastMsg = chat.messages[chat.messages.length - 1];\r\n      chat.lastMessage = lastMsg?.content ?? '';\r\n      chat.lastMessageDate = lastMsg?.sentAt ?? '';\r\n      return chat;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  openChat(playerId: string): void {\r\n    this.selectedPlayerId = playerId;\r\n    this.selectedChat =\r\n      this.playerChats.find((chat) => chat.senderId === playerId) || null;\r\n\r\n    if (this.selectedChat) {\r\n      // تأكد من وجود اسم اللاعب\r\n      if (!this.selectedChat.senderFullName) {\r\n        this.selectedChat.senderFullName = `اللاعب ${this.selectedChat.senderId}`;\r\n      }\r\n      // Mark messages as read when opening chat\r\n      this.selectedChat.messages\r\n        .filter((msg) => !msg.isRead && !msg.isFromAdmin)\r\n        .forEach((msg) => {\r\n          this.friendlyMessageService.markMessageAsRead(msg.id).subscribe({\r\n            next: (response: any) => {\r\n              if (response.success) {\r\n                msg.isRead = true;\r\n                this.selectedChat!.unreadCount =\r\n                  this.selectedChat!.messages.filter(\r\n                    (m) => !m.isRead && !m.isFromAdmin\r\n                  ).length;\r\n                this.cdr.detectChanges();\r\n              }\r\n            },\r\n            error: (err: any) => {\r\n              this.toastr.error(\r\n                err.error?.message ||\r\n                  err.message ||\r\n                  'حصل خطأ أثناء تحديث حالة الرسالة',\r\n                'خطأ في التحديث'\r\n              );\r\n            },\r\n          });\r\n        });\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  closeChat(): void {\r\n    this.selectedPlayerId = null;\r\n    this.selectedChat = null;\r\n    this.replyMessages = {};\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  sendReply(): void {\r\n    if (!this.selectedChat) {\r\n      this.toastr.warning('الرجاء اختيار محادثة');\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedChat.senderId) {\r\n      this.toastr.error('خطأ: معرف اللاعب غير صحيح');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !this.selectedChat.messages ||\r\n      this.selectedChat.messages.length === 0\r\n    ) {\r\n      this.toastr.error('خطأ: لا توجد رسائل في هذه المحادثة');\r\n      return;\r\n    }\r\n\r\n    const replyContent =\r\n      this.replyMessages[this.selectedChat.messages[0].id]?.trim();\r\n    if (!replyContent) {\r\n      this.toastr.warning('الرجاء كتابة رد');\r\n      return;\r\n    }\r\n\r\n    this.friendlyMessageService\r\n      .sendAdminReply(this.selectedChat.senderId, replyContent)\r\n      .subscribe({\r\n        next: (response: FriendlyMessageResponse) => {\r\n          if (response.success) {\r\n            const playerName =\r\n              this.selectedChat!.senderFullName ||\r\n              `اللاعب ${this.selectedChat!.senderId}`;\r\n            this.toastr.success(\r\n              `تم إرسال الرد بنجاح إلى ${playerName}`,\r\n              'تم الإرسال'\r\n            );\r\n            this.replyMessages[this.selectedChat!.messages[0].id] = '';\r\n\r\n            const newMessage: FriendlyMessageDto = {\r\n              id: Math.random(),\r\n              senderId: this.selectedChat!.senderId,\r\n              senderFullName:\r\n                this.selectedChat!.senderFullName ||\r\n                `اللاعب ${this.selectedChat!.senderId}`,\r\n              senderPhoneNumber:\r\n                this.selectedChat!.senderPhoneNumber || 'غير متوفر',\r\n              content: replyContent,\r\n              isRead: true,\r\n              sentAt: new Date().toISOString(),\r\n              isFromAdmin: true,\r\n              messageType: 'admin_reply',\r\n            };\r\n\r\n            // تحديث الرسائل في المحادثة المحددة\r\n            this.selectedChat!.messages.push(newMessage);\r\n            this.selectedChat!.messages.sort(\r\n              (a, b) =>\r\n                new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n            );\r\n\r\n            // تحديث آخر رسالة في قائمة المحادثات\r\n            this.selectedChat!.lastMessage = replyContent;\r\n            this.selectedChat!.lastMessageDate = newMessage.sentAt;\r\n\r\n            // تحديث اسم اللاعب إذا كان غير موجود\r\n            if (!this.selectedChat!.senderFullName) {\r\n              this.selectedChat!.senderFullName = `اللاعب ${\r\n                this.selectedChat!.senderId\r\n              }`;\r\n            }\r\n\r\n            // إعادة ترتيب قائمة المحادثات حسب الأحدث\r\n            this.playerChats.sort(\r\n              (a, b) =>\r\n                new Date(b.lastMessageDate).getTime() -\r\n                new Date(a.lastMessageDate).getTime()\r\n            );\r\n\r\n            // تحديث المحادثة المحددة بعد إعادة الترتيب\r\n            this.selectedChat =\r\n              this.playerChats.find(\r\n                (chat) => chat.senderId === this.selectedPlayerId\r\n              ) || null;\r\n\r\n            this.cdr.detectChanges();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل إرسال الرد',\r\n              'خطأ في الإرسال'\r\n            );\r\n          }\r\n        },\r\n        error: (err: any) => {\r\n          this.toastr.error(\r\n            err.error?.message || err.message || 'حصل خطأ أثناء إرسال الرد',\r\n            'خطأ في الإرسال'\r\n          );\r\n        },\r\n      });\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    if (this.messagesContainer) {\r\n      const container = this.messagesContainer.nativeElement;\r\n      container.scrollTop = container.scrollHeight;\r\n    }\r\n  }\r\n\r\n  trackByPlayerId(index: number, chat: PlayerChat): string {\r\n    return chat.senderId;\r\n  }\r\n\r\n  trackByMessageId(index: number, message: FriendlyMessageDto): number {\r\n    return message.id;\r\n  }\r\n}\r\n","<div class=\"md:container mx-auto\">\n  <!-- Teams Tournament Dashboard -->\n  <div class=\"p-6\">\n    <!-- Header -->\n    <div class=\"mb-6\">\n      <h2 class=\"text-2xl font-bold text-white mb-4\">\n        Teams Tournament Management\n      </h2>\n\n      <!-- Quick Actions -->\n      <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n        <button\n          class=\"bg-green-600 text-white p-4 rounded-lg hover:bg-green-700 transition-all\"\n          (click)=\"openCreateTournamentModal()\"\n        >\n          <h3 class=\"text-lg font-bold\">Create Tournament</h3>\n          <p class=\"text-sm\">Create a new teams tournament</p>\n        </button>\n\n        <button\n          class=\"bg-purple-600 text-white p-4 rounded-lg hover:bg-purple-700 transition-all\"\n          (click)=\"showAddPlayerModal = true\"\n        >\n          <h3 class=\"text-lg font-bold\">Add Player</h3>\n          <p class=\"text-sm\">Add new player to the pool</p>\n        </button>\n\n        <div class=\"bg-gray-700 p-4 rounded-lg\">\n          <h3 class=\"text-lg font-bold text-white\">Statistics</h3>\n          <p class=\"text-sm text-gray-300\">\n            Tournaments: {{ tournaments.length }}\n          </p>\n          <p class=\"text-sm text-gray-300\">\n            Available Players: {{ availablePlayers.length }}\n          </p>\n        </div>\n\n        <div class=\"bg-blue-700 p-4 rounded-lg\">\n          <h3 class=\"text-lg font-bold text-white\">Active Tournament</h3>\n          <p class=\"text-sm text-gray-300\" *ngIf=\"activeTournament\">\n            {{ activeTournament.name }}\n          </p>\n          <p class=\"text-sm text-gray-300\" *ngIf=\"!activeTournament\">\n            No active tournament\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Loading Tournaments -->\n    <div *ngIf=\"isLoadingTournaments\" class=\"flex justify-center py-8\">\n      <div\n        class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n      ></div>\n    </div>\n\n    <!-- Tournaments List -->\n    <div *ngIf=\"!isLoadingTournaments\" class=\"space-y-4\">\n      <h3 class=\"text-xl font-semibold text-white\">All Tournaments</h3>\n\n      <div *ngIf=\"tournaments.length === 0\" class=\"text-center py-8\">\n        <p class=\"text-gray-400\">No tournaments created yet.</p>\n      </div>\n\n      <!-- Tournaments Grid -->\n      <div\n        *ngIf=\"tournaments.length > 0\"\n        class=\"grid grid-cols-1 lg:grid-cols-1 gap-6\"\n      >\n        <div\n          *ngFor=\"let tournament of tournaments\"\n          class=\"bg-black bg-opacity-50 rounded-lg p-6 border border-gray-700\"\n        >\n          <!-- Tournament Header -->\n          <div class=\"flex justify-between items-start mb-4\">\n            <div>\n              <h4 class=\"text-xl font-bold text-white mb-2\">\n                {{ tournament.name }}\n              </h4>\n              <div class=\"flex items-center space-x-4 text-sm\">\n                <span class=\"text-gray-300\"\n                  >Status:\n                  <span [class]=\"getStatusColor(tournament.status)\">{{\n                    tournament.status\n                  }}</span></span\n                >\n                <span class=\"text-gray-300\"\n                  >Teams: {{ tournament.teams.length }}/{{\n                    tournament.teamCount\n                  }}</span\n                >\n                <span class=\"text-gray-300\"\n                  >Players per team: {{ tournament.playersPerTeam }}</span\n                >\n                <span class=\"text-sm text-gray-300\"\n                  >Scoring System: {{ tournament.systemOfScoring }}</span\n                >\n              </div>\n            </div>\n          </div>\n\n          <!-- Tournament Actions -->\n          <div class=\"flex flex-wrap gap-2 mb-4\">\n            <!-- Create Team Button -->\n            <button\n              *ngIf=\"\n                tournament.status === 'Created' &&\n                getRemainingTeams(tournament) > 0\n              \"\n              (click)=\"openCreateTeamModal(tournament)\"\n              class=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded text-sm transition-all\"\n            >\n              Create Team ({{ getRemainingTeams(tournament) }} remaining)\n            </button>\n\n            <!-- Start Tournament Button -->\n            <button\n              *ngIf=\"canStartTournament(tournament)\"\n              (click)=\"startTournament(tournament)\"\n              class=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded text-sm transition-all\"\n            >\n              Start Tournament\n            </button>\n\n            <!-- Finish Tournament Button -->\n            <button\n              *ngIf=\"canFinishTournament(tournament)\"\n              (click)=\"finishTournament(tournament)\"\n              class=\"bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded text-sm transition-all\"\n            >\n              Finish Tournament\n            </button>\n\n            <!-- Delete Tournament Button -->\n            <button\n              *ngIf=\"canDeleteTournament(tournament)\"\n              (click)=\"deleteTournament(tournament)\"\n              class=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded text-sm transition-all\"\n            >\n              Delete Tournament\n            </button>\n          </div>\n\n          <!-- Teams List -->\n          <div *ngIf=\"tournament.teams.length > 0\" class=\"mb-4\">\n            <h5 class=\"text-lg font-semibold text-white mb-3\">Teams</h5>\n            <div class=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n              <div\n                *ngFor=\"let team of tournament.teams\"\n                class=\"bg-black bg-opacity-80 rounded p-3\"\n              >\n                <div class=\"font-medium text-white mb-2 text-center\">\n                  {{ team.teamName }}\n                </div>\n                <div class=\"text-sm text-gray-300 grid grid-cols-3 gap-2\">\n                  <span\n                    *ngFor=\"let playerName of getTeamPlayersNames(team)\"\n                    class=\"px-2 py-2 text-center items-center justify-center flex bg-black bg-opacity-50 border border-gray-600 rounded-full text-white text-xs\"\n                  >\n                    {{ playerName }}\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- No Teams Message -->\n          <div *ngIf=\"tournament.teams.length === 0\" class=\"text-center py-4\">\n            <p class=\"text-gray-400\">No teams created yet.</p>\n            <p class=\"text-sm text-gray-500\">\n              Create teams to start the tournament\n            </p>\n          </div>\n\n          <!-- Tournament Progress -->\n          <div class=\"mt-4 pt-4 border-t border-gray-700\">\n            <div class=\"flex justify-between text-sm text-gray-400\">\n              <span>Progress</span>\n              <span\n                >{{\n                  (tournament.teams.length / tournament.teamCount) * 100\n                    | number : \"1.0-0\"\n                }}%</span\n              >\n            </div>\n            <div class=\"w-full bg-gray-700 rounded-full h-2 mt-1\">\n              <div\n                class=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\n                [style.width.%]=\"\n                  (tournament.teams.length / tournament.teamCount) * 100\n                \"\n              ></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Tournament Players Section -->\n    <div class=\"mt-8\">\n      <h3 class=\"text-xl font-semibold text-white mb-4\">Tournament Players</h3>\n\n      <!-- Search Bar -->\n      <div class=\"mb-4\">\n        <div class=\"relative\">\n          <input\n            type=\"text\"\n            [(ngModel)]=\"playerSearchTerm\"\n            (input)=\"filterPlayers()\"\n            placeholder=\"Search players by name...\"\n            class=\"w-full px-4 py-2 pl-10 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n          />\n          <div\n            class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\"\n          >\n            <svg\n              class=\"h-5 w-5 text-gray-400\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n              ></path>\n            </svg>\n          </div>\n        </div>\n      </div>\n\n      <div *ngIf=\"isLoadingPlayers\" class=\"flex justify-center py-8\">\n        <div\n          class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n        ></div>\n      </div>\n\n      <!-- Players Grid -->\n      <div\n        *ngIf=\"!isLoadingPlayers && filteredPlayers.length > 0\"\n        class=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\"\n      >\n        <div\n          *ngFor=\"let player of filteredPlayers\"\n          class=\"bg-black bg-opacity-50 p-4 rounded-lg cursor-pointer hover:bg-gray-400 transition-all border-2 border-gray-600\"\n          (click)=\"selectPlayer(player)\"\n        >\n          <div class=\"text-center\">\n            <div class=\"text-base font-bold text-white\">\n              {{ player.fullName }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div\n        *ngIf=\"!isLoadingPlayers && filteredPlayers.length === 0\"\n        class=\"text-center py-8\"\n      >\n        <p\n          class=\"text-gray-400\"\n          *ngIf=\"playerSearchTerm && playerSearchTerm.trim() !== ''\"\n        >\n          No players found matching \"{{ playerSearchTerm }}\"\n        </p>\n        <p\n          class=\"text-gray-400\"\n          *ngIf=\"!playerSearchTerm || playerSearchTerm.trim() === ''\"\n        >\n          No players available. Add players first.\n        </p>\n      </div>\n    </div>\n  </div>\n\n  <!-- Create Tournament Modal -->\n  <div\n    *ngIf=\"showCreateTournamentModal\"\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n  >\n    <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Create New Tournament</h2>\n\n      <div class=\"space-y-4\">\n        <div>\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n            >Tournament Name</label\n          >\n          <input\n            type=\"text\"\n            [(ngModel)]=\"createTournamentForm.name\"\n            placeholder=\"Enter tournament name\"\n            class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded placeholder-gray-400\"\n          />\n        </div>\n\n        <div>\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n            >Scoring System</label\n          >\n          <select\n            [(ngModel)]=\"createTournamentForm.systemOfScoring\"\n            class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded\"\n          >\n            <option value=\"Classic\">Classic (Win/Draw/Loss)</option>\n            <option value=\"Points\">Points System</option>\n          </select>\n        </div>\n\n        <div class=\"grid grid-cols-2 gap-4\">\n          <div>\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n              >Teams Count</label\n            >\n            <input\n              type=\"number\"\n              [(ngModel)]=\"createTournamentForm.teamCount\"\n              min=\"2\"\n              max=\"16\"\n              class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded\"\n            />\n          </div>\n          <div>\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n              >Players per Team</label\n            >\n            <input\n              type=\"number\"\n              [(ngModel)]=\"createTournamentForm.playersPerTeam\"\n              min=\"1\"\n              max=\"10\"\n              class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"flex justify-end space-x-4 mt-6\">\n        <button\n          (click)=\"closeCreateTournamentModal()\"\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n        >\n          Cancel\n        </button>\n        <button\n          (click)=\"createTournament()\"\n          [disabled]=\"isCreatingTournament || !createTournamentForm.name.trim()\"\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition disabled:opacity-50\"\n        >\n          {{ isCreatingTournament ? \"Creating...\" : \"Create Tournament\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Create Team Modal -->\n  <div\n    *ngIf=\"showCreateTeamModal\"\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n  >\n    <div\n      class=\"bg-gray-800 p-6 rounded-lg max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\"\n    >\n      <h2 class=\"text-lg font-bold mb-4 text-white\">\n        Create Team for {{ activeTournament?.name }}\n      </h2>\n\n      <div class=\"mb-4\">\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n          >Team Name</label\n        >\n        <input\n          type=\"text\"\n          [(ngModel)]=\"createTeamForm.teamName\"\n          placeholder=\"Enter team name\"\n          class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded placeholder-gray-400\"\n        />\n      </div>\n\n      <div class=\"mb-4\">\n        <label class=\"block text-sm font-medium mb-2 text-gray-300\">\n          Select Players ({{ createTeamForm.playerIds.length }}/{{\n            activeTournament?.playersPerTeam\n          }})\n        </label>\n\n        <!-- Loading Players -->\n        <div *ngIf=\"isLoadingPlayers\" class=\"flex justify-center py-4\">\n          <div\n            class=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"\n          ></div>\n        </div>\n\n        <!-- No Players Message -->\n        <div\n          *ngIf=\"!isLoadingPlayers && availablePlayers.length === 0\"\n          class=\"text-center py-4 text-gray-400\"\n        >\n          No players available. Add players first.\n        </div>\n\n        <!-- Players Grid -->\n        <div\n          *ngIf=\"!isLoadingPlayers && availablePlayers.length > 0\"\n          class=\"grid grid-cols-1 md:grid-cols-2 gap-2 max-h-60 overflow-y-auto\"\n        >\n          <div\n            *ngFor=\"let player of availablePlayers\"\n            (click)=\"togglePlayerSelection(player.playerId)\"\n            class=\"p-3 rounded border cursor-pointer transition-all\"\n            [class.bg-blue-600]=\"isPlayerSelected(player.playerId)\"\n            [class.border-blue-500]=\"isPlayerSelected(player.playerId)\"\n            [class.bg-gray-700]=\"!isPlayerSelected(player.playerId)\"\n            [class.border-gray-600]=\"!isPlayerSelected(player.playerId)\"\n          >\n            <div class=\"text-white font-medium\">{{ player.fullName }}</div>\n            <div class=\"text-xs text-gray-300\">\n              Tournaments: {{ player.multiParticipations }} | Titles:\n              {{ player.multiTitlesWon }}\n            </div>\n            <!-- Selection Indicator -->\n            <div\n              *ngIf=\"isPlayerSelected(player.playerId)\"\n              class=\"text-blue-200 text-xs mt-1\"\n            >\n              ✓ Selected\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"flex justify-end space-x-4 mt-6\">\n        <button\n          (click)=\"closeCreateTeamModal()\"\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n        >\n          Cancel\n        </button>\n        <button\n          (click)=\"createTeam()\"\n          [disabled]=\"\n            isCreatingTeam ||\n            !createTeamForm.teamName.trim() ||\n            createTeamForm.playerIds.length !== activeTournament?.playersPerTeam\n          \"\n          class=\"bg-blue-600 px-4 py-2 text-white rounded hover:bg-blue-700 transition disabled:opacity-50\"\n        >\n          {{ isCreatingTeam ? \"Creating...\" : \"Create Team\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Add Player Modal -->\n  <div\n    *ngIf=\"showAddPlayerModal\"\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n  >\n    <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Add New Player</h2>\n\n      <input\n        type=\"text\"\n        [(ngModel)]=\"newPlayerName\"\n        placeholder=\"Enter player name\"\n        class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded placeholder-gray-400\"\n      />\n\n      <div class=\"flex justify-end space-x-4 mt-6\">\n        <button\n          (click)=\"showAddPlayerModal = false\"\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n        >\n          Cancel\n        </button>\n        <button\n          (click)=\"addNewPlayer()\"\n          [disabled]=\"isAddingPlayer || !newPlayerName.trim()\"\n          class=\"bg-purple-600 px-4 py-2 text-white rounded hover:bg-purple-700 transition disabled:opacity-50\"\n        >\n          {{ isAddingPlayer ? \"Adding...\" : \"Add Player\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Record Match Result Modal -->\n  <div\n    *ngIf=\"showRecordResultModal\"\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n  >\n    <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Record Match Result</h2>\n\n      <div class=\"grid grid-cols-2 gap-4 mb-4\">\n        <div>\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n            >{{ getPlayerName(selectedPlayer1Id) }}\n          </label>\n          <input\n            type=\"number\"\n            [(ngModel)]=\"recordingScore1\"\n            min=\"0\"\n            class=\"w-full px-3 py-2 border border-gray-600 bg-gray-700 text-white rounded\"\n          />\n        </div>\n        <div>\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n            >{{ getPlayerName(selectedPlayer2Id) }}\n          </label>\n          <input\n            type=\"number\"\n            [(ngModel)]=\"recordingScore2\"\n            min=\"0\"\n            class=\"w-full px-3 py-2 border border-gray-600 bg-gray-700 text-white rounded\"\n          />\n        </div>\n      </div>\n\n      <div\n        *ngIf=\"activeTournament?.systemOfScoring === 'Classic'\"\n        class=\"mb-4 text-xs text-gray-400\"\n      >\n        Classic System: Winner will be determined automatically based on scores\n      </div>\n\n      <div class=\"flex justify-end space-x-4\">\n        <button\n          (click)=\"closeRecordResultModal()\"\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n        >\n          Cancel\n        </button>\n        <button\n          (click)=\"recordMatchResult()\"\n          [disabled]=\"\n            isRecordingResult ||\n            recordingScore1 === null ||\n            recordingScore2 === null\n          \"\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition disabled:opacity-50\"\n        >\n          {{ isRecordingResult ? \"Recording...\" : \"Record Result\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Player Matches Modal -->\n  <div\n    *ngIf=\"showPlayerMatchesModal\"\n    class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n  >\n    <div\n      class=\"bg-black bg-opacity-50 rounded-lg w-full max-w-4xl max-h-[90vh] overflow-hidden relative\"\n    >\n      <!-- Fixed Close Button -->\n      <button\n        (click)=\"closePlayerMatchesModal()\"\n        class=\"absolute top-4 right-6 z-10 text-white hover:text-white text-2xl font-bold transition-colors bg-black bg-opacity-50 rounded-full w-8 h-8 flex items-center justify-center hover:bg-opacity-75\"\n      >\n        ×\n      </button>\n\n      <!-- Modal Content with Scroll -->\n      <div class=\"p-6 overflow-y-auto\" style=\"max-height: calc(90vh - 2rem)\">\n        <!-- Modal Header -->\n        <div class=\"flex justify-between items-center mb-6\">\n          <h3 class=\"text-2xl font-bold text-white\">\n            Matches for {{ selectedPlayer?.fullName }}\n          </h3>\n        </div>\n\n        <!-- Search Bar for Opponents -->\n        <div class=\"mb-4\">\n          <div class=\"relative\">\n            <input\n              type=\"text\"\n              [(ngModel)]=\"opponentSearchTerm\"\n              (input)=\"filterPlayerMatches()\"\n              placeholder=\"Search opponents by name...\"\n              class=\"w-full px-4 py-2 pl-10 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\n            />\n            <div\n              class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\"\n            >\n              <svg\n                class=\"h-5 w-5 text-gray-400\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  stroke-linecap=\"round\"\n                  stroke-linejoin=\"round\"\n                  stroke-width=\"2\"\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\n                ></path>\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <!-- Loading State -->\n        <div *ngIf=\"isLoadingMatches\" class=\"flex justify-center py-8\">\n          <div\n            class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n          ></div>\n        </div>\n\n        <!-- Matches List -->\n        <div\n          *ngIf=\"!isLoadingMatches && filteredPlayerMatches.length > 0\"\n          class=\"space-y-4\"\n        >\n          <div\n            *ngFor=\"let match of filteredPlayerMatches\"\n            class=\"bg-black bg-opacity-50 rounded-lg p-4\"\n          >\n            <div class=\"flex justify-between items-center\">\n              <div class=\"flex-1\">\n                <span class=\"text-white font-semibold\">{{\n                  match.player1Name\n                }}</span>\n              </div>\n\n              <div class=\"px-4 text-center\">\n                <div *ngIf=\"match.isCompleted\" class=\"font-bold text-lg\">\n                  <span\n                    [class]=\"\n                      (match.score1 || 0) > (match.score2 || 0)\n                        ? 'text-green-400'\n                        : (match.score1 || 0) < (match.score2 || 0)\n                        ? 'text-red-400'\n                        : 'text-yellow-400'\n                    \"\n                  >\n                    {{ match.score1 || 0 }}\n                  </span>\n                  <span class=\"text-white mx-2\">-</span>\n                  <span\n                    [class]=\"\n                      (match.score2 || 0) > (match.score1 || 0)\n                        ? 'text-green-400'\n                        : (match.score2 || 0) < (match.score1 || 0)\n                        ? 'text-red-400'\n                        : 'text-yellow-400'\n                    \"\n                  >\n                    {{ match.score2 || 0 }}\n                  </span>\n                </div>\n                <div *ngIf=\"!match.isCompleted\" class=\"text-gray-400 text-sm\">\n                  Pending\n                  <button\n                    *ngIf=\"activeTournament?.status === 'Started'\"\n                    (click)=\"openRecordResultModal(match)\"\n                    class=\"ml-2 bg-green-600 hover:bg-green-700 text-white px-2 py-1 rounded text-xs transition-all\"\n                  >\n                    Record\n                  </button>\n                </div>\n              </div>\n\n              <!-- Undo Button for completed matches -->\n              <div\n                *ngIf=\"\n                  match.isCompleted && activeTournament?.status === 'Started'\n                \"\n                class=\"ml-2\"\n              >\n                <button\n                  (click)=\"undoMatchResult(match)\"\n                  class=\"bg-red-600 hover:bg-red-700 text-white px-2 py-1 rounded text-xs transition-all\"\n                >\n                  Undo\n                </button>\n              </div>\n              <div class=\"flex-1 text-right\">\n                <span class=\"text-white font-semibold\">{{\n                  match.player2Name\n                }}</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- No Matches Message -->\n        <div\n          *ngIf=\"!isLoadingMatches && filteredPlayerMatches.length === 0\"\n          class=\"text-center py-8\"\n        >\n          <p\n            class=\"text-gray-400\"\n            *ngIf=\"opponentSearchTerm && opponentSearchTerm.trim() !== ''\"\n          >\n            No opponents found matching \"{{ opponentSearchTerm }}\"\n          </p>\n          <p\n            class=\"text-gray-400\"\n            *ngIf=\"!opponentSearchTerm || opponentSearchTerm.trim() === ''\"\n          >\n            No matches found for this player.\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Confirmation Modals -->\n\n    <!-- Start Tournament Confirmation Modal -->\n    <div\n      *ngIf=\"showConfirmStartTournamentModal\"\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n    >\n      <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\n        <div class=\"text-center mb-6\">\n          <div\n            class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100 mb-4\"\n          >\n            <svg\n              class=\"h-6 w-6 text-green-600\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M5 13l4 4L19 7\"\n              />\n            </svg>\n          </div>\n          <h3 class=\"text-lg font-medium text-white mb-2\">تأكيد بدء البطولة</h3>\n          <p class=\"text-sm text-gray-300\">\n            هل أنت متأكد من بدء البطولة \"{{ tournamentToConfirm?.name }}\"؟\n          </p>\n        </div>\n\n        <div class=\"flex justify-end space-x-4\">\n          <button\n            (click)=\"closeConfirmStartTournamentModal()\"\n            class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n          >\n            إلغاء\n          </button>\n          <button\n            (click)=\"confirmStartTournament()\"\n            class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\n          >\n            بدء البطولة\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Finish Tournament Confirmation Modal -->\n    <div\n      *ngIf=\"showConfirmFinishTournamentModal\"\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n    >\n      <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\n        <div class=\"text-center mb-6\">\n          <div\n            class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-yellow-100 mb-4\"\n          >\n            <svg\n              class=\"h-6 w-6 text-yellow-600\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n          </div>\n          <h3 class=\"text-lg font-medium text-white mb-2\">\n            تأكيد إنهاء البطولة\n          </h3>\n          <p class=\"text-sm text-gray-300\">\n            هل أنت متأكد من إنهاء البطولة \"{{ tournamentToConfirm?.name }}\"؟\n          </p>\n        </div>\n\n        <div class=\"flex justify-end space-x-4\">\n          <button\n            (click)=\"closeConfirmFinishTournamentModal()\"\n            class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n          >\n            إلغاء\n          </button>\n          <button\n            (click)=\"confirmFinishTournament()\"\n            class=\"bg-yellow-600 px-4 py-2 text-white rounded hover:bg-yellow-700 transition\"\n          >\n            إنهاء البطولة\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Delete Tournament Confirmation Modal -->\n    <div\n      *ngIf=\"showConfirmDeleteTournamentModal\"\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n    >\n      <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\n        <div class=\"text-center mb-6\">\n          <div\n            class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100 mb-4\"\n          >\n            <svg\n              class=\"h-6 w-6 text-red-600\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"\n              />\n            </svg>\n          </div>\n          <h3 class=\"text-lg font-medium text-white mb-2\">تأكيد حذف البطولة</h3>\n          <p class=\"text-sm text-gray-300 mb-4\">\n            هل أنت متأكد من حذف البطولة \"{{ tournamentToConfirm?.name }}\"؟\n          </p>\n          <p class=\"text-xs text-red-400\">\n            ⚠️ سيتم حذف كل البيانات المرتبطة بها نهائياً\n          </p>\n        </div>\n\n        <div class=\"flex justify-end space-x-4\">\n          <button\n            (click)=\"closeConfirmDeleteTournamentModal()\"\n            class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n          >\n            إلغاء\n          </button>\n          <button\n            (click)=\"confirmDeleteTournament()\"\n            class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\n          >\n            حذف البطولة\n          </button>\n        </div>\n      </div>\n    </div>\n\n    <!-- Undo Match Result Confirmation Modal -->\n    <div\n      *ngIf=\"showConfirmUndoMatchModal\"\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n    >\n      <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\n        <div class=\"text-center mb-6\">\n          <div\n            class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-orange-100 mb-4\"\n          >\n            <svg\n              class=\"h-6 w-6 text-orange-600\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\n              />\n            </svg>\n          </div>\n          <h3 class=\"text-lg font-medium text-white mb-2\">\n            تأكيد إلغاء النتيجة\n          </h3>\n          <p class=\"text-sm text-gray-300 mb-4\">\n            هل أنت متأكد من إلغاء نتيجة المباراة؟\n          </p>\n          <div class=\"text-xs text-gray-400 bg-gray-700 p-3 rounded\">\n            <p>\n              {{ matchToUndo?.player1Name }} vs {{ matchToUndo?.player2Name }}\n            </p>\n            <p>\n              النتيجة: {{ matchToUndo?.score1 }} - {{ matchToUndo?.score2 }}\n            </p>\n          </div>\n        </div>\n\n        <div class=\"flex justify-end space-x-4\">\n          <button\n            (click)=\"closeConfirmUndoMatchModal()\"\n            class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n          >\n            إلغاء\n          </button>\n          <button\n            (click)=\"confirmUndoMatchResult()\"\n            class=\"bg-orange-600 px-4 py-2 text-white rounded hover:bg-orange-700 transition\"\n          >\n            إلغاء النتيجة\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PlayersComponent } from './players/players.component';\r\nimport { InboxComponent } from './inbox/inbox.component';\r\nimport { FriendliesComponent } from './friendlies/friendlies.component';\r\nimport { FriendlyInboxComponent } from './friendlies/friendly-inbox/friendly-inbox.component';\r\nimport { TeamsDashboardComponent } from './teams-dashboard/teams-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlayersComponent, data: { title: 'Players' } },\r\n  {\r\n    path: 'players',\r\n    component: PlayersComponent,\r\n    data: { title: 'Players' },\r\n  },\r\n  { path: 'inbox', component: InboxComponent, data: { title: 'Inbox' } },\r\n  {\r\n    path: 'friendlies',\r\n    component: FriendliesComponent,\r\n    data: { title: 'Friendlies' },\r\n  },\r\n  {\r\n    path: 'friendly-inbox',\r\n    component: FriendlyInboxComponent,\r\n    data: { title: 'Friendly Inbox' },\r\n  },\r\n  {\r\n    path: 'teams-dashboard',\r\n    component: TeamsDashboardComponent,\r\n    data: { title: 'Teams Dashboard' },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport {\n  MultiTournamentService,\n  CreateTournamentDto,\n  TeamCreateDto,\n  MultiTournamentDto,\n  PlayerDetail,\n  AddPlayerDto,\n  TeamMatchesDto,\n  MatchDetail,\n  TeamDetail,\n  ApiResponse,\n} from '../../core/services/multi-tournament.service';\n\n@Component({\n  selector: 'app-teams-dashboard',\n  templateUrl: './teams-dashboard.component.html',\n  styleUrls: ['./teams-dashboard.component.css'],\n})\nexport class TeamsDashboardComponent implements OnInit {\n  // Data\n  tournaments: MultiTournamentDto[] = [];\n  activeTournament: MultiTournamentDto | null = null;\n  availablePlayers: PlayerDetail[] = [];\n  filteredPlayers: PlayerDetail[] = [];\n  tournamentMatches: TeamMatchesDto[] = [];\n  filteredPlayerMatches: MatchDetail[] = [];\n  selectedPlayer: PlayerDetail | null = null;\n\n  // Modals\n  showCreateTournamentModal = false;\n  showCreateTeamModal = false;\n  showAddPlayerModal = false;\n  showRecordResultModal = false;\n  showPlayerMatchesModal = false;\n\n  // Confirmation Modals\n  showConfirmStartTournamentModal = false;\n  showConfirmFinishTournamentModal = false;\n  showConfirmDeleteTournamentModal = false;\n  showConfirmUndoMatchModal = false;\n\n  // Confirmation Data\n  tournamentToConfirm: MultiTournamentDto | null = null;\n  matchToUndo: MatchDetail | null = null;\n\n  // Forms\n  createTournamentForm: CreateTournamentDto = {\n    name: '',\n    systemOfScoring: 'Classic',\n    teamCount: 4,\n    playersPerTeam: 3,\n  };\n\n  createTeamForm: TeamCreateDto = {\n    teamName: '',\n    playerIds: [],\n  };\n\n  newPlayerName = '';\n  playerSearchTerm = '';\n  opponentSearchTerm = '';\n\n  // Match Recording\n  selectedMatchId: number | null = null;\n  selectedPlayer1Id: number | null = null;\n  selectedPlayer2Id: number | null = null;\n  recordingScore1: number | null = null;\n  recordingScore2: number | null = null;\n\n  // Loading States\n  isLoadingTournaments = false;\n  isLoadingPlayers = false;\n  isLoadingMatches = false;\n  isCreatingTournament = false;\n  isCreatingTeam = false;\n  isAddingPlayer = false;\n  isRecordingResult = false;\n\n  constructor(\n    private multiTournamentService: MultiTournamentService,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadTournaments();\n    this.loadAvailablePlayers();\n  }\n\n  // Tournament Management\n  loadTournaments(): void {\n    this.isLoadingTournaments = true;\n\n    this.multiTournamentService.getAllTournaments().subscribe({\n      next: (response: ApiResponse<MultiTournamentDto[]>) => {\n        if (response.success && response.data) {\n          this.tournaments = response.data;\n          this.activeTournament =\n            this.tournaments.find((t) => t.isActive) || null;\n\n          if (this.activeTournament) {\n            this.loadTournamentMatches();\n          }\n        }\n        this.isLoadingTournaments = false;\n      },\n      error: (error) => {\n        console.error('Error loading tournaments:', error);\n        this.toastr.error('خطأ في تحميل البطولات', 'خطأ');\n        this.isLoadingTournaments = false;\n      },\n    });\n  }\n\n  createTournament(): void {\n    if (!this.createTournamentForm.name.trim()) {\n      this.toastr.warning('يرجى إدخال اسم البطولة', 'تحذير');\n      return;\n    }\n\n    this.isCreatingTournament = true;\n\n    this.multiTournamentService\n      .createTournament(this.createTournamentForm)\n      .subscribe({\n        next: (response: ApiResponse) => {\n          if (response.success) {\n            this.toastr.success('تم إنشاء البطولة بنجاح', 'نجاح');\n            this.loadTournaments();\n            this.closeCreateTournamentModal();\n          } else {\n            this.toastr.error(\n              response.message || 'فشل في إنشاء البطولة',\n              'خطأ'\n            );\n          }\n          this.isCreatingTournament = false;\n        },\n        error: (error) => {\n          console.error('Error creating tournament:', error);\n          this.toastr.error('خطأ في إنشاء البطولة', 'خطأ');\n          this.isCreatingTournament = false;\n        },\n      });\n  }\n\n  // Modal Controls\n  openCreateTournamentModal(): void {\n    this.createTournamentForm = {\n      name: '',\n      systemOfScoring: 'Classic',\n      teamCount: 4,\n      playersPerTeam: 3,\n    };\n    this.showCreateTournamentModal = true;\n  }\n\n  closeCreateTournamentModal(): void {\n    this.showCreateTournamentModal = false;\n  }\n\n  // Helper Methods\n  getRemainingTeams(tournament: MultiTournamentDto): number {\n    return tournament.teamCount - tournament.teams.length;\n  }\n\n  canStartTournament(tournament: MultiTournamentDto): boolean {\n    return (\n      tournament.status === 'Created' &&\n      tournament.teams.length === tournament.teamCount\n    );\n  }\n\n  getStatusColor(status: string): string {\n    switch (status) {\n      case 'Created':\n        return 'text-yellow-400';\n      case 'Started':\n        return 'text-green-400';\n      case 'Finished':\n        return 'text-blue-400';\n      default:\n        return 'text-gray-400';\n    }\n  }\n\n  // Player Management\n  loadAvailablePlayers(): void {\n    this.isLoadingPlayers = true;\n\n    this.multiTournamentService.getAllPlayers().subscribe({\n      next: (response: ApiResponse<PlayerDetail[]>) => {\n        if (response.success && response.data) {\n          this.availablePlayers = response.data.filter((p) => p.isActive);\n          this.filteredPlayers = [...this.availablePlayers];\n        }\n        this.isLoadingPlayers = false;\n      },\n      error: (error) => {\n        console.error('Error loading players:', error);\n        this.toastr.error('خطأ في تحميل اللاعبين', 'خطأ');\n        this.isLoadingPlayers = false;\n      },\n    });\n  }\n\n  // Match Management\n  loadTournamentMatches(): void {\n    if (!this.activeTournament) return;\n\n    this.isLoadingMatches = true;\n\n    this.multiTournamentService.getActiveTournamentMatches().subscribe({\n      next: (response: ApiResponse<TeamMatchesDto[]>) => {\n        if (response.success && response.data) {\n          this.tournamentMatches = response.data;\n          // Initialize filtered player matches if a player is selected\n          if (this.selectedPlayer) {\n            this.filteredPlayerMatches = this.getPlayerMatches(\n              this.selectedPlayer.playerId || 0\n            );\n          }\n        }\n        this.isLoadingMatches = false;\n      },\n      error: (error) => {\n        console.error('Error loading tournament matches:', error);\n        this.toastr.error('خطأ في تحميل المباريات', 'خطأ');\n        this.isLoadingMatches = false;\n      },\n    });\n  }\n\n  // Start Tournament\n  startTournament(tournament: MultiTournamentDto): void {\n    this.openConfirmStartTournamentModal(tournament);\n  }\n\n  // Confirm and Start Tournament\n  confirmStartTournament(): void {\n    if (!this.tournamentToConfirm) return;\n\n    this.multiTournamentService\n      .startTournament(this.tournamentToConfirm.multiTournamentId)\n      .subscribe({\n        next: (response: ApiResponse) => {\n          if (response.success) {\n            this.toastr.success('تم بدء البطولة بنجاح', 'نجاح');\n            this.loadTournaments();\n            this.closeConfirmStartTournamentModal();\n          } else {\n            this.toastr.error(response.message || 'فشل في بدء البطولة', 'خطأ');\n          }\n        },\n        error: (error) => {\n          console.error('Error starting tournament:', error);\n          this.toastr.error('خطأ في بدء البطولة', 'خطأ');\n        },\n      });\n  }\n\n  // Finish Tournament\n  finishTournament(tournament: MultiTournamentDto): void {\n    this.openConfirmFinishTournamentModal(tournament);\n  }\n\n  // Confirm and Finish Tournament\n  confirmFinishTournament(): void {\n    if (!this.tournamentToConfirm) return;\n\n    this.multiTournamentService\n      .finishTournament(this.tournamentToConfirm.multiTournamentId)\n      .subscribe({\n        next: (response: ApiResponse) => {\n          if (response.success) {\n            this.toastr.success('تم إنهاء البطولة بنجاح', 'نجاح');\n            this.loadTournaments();\n            this.closeConfirmFinishTournamentModal();\n          } else {\n            this.toastr.error(\n              response.message || 'فشل في إنهاء البطولة',\n              'خطأ'\n            );\n          }\n        },\n        error: (error) => {\n          console.error('Error finishing tournament:', error);\n          this.toastr.error('خطأ في إنهاء البطولة', 'خطأ');\n        },\n      });\n  }\n\n  // Delete Tournament\n  deleteTournament(tournament: MultiTournamentDto): void {\n    this.openConfirmDeleteTournamentModal(tournament);\n  }\n\n  // Confirm and Delete Tournament\n  confirmDeleteTournament(): void {\n    if (!this.tournamentToConfirm) return;\n\n    this.multiTournamentService\n      .deleteTournament(this.tournamentToConfirm.multiTournamentId)\n      .subscribe({\n        next: (response: ApiResponse) => {\n          if (response.success) {\n            this.toastr.success('تم حذف البطولة بنجاح', 'نجاح');\n            this.loadTournaments();\n            this.closeConfirmDeleteTournamentModal();\n          } else {\n            this.toastr.error(response.message || 'فشل في حذف البطولة', 'خطأ');\n          }\n        },\n        error: (error) => {\n          console.error('Error deleting tournament:', error);\n          this.toastr.error('خطأ في حذف البطولة', 'خطأ');\n        },\n      });\n  }\n\n  // Create Team\n  createTeam(): void {\n    if (!this.createTeamForm.teamName.trim()) {\n      this.toastr.warning('يرجى إدخال اسم الفريق', 'تحذير');\n      return;\n    }\n\n    if (\n      this.createTeamForm.playerIds.length !==\n      (this.activeTournament?.playersPerTeam || 3)\n    ) {\n      this.toastr.warning(\n        `يجب اختيار ${this.activeTournament?.playersPerTeam} لاعبين بالضبط`,\n        'تحذير'\n      );\n      return;\n    }\n\n    if (!this.activeTournament) return;\n\n    this.isCreatingTeam = true;\n\n    this.multiTournamentService\n      .createTeam(this.activeTournament.multiTournamentId, this.createTeamForm)\n      .subscribe({\n        next: (response: ApiResponse) => {\n          if (response.success) {\n            this.toastr.success(\n              `تم إنشاء الفريق \"${this.createTeamForm.teamName}\" بنجاح`,\n              'نجاح'\n            );\n            this.loadTournaments();\n            this.closeCreateTeamModal();\n          } else {\n            this.toastr.error(response.message || 'فشل في إنشاء الفريق', 'خطأ');\n          }\n          this.isCreatingTeam = false;\n        },\n        error: (error) => {\n          console.error('Error creating team:', error);\n          this.toastr.error('خطأ في إنشاء الفريق', 'خطأ');\n          this.isCreatingTeam = false;\n        },\n      });\n  }\n\n  // Add Player\n  addNewPlayer(): void {\n    if (!this.newPlayerName.trim()) {\n      this.toastr.warning('يرجى إدخال اسم اللاعب', 'تحذير');\n      return;\n    }\n\n    this.isAddingPlayer = true;\n\n    this.multiTournamentService\n      .addNewPlayer({ fullName: this.newPlayerName.trim() })\n      .subscribe({\n        next: (response: ApiResponse<PlayerDetail>) => {\n          if (response.success) {\n            this.toastr.success(\n              `تم إضافة اللاعب ${this.newPlayerName} بنجاح`,\n              'نجاح'\n            );\n            this.loadAvailablePlayers();\n            this.showAddPlayerModal = false;\n            this.newPlayerName = '';\n          } else {\n            this.toastr.error(response.message || 'فشل في إضافة اللاعب', 'خطأ');\n          }\n          this.isAddingPlayer = false;\n        },\n        error: (error) => {\n          console.error('Error adding player:', error);\n          this.toastr.error('خطأ في إضافة اللاعب', 'خطأ');\n          this.isAddingPlayer = false;\n        },\n      });\n  }\n\n  // Team Management\n  togglePlayerSelection(playerId: number): void {\n    const index = this.createTeamForm.playerIds.indexOf(playerId);\n    if (index === -1) {\n      if (\n        this.createTeamForm.playerIds.length <\n        (this.activeTournament?.playersPerTeam || 3)\n      ) {\n        this.createTeamForm.playerIds.push(playerId);\n      } else {\n        this.toastr.warning(\n          `يمكن اختيار ${this.activeTournament?.playersPerTeam} لاعبين فقط`,\n          'تحذير'\n        );\n      }\n    } else {\n      this.createTeamForm.playerIds.splice(index, 1);\n    }\n  }\n\n  isPlayerSelected(playerId: number): boolean {\n    return this.createTeamForm.playerIds.includes(playerId);\n  }\n\n  // Match Recording\n  recordMatchResult(): void {\n    if (!this.selectedMatchId || !this.activeTournament) return;\n\n    let requestBody: any = {};\n\n    if (this.activeTournament.systemOfScoring === 'Classic') {\n      // Classic system: determine winner automatically based on scores\n      if (this.recordingScore1! > this.recordingScore2!) {\n        requestBody.winnerId = this.selectedPlayer1Id;\n      } else if (this.recordingScore2! > this.recordingScore1!) {\n        requestBody.winnerId = this.selectedPlayer2Id;\n      } else {\n        requestBody.winnerId = null; // Draw\n      }\n    } else {\n      // Points system: send scores directly\n      requestBody.score1 = this.recordingScore1;\n      requestBody.score2 = this.recordingScore2;\n    }\n\n    this.isRecordingResult = true;\n\n    this.multiTournamentService\n      .recordMatchResult(this.selectedMatchId, requestBody)\n      .subscribe({\n        next: (response: ApiResponse) => {\n          if (response.success) {\n            this.toastr.success('تم تسجيل نتيجة المباراة بنجاح', 'نجاح');\n            this.loadTournaments();\n            this.loadTournamentMatches();\n            this.closeRecordResultModal();\n          } else {\n            this.toastr.error(\n              response.message || 'فشل في تسجيل النتيجة',\n              'خطأ'\n            );\n          }\n          this.isRecordingResult = false;\n        },\n        error: (error) => {\n          console.error('Error recording match result:', error);\n          this.toastr.error('خطأ في تسجيل نتيجة المباراة', 'خطأ');\n          this.isRecordingResult = false;\n        },\n      });\n  }\n\n  undoMatchResult(match: MatchDetail): void {\n    this.openConfirmUndoMatchModal(match);\n  }\n\n  // Confirm and Undo Match Result\n  confirmUndoMatchResult(): void {\n    if (!this.matchToUndo) return;\n\n    this.multiTournamentService\n      .undoMatchResult(this.matchToUndo.multiMatchId)\n      .subscribe({\n        next: (response: ApiResponse) => {\n          if (response.success) {\n            this.toastr.success('تم إلغاء نتيجة المباراة بنجاح', 'نجاح');\n            this.loadTournaments();\n            this.loadTournamentMatches();\n            this.closeConfirmUndoMatchModal();\n          } else {\n            this.toastr.error(\n              response.message || 'فشل في إلغاء النتيجة',\n              'خطأ'\n            );\n          }\n        },\n        error: (error) => {\n          console.error('Error undoing match result:', error);\n          this.toastr.error('خطأ في إلغاء نتيجة المباراة', 'خطأ');\n        },\n      });\n  }\n\n  // Modal Controls\n  openCreateTeamModal(tournament: MultiTournamentDto): void {\n    this.activeTournament = tournament;\n    this.createTeamForm = {\n      teamName: '',\n      playerIds: [],\n    };\n    this.showCreateTeamModal = true;\n  }\n\n  closeCreateTeamModal(): void {\n    this.showCreateTeamModal = false;\n    this.activeTournament = null;\n  }\n\n  closeRecordResultModal(): void {\n    this.showRecordResultModal = false;\n    this.selectedMatchId = null;\n    this.selectedPlayer1Id = null;\n    this.selectedPlayer2Id = null;\n    this.recordingScore1 = null;\n    this.recordingScore2 = null;\n  }\n\n  // Confirmation Modal Controls\n  openConfirmStartTournamentModal(tournament: MultiTournamentDto): void {\n    this.tournamentToConfirm = tournament;\n    this.showConfirmStartTournamentModal = true;\n  }\n\n  closeConfirmStartTournamentModal(): void {\n    this.showConfirmStartTournamentModal = false;\n    this.tournamentToConfirm = null;\n  }\n\n  openConfirmFinishTournamentModal(tournament: MultiTournamentDto): void {\n    this.tournamentToConfirm = tournament;\n    this.showConfirmFinishTournamentModal = true;\n  }\n\n  closeConfirmFinishTournamentModal(): void {\n    this.showConfirmFinishTournamentModal = false;\n    this.tournamentToConfirm = null;\n  }\n\n  openConfirmDeleteTournamentModal(tournament: MultiTournamentDto): void {\n    this.tournamentToConfirm = tournament;\n    this.showConfirmDeleteTournamentModal = true;\n  }\n\n  closeConfirmDeleteTournamentModal(): void {\n    this.showConfirmDeleteTournamentModal = false;\n    this.tournamentToConfirm = null;\n  }\n\n  openConfirmUndoMatchModal(match: MatchDetail): void {\n    this.matchToUndo = match;\n    this.showConfirmUndoMatchModal = true;\n  }\n\n  closeConfirmUndoMatchModal(): void {\n    this.showConfirmUndoMatchModal = false;\n    this.matchToUndo = null;\n  }\n\n  getTrophyIcon(position: number): string {\n    switch (position) {\n      case 1:\n        return '🥇';\n      case 2:\n        return '🥈';\n      case 3:\n        return '🥉';\n      default:\n        return '';\n    }\n  }\n\n  canFinishTournament(tournament: MultiTournamentDto): boolean {\n    return tournament.status === 'Started';\n  }\n\n  canDeleteTournament(tournament: MultiTournamentDto): boolean {\n    return tournament.status === 'Created';\n  }\n\n  openRecordResultModal(match: MatchDetail): void {\n    this.selectedMatchId = match.multiMatchId;\n    this.selectedPlayer1Id = match.player1Id;\n    this.selectedPlayer2Id = match.player2Id;\n    this.recordingScore1 = null;\n    this.recordingScore2 = null;\n    this.showRecordResultModal = true;\n    // Close player matches modal when opening record result modal\n    this.showPlayerMatchesModal = false;\n  }\n\n  // Close Player Matches Modal\n  closePlayerMatchesModal(): void {\n    this.showPlayerMatchesModal = false;\n    this.selectedPlayer = null;\n  }\n\n  // Player Selection\n  selectPlayer(player: PlayerDetail): void {\n    this.selectedPlayer = player;\n    this.opponentSearchTerm = '';\n    this.showPlayerMatchesModal = true;\n    this.loadTournamentMatches();\n  }\n\n  // Get Player Matches\n  getPlayerMatches(playerId: number): MatchDetail[] {\n    if (!this.tournamentMatches || this.tournamentMatches.length === 0) {\n      return [];\n    }\n\n    const playerMatches: MatchDetail[] = [];\n\n    this.tournamentMatches.forEach((fixture) => {\n      fixture.matches.forEach((match) => {\n        if (match.player1Id === playerId || match.player2Id === playerId) {\n          playerMatches.push(match);\n        }\n      });\n    });\n\n    return playerMatches;\n  }\n\n  // Get Player Name by ID\n  getPlayerName(playerId: number | null): string {\n    if (!playerId) return 'Unknown Player';\n\n    const player = this.availablePlayers.find((p) => p.playerId === playerId);\n    return player ? player.fullName : 'Unknown Player';\n  }\n\n  // Get Team Players Names\n  getTeamPlayersNames(team: TeamDetail): string[] {\n    if (!team.players || team.players.length === 0) {\n      return ['No players'];\n    }\n    return team.players.map((p) => p.fullName);\n  }\n\n  // Filter Players by Search Term\n  filterPlayers(): void {\n    if (!this.playerSearchTerm || this.playerSearchTerm.trim() === '') {\n      this.filteredPlayers = [...this.availablePlayers];\n    } else {\n      const searchTerm = this.playerSearchTerm.trim();\n      this.filteredPlayers = this.availablePlayers.filter((player) =>\n        player.fullName.toLowerCase().includes(searchTerm.toLowerCase())\n      );\n    }\n  }\n\n  // Filter Player Matches by Opponent Name\n  filterPlayerMatches(): void {\n    if (!this.selectedPlayer) return;\n\n    const allMatches = this.getPlayerMatches(this.selectedPlayer.playerId || 0);\n\n    if (!this.opponentSearchTerm || this.opponentSearchTerm.trim() === '') {\n      this.filteredPlayerMatches = allMatches;\n    } else {\n      const searchTerm = this.opponentSearchTerm.trim();\n      this.filteredPlayerMatches = allMatches.filter((match) => {\n        const player1Name = match.player1Name?.toLowerCase() || '';\n        const player2Name = match.player2Name?.toLowerCase() || '';\n        const searchLower = searchTerm.toLowerCase();\n\n        // Search in both player names (excluding the selected player)\n        if (match.player1Id === this.selectedPlayer?.playerId) {\n          return player2Name.includes(searchLower);\n        } else if (match.player2Id === this.selectedPlayer?.playerId) {\n          return player1Name.includes(searchLower);\n        }\n        return false;\n      });\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { PlayersComponent } from './players/players.component';\r\nimport { InboxComponent } from './inbox/inbox.component';\r\nimport { FriendliesComponent } from './friendlies/friendlies.component';\r\nimport { FriendlyInboxComponent } from './friendlies/friendly-inbox/friendly-inbox.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FindPlayerPipe } from '../pipes/find-player.pipe';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { UtcToLocalPipe } from '../pipes/utcToLocal.pipe';\r\nimport { PlayerModule } from '../player/player.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { TeamsDashboardComponent } from './teams-dashboard/teams-dashboard.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlayersComponent,\r\n    InboxComponent,\r\n    FriendliesComponent,\r\n    FriendlyInboxComponent,\r\n    FindPlayerPipe,\r\n    UtcToLocalPipe,\r\n    TeamsDashboardComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    PlayerModule,\r\n    SharedModule,\r\n  ],\r\n})\r\nexport class AdminModule {}\r\n"],"x_google_ignoreList":[0,2]}