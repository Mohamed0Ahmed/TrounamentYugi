{"version":3,"file":"main.22f00491aaf7dd7a.js","mappings":"gMAUO,IAAMA,EAAW,MAAlB,MAAOA,EAMXC,YAAoBC,EAA0BC,GAA1BC,KAAAF,OAA0BE,KAAAD,SALtCC,KAAAC,QAAUC,IAAYC,OACtBH,KAAAI,kBAAoB,IAAIC,IAAyBL,KAAKM,YAC9DN,KAAAO,YAAcP,KAAKI,kBAAkBI,eAC7BR,KAAAS,SAA0B,KAGhC,MAAMC,EAAQC,aAAaC,QAAQ,SAC/BF,IACFV,KAAKS,SAAWT,KAAKa,iBAAiBH,GACtCV,KAAKI,kBAAkBU,MAAK,GAEhC,CAEAC,MAAMC,EAAeC,GACnB,OAAOjB,KAAKF,KACToB,KAAU,GAAGlB,KAAKC,qBAAsB,CACvCe,QACAC,aAEDE,QACCC,KAAKC,IACCA,EAASC,UACXX,aAAaY,QAAQ,QAASF,EAASX,OACvCC,aAAaY,QAAQ,WAAYF,EAASZ,UAAY,SACtDT,KAAKS,SAAWY,EAASZ,UAAY,QACrCT,KAAKI,kBAAkBU,MAAK,GAC5Bd,KAAKD,OAAOyB,SAAS,CAAC,WAAS,GAIzC,CAEAC,YACEC,EACAT,GAEA,OAAOjB,KAAKF,KACToB,KAAoB,GAAGlB,KAAKC,4BAA6B,CACxDyB,cACAT,aAEDE,QACCC,KAAKC,IACH,GAAIA,EAASC,SAAWD,EAASX,MAAO,CACtCC,aAAaY,QAAQ,QAASF,EAASX,OACvC,MAAMiB,EAAgB3B,KAAKa,iBAAiBQ,EAASX,OACrDV,KAAKS,SAAWkB,GAAiB,SACjChB,aAAaY,QAAQ,WAAYvB,KAAKS,UAEtCT,KAAKI,kBAAkBU,MAAK,GAC5Bd,KAAKD,OAAOyB,SAAS,CAAC,eAIhC,CAEAI,SACEF,EACAT,EACAY,EACAC,GAEA,OAAO9B,KAAKF,KAAKoB,KACf,GAAGlB,KAAKC,+BACR,CAAEyB,cAAaT,WAAUY,YAAWC,YAExC,CAEAC,cACEL,EACAM,GAEA,OAAOhC,KAAKF,KAAKoB,KACf,GAAGlB,KAAKC,8BACR,CAAEyB,cAAaM,eAEnB,CAEAC,SACEtB,aAAauB,WAAW,SACxBlC,KAAKS,SAAW,KAChBT,KAAKI,kBAAkBU,MAAK,GAC5Bd,KAAKD,OAAOyB,SAAS,CAAC,WACxB,CAEAW,UACE,OAAOnC,KAAKS,QACd,CAEQH,WACN,QAASK,aAAaC,QAAQ,QAChC,CAEQC,iBAAiBH,GACvB,IAGE,OAFgB0B,KAAKC,MAAMC,KAAK5B,EAAM6B,MAAM,KAAK,KAC5BC,MAAW,WAGhC,OAAO,KAEX,iDAtGW5C,GAAW6C,MAAAC,MAAAD,MAAAE,MAAA,sCAAX/C,EAAWgD,QAAXhD,EAAWiD,UAAAC,WAFV,QAAM,SAEPlD,CAAW,kFCGjB,IAAMmD,EAAY,MAAnB,MAAOA,EAMXlD,cALQG,KAAAgD,MAAQ,IAAIC,IACHjD,KAAAkD,YAAc,IACdlD,KAAAmD,WAAa,KACbnD,KAAAoD,WAAa,MAG5BpD,KAAKqD,sBACP,CAEAC,IAAOC,EAAaC,EAASC,EAAczD,KAAKkD,aAC9C,MAAMQ,EAAO,CACXF,OACAG,UAAWC,KAAKC,MAChBJ,OAGFzD,KAAKgD,MAAMM,IAAIC,EAAKG,GACpB1D,KAAK8D,oBACP,CAEAC,IAAOR,GACL,MAAMG,EAAO1D,KAAKgD,MAAMe,IAAIR,GAC5B,OAAKG,EAEaE,KAAKC,MAAQH,EAAKC,UAAYD,EAAKD,KAEnDzD,KAAKgD,MAAMgB,OAAOT,GAClBvD,KAAK8D,qBACE,MAGFJ,EAAKF,KATM,IAUpB,CAEAS,IAAIV,GACF,OAAyB,OAAlBvD,KAAK+D,IAAIR,EAClB,CAEAW,QACElE,KAAKgD,MAAMkB,QACXlE,KAAK8D,oBACP,CAEAK,OAAOZ,GACLvD,KAAKgD,MAAMgB,OAAOT,GAClBvD,KAAK8D,oBACP,CAGAM,aACEb,EACAc,EACAZ,EAAczD,KAAKkD,aAEnB,MAAMoB,EAAStE,KAAK+D,IAAOR,GAC3B,OAAIe,KACKC,MAAGD,GAGLD,EAAQlD,QACbC,KAAKoC,GAASxD,KAAKsD,IAAIC,EAAKC,EAAMC,KAAI,EACtCe,KAAYC,IACVC,cAAQD,MAAM,wBAAyBA,GACjCA,IAGZ,CAGAE,mBAAsBpB,EAAac,GACjC,OAAOrE,KAAKoE,aAAab,EAAKc,EAASrE,KAAKmD,WAC9C,CAGAyB,mBAAsBrB,EAAac,GACjC,OAAOrE,KAAKoE,aAAab,EAAKc,EAASrE,KAAKoD,WAC9C,CAGAyB,uBACEtB,EACAc,GAEA,MAAMC,EAAStE,KAAK+D,IAAOR,GAC3B,OAAIe,KACKC,MAAGD,GAGLD,EAAQlD,QACbC,KAAKoC,IAEH,GAAIsB,MAAMC,QAAQvB,IAASA,EAAKwB,OAAS,GAAKxB,EAAK,GAAGyB,UAAW,CAC/D,MAAMC,EAAa,IAAI1B,GAAM2B,KAAK,CAACC,EAAGC,KACpC,MAAMC,EAAQ,IAAI1B,KAAKwB,EAAEH,WAAWM,UAEpC,OADc,IAAI3B,KAAKyB,EAAEJ,WAAWM,UACrBD,IAEjBtF,KAAKsD,IAAIC,EAAK2B,EAAYlF,KAAKoD,iBAE/BpD,KAAKsD,IAAIC,EAAKC,EAAMxD,KAAKoD,WAAU,IAEtC,EACDoB,KAAYC,IACVC,cAAQD,MAAM,wBAAyBA,GACjCA,IAGZ,CAGAe,kBAAkBC,GAChB,UAAWlC,KAAOvD,KAAKgD,MAAM0C,OACvBnC,EAAIoC,SAASF,IACfzF,KAAKgD,MAAMgB,OAAOT,GAGtBvD,KAAK8D,oBACP,CAGA8B,0BACE,MAAM/B,EAAM,IAAID,KAUhB,OATiB,IAAIA,KACnBC,EAAIgC,cACJhC,EAAIiC,WACJjC,EAAIkC,UACJlC,EAAImC,WAAa,EACjB,EACA,EACA,EAGJ,CAGAC,kBAAkB1C,GAChB,MAAMG,EAAO1D,KAAKgD,MAAMe,IAAIR,GAC5B,OAAOG,EAAO,IAAIE,KAAKF,EAAKC,WAAa,IAC3C,CAEQG,qBACN,IACE,MAAMoC,EAAYpB,MAAMqB,KAAKnG,KAAKgD,MAAMoD,WACxCzF,aAAaY,QAAQ,YAAaa,KAAKiE,UAAUH,UAC1CzB,GACPC,QAAQD,MAAM,wCAAyCA,GAE3D,CAEQpB,uBACN,IACE,MAAM6C,EAAYvF,aAAaC,QAAQ,aACvC,GAAIsF,EAAW,CACb,MAAME,EAAUhE,KAAKC,MAAM6D,GAC3BlG,KAAKgD,MAAQ,IAAIC,IAAImD,GAGrB,UAAY7C,EAAKG,KAAS1D,KAAKgD,MAAMoD,UAC/BxC,KAAKC,MAAQH,EAAKC,UAAYD,EAAKD,KACrCzD,KAAKgD,MAAMgB,OAAOT,UAIjBkB,GACPC,QAAQD,MAAM,0CAA2CA,GAE7D,iDAvKW1B,EAAY,sCAAZA,EAAYH,QAAZG,EAAYF,UAAAC,WAFX,QAAM,SAEPC,CAAY,kFCHlB,IAAMuD,EAAW,MAAlB,MAAOA,EAGXzG,YAAoBC,EAA0ByG,GAA1BvG,KAAAF,OAA0BE,KAAAuG,eAFtCvG,KAAAC,QAAUC,IAAYC,MAE6C,CAE3EqG,SAASC,GACP,OAAOzG,KAAKF,KAAKoB,KAAqB,GAAGlB,KAAKC,qBAAsB,CAClEyG,QAASD,GAEb,CAEAE,WACE,OAAO3G,KAAKF,KAAKiE,IAAkB,GAAG/D,KAAKC,qBAC7C,CAGA2G,gBACE,OAAO5G,KAAKF,KAAKiE,IAAkB,GAAG/D,KAAKC,qBAC7C,CAEA4G,cAAcC,EAAgBC,GAC5B,OAAO/G,KAAKF,KAAKoB,KACf,GAAGlB,KAAKC,qBAAqB6G,IAC7B,CAAEE,OAAQD,GAEd,CAEAE,WAAWH,EAAgBC,GACzB,OAAO/G,KAAKF,KAAKoB,KACf,GAAGlB,KAAKC,uBAAuB6G,IAC/B,CAAEE,OAAQD,GAEd,iDAhCWT,GAAW7D,MAAAC,MAAAD,MAAAE,KAAA,sCAAX2D,EAAW1D,QAAX0D,EAAWzD,UAAAC,WAFV,QAAM,SAEPwD,CAAW,sCCNjB,MAAMpG,EAAc,CACzBgH,YAAY,EAEZ/G,OAPQ,6FCIV,MAAMgH,EAAiB,CACrB,CAAEC,KAAM,GAAIC,WAAY,SAAUC,UAAW,QAC7C,CACEF,KAAM,SACNG,aAAcA,IACZC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,KAAAD,EAAAC,EAAA,OAAAC,KAAAF,EAAAG,KAAAH,EAAA,OAAiCE,KAAME,GAAMA,EAAEC,eAEnD,CACEX,KAAM,OACNG,aAAcA,IAAMC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,KAAAD,EAAAC,EAAA,OAAAC,KAAAF,EAAAG,KAAAH,EAAA,MAA6BE,KAAME,GAAMA,EAAEE,aAEjE,CACEZ,KAAM,QACNG,aAAcA,IACZC,QAAAC,IAAA,CAAAC,EAAAC,EAAA,KAAAD,EAAAC,EAAA,KAAAD,EAAAC,EAAA,OAAAC,KAAAF,EAAAG,KAAAH,EAAA,OAA+BE,KAAME,GAAMA,EAAEG,aAC/CC,YAAa,CCfuBC,CAACC,EAAOC,MACxCC,EAAcC,OAAO3I,OACbe,aAAaC,QAAQ,YDenC,CAAEwG,KAAM,KAAMC,WAAY,WAOrB,IAAMmB,EAAgB,MAAvB,MAAOA,oDAAgB,mCAAhBA,GAAgB,uCAHjBC,KAAaC,QAAQvB,GACrBsB,OAAY,SAEXD,CAAgB,sEElBrB/F,MAAA,UAIEA,MAAA,uBACFA,+BACAA,MAAA,UAMEA,MAAA,uBACFA,+BAGAA,MAAA,UAMEA,MAAA,aACFA,+BAsCAA,MAAA,UAMEA,MAAA,aACFA,+BAEAA,MAAA,GACEA,MAAA,UAKEA,MAAA,aACFA,QACAA,MAAA,UAKEA,MAAA,gBACFA,QACFA,iDAEAA,MAAA,UAEEA,MAAA,mBAAAA,MAAAkG,GAAA,MAAAC,EAAAnG,QAAA,OAASA,MAAAmG,EAAA3G,SAAQ,GAGjBQ,MAAA,cACFA,iDA+DAA,MAAA,GACEA,MAAA,UAGEA,MAAA,mBAAAA,MAAAoG,GAAA,MAAAC,EAAArG,QAAA,OAASA,MAAAqG,EAAAC,YAAW,GAEpBtG,MAAA,aACFA,QACAA,MAAA,UAGEA,MAAA,mBAAAA,MAAAoG,GAAA,MAAAG,EAAAvG,QAAA,OAASA,MAAAuG,EAAAD,YAAW,GAEpBtG,MAAA,gBACFA,QACFA,iDAEAA,MAAA,UAEEA,MAAA,mBAAAA,MAAAwG,GAAA,MAAAC,EAAAzG,QAASyG,SAAAjH,SAAUQ,MAAAyG,EAAAH,YAAW,GAG9BtG,MAAA,cACFA,kCAQNA,MAAA,WAAAA,CAAyC,WAErCA,MAAA,GACFA,oCADEA,MAAA,GAAAA,MAAA,IAAA0G,EAAAC,QAAA,+BAHN3G,MAAA,YACEA,MAAA,EAAA4G,EAAA,cAKF5G,8BALwBA,MAAA,GAAAA,MAAA,UAAA6G,EAAAC,wDCzLjB,IAAMC,EAAe,MAAtB,MAAOA,EAMX3J,YACUyI,EACAvI,EACA0J,EACAC,GAHA1J,KAAAsI,cACAtI,KAAAD,SACAC,KAAAyJ,SACAzJ,KAAA0J,cATV1J,KAAA2J,YAAa,EACb3J,KAAA4J,SAAU,EACV5J,KAAAuJ,MAAgB,GAChBvJ,KAAA6J,YAAa,EAQX7J,KAAKsI,YAAY/H,YAAYuJ,UAAWC,IACtC/J,KAAK2J,WAAaI,EAClB,MAAMvH,EAAOxC,KAAKsI,YAAYnG,UAC9BnC,KAAK4J,QAAmB,UAATpH,CAAS,EAE5B,CACAwH,WACEhK,KAAK2G,UACP,CAEA1E,SACEjC,KAAKsI,YAAYrG,SACjBjC,KAAKyJ,OAAOnI,QAAQ,mHACpBtB,KAAKD,OAAOyB,SAAS,CAAC,WACxB,CAEAmF,WACE3G,KAAK0J,YAAY/C,WAAWmD,UAAWzI,IACrCrB,KAAKuJ,MAAQlI,EAASkI,MAAMU,OAAQC,GAAoB,GAAdA,EAAEC,SAAiB,EAEjE,CACAC,aACEpK,KAAK6J,YAAc7J,KAAK6J,UAC1B,CAEAd,YACE/I,KAAK6J,YAAa,CACpB,iDAvCWL,GAAe/G,MAAAC,KAAAD,MAAAE,MAAAF,MAAA4H,MAAA5H,MAAA6H,KAAA,oCAAfd,EAAee,UAAA,iBAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,yiKAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDZ5BnI,MAAA,UAAAA,CAEC,UAFDA,CAEC,UAFDA,CAEC,WAQOA,MAAA,EAAAqI,EAAA,WAMArI,MAAA,EAAAsI,EAAA,WAUAtI,MAAA,EAAAuI,EAAA,WAQFvI,QAGAA,MAAA,UAAAA,CAA+D,SAM3DA,MAAA,uBACFA,QACAA,MAAA,UAKEA,MAAA,oBACFA,QACAA,MAAA,WAKEA,MAAA,qBACFA,QACAA,MAAA,WAKEA,MAAA,gBACFA,UAIFA,MAAA,aAEEA,MAAA,GAAAwI,EAAA,YASAxI,MAAA,GAAAyI,EAAA,uBAiBAzI,MAAA,GAAA0I,EAAA,YAOF1I,QAGAA,MAAA,YAAAA,CAAuB,gBACbA,MAAA,0BAASoI,EAAAT,YAAY,GAC3B3H,cAAA,aAQEA,MAAA,cAKFA,cAMNA,cAAA,YAAAA,CAGC,YAHDA,CAGC,WAMKA,MAAA,0BAASoI,EAAA9B,WAAW,GAEpBtG,MAAA,wBACFA,QACAA,MAAA,WAIEA,MAAA,0BAASoI,EAAA9B,WAAW,GAEpBtG,MAAA,oBACFA,QACAA,MAAA,WAIEA,MAAA,0BAASoI,EAAA9B,WAAW,GAEpBtG,MAAA,qBACFA,QACAA,MAAA,WAIEA,MAAA,0BAASoI,EAAA9B,WAAW,GAEpBtG,MAAA,gBACFA,QAEAA,MAAA,GAAA2I,EAAA,uBAiBA3I,MAAA,GAAA4I,EAAA,YAOF5I,cAMNA,MAAA,GAAA6I,EAAA,qBAxLW7I,MAAA,GAAAA,MAAA,QAAAoI,EAAAjB,SAKAnH,MAAA,GAAAA,MAAA,OAAAoI,EAAAjB,SAUAnH,MAAA,GAAAA,MAAA,OAAAoI,EAAAlB,aAAAkB,EAAAjB,SA6CAnH,MAAA,IAAAA,MAAA,OAAAoI,EAAAlB,aAAAkB,EAAAjB,SAQYnH,MAAA,GAAAA,MAAA,QAAAoI,EAAAlB,YAkBZlH,MAAA,GAAAA,MAAA,OAAAoI,EAAAlB,YAgCLlH,MAAA,GAAAA,MAAA,UAAAA,MAAA,GAAA8I,EAAAV,EAAAhB,YAAAgB,EAAAhB,aAoCiBpH,MAAA,IAAAA,MAAA,QAAAoI,EAAAlB,YAkBZlH,MAAA,GAAAA,MAAA,OAAAoI,EAAAlB,YAY6BlH,MAAA,GAAAA,MAAA,OAAAoI,EAAAtB,MAAAvE,OAAA,8oJCxL3BwE,CAAe,KCLfgC,EAAY,MAAnB,MAAOA,EALb3L,cAMEG,KAAAyL,MAAQ,iEADGD,EAAY,oCAAZA,EAAYjB,UAAA,eAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,uKAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,ICPzBnI,MAAA,gBACAA,MAAA,WACEA,MAAA,mBACFA,QAEAA,MAAA,kBAAAA,CAMG,SAAwBA,MAAA,gBAAUA,iBADnCA,MAAA,GAAAA,MAAA,wDDHW+I,CAAY,uCEKlB,IAAME,EAAe,MAAtB,MAAOA,EACX7L,YAAoB8L,GAAA3L,KAAA2L,SAA6B,CAEjDC,UACEC,EACA/K,GAEAd,KAAK2L,QAAQG,OAEb,MAAMpL,EAAQC,aAAaC,QAAQ,SACnC,IAAImL,EAAYF,EAEhB,OAAInL,IACFqL,EAAYF,EAAIG,MAAM,CACpBC,WAAY,CACVC,cAAe,UAAUxL,QAKxBI,EAAKqL,OAAOJ,GAAW5K,QAC5BiL,KAAS,KACPpM,KAAK2L,QAAQU,MAAI,GAGvB,iDAzBWX,GAAejJ,MAAAC,MAAA,sCAAfgJ,EAAe9I,QAAf8I,EAAe7I,WAAA,SAAf6I,CAAe,6BCCrB,IAAMY,EAAgB,MAAvB,MAAOA,EACXzM,YAAoB0G,GAAAvG,KAAAuG,cAA6B,CAEjDqF,UAAUvH,EAA2BvD,GAInC,GAAuB,QAAnBuD,EAAQkI,QAAoBvM,KAAKwM,YAAYnI,EAAQoI,KAAM,CAC7D,MAAMC,EAAiB1M,KAAKuG,aAAaxC,IAAIM,EAAQoI,KACrD,GAAIC,EACF,SAAOnI,MAAG,IAAIoI,KAAa,CAAEC,KAAMF,KAIvC,OAAO5L,EAAKqL,OAAO9H,EACrB,CAEQmI,YAAYC,GAYlB,MAVsB,CACpB,kBACA,UACA,SACA,iBACA,cACA,sBACA,4BAGmBI,KAAKC,GAAgBL,EAAI9G,SAASmH,GACzD,iDA9BWR,GAAgB7J,MAAAC,KAAA,sCAAhB4J,EAAgB1J,QAAhB0J,EAAgBzJ,WAAA,SAAhByJ,CAAgB,KCqBhBS,EAAS,MAAhB,MAAOA,oDAAS,mCAATA,EAASC,UAAA,CAFRxB,IAAY,wCALb,CACT,CAAEyB,QAASC,KAAmBC,SAAUzB,EAAiB0B,OAAO,GAChE,CAAEH,QAASC,KAAmBC,SAAUb,EAAkBc,OAAO,GACjEC,MACDC,QAAA,CAfCC,KACA/E,EACAgF,KACAC,KACAC,KAAahF,QAAQ,CACnBiF,QAAS,IACTC,cAAe,kBACfC,mBAAmB,IAErBR,KAAiB3E,QAAQ,CAAEoF,KAAM,uBAAqB,SAS7Cf,CAAS,KC7BtBgB,OAAyBC,gBAAgBjB,GACtCkB,MAAMC,GAAOxJ,QAAQD,MAAMyJ","names":["AuthService","constructor","http","router","this","baseUrl","environment","apiUrl","isLoggedInSubject","BehaviorSubject","hasToken","isLoggedIn$","asObservable","userRole","token","localStorage","getItem","getRoleFromToken","next","login","email","password","post","pipe","tap","response","success","setItem","navigate","playerLogin","phoneNumber","extractedRole","register","firstName","lastName","resetPassword","newPassword","logout","removeItem","getRole","JSON","parse","atob","split","role","i0","i1","i2","factory","Éµfac","providedIn","CacheService","cache","Map","DEFAULT_TTL","PLAYER_TTL","LEAGUE_TTL","loadFromLocalStorage","set","key","data","ttl","item","timestamp","Date","now","saveToLocalStorage","get","delete","has","clear","remove","cacheRequest","request","cached","of","catchError","error","console","cachePlayerRequest","cacheLeagueRequest","cacheAllLeaguesRequest","Array","isArray","length","createdOn","sortedData","sort","a","b","dateA","getTime","invalidatePattern","pattern","keys","includes","getNextPlayerUpdateTime","getFullYear","getMonth","getDate","getHours","getLastUpdateTime","cacheData","from","entries","stringify","NoteService","cacheService","sendNote","message","Content","getNotes","getAdminNotes","toggleMarHide","noteId","marked","Marked","DeleteNote","production","routes","path","redirectTo","pathMatch","loadChildren","Promise","all","__webpack_require__","e","then","bind","m","PlayerModule","AuthModule","AdminModule","canActivate","authGuard","route","state","authService","inject","AppRoutingModule","RouterModule","forRoot","_r10","ctx_r9","_r12","ctx_r11","closeMenu","ctx_r13","_r15","ctx_r14","note_r17","content","NavbarComponent_div_36_div_1_Template","ctx_r8","notes","NavbarComponent","toastr","noteService","isLoggedIn","isAdmin","isMenuOpen","subscribe","loggedIn","ngOnInit","filter","n","isHidden","toggleMenu","i3","i4","selectors","decls","vars","consts","template","rf","ctx","NavbarComponent_a_4_Template","NavbarComponent_a_5_Template","NavbarComponent_a_6_Template","NavbarComponent_a_17_Template","NavbarComponent_ng_container_18_Template","NavbarComponent_a_19_Template","NavbarComponent_ng_container_34_Template","NavbarComponent_a_35_Template","NavbarComponent_div_36_Template","_c0","AppComponent","title","AuthInterceptor","spinner","intercept","req","show","clonedReq","clone","setHeaders","Authorization","handle","finalize","hide","CacheInterceptor","method","shouldCache","url","cachedResponse","HttpResponse","body","some","cacheableUrl","AppModule","bootstrap","provide","HTTP_INTERCEPTORS","useClass","multi","NgxSpinnerModule","imports","BrowserModule","HttpClientModule","NoopAnimationsModule","ToastrModule","timeOut","positionClass","preventDuplicates","type","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","sources":["./src/app/core/services/auth.service.ts","./src/app/core/services/cache.service.ts","./src/app/core/services/note.service.ts","./src/environments/environment.ts","./src/app/app-routing.module.ts","./src/app/core/guards/auth.guard.ts","./src/app/navbar/navbar.component.html","./src/app/navbar/navbar.component.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/interceptors/auth-interceptor.service.ts","./src/app/core/interceptors/cache-interceptor.service.ts","./src/app/app.module.ts","./src/main.ts"],"sourcesContent":["import { environment } from './../../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { CommonResponse, LoginResponse } from 'src/app/models/interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private baseUrl = environment.apiUrl;\r\n  private isLoggedInSubject = new BehaviorSubject<boolean>(this.hasToken());\r\n  isLoggedIn$ = this.isLoggedInSubject.asObservable();\r\n  private userRole: string | null = null;\r\n\r\n  constructor(private http: HttpClient, private router: Router) {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      this.userRole = this.getRoleFromToken(token);\r\n      this.isLoggedInSubject.next(true);\r\n    }\r\n  }\r\n\r\n  login(email: string, password: string): Observable<any> {\r\n    return this.http\r\n      .post<any>(`${this.baseUrl}/auth/login`, {\r\n        email,\r\n        password,\r\n      })\r\n      .pipe(\r\n        tap((response) => {\r\n          if (response.success) {\r\n            localStorage.setItem('token', response.token);\r\n            localStorage.setItem('userRole', response.userRole || 'Admin');\r\n            this.userRole = response.userRole || 'Admin';\r\n            this.isLoggedInSubject.next(true);\r\n            this.router.navigate(['/admin']);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  playerLogin(\r\n    phoneNumber: string,\r\n    password: string\r\n  ): Observable<LoginResponse> {\r\n    return this.http\r\n      .post<LoginResponse>(`${this.baseUrl}/auth/player-login`, {\r\n        phoneNumber,\r\n        password,\r\n      })\r\n      .pipe(\r\n        tap((response) => {\r\n          if (response.success && response.token) {\r\n            localStorage.setItem('token', response.token);\r\n            const extractedRole = this.getRoleFromToken(response.token);\r\n            this.userRole = extractedRole || 'Player';\r\n            localStorage.setItem('userRole', this.userRole);\r\n\r\n            this.isLoggedInSubject.next(true);\r\n            this.router.navigate(['/player']);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  register(\r\n    phoneNumber: string,\r\n    password: string,\r\n    firstName: string,\r\n    lastName: string\r\n  ): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(\r\n      `${this.baseUrl}/auth/register-player`,\r\n      { phoneNumber, password, firstName, lastName }\r\n    );\r\n  }\r\n\r\n  resetPassword(\r\n    phoneNumber: string,\r\n    newPassword: string\r\n  ): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(\r\n      `${this.baseUrl}/auth/reset-password`,\r\n      { phoneNumber, newPassword }\r\n    );\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('token');\r\n    this.userRole = null;\r\n    this.isLoggedInSubject.next(false);\r\n    this.router.navigate(['/player']);\r\n  }\r\n\r\n  getRole(): string | null {\r\n    return this.userRole;\r\n  }\r\n\r\n  private hasToken(): boolean {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n\r\n  private getRoleFromToken(token: string): string | null {\r\n    try {\r\n      const payload = JSON.parse(atob(token.split('.')[1]));\r\n      const role = payload['role'] || null;\r\n      return role;\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { tap, catchError } from 'rxjs/operators';\r\n\r\ninterface CacheItem<T> {\r\n  data: T;\r\n  timestamp: number;\r\n  ttl: number; // Time to live in milliseconds\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CacheService {\r\n  private cache = new Map<string, CacheItem<any>>();\r\n  private readonly DEFAULT_TTL = 5 * 60 * 1000; // 5 minutes default\r\n  private readonly PLAYER_TTL = 60 * 60 * 1000; // 1 hour for player data\r\n  private readonly LEAGUE_TTL = 24 * 60 * 60 * 1000; // 24 hours for league data\r\n\r\n  constructor() {\r\n    this.loadFromLocalStorage();\r\n  }\r\n\r\n  set<T>(key: string, data: T, ttl: number = this.DEFAULT_TTL): void {\r\n    const item = {\r\n      data,\r\n      timestamp: Date.now(),\r\n      ttl,\r\n    };\r\n\r\n    this.cache.set(key, item);\r\n    this.saveToLocalStorage();\r\n  }\r\n\r\n  get<T>(key: string): T | null {\r\n    const item = this.cache.get(key);\r\n    if (!item) return null;\r\n\r\n    const isExpired = Date.now() - item.timestamp > item.ttl;\r\n    if (isExpired) {\r\n      this.cache.delete(key);\r\n      this.saveToLocalStorage();\r\n      return null;\r\n    }\r\n\r\n    return item.data;\r\n  }\r\n\r\n  has(key: string): boolean {\r\n    return this.get(key) !== null;\r\n  }\r\n\r\n  clear(): void {\r\n    this.cache.clear();\r\n    this.saveToLocalStorage();\r\n  }\r\n\r\n  remove(key: string): void {\r\n    this.cache.delete(key);\r\n    this.saveToLocalStorage();\r\n  }\r\n\r\n  // Helper method to cache HTTP requests\r\n  cacheRequest<T>(\r\n    key: string,\r\n    request: Observable<T>,\r\n    ttl: number = this.DEFAULT_TTL\r\n  ): Observable<T> {\r\n    const cached = this.get<T>(key);\r\n    if (cached) {\r\n      return of(cached);\r\n    }\r\n\r\n    return request.pipe(\r\n      tap((data) => this.set(key, data, ttl)),\r\n      catchError((error) => {\r\n        console.error('Cache request failed:', error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n\r\n  // Cache player data with 1 hour TTL\r\n  cachePlayerRequest<T>(key: string, request: Observable<T>): Observable<T> {\r\n    return this.cacheRequest(key, request, this.PLAYER_TTL);\r\n  }\r\n\r\n  // Cache league data with 24 hours TTL\r\n  cacheLeagueRequest<T>(key: string, request: Observable<T>): Observable<T> {\r\n    return this.cacheRequest(key, request, this.LEAGUE_TTL);\r\n  }\r\n\r\n  // Cache all-leagues data with 24 hours TTL and sort by creation date (newest first)\r\n  cacheAllLeaguesRequest<T>(\r\n    key: string,\r\n    request: Observable<T>\r\n  ): Observable<T> {\r\n    const cached = this.get<T>(key);\r\n    if (cached) {\r\n      return of(cached);\r\n    }\r\n\r\n    return request.pipe(\r\n      tap((data: any) => {\r\n        // Sort leagues by createdOn date (newest first) if it's an array\r\n        if (Array.isArray(data) && data.length > 0 && data[0].createdOn) {\r\n          const sortedData = [...data].sort((a, b) => {\r\n            const dateA = new Date(a.createdOn).getTime();\r\n            const dateB = new Date(b.createdOn).getTime();\r\n            return dateB - dateA; // Descending order (newest first)\r\n          });\r\n          this.set(key, sortedData, this.LEAGUE_TTL);\r\n        } else {\r\n          this.set(key, data, this.LEAGUE_TTL);\r\n        }\r\n      }),\r\n      catchError((error) => {\r\n        console.error('Cache request failed:', error);\r\n        throw error;\r\n      })\r\n    );\r\n  }\r\n\r\n  // Invalidate cache for specific patterns\r\n  invalidatePattern(pattern: string): void {\r\n    for (const key of this.cache.keys()) {\r\n      if (key.includes(pattern)) {\r\n        this.cache.delete(key);\r\n      }\r\n    }\r\n    this.saveToLocalStorage();\r\n  }\r\n\r\n  // Get next update time for player data (every hour)\r\n  getNextPlayerUpdateTime(): Date {\r\n    const now = new Date();\r\n    const nextHour = new Date(\r\n      now.getFullYear(),\r\n      now.getMonth(),\r\n      now.getDate(),\r\n      now.getHours() + 1,\r\n      0,\r\n      0,\r\n      0\r\n    );\r\n    return nextHour;\r\n  }\r\n\r\n  // Get last update time for a specific key\r\n  getLastUpdateTime(key: string): Date | null {\r\n    const item = this.cache.get(key);\r\n    return item ? new Date(item.timestamp) : null;\r\n  }\r\n\r\n  private saveToLocalStorage(): void {\r\n    try {\r\n      const cacheData = Array.from(this.cache.entries());\r\n      localStorage.setItem('app_cache', JSON.stringify(cacheData));\r\n    } catch (error) {\r\n      console.error('Failed to save cache to localStorage:', error);\r\n    }\r\n  }\r\n\r\n  private loadFromLocalStorage(): void {\r\n    try {\r\n      const cacheData = localStorage.getItem('app_cache');\r\n      if (cacheData) {\r\n        const entries = JSON.parse(cacheData);\r\n        this.cache = new Map(entries);\r\n\r\n        // Clean expired items\r\n        for (const [key, item] of this.cache.entries()) {\r\n          if (Date.now() - item.timestamp > item.ttl) {\r\n            this.cache.delete(key);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load cache from localStorage:', error);\r\n    }\r\n  }\r\n}\r\n","import { environment } from './../../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CommonResponse, NoteResponse } from 'src/app/models/interfaces';\r\nimport { CacheService } from './cache.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class NoteService {\r\n  private baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient, private cacheService: CacheService) {}\r\n\r\n  sendNote(message: string): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(`${this.baseUrl}/note/write`, {\r\n      Content: message,\r\n    });\r\n  }\r\n\r\n  getNotes(): Observable<NoteResponse> {\r\n    return this.http.get<NoteResponse>(`${this.baseUrl}/note/notes`);\r\n  }\r\n\r\n  // Admin-specific method with 30-minute cache\r\n  getAdminNotes(): Observable<NoteResponse> {\r\n    return this.http.get<NoteResponse>(`${this.baseUrl}/note/notes`);\r\n  }\r\n\r\n  toggleMarHide(noteId: number, marked: boolean): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(\r\n      `${this.baseUrl}/note/hide/${noteId}`,\r\n      { Marked: marked }\r\n    );\r\n  }\r\n\r\n  DeleteNote(noteId: number, marked: boolean): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(\r\n      `${this.baseUrl}/note/delete/${noteId}`,\r\n      { Marked: marked }\r\n    );\r\n  }\r\n}\r\n","var api = 'https://yugiapp.runasp.net/api';\r\n\r\n// api = 'https://localhost:7144/api';\r\n\r\nexport const environment = {\r\n  production: false,\r\n\r\n  apiUrl: api,\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { authGuard } from './core/guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'player', pathMatch: 'full' },\r\n  {\r\n    path: 'player',\r\n    loadChildren: () =>\r\n      import('./player/player.module').then((m) => m.PlayerModule),\r\n  },\r\n  {\r\n    path: 'auth',\r\n    loadChildren: () => import('./auth/auth.module').then((m) => m.AuthModule),\r\n  },\r\n  {\r\n    path: 'admin',\r\n    loadChildren: () =>\r\n      import('./admin/admin.module').then((m) => m.AdminModule),\r\n    canActivate: [authGuard],\r\n  },\r\n  { path: '**', redirectTo: 'player' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { CanActivateFn } from '@angular/router';\r\nimport { inject } from '@angular/core';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\nexport const authGuard: CanActivateFn = (route, state) => {\r\n  const authService = inject(AuthService);\r\n  const token = localStorage.getItem('token');\r\n  \r\n  return !!token;\r\n};\r\n","<nav\r\n  class=\"fixed top-0 left-0 w-full z-50 bg-black backdrop-blur-sm transition-all duration-300\"\r\n>\r\n  <div\r\n    class=\"container mx-auto flex flex-col md:flex-row md:items-center md:justify-between p-2\"\r\n  >\r\n    <!-- Row with 3 sections: logo | menu | auth -->\r\n    <div class=\"w-full flex items-center justify-between md:gap-4\">\r\n      <!-- Left: Logo + Send Message (mobile) -->\r\n      <div class=\"flex items-center gap-4\">\r\n        <a\r\n          class=\"text-xl font-bold bg-gradient-to-r from-indigo-400 to-cyan-400 text-transparent bg-clip-text\"\r\n          *ngIf=\"!isAdmin\"\r\n        >\r\n          YuGi Tournament\r\n        </a>\r\n        <a\r\n          *ngIf=\"isAdmin\"\r\n          routerLink=\"/admin/players\"\r\n          routerLinkActive=\"!text-indigo-300 bg-white/10 border-b-2 border-white\"\r\n          class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2 font-bold\"\r\n        >\r\n          Admin Dashboard\r\n        </a>\r\n\r\n        <!-- Send Message (small screen only) -->\r\n        <a\r\n          *ngIf=\"isLoggedIn && !isAdmin\"\r\n          routerLink=\"/player/inbox\"\r\n          routerLinkActive=\"!text-indigo-300 bg-white/10 border-b-2 border-white\"\r\n          class=\"md:hidden font-bold text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2 cursor-pointer\"\r\n        >\r\n          Inbox\r\n        </a>\r\n      </div>\r\n\r\n      <!-- Center: Navigation links -->\r\n      <div class=\"hidden md:flex justify-center space-x-2 font-bold\">\r\n        <a\r\n          routerLink=\"/player/forbidden\"\r\n          routerLinkActive=\"!text-indigo-300 bg-white/10 border-b-2 border-white\"\r\n          class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2\"\r\n        >\r\n          Forbidden Cards\r\n        </a>\r\n        <a\r\n          routerLink=\"/player/allLeagues\"\r\n          routerLinkActive=\"!text-indigo-300 bg-white/10 border-b-2 border-white\"\r\n          class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2\"\r\n        >\r\n          All Leagues\r\n        </a>\r\n        <a\r\n          routerLink=\"/player/league-table\"\r\n          routerLinkActive=\"!text-indigo-300 bg-white/10 border-b-2 border-white\"\r\n          class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2\"\r\n        >\r\n          League Table\r\n        </a>\r\n        <a\r\n          routerLink=\"/player/ranking\"\r\n          routerLinkActive=\"!text-indigo-300 bg-white/10 border-b-2 border-white\"\r\n          class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2\"\r\n        >\r\n          Ranking\r\n        </a>\r\n      </div>\r\n\r\n      <!-- Right: Auth Buttons -->\r\n      <div class=\"hidden md:flex justify-end items-center space-x-4\">\r\n        <!-- Send Message (only on large screens) -->\r\n        <a\r\n          *ngIf=\"isLoggedIn && !isAdmin\"\r\n          routerLink=\"/player/inbox\"\r\n          routerLinkActive=\"!text-indigo-300 bg-white/10 border-b-2 border-white\"\r\n          class=\"text-white font-bold hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2 cursor-pointer\"\r\n        >\r\n          Inbox\r\n        </a>\r\n\r\n        <ng-container *ngIf=\"!isLoggedIn\">\r\n          <a\r\n            routerLink=\"/auth/login\"\r\n            routerLinkActive=\"!text-indigo-300 bg-white/10 border-b-2 border-white\"\r\n            class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2\"\r\n          >\r\n            Login\r\n          </a>\r\n          <a\r\n            routerLink=\"/auth/register\"\r\n            routerLinkActive=\"!text-indigo-300 bg-white/10 border-b-2 border-white\"\r\n            class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2\"\r\n          >\r\n            Register\r\n          </a>\r\n        </ng-container>\r\n\r\n        <a\r\n          *ngIf=\"isLoggedIn\"\r\n          (click)=\"logout()\"\r\n          class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2 cursor-pointer\"\r\n        >\r\n          Logout\r\n        </a>\r\n      </div>\r\n\r\n      <!-- Hamburger Button (small screen only) -->\r\n      <div class=\"md:hidden\">\r\n        <button (click)=\"toggleMenu()\" class=\"text-white ml-2\">\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            class=\"h-6 w-6\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n            stroke-width=\"2\"\r\n          >\r\n            <path\r\n              stroke-linecap=\"round\"\r\n              stroke-linejoin=\"round\"\r\n              d=\"M4 6h16M4 12h16M4 18h16\"\r\n            />\r\n          </svg>\r\n        </button>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Mobile Menu (below full row) -->\r\n    <div\r\n      class=\"w-full mt-4 md:hidden\"\r\n      [ngClass]=\"{ block: isMenuOpen, hidden: !isMenuOpen }\"\r\n    >\r\n      <div class=\"flex flex-col space-y-2 font-bold text-center\">\r\n        <a\r\n          routerLink=\"/player/forbidden\"\r\n          routerLinkActive=\"!text-indigo-300 bg-white/10 border-b-2 border-white\"\r\n          class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2\"\r\n          (click)=\"closeMenu()\"\r\n        >\r\n          Forbidden Cards\r\n        </a>\r\n        <a\r\n          routerLink=\"/player/allLeagues\"\r\n          routerLinkActive=\"!text-indigo-300 bg-white/10 border-b-2 border-white\"\r\n          class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2\"\r\n          (click)=\"closeMenu()\"\r\n        >\r\n          All Leagues\r\n        </a>\r\n        <a\r\n          routerLink=\"/player/league-table\"\r\n          routerLinkActive=\"!text-indigo-300 bg-white/10 border-b-2 border-white\"\r\n          class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2\"\r\n          (click)=\"closeMenu()\"\r\n        >\r\n          League Table\r\n        </a>\r\n        <a\r\n          routerLink=\"/player/ranking\"\r\n          routerLinkActive=\"!text-indigo-300 bg-white/10 border-b-2 border-white\"\r\n          class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2\"\r\n          (click)=\"closeMenu()\"\r\n        >\r\n          Ranking\r\n        </a>\r\n\r\n        <ng-container *ngIf=\"!isLoggedIn\">\r\n          <a\r\n            routerLink=\"/auth/login\"\r\n            class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2\"\r\n            (click)=\"closeMenu()\"\r\n          >\r\n            Login\r\n          </a>\r\n          <a\r\n            routerLink=\"/auth/register\"\r\n            class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2\"\r\n            (click)=\"closeMenu()\"\r\n          >\r\n            Register\r\n          </a>\r\n        </ng-container>\r\n\r\n        <a\r\n          *ngIf=\"isLoggedIn\"\r\n          (click)=\"logout(); closeMenu()\"\r\n          class=\"text-white hover:text-gray-300 hover:bg-gray-700 transition rounded py-2 px-2 cursor-pointer\"\r\n        >\r\n          Logout\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n\r\n<!-- Notes Section -->\r\n<div class=\"min-h-[30px] w-full mt-20\" *ngIf=\"notes.length > 0\">\r\n  <div *ngFor=\"let note of notes\" class=\"\">\r\n    <h4 class=\"text-center text-[16px] text-white font-bold\">\r\n      {{ note.content }}\r\n    </h4>\r\n  </div>\r\n</div>\r\n","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { AuthService } from '../../app/core/services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { NoteService } from '../core/services/note.service';\r\nimport { Note } from '../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css'],\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  isLoggedIn = false;\r\n  isAdmin = false;\r\n  notes: Note[] = [];\r\n  isMenuOpen = false;\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private toastr: ToastrService,\r\n    private noteService: NoteService\r\n  ) {\r\n    this.authService.isLoggedIn$.subscribe((loggedIn) => {\r\n      this.isLoggedIn = loggedIn;\r\n      const role = this.authService.getRole();\r\n      this.isAdmin = role === 'Admin';\r\n    });\r\n  }\r\n  ngOnInit(): void {\r\n    this.getNotes();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n    this.toastr.success('ØªÙ ØªØ³Ø¬ÙÙ Ø§ÙØ®Ø±ÙØ¬ Ø¨ÙØ¬Ø§Ø­');\r\n    this.router.navigate(['/player']);\r\n  }\r\n\r\n  getNotes(): void {\r\n    this.noteService.getNotes().subscribe((response) => {\r\n      this.notes = response.notes.filter((n) => n.isHidden == false);\r\n    });\r\n  }\r\n  toggleMenu() {\r\n    this.isMenuOpen = !this.isMenuOpen;\r\n  }\r\n\r\n  closeMenu() {\r\n    this.isMenuOpen = false;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'YugiTournamnet';\r\n\r\n  // â ØªÙ ØªØ¨Ø³ÙØ· AppComponent - Ø­Ø°Ù performance optimizations Ø§ÙØºÙØ± Ø¶Ø±ÙØ±ÙØ©\r\n}\r\n","<app-navbar></app-navbar>\r\n<div class=\"mt-[10px] min-h-[calc(100vh-0px)]\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n<ngx-spinner\r\n  bdColor=\"rgba(0, 0, 0, 1)\"\r\n  size=\"medium\"\r\n  color=\"#fff\"\r\n  type=\"square-jelly-box\"\r\n  [fullScreen]=\"true\"\r\n  ><p style=\"color: white\">Loading...</p></ngx-spinner\r\n>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private spinner: NgxSpinnerService) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    this.spinner.show();\r\n\r\n    const token = localStorage.getItem('token');\r\n    let clonedReq = req;\r\n\r\n    if (token) {\r\n      clonedReq = req.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n    }\r\n\r\n    return next.handle(clonedReq).pipe(\r\n      finalize(() => {\r\n        this.spinner.hide();\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpResponse,\r\n} from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { CacheService } from '../services/cache.service';\r\n\r\n@Injectable()\r\nexport class CacheInterceptor implements HttpInterceptor {\r\n  constructor(private cacheService: CacheService) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // console.log(`Cache interceptor: ${request.url}`);\r\n    \r\n    // Check if this is a GET request and should be cached\r\n    if (request.method === 'GET' && this.shouldCache(request.url)) {\r\n      const cachedResponse = this.cacheService.get(request.url);\r\n      if (cachedResponse) {\r\n        return of(new HttpResponse({ body: cachedResponse }));\r\n      }\r\n    }\r\n    \r\n    return next.handle(request);\r\n  }\r\n\r\n  private shouldCache(url: string): boolean {\r\n    // Add URLs that should be cached\r\n    const cacheableUrls = [\r\n      '/player/ranking',\r\n      '/player',\r\n      '/match',\r\n      '/Message/inbox',\r\n      '/note/notes',\r\n      '/player/players/all',\r\n      '/league/getCurrentLeague'\r\n    ];\r\n    \r\n    return cacheableUrls.some(cacheableUrl => url.includes(cacheableUrl));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { AuthInterceptor } from './interceptors/auth-interceptor.service';\r\nimport { CacheInterceptor } from './core/interceptors/cache-interceptor.service';\r\nimport { PlayerModule } from './player/player.module';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, NavbarComponent],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NoopAnimationsModule,\r\n    ToastrModule.forRoot({\r\n      timeOut: 3000,\r\n      positionClass: 'toast-top-right',\r\n      preventDuplicates: true,\r\n    }),\r\n    NgxSpinnerModule.forRoot({ type: 'square-jelly-box' }),\r\n  ],\r\n  providers: [\r\n    { provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: CacheInterceptor, multi: true },\r\n    NgxSpinnerModule,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"x_google_ignoreList":[]}