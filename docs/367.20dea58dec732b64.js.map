{"version":3,"file":"367.20dea58dec732b64.js","mappings":"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","names":["ReplaySubject","Subject","constructor","_bufferSize","Infinity","_windowTime","_timestampProvider","dateTimestampProvider","super","this","_buffer","_infiniteTimeWindow","Math","max","next","value","isStopped","push","now","_trimBuffer","_subscribe","subscriber","_throwIfClosed","subscription","_innerSubscribe","copy","slice","i","length","closed","_checkFinalizedStatuses","adjustedBufferSize","splice","last","AdminDashboardService","playerService","matchService","leagueService","messageService","noteService","essentialDataCache$","BehaviorSubject","secondaryDataCache","Map","lastEssentialUpdate","lastSecondaryUpdate","CACHE_DURATION","SECONDARY_CACHE_DURATION","getEssentialData","forceRefresh","Date","asObservable","pipe","filter","data","loadEssentialDataFromServer","tap","catchError","error","of","getEmptyDashboardData","shareReplay","configOrBufferSize","windowTime","scheduler","bufferSize","refCount","share","connector","resetOnError","resetOnComplete","resetOnRefCountZero","getSecondaryData","type","lastUpdate","get","hasValidCache","has","loadSecondaryDataFromServer","set","forkJoin","players","getAdminPlayers","matches","getAdminMatches","currentLeague","getAdminCurrentLeague","map","response","league","allLeagues","getAdminAllLeagues","notes","getAdminNotes","messages","getAdminMessages","messagesList","Array","isArray","stats","totalPlayers","totalMatches","totalMatchesLeft","m","isCompleted","totalMessagesLeft","isRead","isFromAdmin","invalidateCache","delete","clear","getCurrentEssentialData","updateMessageCount","count","current","i0","i1","i2","i3","i4","i5","factory","ɵfac","providedIn","player_r16","_r18","$implicit","ctx_r17","selectPlayer","$event","ctx_r19","confirmDelete","ctx_r15","selectedPlayer","playerId","fullName","PlayersComponent_ul_6_li_1_Template","ctx_r0","_r21","ctx_r20","openModal","match_r23","_r26","ctx_r25","updateMatch","matchId","player1Id","ctx_r27","player2Id","ctx_r28","ctx_r29","resetMatch","i_r24","player1Name","player2Name","score1","score2","_c0","ctx_r22","loadingMatches","PlayersComponent_div_9_tr_15_Template","ctx_r2","displayMatches","ctx_r3","_r31","ctx_r30","openStartLeagueModal","_r33","ctx_r32","showEndLeagueModal","_r35","ctx_r34","onTournamentStageButtonClick","ctx_r6","tournamentStageButtonText","PlayersComponent_div_25_p_9_Template","PlayersComponent_div_25_p_10_Template","PlayersComponent_div_25_p_11_Template","ctx_r7","leagueData","description","typeOfLeague","createdOn","name","league_r39","_r42","ctx_r41","openDeleteLeagueModal","leagueId","_c1","i_r40","leagueName","isFinished","leagueType","systemOfLeague","_r44","ctx_r43","closeDeleteLeagueModal","ctx_r45","deleteConfirmedLeague","ctx_r9","selectedLeagueToDelete","_r47","ctx_r46","showDeleteModal","ctx_r48","deleteConfirmedPlayer","ctx_r10","selectedPlayerToDelete","_r50","ctx_r49","newPlayerName","ctx_r51","closeModal","ctx_r52","addPlayer","ctx_r11","_r55","ctx_r54","newLeague","roundsPerMatch","ctx_r53","_r57","ctx_r56","ctx_r58","ctx_r59","ctx_r60","PlayersComponent_div_68_div_30_Template","ctx_r61","closeStartLeagueModal","ctx_r62","startLeague","ctx_r12","_r64","ctx_r63","ctx_r65","resetTournament","id","_r73","note_r67","ctx_r71","toggleHideNote","_r76","ctx_r74","_r79","ctx_r77","toggleDeleteNote","PlayersComponent_div_70_div_15_div_1_button_5_Template","PlayersComponent_div_70_div_15_div_1_button_6_Template","content","isHidden","PlayersComponent_div_70_div_15_div_1_Template","isDeleted","_r82","ctx_r81","newNote","ctx_r83","sendNote","PlayersComponent_div_70_div_15_Template","ctx_r84","closeNoteModal","ctx_r14","PlayersComponent","toastr","adminDashboardService","playerMatches","showModal","isSidebarOpen","showNoteModal","showDeleteLeagueModal","requestQueue","isProcessingQueue","showResetModal","showStartLeagueModal","totalMessages","leagues","currentMatches","showTournamentStageButton","tournamentStageButtonAction","ngOnInit","loadEssentialData","ngOnDestroy","loadCurrentLeagueFromServer","subscribe","updateTournamentStageButton","err","toggleSidebar","player","loadMatches","sort","a","b","nameA","toLowerCase","nameB","localeCompare","match","forEach","addToQueue","request","processQueue","_this","_asyncToGenerator","shift","winnerId","Promise","resolve","reject","success","message","deletePlayer","event","stopPropagation","warning","trim","resetLeague","DeleteLeague","find","l","res","note","toggleMarHide","noteId","DeleteNote","openNoteModal","loadCurrentMatches","LeagueType","Groups","startGroupStage","groupMatches","stage","TournamentStage","GroupStage","tournamentStage","quarterMatches","QuarterFinals","semiMatches","SemiFinals","finalMatches","Final","allGroupMatchesCompleted","every","allQuarterMatchesCompleted","allSemiMatchesCompleted","startQuarterStage","startSemiFinalStage","startFinalStage","createGroupsAndMatches","startKnockoutStage","startSemiFinals","startFinal","i6","selectors","decls","vars","consts","template","rf","ctx","PlayersComponent_ul_6_Template","PlayersComponent_button_7_Template","PlayersComponent_div_9_Template","PlayersComponent_div_17_Template","PlayersComponent_button_20_Template","PlayersComponent_button_21_Template","PlayersComponent_button_22_Template","PlayersComponent_div_25_Template","PlayersComponent_tr_64_Template","PlayersComponent_div_65_Template","PlayersComponent_div_66_Template","PlayersComponent_div_67_Template","PlayersComponent_div_68_Template","PlayersComponent_div_69_Template","PlayersComponent_div_70_Template","_c2","chat_r6","unreadCount","_r10","openChat","senderId","InboxComponent_div_6_div_1_span_6_Template","senderFullName","lastMessage","InboxComponent_div_6_div_1_Template","ctx_r1","playerChats","trackByPlayerId","message_r13","sentAt","_r15","closeChat","InboxComponent_div_8_div_12_Template","ctx_r16","sendReply","replyMessages","selectedChat","ctx_r18","navbarHeight","_c3","senderPhoneNumber","trackByMessageId","_c4","InboxComponent","cdr","selectedPlayerId","loadAdminMessages","updateStatusSubscription","unsubscribe","refreshSubscription","loadFromServer","loadFromCache","groupedMessages","groupMessagesBySender","lastMessageDate","getTime","refreshMessages","ngAfterViewChecked","messagesContainer","scrollToBottom","loadMessages","getMessages","processMessages","detectChanges","chatMap","msg","Object","values","chat","lastMsg","toggleMarkMessage","replyContent","sendAdminReply","newMessage","random","toISOString","container","nativeElement","scrollTop","scrollHeight","index","viewQuery","InboxComponent_div_5_Template","InboxComponent_div_6_Template","InboxComponent_div_8_Template","InboxComponent_ng_template_9_Template","_c5","_c6","_r3","player_r7","_r9","ctx_r8","openRecordMatchModal","FriendliesComponent_ul_6_li_1_Template","_r13","totalUnreadFriendlyMessages","player_r19","match_r20","_r22","ctx_r21","editMatch","ctx_r23","deleteMatchFromList","playedOn","getPlayerName","player1Score","player2Score","i_r26","_r28","changePage","ctx_r24","currentPage","_r30","FriendliesComponent_div_9_div_70_span_4_Template","ctx_r31","totalPages","FriendliesComponent_div_9_div_1_Template","FriendliesComponent_div_9_div_9_Template","ctx_r35","ctx_r36","filterForm","dateFilter","ctx_r37","onFilterChange","ctx_r38","ctx_r39","FriendliesComponent_div_9_option_50_Template","ctx_r40","clearFilters","FriendliesComponent_div_9_tr_69_Template","FriendliesComponent_div_9_div_70_Template","DateFilter","AllTime","Today","Last3Days","LastWeek","LastMonth","getAllActivePlayers","getPaginatedMatches","itemsPerPage","min","allMatches","_r45","ctx_r44","friendlyPlayerName","ctx_r47","ctx_r4","player_r53","matchForm","FriendliesComponent_div_12_div_4_option_6_Template","opponent_r57","_r59","FriendliesComponent_div_12_div_5_option_6_Template","getOpponentsForPlayer","ctx_r50","selectedPlayerForMatch","FriendliesComponent_div_12_div_4_Template","FriendliesComponent_div_12_div_5_Template","FriendliesComponent_div_12_div_6_Template","FriendliesComponent_div_12_div_7_Template","_r61","validateScore","ctx_r64","closeRecordMatchModal","ctx_r66","recordNewMatch","ctx_r5","isRecordingMatch","FriendliesComponent","friendlyMatchService","friendlyMessageService","activeTab","showRecordMatchModal","opponentIds","loadPlayers","loadAllMatches","loadUnreadFriendlyMessagesCount","getAllMessages","calculateUnreadCount","console","getAllFriendlyPlayers","calculateStatistics","loadPlayerMatches","getAllFriendlyMatches","playerName","p","addFriendlyPlayerAsync","refreshFriendlyPlayers","deleteFriendlyPlayerAsync","getActivePlayersCount","isActive","getRecentMatches","matchData","recordFriendlyMatchAsync","player1","player2","refreshFriendlyMatches","ceil","loadFilteredMatchesFromCache","filteredMatches","cutoffDate","getFullYear","getMonth","getDate","selectedPlayerName","reorderMatchesForSelectedPlayer","opponentNames","includes","loadFilteredMatches","page","pageSize","getFilteredMatches","result","totalCount","startIndex","updateFriendlyMatchAsync","confirm","deleteFriendlyMatchAsync","FriendliesComponent_ul_6_Template","FriendliesComponent_button_7_Template","FriendliesComponent_div_9_Template","FriendliesComponent_div_10_Template","FriendliesComponent_div_11_Template","FriendliesComponent_div_12_Template","FriendlyInboxComponent_div_6_div_1_span_6_Template","FriendlyInboxComponent_div_6_div_1_Template","FriendlyInboxComponent_div_8_div_12_Template","FriendlyInboxComponent","loadFriendlyMessages","unreadMessages","info","parsedId","parseInt","isNaN","String","playerFullName","markMessageAsRead","messageType","FriendlyInboxComponent_div_5_Template","FriendlyInboxComponent_div_6_Template","FriendlyInboxComponent_div_8_Template","FriendlyInboxComponent_ng_template_9_Template","TeamsDashboardComponent_div_29_div_3_Template","tournaments","player_r12","_r14","ctx_r13","multiParticipations","multiTitlesWon","TeamsDashboardComponent_div_34_div_1_Template","availablePlayers","_r16","createTournamentForm","systemOfScoring","teamCount","playersPerTeam","closeCreateTournamentModal","createTournament","isCreatingTournament","player_r26","togglePlayerSelection","isPlayerSelected","TeamsDashboardComponent_div_37_div_13_div_1_Template","createTeamForm","teamName","TeamsDashboardComponent_div_37_div_11_Template","TeamsDashboardComponent_div_37_div_12_Template","TeamsDashboardComponent_div_37_div_13_Template","closeCreateTeamModal","createTeam","activeTournament","playerIds","isLoadingPlayers","isCreatingTeam","_r34","ctx_r33","showAddPlayerModal","addNewPlayer","isAddingPlayer","_r39","recordingScore1","recordingScore2","TeamsDashboardComponent_div_39_div_13_Template","closeRecordResultModal","ctx_r42","recordMatchResult","selectedPlayer1Id","selectedPlayer2Id","isRecordingResult","match_r47","openRecordResultModal","TeamsDashboardComponent_div_40_div_8_div_1_div_7_button_2_Template","status","_r58","undoMatchResult","TeamsDashboardComponent_div_40_div_8_div_1_div_6_Template","TeamsDashboardComponent_div_40_div_8_div_1_div_7_Template","TeamsDashboardComponent_div_40_div_8_div_1_div_8_Template","TeamsDashboardComponent_div_40_div_8_div_1_Template","getPlayerMatches","_r60","closePlayerMatchesModal","TeamsDashboardComponent_div_40_div_7_Template","TeamsDashboardComponent_div_40_div_8_Template","TeamsDashboardComponent_div_40_div_9_Template","isLoadingMatches","routes","path","component","TeamsDashboardComponent","multiTournamentService","tournamentMatches","showCreateTournamentModal","showCreateTeamModal","showRecordResultModal","showPlayerMatchesModal","selectedMatchId","isLoadingTournaments","loadTournaments","loadAvailablePlayers","getAllTournaments","t","loadTournamentMatches","openCreateTournamentModal","getRemainingTeams","tournament","teams","canStartTournament","getStatusColor","getAllPlayers","getActiveTournamentMatches","startTournament","multiTournamentId","finishTournament","deleteTournament","indexOf","requestBody","multiMatchId","openCreateTeamModal","getTrophyIcon","position","canFinishTournament","canDeleteTournament","fixture","TeamsDashboardComponent_div_28_Template","TeamsDashboardComponent_div_29_Template","TeamsDashboardComponent_div_33_Template","TeamsDashboardComponent_div_34_Template","TeamsDashboardComponent_div_35_Template","TeamsDashboardComponent_div_36_Template","TeamsDashboardComponent_div_37_Template","TeamsDashboardComponent_div_38_Template","TeamsDashboardComponent_div_39_Template","TeamsDashboardComponent_div_40_Template","AdminRoutingModule","RouterModule","forChild","AdminModule","CommonModule","FormsModule","HttpClientModule","PlayerModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./node_modules/rxjs/dist/esm/internal/ReplaySubject.js","./src/app/core/services/admin-dashboard.service.ts","./node_modules/rxjs/dist/esm/internal/operators/shareReplay.js","./src/app/admin/players/players.component.html","./src/app/admin/players/players.component.ts","./src/app/admin/inbox/inbox.component.html","./src/app/admin/inbox/inbox.component.ts","./src/app/admin/friendlies/friendlies.component.html","./src/app/admin/friendlies/friendlies.component.ts","./src/app/admin/friendlies/friendly-inbox/friendly-inbox.component.html","./src/app/admin/friendlies/friendly-inbox/friendly-inbox.component.ts","./src/app/admin/teams-dashboard/teams-dashboard.component.html","./src/app/admin/admin-routing.module.ts","./src/app/admin/teams-dashboard/teams-dashboard.component.ts","./src/app/admin/admin.module.ts"],"sourcesContent":["import { Subject } from './Subject';\nimport { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class ReplaySubject extends Subject {\n    constructor(_bufferSize = Infinity, _windowTime = Infinity, _timestampProvider = dateTimestampProvider) {\n        super();\n        this._bufferSize = _bufferSize;\n        this._windowTime = _windowTime;\n        this._timestampProvider = _timestampProvider;\n        this._buffer = [];\n        this._infiniteTimeWindow = true;\n        this._infiniteTimeWindow = _windowTime === Infinity;\n        this._bufferSize = Math.max(1, _bufferSize);\n        this._windowTime = Math.max(1, _windowTime);\n    }\n    next(value) {\n        const { isStopped, _buffer, _infiniteTimeWindow, _timestampProvider, _windowTime } = this;\n        if (!isStopped) {\n            _buffer.push(value);\n            !_infiniteTimeWindow && _buffer.push(_timestampProvider.now() + _windowTime);\n        }\n        this._trimBuffer();\n        super.next(value);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._trimBuffer();\n        const subscription = this._innerSubscribe(subscriber);\n        const { _infiniteTimeWindow, _buffer } = this;\n        const copy = _buffer.slice();\n        for (let i = 0; i < copy.length && !subscriber.closed; i += _infiniteTimeWindow ? 1 : 2) {\n            subscriber.next(copy[i]);\n        }\n        this._checkFinalizedStatuses(subscriber);\n        return subscription;\n    }\n    _trimBuffer() {\n        const { _bufferSize, _timestampProvider, _buffer, _infiniteTimeWindow } = this;\n        const adjustedBufferSize = (_infiniteTimeWindow ? 1 : 2) * _bufferSize;\n        _bufferSize < Infinity && adjustedBufferSize < _buffer.length && _buffer.splice(0, _buffer.length - adjustedBufferSize);\n        if (!_infiniteTimeWindow) {\n            const now = _timestampProvider.now();\n            let last = 0;\n            for (let i = 1; i < _buffer.length && _buffer[i] <= now; i += 2) {\n                last = i;\n            }\n            last && _buffer.splice(0, last + 1);\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject, forkJoin, of } from 'rxjs';\r\nimport { map, tap, catchError, shareReplay, filter } from 'rxjs/operators';\r\nimport { PlayerService } from './player.service';\r\nimport { MatchService } from './match.service';\r\nimport { LeagueService } from './league.service';\r\nimport { MessageService } from './message.service';\r\nimport { NoteService } from './note.service';\r\nimport {\r\n  Player,\r\n  Match,\r\n  League,\r\n  AllLeagueRank,\r\n  Note,\r\n  Message,\r\n} from '../../models/interfaces';\r\n\r\nexport interface AdminDashboardData {\r\n  players: Player[];\r\n  matches: Match[];\r\n  currentLeague: League | null;\r\n  allLeagues: AllLeagueRank[];\r\n  notes: Note[];\r\n  messages: Message[];\r\n  stats: {\r\n    totalPlayers: number;\r\n    totalMatches: number;\r\n    totalMatchesLeft: number;\r\n    totalMessagesLeft: number;\r\n  };\r\n}\r\n\r\nexport interface AdminSecondaryData {\r\n  allLeagues: AllLeagueRank[];\r\n  notes: Note[];\r\n  messages: Message[];\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AdminDashboardService {\r\n  private essentialDataCache$ = new BehaviorSubject<AdminDashboardData | null>(\r\n    null\r\n  );\r\n  private secondaryDataCache = new Map<string, any>();\r\n  private lastEssentialUpdate = 0;\r\n  private lastSecondaryUpdate = new Map<string, number>();\r\n  private readonly CACHE_DURATION = 900000; // 15 minutes\r\n  private readonly SECONDARY_CACHE_DURATION = 900000; // 15 minutes (same as main cache)\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private matchService: MatchService,\r\n    private leagueService: LeagueService,\r\n    private messageService: MessageService,\r\n    private noteService: NoteService\r\n  ) {}\r\n\r\n  /**\r\n   * Get essential dashboard data with smart caching\r\n   */\r\n  getEssentialData(forceRefresh = false): Observable<AdminDashboardData> {\r\n    const now = Date.now();\r\n    const hasValidCache =\r\n      this.essentialDataCache$.value &&\r\n      now - this.lastEssentialUpdate < this.CACHE_DURATION;\r\n\r\n    if (!forceRefresh && hasValidCache) {\r\n      return this.essentialDataCache$\r\n        .asObservable()\r\n        .pipe(filter((data): data is AdminDashboardData => data !== null));\r\n    }\r\n\r\n    return this.loadEssentialDataFromServer().pipe(\r\n      tap((data) => {\r\n        this.essentialDataCache$.next(data);\r\n        this.lastEssentialUpdate = now;\r\n      }),\r\n      catchError((error) => {\r\n        // Return cached data if available, otherwise empty state\r\n        return of(\r\n          this.essentialDataCache$.value || this.getEmptyDashboardData()\r\n        );\r\n      }),\r\n      shareReplay(1)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get secondary data with smart caching\r\n   */\r\n  getSecondaryData(\r\n    type: 'leagues' | 'notes' | 'messages',\r\n    forceRefresh = false\r\n  ): Observable<any> {\r\n    const now = Date.now();\r\n    const lastUpdate = this.lastSecondaryUpdate.get(type) || 0;\r\n    const hasValidCache =\r\n      this.secondaryDataCache.has(type) &&\r\n      now - lastUpdate < this.SECONDARY_CACHE_DURATION;\r\n\r\n    if (!forceRefresh && hasValidCache) {\r\n      return of(this.secondaryDataCache.get(type));\r\n    }\r\n\r\n    return this.loadSecondaryDataFromServer(type).pipe(\r\n      tap((data) => {\r\n        this.secondaryDataCache.set(type, data);\r\n        this.lastSecondaryUpdate.set(type, now);\r\n      }),\r\n      catchError((error) => {\r\n        // Return cached data if available\r\n        return of(this.secondaryDataCache.get(type) || []);\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load essential data from server using parallel requests\r\n   */\r\n  private loadEssentialDataFromServer(): Observable<AdminDashboardData> {\r\n    return forkJoin({\r\n      players: this.playerService.getAdminPlayers(),\r\n      matches: this.matchService.getAdminMatches(),\r\n      currentLeague: this.leagueService.getAdminCurrentLeague().pipe(\r\n        map((response) => response.league),\r\n        catchError(() => of(null))\r\n      ),\r\n      allLeagues: this.leagueService\r\n        .getAdminAllLeagues()\r\n        .pipe(catchError(() => of([]))),\r\n      notes: this.noteService.getAdminNotes().pipe(\r\n        map((response) => response.notes),\r\n        catchError(() => of([]))\r\n      ),\r\n      messages: this.messageService.getAdminMessages().pipe(\r\n        map((response) => response.messages || []),\r\n        catchError(() => of([]))\r\n      ),\r\n    }).pipe(\r\n      map(\r\n        ({ players, matches, currentLeague, allLeagues, notes, messages }) => {\r\n          const messagesList = Array.isArray(messages) ? messages : [];\r\n          return {\r\n            players: players as Player[],\r\n            matches: matches as Match[],\r\n            currentLeague,\r\n            allLeagues: allLeagues as AllLeagueRank[],\r\n            notes: notes as Note[],\r\n            messages: messagesList as Message[],\r\n            stats: {\r\n              totalPlayers: players.length,\r\n              totalMatches: matches.length,\r\n              totalMatchesLeft: matches.filter((m) => !m.isCompleted).length,\r\n              totalMessagesLeft: messagesList.filter(\r\n                (m: any) => !m.isRead && !m.isFromAdmin\r\n              ).length,\r\n            },\r\n          };\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Load secondary data from server\r\n   */\r\n  private loadSecondaryDataFromServer(type: string): Observable<any> {\r\n    switch (type) {\r\n      case 'leagues':\r\n        return this.leagueService.getAdminAllLeagues();\r\n      case 'notes':\r\n        return this.noteService\r\n          .getAdminNotes()\r\n          .pipe(map((response) => response.notes));\r\n      case 'messages':\r\n        return this.messageService\r\n          .getAdminMessages()\r\n          .pipe(map((response) => response.messages || []));\r\n      default:\r\n        return of([]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update cached data after mutations\r\n   */\r\n  invalidateCache(\r\n    type: 'essential' | 'leagues' | 'notes' | 'messages' | 'all'\r\n  ): void {\r\n    switch (type) {\r\n      case 'essential':\r\n        this.lastEssentialUpdate = 0;\r\n        break;\r\n      case 'leagues':\r\n      case 'notes':\r\n      case 'messages':\r\n        this.lastSecondaryUpdate.set(type, 0);\r\n        this.secondaryDataCache.delete(type);\r\n        break;\r\n      case 'all':\r\n        this.lastEssentialUpdate = 0;\r\n        this.lastSecondaryUpdate.clear();\r\n        this.secondaryDataCache.clear();\r\n        break;\r\n    }\r\n  }\r\n\r\n  // ✅ تم حذف Background refresh تماماً - مالوش لازمة أصلاً\r\n\r\n  /**\r\n   * Get current cached essential data\r\n   */\r\n  getCurrentEssentialData(): AdminDashboardData | null {\r\n    return this.essentialDataCache$.value;\r\n  }\r\n\r\n  /**\r\n   * Update message count in stats\r\n   */\r\n  updateMessageCount(count: number): void {\r\n    const current = this.essentialDataCache$.value;\r\n    if (current) {\r\n      current.stats.totalMessagesLeft = count;\r\n      this.essentialDataCache$.next(current);\r\n    }\r\n  }\r\n\r\n  private getEmptyDashboardData(): AdminDashboardData {\r\n    return {\r\n      players: [],\r\n      matches: [],\r\n      currentLeague: null,\r\n      allLeagues: [],\r\n      notes: [],\r\n      messages: [],\r\n      stats: {\r\n        totalPlayers: 0,\r\n        totalMatches: 0,\r\n        totalMatchesLeft: 0,\r\n        totalMessagesLeft: 0,\r\n      },\r\n    };\r\n  }\r\n}\r\n","import { ReplaySubject } from '../ReplaySubject';\nimport { share } from './share';\nexport function shareReplay(configOrBufferSize, windowTime, scheduler) {\n    let bufferSize;\n    let refCount = false;\n    if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n        ({ bufferSize = Infinity, windowTime = Infinity, refCount = false, scheduler } = configOrBufferSize);\n    }\n    else {\n        bufferSize = (configOrBufferSize !== null && configOrBufferSize !== void 0 ? configOrBufferSize : Infinity);\n    }\n    return share({\n        connector: () => new ReplaySubject(bufferSize, windowTime, scheduler),\n        resetOnError: true,\n        resetOnComplete: false,\n        resetOnRefCountZero: refCount,\n    });\n}\n","<!-- Admin Update Status Component -->\r\n\r\n<div class=\"block sm:flex transition-all duration-600\">\r\n  <!-- Sidebar -->\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white transition-all duration-600\"\r\n    [ngClass]=\"{\r\n      'w-64 p-4 sm:min-h-screen': isSidebarOpen,\r\n      'w-0 p-0': !isSidebarOpen\r\n    }\"\r\n  >\r\n    <h2\r\n      class=\"text-lg font-bold mb-4 flex justify-between overflow-hidden text-white\"\r\n    >\r\n      Players\r\n      <button (click)=\"toggleSidebar()\" class=\"text-gray-300 text-3xl\">\r\n        ×\r\n      </button>\r\n    </h2>\r\n    <ul *ngIf=\"isSidebarOpen\">\r\n      <li\r\n        *ngFor=\"let player of players\"\r\n        class=\"flex items-center justify-between p-2 cursor-pointer rounded-md hover:bg-gray-700\"\r\n        [class.bg-blue-600]=\"selectedPlayer?.playerId === player.playerId\"\r\n        (click)=\"selectPlayer(player)\"\r\n      >\r\n        <span class=\"text-white\">{{ player.fullName }}</span>\r\n        <button\r\n          (click)=\"confirmDelete(player, $event)\"\r\n          class=\"bg-red-600 px-2 py-1 text-sm rounded text-white hover:bg-red-700 transition\"\r\n        >\r\n          X\r\n        </button>\r\n      </li>\r\n    </ul>\r\n    <button\r\n      *ngIf=\"isSidebarOpen\"\r\n      class=\"mt-4 w-full bg-green-600 p-2 rounded text-white hover:bg-green-700 transition\"\r\n      (click)=\"openModal()\"\r\n    >\r\n      Add Player\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Main Content -->\r\n  <div\r\n    class=\"sm:flex-1 sm:p-2 transition-all duration-600 sm:container sm:mx-auto\"\r\n  >\r\n    <div *ngIf=\"selectedPlayer\" class=\"sm:w-4/6 mx-auto\">\r\n      <h2 class=\"text-2xl font-bold mb-4 text-center text-white\">\r\n        Matches for {{ selectedPlayer.fullName }}\r\n      </h2>\r\n\r\n      <table class=\"w-full border-collapse border border-gray-600 text-center\">\r\n        <thead>\r\n          <tr class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white\">\r\n            <th class=\"border border-gray-600 p-2\">Player 1</th>\r\n            <th class=\"border border-gray-600 p-2\">Player 2</th>\r\n            <th class=\"border border-gray-600 p-2\">Result</th>\r\n            <th class=\"border border-gray-600 p-2\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let match of displayMatches; let i = index\"\r\n            class=\"border border-gray-600\"\r\n            [ngClass]=\"i % 2 === 0 ? 'bg-gray-900' : 'bg-gray-950'\"\r\n          >\r\n            <td class=\"p-2 font-bold text-white\">{{ match.player1Name }}</td>\r\n            <td class=\"p-2 font-bold text-white\">{{ match.player2Name }}</td>\r\n            <td class=\"p-2 font-bold text-white\">\r\n              {{ match.score1 }} - {{ match.score2 }}\r\n            </td>\r\n            <td class=\"p-2\">\r\n              <button\r\n                class=\"bg-blue-600 px-2 py-1 rounded text-white hover:bg-blue-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, match.player1Id)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Win P1\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-blue-600 px-2 py-1 rounded text-white mx-1 hover:bg-blue-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, match.player2Id)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Win P2\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-yellow-600 px-2 py-1 rounded text-white hover:bg-yellow-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, null)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Draw\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-gray-600 px-2 py-1 rounded text-white ml-2 hover:bg-gray-700 transition-all\"\r\n                (click)=\"resetMatch(match.matchId)\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Undo\" }}\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <hr class=\"my-3 border-gray-600\" />\r\n\r\n    <!-- القائمة الأولية -->\r\n    <div>\r\n      <div class=\"flex justify-evenly pt-5\">\r\n        <button\r\n          (click)=\"toggleSidebar()\"\r\n          class=\"bg-blue-600 text-white px-3 py-2 rounded mb-4 hover:bg-blue-700 transition\"\r\n        >\r\n          ☰ Players\r\n        </button>\r\n        <button\r\n          routerLink=\"/admin/inbox\"\r\n          class=\"bg-orange-600 hover:bg-orange-700 text-white mb-4 px-3 py-2 rounded transition-all relative\"\r\n        >\r\n          Inbox\r\n          <div\r\n            class=\"absolute -top-2 -right-2 w-[30px] h-[30px] rounded-full bg-green-600 flex justify-center items-center\"\r\n            *ngIf=\"totalMessagesLeft > 0\"\r\n          >\r\n            <h4 class=\"text-white font-bold\">{{ totalMessagesLeft }}</h4>\r\n          </div>\r\n        </button>\r\n        <button\r\n          routerLink=\"/admin/teams-dashboard\"\r\n          class=\"bg-blue-600 hover:bg-blue-700 text-white mb-4 px-3 py-2 rounded transition-all\"\r\n        >\r\n          👥 Teams Tournament\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 text-white px-3 py-2 rounded mb-4 hover:bg-green-700 transition\"\r\n          (click)=\"openStartLeagueModal()\"\r\n          *ngIf=\"leagueData == null\"\r\n        >\r\n          Start New League\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 text-white px-3 py-2 rounded mb-4 hover:bg-red-700 transition\"\r\n          *ngIf=\"leagueData != null\"\r\n          (click)=\"showEndLeagueModal = true\"\r\n          s\r\n        >\r\n          End League\r\n        </button>\r\n        <!-- Tournament Stage Button -->\r\n        <button\r\n          class=\"bg-purple-600 text-white px-3 py-2 rounded mb-4 hover:bg-purple-700 transition\"\r\n          *ngIf=\"showTournamentStageButton && leagueData != null\"\r\n          (click)=\"onTournamentStageButtonClick()\"\r\n        >\r\n          {{ tournamentStageButtonText }}\r\n        </button>\r\n        <button\r\n          class=\"bg-indigo-600 text-white px-3 py-2 rounded mb-4 hover:bg-indigo-700 transition\"\r\n          (click)=\"openNoteModal()\"\r\n        >\r\n          Notes\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\"\r\n        *ngIf=\"leagueData\"\r\n      >\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">\r\n            League Description\r\n          </h3>\r\n          <p class=\"font-bold text-gray-300\">{{ leagueData.description }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">League Type</h3>\r\n          <p\r\n            *ngIf=\"leagueData.typeOfLeague === 0\"\r\n            class=\"font-bold text-gray-300\"\r\n          >\r\n            Single\r\n          </p>\r\n          <p\r\n            *ngIf=\"leagueData.typeOfLeague === 1\"\r\n            class=\"font-bold text-gray-300\"\r\n          >\r\n            Multi\r\n          </p>\r\n          <p\r\n            *ngIf=\"leagueData.typeOfLeague === 2\"\r\n            class=\"font-bold text-gray-300\"\r\n          >\r\n            Groups\r\n          </p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Start Date</h3>\r\n          <p class=\"font-bold text-gray-300\">\r\n            {{ leagueData.createdOn | date : \"fullDate\" }}\r\n          </p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">League Name</h3>\r\n          <p class=\"font-bold text-gray-300\">{{ leagueData.name }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8 container mx-auto\">\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">\r\n            Remaining Matches\r\n          </h3>\r\n          <p class=\"text-3xl font-bold text-red-500\">{{ totalMatchesLeft }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Total Matches</h3>\r\n          <p class=\"text-3xl font-bold text-green-500\">{{ totalMatches }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Total Players</h3>\r\n          <p class=\"text-3xl font-bold text-blue-500\">{{ totalPlayers }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- كل البطولات -->\r\n    <div class=\"text-center\">\r\n      <h2\r\n        class=\"mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-4xl lg:text-4xl text-white\"\r\n      >\r\n        All Leagues\r\n      </h2>\r\n\r\n      <div class=\"max-h-[350px] overflow-x-auto\">\r\n        <table class=\"min-w-full divide-y-2 divide-gray-600\">\r\n          <thead class=\"sticky top-0 bg-black bg-opacity-50 backdrop-blur-sm\">\r\n            <tr class=\"*:font-medium *:text-white\">\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Name</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Status</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Type</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League System</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Date</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">Winner</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"divide-y divide-gray-600\">\r\n            <tr\r\n              *ngFor=\"let league of leagues; let i = index\"\r\n              class=\"*:font-bold *:first:font-medium\"\r\n              [ngClass]=\"{\r\n                'bg-gray-900': i % 2 === 0,\r\n                'bg-gray-950': i % 2 !== 0\r\n              }\"\r\n            >\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ league.leagueName }}\r\n              </td>\r\n              <td\r\n                class=\"px-3 py-2 whitespace-nowrap\"\r\n                [class.text-green-500]=\"!league.isFinished\"\r\n                [class.text-red-500]=\"league.isFinished\"\r\n              >\r\n                {{ !league.isFinished ? \"Live Now!!\" : \"Finished\" }}\r\n              </td>\r\n\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{\r\n                  league.leagueType === 0\r\n                    ? \"Single\"\r\n                    : league.leagueType === 1\r\n                    ? \"Multi\"\r\n                    : league.leagueType === 2\r\n                    ? \"Groups\"\r\n                    : \"Unknown\"\r\n                }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{\r\n                  league.systemOfLeague === 0\r\n                    ? \"Points\"\r\n                    : league.systemOfLeague === 1\r\n                    ? \"Classic\"\r\n                    : \"Unknown\"\r\n                }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ league.createdOn | date : \"yyyy/MM/dd\" }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{\r\n                  league.players && league.players.length > 0\r\n                    ? league.players[0].fullName\r\n                    : \"No Winner Yet\"\r\n                }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap\">\r\n                <button\r\n                  (click)=\"openDeleteLeagueModal(league.leagueId)\"\r\n                  class=\"bg-red-600 text-white px-3 py-2 rounded hover:bg-red-700 transition\"\r\n                >\r\n                  Delete League\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Delete League Modal -->\r\n  <div\r\n    *ngIf=\"showDeleteLeagueModal\"\r\n    class=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\r\n  >\r\n    <div\r\n      class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg shadow-lg w-96\"\r\n    >\r\n      <h2 class=\"text-xl font-bold text-white mb-4\">Confirm Delete</h2>\r\n      <p class=\"text-gray-300 mb-6\">\r\n        Are you sure you want to delete league \"{{\r\n          selectedLeagueToDelete?.leagueName\r\n        }}\"?\r\n      </p>\r\n      <div class=\"flex justify-end space-x-4\">\r\n        <button\r\n          (click)=\"closeDeleteLeagueModal()\"\r\n          class=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 transition\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          (click)=\"deleteConfirmedLeague()\"\r\n          class=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Delete Confirmation Modal -->\r\n  <div\r\n    *ngIf=\"showDeleteModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm Delete</h2>\r\n      <p class=\"text-gray-300\">\r\n        Are you sure you want to delete\r\n        <strong>{{ selectedPlayerToDelete?.fullName }}</strong\r\n        >?\r\n      </p>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"showDeleteModal = false\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n          (click)=\"deleteConfirmedPlayer()\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Add Player Modal -->\r\n  <div\r\n    *ngIf=\"showModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Add New Player</h2>\r\n      <input\r\n        type=\"text\"\r\n        [(ngModel)]=\"newPlayerName\"\r\n        class=\"border border-gray-600 p-2 w-full bg-gray-800 text-white rounded placeholder-gray-400\"\r\n        placeholder=\"Enter player name\"\r\n      />\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n          (click)=\"closeModal()\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n          (click)=\"addPlayer()\"\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Start League Modal -->\r\n  <div\r\n    *ngIf=\"showStartLeagueModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg w-96\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Start New League</h2>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Name</label\r\n        >\r\n        <input\r\n          type=\"text\"\r\n          [(ngModel)]=\"newLeague.name\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          placeholder=\"Enter league name\"\r\n        />\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Description</label\r\n        >\r\n        <textarea\r\n          [(ngModel)]=\"newLeague.description\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          placeholder=\"Enter league description\"\r\n          rows=\"3\"\r\n        ></textarea>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Type</label\r\n        >\r\n        <select\r\n          [(ngModel)]=\"newLeague.typeOfLeague\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n        >\r\n          <option [ngValue]=\"0\">Single</option>\r\n          <option [ngValue]=\"1\">Multi</option>\r\n          <option [ngValue]=\"2\">Groups</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >System Of League</label\r\n        >\r\n        <select\r\n          [(ngModel)]=\"newLeague.systemOfLeague\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n        >\r\n          <option [ngValue]=\"0\">Points</option>\r\n          <option [ngValue]=\"1\">Classic</option>\r\n        </select>\r\n      </div>\r\n      <!-- Rounds Per Match field - only shown when Points system is selected -->\r\n      <div class=\"mb-4\" *ngIf=\"newLeague.systemOfLeague === 0\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >Rounds Per Match</label\r\n        >\r\n        <input\r\n          type=\"number\"\r\n          [(ngModel)]=\"newLeague.roundsPerMatch\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          placeholder=\"Enter number of rounds per match (e.g., 3)\"\r\n        />\r\n        <small class=\"text-gray-400 text-xs mt-1 block\">\r\n          Number of rounds each player will play in a match (Points system only)\r\n        </small>\r\n      </div>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"closeStartLeagueModal()\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n          (click)=\"startLeague()\"\r\n        >\r\n          Start League\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- End League Confirmation Modal -->\r\n  <div\r\n    *ngIf=\"showEndLeagueModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm End League</h2>\r\n      <p class=\"text-gray-300\">\r\n        Are you sure you want to end the current league? This action cannot be\r\n        undone.\r\n      </p>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"showEndLeagueModal = false\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n          (click)=\"resetTournament(leagueData!.id)\"\r\n        >\r\n          Confirm End\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Notes Modal -->\r\n  <div\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    *ngIf=\"showNoteModal\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-4 rounded-lg\">\r\n      <div>\r\n        <h2 class=\"font-bold text-white text-center\">Add New Note</h2>\r\n        <div>\r\n          <label for=\"Notes\">\r\n            <span class=\"text-sm font-medium text-gray-300\">Notes</span>\r\n            <div class=\"relative m-2 overflow-hidden rounded border-gray-600\">\r\n              <textarea\r\n                id=\"Notes\"\r\n                class=\"w-full resize-none p-3 border border-gray-600 bg-gray-800 text-white placeholder-gray-400\"\r\n                rows=\"4\"\r\n                [(ngModel)]=\"newNote\"\r\n              ></textarea>\r\n              <div class=\"flex items-center justify-end gap-2 p-1.5\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"rounded p-2 font-bold text-white bg-green-600 hover:bg-green-700 transition\"\r\n                  (click)=\"sendNote()\"\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div class=\"p-6\">\r\n        <div *ngFor=\"let note of notes\">\r\n          <div\r\n            class=\"mt-4 flex items-center justify-end\"\r\n            *ngIf=\"note.isDeleted == false\"\r\n          >\r\n            <p class=\"font-bold px-3 text-white\">\r\n              {{ note.content }}\r\n            </p>\r\n            <button\r\n              class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n              (click)=\"toggleDeleteNote(note.id)\"\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n              (click)=\"toggleHideNote(note)\"\r\n              *ngIf=\"note.isHidden == true\"\r\n            >\r\n              Show\r\n            </button>\r\n            <button\r\n              class=\"bg-purple-600 px-4 py-2 text-white rounded hover:bg-purple-700 transition\"\r\n              (click)=\"toggleHideNote(note)\"\r\n              *ngIf=\"note.isHidden == false\"\r\n            >\r\n              Hide\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n        (click)=\"closeNoteModal()\"\r\n      >\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { MatchService } from 'src/app/core/services/match.service';\r\nimport { PlayerService } from './../../core/services/player.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  Player,\r\n  Match,\r\n  StartLeagueDto,\r\n  League,\r\n  AllLeagueRank,\r\n  Note,\r\n  TournamentStage,\r\n  LeagueType,\r\n} from 'src/app/models/interfaces';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LeagueService } from 'src/app/core/services/league.service';\r\nimport { NoteService } from 'src/app/core/services/note.service';\r\nimport {\r\n  AdminDashboardService,\r\n  AdminDashboardData,\r\n} from 'src/app/core/services/admin-dashboard.service';\r\nimport { Subscription, interval } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-players',\r\n  templateUrl: './players.component.html',\r\n  styleUrls: ['./players.component.css'],\r\n})\r\nexport class PlayersComponent implements OnInit, OnDestroy {\r\n  players: Player[] = [];\r\n  selectedPlayer: Player | null = null;\r\n  playerMatches: Match[] = [];\r\n  displayMatches: Match[] = [];\r\n  notes: Note[] = [];\r\n  showModal = false;\r\n  newPlayerName = '';\r\n  isSidebarOpen = false;\r\n  showDeleteModal = false;\r\n  showNoteModal = false;\r\n  showDeleteLeagueModal = false;\r\n  showEndLeagueModal = false;\r\n  loadingMatches: { [matchId: number]: boolean } = {};\r\n  private requestQueue: Array<() => Promise<void>> = [];\r\n  private isProcessingQueue = false;\r\n  showResetModal: boolean = false;\r\n  leagueData: League | null = null;\r\n  showStartLeagueModal: boolean = false;\r\n  newLeague: StartLeagueDto = {\r\n    name: '',\r\n    description: '',\r\n    typeOfLeague: 0,\r\n    systemOfLeague: 0,\r\n    roundsPerMatch: 3, // Default value for Points system\r\n  };\r\n  totalMessagesLeft: number = 0;\r\n  totalPlayers: number = 0;\r\n  totalMatches: number = 0;\r\n  totalMatchesLeft: number = 0;\r\n  totalMessages: number = 0;\r\n  leagues: AllLeagueRank[] = [];\r\n  newNote: string = '';\r\n  selectedLeagueToDelete: AllLeagueRank | null = null;\r\n\r\n  // New properties for tournament stage management\r\n  currentMatches: Match[] = [];\r\n  showTournamentStageButton = false;\r\n  tournamentStageButtonText = '';\r\n  tournamentStageButtonAction: (() => void) | null = null;\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private matchService: MatchService,\r\n    private toastr: ToastrService,\r\n    private leagueService: LeagueService,\r\n    private noteService: NoteService,\r\n    private adminDashboardService: AdminDashboardService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // تحميل البيانات الأساسية مع Smart Caching\r\n    this.loadEssentialData();\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  private loadCurrentLeagueFromServer(): void {\r\n    this.leagueService.getAdminCurrentLeague().subscribe({\r\n      next: (data) => {\r\n        this.leagueData = data.league;\r\n        this.updateTournamentStageButton(); // Update button state when league data changes\r\n      },\r\n      error: (err) => {\r\n        this.leagueData = null;\r\n        this.updateTournamentStageButton(); // Update button state when league data changes\r\n      },\r\n    });\r\n  }\r\n\r\n  private loadEssentialData(): void {\r\n    this.adminDashboardService.getEssentialData().subscribe({\r\n      next: (data: AdminDashboardData) => {\r\n        // ✅ عرض جميع البيانات فوراً من الكاش\r\n        this.players = data.players;\r\n        this.currentMatches = data.matches;\r\n        this.leagueData = data.currentLeague;\r\n        this.leagues = data.allLeagues;\r\n        this.notes = data.notes;\r\n\r\n        // ✅ عرض إحصائيات كاملة بما فيها عدد الرسائل\r\n        this.totalPlayers = data.stats.totalPlayers;\r\n        this.totalMatches = data.stats.totalMatches;\r\n        this.totalMatchesLeft = data.stats.totalMatchesLeft;\r\n        this.totalMessagesLeft = data.stats.totalMessagesLeft;\r\n\r\n        // Update tournament stage button\r\n        this.updateTournamentStageButton();\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حدث خطأ أثناء تحميل البيانات');\r\n      },\r\n    });\r\n  }\r\n\r\n  toggleSidebar(): void {\r\n    this.isSidebarOpen = !this.isSidebarOpen;\r\n    this.selectedPlayer = null;\r\n  }\r\n\r\n  selectPlayer(player: Player): void {\r\n    this.selectedPlayer = player;\r\n    this.loadMatches();\r\n  }\r\n\r\n  loadMatches(): void {\r\n    if (!this.selectedPlayer) return;\r\n    this.matchService.getAdminMatches().subscribe((matches) => {\r\n      this.playerMatches = matches\r\n        .filter(\r\n          (m) =>\r\n            m.player1Id === this.selectedPlayer!.playerId ||\r\n            m.player2Id === this.selectedPlayer!.playerId\r\n        )\r\n        .sort((a, b) => {\r\n          const nameA =\r\n            (a.player1Id === this.selectedPlayer!.playerId\r\n              ? a.player2Name\r\n              : a.player1Name\r\n            )?.toLowerCase() ?? '';\r\n          const nameB =\r\n            (b.player1Id === this.selectedPlayer!.playerId\r\n              ? b.player2Name\r\n              : b.player1Name\r\n            )?.toLowerCase() ?? '';\r\n          return nameA.localeCompare(nameB);\r\n        });\r\n      this.displayMatches = this.playerMatches.map((match) => {\r\n        if (match.player2Id === this.selectedPlayer!.playerId) {\r\n          return {\r\n            ...match,\r\n            player1Name: match.player2Name,\r\n            player2Name: match.player1Name,\r\n            score1: match.score2,\r\n            score2: match.score1,\r\n            player1Id: match.player2Id,\r\n            player2Id: match.player1Id,\r\n          };\r\n        }\r\n        return { ...match };\r\n      });\r\n      this.playerMatches.forEach((match) => {\r\n        this.loadingMatches[match.matchId] = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  private addToQueue(request: () => Promise<void>): void {\r\n    this.requestQueue.push(request);\r\n    this.processQueue();\r\n  }\r\n\r\n  private async processQueue(): Promise<void> {\r\n    if (this.isProcessingQueue || this.requestQueue.length === 0) return;\r\n\r\n    this.isProcessingQueue = true;\r\n    const request = this.requestQueue.shift();\r\n\r\n    if (request) {\r\n      try {\r\n        await request();\r\n      } catch (error) {}\r\n    }\r\n\r\n    this.isProcessingQueue = false;\r\n    this.processQueue();\r\n  }\r\n\r\n  updateMatch(matchId: number, winnerId: number | null) {\r\n    this.loadingMatches[matchId] = true;\r\n\r\n    this.addToQueue(\r\n      () =>\r\n        new Promise<void>((resolve, reject) => {\r\n          this.matchService.updateMatch(matchId, winnerId).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                this.toastr.success(response.message);\r\n                // Invalidate cache and reload essential data\r\n                this.adminDashboardService.invalidateCache('essential');\r\n                this.loadEssentialData();\r\n                this.loadMatches();\r\n              } else {\r\n                this.toastr.error(response.message);\r\n              }\r\n              this.loadingMatches[matchId] = false;\r\n              resolve();\r\n            },\r\n            error: (error) => {\r\n              this.toastr.error(error.error.message);\r\n              this.loadingMatches[matchId] = false;\r\n              reject(error);\r\n            },\r\n          });\r\n        })\r\n    );\r\n  }\r\n\r\n  resetMatch(matchId: number) {\r\n    this.loadingMatches[matchId] = true;\r\n\r\n    this.addToQueue(\r\n      () =>\r\n        new Promise<void>((resolve, reject) => {\r\n          this.matchService.resetMatch(matchId).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                this.toastr.success(response.message);\r\n                this.loadMatches();\r\n              } else {\r\n                this.toastr.error(response.message, 'Error');\r\n              }\r\n              this.loadingMatches[matchId] = false;\r\n              resolve();\r\n            },\r\n            error: (error) => {\r\n              this.toastr.error(error.error.message);\r\n              this.loadingMatches[matchId] = false;\r\n              reject(error);\r\n            },\r\n          });\r\n        })\r\n    );\r\n  }\r\n\r\n  deletePlayer(playerId: number, event: Event): void {\r\n    event.stopPropagation();\r\n    this.playerService.deletePlayer(playerId).subscribe(() => {\r\n      this.toastr.warning('Player deleted!', 'Deleted');\r\n      this.loadMatches();\r\n      // Invalidate cache and reload essential data\r\n      this.adminDashboardService.invalidateCache('essential');\r\n      this.loadEssentialData();\r\n      this.updateTournamentStageButton(); // Update button state after deleting player\r\n      if (this.selectedPlayer?.playerId === playerId) {\r\n        this.selectedPlayer = null;\r\n        this.playerMatches = [];\r\n        this.displayMatches = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal(): void {\r\n    this.showModal = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.showModal = false;\r\n    this.newPlayerName = '';\r\n  }\r\n\r\n  addPlayer(): void {\r\n    if (!this.newPlayerName.trim()) return;\r\n    this.playerService.addPlayer(this.newPlayerName).subscribe((response) => {\r\n      if (response.success) {\r\n        this.toastr.success(response.message);\r\n        // Invalidate cache and reload essential data\r\n        this.adminDashboardService.invalidateCache('essential');\r\n        this.loadEssentialData();\r\n        this.loadMatches();\r\n        this.closeModal();\r\n      } else this.toastr.warning(response.message);\r\n    });\r\n  }\r\n\r\n  selectedPlayerToDelete: { playerId: number; fullName: string } | null = null;\r\n\r\n  confirmDelete(player: { playerId: number; fullName: string }, event: Event) {\r\n    event.stopPropagation();\r\n    this.selectedPlayerToDelete = player;\r\n    this.showDeleteModal = true;\r\n  }\r\n\r\n  deleteConfirmedPlayer() {\r\n    if (this.selectedPlayerToDelete) {\r\n      this.playerService\r\n        .deletePlayer(this.selectedPlayerToDelete.playerId)\r\n        .subscribe((response) => {\r\n          if (response.success) {\r\n            this.toastr.success(response.message);\r\n            // Invalidate cache and reload essential data\r\n            this.adminDashboardService.invalidateCache('essential');\r\n            this.loadEssentialData();\r\n            this.loadMatches();\r\n          } else {\r\n            this.toastr.error(response.message, 'Error');\r\n          }\r\n        });\r\n\r\n      this.showDeleteModal = false;\r\n      this.selectedPlayerToDelete = null;\r\n    }\r\n  }\r\n\r\n  resetTournament(id: number): void {\r\n    this.leagueService.resetLeague(id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.showResetModal = false;\r\n          this.loadMatches();\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n          this.showEndLeagueModal = false;\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  openStartLeagueModal(): void {\r\n    this.showStartLeagueModal = true;\r\n    this.newLeague = {\r\n      name: '',\r\n      description: '',\r\n      typeOfLeague: 0,\r\n      systemOfLeague: 0,\r\n      roundsPerMatch: 3, // Default value for Points system\r\n    };\r\n  }\r\n\r\n  closeStartLeagueModal(): void {\r\n    this.showStartLeagueModal = false;\r\n  }\r\n\r\n  startLeague(): void {\r\n    if (!this.newLeague.name.trim()) {\r\n      this.toastr.error('League name is required', 'Error');\r\n      return;\r\n    }\r\n\r\n    // Validate rounds per match for Points system\r\n    if (\r\n      this.newLeague.systemOfLeague === 0 &&\r\n      (!this.newLeague.roundsPerMatch || this.newLeague.roundsPerMatch < 1)\r\n    ) {\r\n      this.toastr.error(\r\n        'Rounds per match is required for Points system and must be at least 1',\r\n        'Error'\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.leagueService.startLeague(this.newLeague).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.closeStartLeagueModal();\r\n          this.loadMatches();\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message, 'Error');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n        // console.error(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  DeleteLeague(id: number): void {\r\n    this.leagueService.DeleteLeague(id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.showDeleteLeagueModal = false;\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  openDeleteLeagueModal(leagueId: number): void {\r\n    this.selectedLeagueToDelete =\r\n      this.leagues.find((l) => l.leagueId === leagueId) || null;\r\n    this.showDeleteLeagueModal = true;\r\n  }\r\n\r\n  closeDeleteLeagueModal(): void {\r\n    this.showDeleteLeagueModal = false;\r\n    this.selectedLeagueToDelete = null;\r\n  }\r\n\r\n  deleteConfirmedLeague(): void {\r\n    if (this.selectedLeagueToDelete) {\r\n      this.DeleteLeague(this.selectedLeagueToDelete.leagueId);\r\n      this.leagues = this.leagues.filter(\r\n        (l) => l.leagueId !== this.selectedLeagueToDelete?.leagueId\r\n      );\r\n      this.closeDeleteLeagueModal();\r\n    }\r\n  }\r\n\r\n  sendNote(): void {\r\n    if (!this.newNote.trim()) return;\r\n\r\n    this.noteService.sendNote(this.newNote).subscribe({\r\n      next: (res) => {\r\n        this.toastr.success(res.message);\r\n        this.newNote = '';\r\n        // Invalidate cache and reload all data\r\n        this.adminDashboardService.invalidateCache('essential');\r\n        this.loadEssentialData();\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتبعت الملاحظة'),\r\n    });\r\n  }\r\n\r\n  toggleHideNote(note: any): void {\r\n    this.noteService.toggleMarHide(note.id, !note.isHidden).subscribe({\r\n      next: (res) => {\r\n        this.toastr.success(res.message);\r\n        this.loadEssentialData(); // ✅ محل getNotes()\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتغير الظهور'),\r\n    });\r\n  }\r\n\r\n  toggleDeleteNote(noteId: number): void {\r\n    this.noteService.DeleteNote(noteId, false).subscribe({\r\n      next: (res) => {\r\n        this.toastr.warning(res.message);\r\n        this.loadEssentialData(); // ✅ محل getNotes()\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتحذف '),\r\n    });\r\n  }\r\n\r\n  openNoteModal(): void {\r\n    this.showNoteModal = true;\r\n  }\r\n  closeNoteModal(): void {\r\n    this.showNoteModal = false;\r\n  }\r\n\r\n  // New method to load current matches for tournament stage logic\r\n  private loadCurrentMatches(): void {\r\n    this.matchService.getAdminMatches().subscribe({\r\n      next: (matches) => {\r\n        this.currentMatches = matches;\r\n        this.updateTournamentStageButton();\r\n      },\r\n      error: (err) => {\r\n        this.currentMatches = [];\r\n        this.updateTournamentStageButton(); // Update button state even on error\r\n      },\r\n    });\r\n  }\r\n\r\n  // Method to determine tournament stage and update button\r\n  private updateTournamentStageButton(): void {\r\n    // Only show button for Groups type leagues\r\n    if (\r\n      !this.leagueData ||\r\n      this.leagueData.typeOfLeague !== LeagueType.Groups\r\n    ) {\r\n      this.showTournamentStageButton = false;\r\n      return;\r\n    }\r\n\r\n    // Check if there are players but no matches (need to start group stage)\r\n    if (this.totalPlayers > 0 && this.currentMatches.length === 0) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'Start Group Stage';\r\n      this.tournamentStageButtonAction = () => this.startGroupStage();\r\n      return;\r\n    }\r\n\r\n    // Check current stage based on matches\r\n    const groupMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.GroupStage ||\r\n        m.tournamentStage === 'GroupStage'\r\n    );\r\n    const quarterMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.QuarterFinals ||\r\n        m.tournamentStage === 'QuarterFinals'\r\n    );\r\n    const semiMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.SemiFinals ||\r\n        m.tournamentStage === 'SemiFinals'\r\n    );\r\n    const finalMatches = this.currentMatches.filter(\r\n      (m) => m.stage === TournamentStage.Final || m.tournamentStage === 'Final'\r\n    );\r\n\r\n    // Check if all matches in a stage are completed\r\n    const allGroupMatchesCompleted =\r\n      groupMatches.length > 0 &&\r\n      groupMatches.every((match) => match.isCompleted);\r\n    const allQuarterMatchesCompleted =\r\n      quarterMatches.length > 0 &&\r\n      quarterMatches.every((match) => match.isCompleted);\r\n    const allSemiMatchesCompleted =\r\n      semiMatches.length > 0 && semiMatches.every((match) => match.isCompleted);\r\n\r\n    // Show quarter button when group stage is completed and no quarter matches exist\r\n    if (\r\n      groupMatches.length > 0 &&\r\n      allGroupMatchesCompleted &&\r\n      quarterMatches.length === 0\r\n    ) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'Start Quarter';\r\n      this.tournamentStageButtonAction = () => this.startQuarterStage();\r\n      return;\r\n    }\r\n\r\n    // Show semi button when quarter stage is completed and no semi matches exist\r\n    if (\r\n      quarterMatches.length > 0 &&\r\n      allQuarterMatchesCompleted &&\r\n      semiMatches.length === 0\r\n    ) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'Start Semi Final';\r\n      this.tournamentStageButtonAction = () => this.startSemiFinalStage();\r\n      return;\r\n    }\r\n\r\n    // Show final button when semi stage is completed and no final matches exist\r\n    if (\r\n      semiMatches.length > 0 &&\r\n      allSemiMatchesCompleted &&\r\n      finalMatches.length === 0\r\n    ) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'Start Final';\r\n      this.tournamentStageButtonAction = () => this.startFinalStage();\r\n      return;\r\n    }\r\n\r\n    if (finalMatches.length > 0) {\r\n      // Final stage is active, hide button\r\n      this.showTournamentStageButton = false;\r\n      return;\r\n    }\r\n\r\n    // Default: hide button\r\n    this.showTournamentStageButton = false;\r\n  }\r\n\r\n  // Tournament stage action methods\r\n  startGroupStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.createGroupsAndMatches(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  startQuarterStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startKnockoutStage(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n        // console.error(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  startSemiFinalStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startSemiFinals(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  startFinalStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startFinal(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  // Method to handle tournament stage button click\r\n  onTournamentStageButtonClick(): void {\r\n    if (this.tournamentStageButtonAction) {\r\n      this.tournamentStageButtonAction();\r\n    }\r\n  }\r\n}\r\n","<div\r\n  class=\"container mx-auto p-4 flex flex-col sm:flex-row overflow-hidden h-screen\"\r\n>\r\n  <!-- Chats List -->\r\n  <div\r\n    class=\"w-full sm:w-1/3 border-r border-gray-600 sm:block\"\r\n    [ngClass]=\"{ hidden: selectedChat }\"\r\n  >\r\n    <div class=\"flex items-center justify-between mb-6\">\r\n      <h2 class=\"text-2xl font-bold text-white\">📥 Inbox</h2>\r\n    </div>\r\n\r\n    <!-- No Chats -->\r\n    <div *ngIf=\"playerChats.length === 0\" class=\"text-center text-gray-300\">\r\n      No messages here 📭\r\n    </div>\r\n\r\n    <!-- Chats List -->\r\n    <div\r\n      *ngIf=\"playerChats.length > 0\"\r\n      class=\"space-y-2 overflow-y-auto max-h-[calc(100vh-120px)]\"\r\n    >\r\n      <div\r\n        *ngFor=\"let chat of playerChats; trackBy: trackByPlayerId\"\r\n        class=\"p-4 backdrop-blur-sm border border-gray-600 rounded-lg hover:bg-gray-700 cursor-pointer flex items-center justify-between\"\r\n        (click)=\"openChat(chat.senderId)\"\r\n      >\r\n        <div>\r\n          <p class=\"font-bold text-white\">{{ chat.senderFullName }}</p>\r\n          <p class=\"text-sm text-gray-300 truncate\">{{ chat.lastMessage }}</p>\r\n        </div>\r\n        <span\r\n          *ngIf=\"chat.unreadCount > 0\"\r\n          class=\"bg-green-600 text-white text-xs font-bold rounded-full px-2 py-1\"\r\n        >\r\n          {{ chat.unreadCount }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Chat View -->\r\n  <div\r\n    class=\"w-full sm:w-2/3 flex flex-col h-full relative\"\r\n    [ngClass]=\"{ block: selectedChat, 'hidden sm:flex': !selectedChat }\"\r\n  >\r\n    <div *ngIf=\"selectedChat; else noChatSelected\" class=\"flex flex-col h-full\">\r\n      <!-- Chat Header - Fixed -->\r\n      <div\r\n        class=\"fixed left-0 right-0 z-40 p-2 backdrop-blur-sm border-b border-gray-600 flex items-center justify-between bg-black bg-opacity-90\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n        [style.top.px]=\"navbarHeight\"\r\n      >\r\n        <div class=\"flex items-center\">\r\n          <button\r\n            (click)=\"closeChat()\"\r\n            class=\"mr-4 text-gray-300 hover:text-white transition\"\r\n          >\r\n            <i class=\"fa-solid fa-arrow-left\" style=\"color: #ffffff\"></i>\r\n          </button>\r\n          <div>\r\n            <p class=\"font-bold text-white text-sm p-0\">\r\n              {{ selectedChat.senderFullName }}\r\n            </p>\r\n            <p class=\"text-xs text-gray-400 p-0\">\r\n              {{ selectedChat.senderPhoneNumber }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Messages - Scrollable Area with padding for fixed header and footer -->\r\n      <div\r\n        #messagesContainer\r\n        class=\"flex-1 p-4 overflow-y-auto backdrop-blur-sm\"\r\n        [style.margin-top.px]=\"navbarHeight + 80\"\r\n        style=\"margin-bottom: 80px\"\r\n      >\r\n        <div\r\n          *ngFor=\"\r\n            let message of selectedChat.messages;\r\n            trackBy: trackByMessageId\r\n          \"\r\n          class=\"mb-4\"\r\n          [ngClass]=\"{\r\n            'text-right': !message.isFromAdmin,\r\n            'text-left': message.isFromAdmin\r\n          }\"\r\n        >\r\n          <div\r\n            class=\"inline-block p-3 rounded-lg max-w-xs\"\r\n            [ngClass]=\"{\r\n              'bg-green-700': !message.isFromAdmin,\r\n              'bg-gray-700 ': message.isFromAdmin\r\n            }\"\r\n          >\r\n            <p class=\"text-white\">{{ message.content }}</p>\r\n            <p class=\"text-xs mt-1 text-gray-300\">\r\n              {{ message.sentAt | date : \"MMM d, y, hh:mm a\" }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Reply Input - Fixed -->\r\n      <div\r\n        class=\"fixed bottom-0 left-0 right-0 z-50 p-4 bg-black bg-opacity-90 backdrop-blur-sm border-t border-gray-600\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n      >\r\n        <form (ngSubmit)=\"sendReply()\" class=\"flex items-center gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"replyMessages[selectedChat.messages[0].id]\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n            (ngModelChange)=\"\r\n              replyMessages[selectedChat.messages[0].id] = $event\r\n            \"\r\n            placeholder=\"Write your reply...\"\r\n            class=\"flex-1 p-2 border border-gray-600 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-600 placeholder-gray-400\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 transition disabled:bg-gray-600\"\r\n            [disabled]=\"!replyMessages[selectedChat.messages[0].id]\"\r\n          >\r\n            Reply\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Placeholder when no chat is selected -->\r\n    <ng-template #noChatSelected>\r\n      <div class=\"w-full flex items-center justify-center text-gray-300\">\r\n        Select a chat to view messages 📩\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { MessageService } from 'src/app/core/services/message.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Message } from 'src/app/models/interfaces';\r\nimport { AdminDashboardService } from 'src/app/core/services/admin-dashboard.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\ninterface PlayerChat {\r\n  senderId: string;\r\n  senderFullName: string;\r\n  senderPhoneNumber: string;\r\n  lastMessage: string;\r\n  lastMessageDate: string;\r\n  unreadCount: number;\r\n  messages: Message[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-inbox',\r\n  templateUrl: './inbox.component.html',\r\n  styleUrls: ['./inbox.component.css'],\r\n})\r\nexport class InboxComponent implements OnInit, AfterViewChecked, OnDestroy {\r\n  playerChats: PlayerChat[] = [];\r\n  selectedPlayerId: string | null = null;\r\n  selectedChat: PlayerChat | null = null;\r\n  replyMessages: { [messageId: number]: string } = {};\r\n  private updateStatusSubscription?: Subscription;\r\n  private refreshSubscription?: Subscription;\r\n  navbarHeight = 60; // default navbar height\r\n\r\n  @ViewChild('messagesContainer')\r\n  messagesContainer!: ElementRef<HTMLDivElement>;\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private toastr: ToastrService,\r\n    private cdr: ChangeDetectorRef,\r\n    private adminDashboardService: AdminDashboardService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadAdminMessages();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.updateStatusSubscription) {\r\n      this.updateStatusSubscription.unsubscribe();\r\n    }\r\n    if (this.refreshSubscription) {\r\n      this.refreshSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n  private loadAdminMessages(): void {\r\n    // Always load fresh data from server for immediate updates\r\n    this.loadFromServer();\r\n  }\r\n\r\n  private loadFromCache(): void {\r\n    // تم إلغاء الكاش للادمن، سيتم التحميل دائماً من السيرفر\r\n    this.loadFromServer();\r\n  }\r\n\r\n  private loadFromServer(): void {\r\n    this.adminDashboardService.getSecondaryData('messages').subscribe({\r\n      next: (messages) => {\r\n        if (messages && messages.length > 0) {\r\n          const groupedMessages = this.groupMessagesBySender(messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n  \r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  // Add refresh method for immediate updates\r\n  refreshMessages(): void {\r\n    this.messageService.getAdminMessages().subscribe({\r\n      next: (response) => {\r\n        if (response && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n          \r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.selectedChat && this.messagesContainer) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  loadMessages(): void {\r\n    this.messageService.getMessages().subscribe({\r\n      next: (response) => {\r\n        if (response && response.messages) {\r\n          this.processMessages(response.messages);\r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل الآن');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حصل خطأ أثناء جلب الرسائل');\r\n      },\r\n    });\r\n  }\r\n\r\n  private processMessages(messages: Message[]): void {\r\n    const groupedMessages = this.groupMessagesBySender(messages);\r\n    // ترتيب حسب الأحدث (آخر رسالة)\r\n    this.playerChats = groupedMessages.sort(\r\n      (a, b) =>\r\n        new Date(b.lastMessageDate).getTime() -\r\n        new Date(a.lastMessageDate).getTime()\r\n    );\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  groupMessagesBySender(messages: Message[]): PlayerChat[] {\r\n    const chatMap: { [senderId: string]: PlayerChat } = {};\r\n    messages\r\n      .filter((msg) => !msg.isDeleted)\r\n      .forEach((msg) => {\r\n        const playerId = msg.isFromAdmin ? msg.senderId : msg.senderId;\r\n        if (!chatMap[playerId]) {\r\n          chatMap[playerId] = {\r\n            senderId: playerId,\r\n            senderFullName: msg.senderFullName,\r\n            senderPhoneNumber: msg.senderPhoneNumber,\r\n            lastMessage: '',\r\n            lastMessageDate: '',\r\n            unreadCount: 0,\r\n            messages: [],\r\n          };\r\n        }\r\n        chatMap[playerId].messages.push(msg);\r\n        if (!msg.isFromAdmin && !msg.isRead) {\r\n          chatMap[playerId].unreadCount++;\r\n        }\r\n      });\r\n\r\n    return Object.values(chatMap).map((chat) => {\r\n      // ترتيب الرسائل من الأقدم للأحدث\r\n      chat.messages = chat.messages.sort(\r\n        (a, b) => new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n      );\r\n      // آخر رسالة\r\n      const lastMsg = chat.messages[chat.messages.length - 1];\r\n      chat.lastMessage = lastMsg?.content ?? '';\r\n      chat.lastMessageDate = lastMsg?.sentAt ?? '';\r\n      return chat;\r\n    });\r\n  }\r\n\r\n  openChat(playerId: string): void {\r\n    this.selectedPlayerId = playerId;\r\n    this.selectedChat =\r\n      this.playerChats.find((chat) => chat.senderId === playerId) || null;\r\n    if (this.selectedChat) {\r\n      this.selectedChat.messages\r\n        .filter((msg) => !msg.isRead && !msg.isFromAdmin)\r\n        .forEach((msg) => {\r\n          this.messageService.toggleMarkMessage(msg.id, true).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                msg.isRead = true;\r\n                this.selectedChat!.unreadCount =\r\n                  this.selectedChat!.messages.filter(\r\n                    (m) => !m.isRead && !m.isFromAdmin\r\n                  ).length;\r\n                this.cdr.detectChanges();\r\n              }\r\n            },\r\n            error: (err) => {\r\n              this.toastr.error('حصل خطأ أثناء تحديث حالة الرسالة');\r\n            },\r\n          });\r\n        });\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  closeChat(): void {\r\n    this.selectedPlayerId = null;\r\n    this.selectedChat = null;\r\n    this.replyMessages = {};\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  sendReply(): void {\r\n    if (!this.selectedChat) {\r\n      this.toastr.warning('الرجاء اختيار محادثة');\r\n      return;\r\n    }\r\n    const replyContent =\r\n      this.replyMessages[this.selectedChat.messages[0].id]?.trim();\r\n    if (!replyContent) {\r\n      this.toastr.warning('الرجاء كتابة رد');\r\n      return;\r\n    }\r\n\r\n    this.messageService\r\n      .sendAdminReply(this.selectedChat.senderId, replyContent)\r\n      .subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم إرسال الرد');\r\n            this.replyMessages[this.selectedChat!.messages[0].id] = '';\r\n\r\n            const newMessage: Message = {\r\n              id: Math.random(),\r\n              senderId: this.selectedChat!.senderId,\r\n              senderFullName: 'Admin',\r\n              senderPhoneNumber: '',\r\n              content: replyContent,\r\n              isRead: true,\r\n              isDeleted: false,\r\n              sentAt: new Date().toISOString(),\r\n              isFromAdmin: true,\r\n            };\r\n\r\n            // تحديث الرسائل في المحادثة المحددة\r\n            this.selectedChat!.messages.push(newMessage);\r\n            this.selectedChat!.messages.sort(\r\n              (a, b) =>\r\n                new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n            );\r\n\r\n            // تحديث آخر رسالة في قائمة المحادثات\r\n            this.selectedChat!.lastMessage = replyContent;\r\n            this.selectedChat!.lastMessageDate = newMessage.sentAt;\r\n\r\n            // إعادة ترتيب قائمة المحادثات حسب الأحدث\r\n            this.playerChats.sort(\r\n              (a, b) =>\r\n                new Date(b.lastMessageDate).getTime() -\r\n                new Date(a.lastMessageDate).getTime()\r\n            );\r\n\r\n            // تحديث المحادثة المحددة بعد إعادة الترتيب\r\n            this.selectedChat =\r\n              this.playerChats.find(\r\n                (chat) => chat.senderId === this.selectedPlayerId\r\n              ) || null;\r\n\r\n            this.cdr.detectChanges();\r\n          } else {\r\n            this.toastr.error(response.message || 'فشل إرسال الرد');\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.toastr.error('حصل خطأ أثناء إرسال الرد');\r\n        },\r\n      });\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    if (this.messagesContainer) {\r\n      const container = this.messagesContainer.nativeElement;\r\n      container.scrollTop = container.scrollHeight;\r\n    }\r\n  }\r\n\r\n  trackByPlayerId(index: number, chat: PlayerChat): string {\r\n    return chat.senderId;\r\n  }\r\n\r\n  trackByMessageId(index: number, message: Message): number {\r\n    return message.id;\r\n  }\r\n}\r\n","<!-- Friendlies Dashboard Component -->\r\n\r\n<div class=\"block sm:flex transition-all duration-600\">\r\n  <!-- Sidebar -->\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white transition-all duration-600\"\r\n    [ngClass]=\"{\r\n      'w-64 p-4 sm:min-h-screen': isSidebarOpen,\r\n      'w-0 p-0': !isSidebarOpen\r\n    }\"\r\n  >\r\n    <h2\r\n      class=\"text-lg font-bold mb-4 flex justify-between overflow-hidden text-white\"\r\n    >\r\n      Friendly Players\r\n      <button (click)=\"toggleSidebar()\" class=\"text-gray-300 text-3xl\">\r\n        ×\r\n      </button>\r\n    </h2>\r\n    <ul *ngIf=\"isSidebarOpen\">\r\n      <li\r\n        *ngFor=\"let player of players\"\r\n        class=\"flex items-center justify-between p-2 cursor-pointer rounded-md hover:bg-gray-700\"\r\n        [class.bg-blue-600]=\"selectedPlayer?.playerId === player.playerId\"\r\n        (click)=\"selectPlayer(player)\"\r\n      >\r\n        <span\r\n          class=\"text-white cursor-pointer hover:text-blue-300\"\r\n          (click)=\"openRecordMatchModal()\"\r\n          >{{ player.fullName }}</span\r\n        >\r\n        <button\r\n          (click)=\"confirmDelete(player, $event)\"\r\n          class=\"bg-red-600 px-2 py-1 text-sm rounded text-white hover:bg-red-700 transition\"\r\n        >\r\n          X\r\n        </button>\r\n      </li>\r\n    </ul>\r\n    <button\r\n      *ngIf=\"isSidebarOpen\"\r\n      class=\"mt-4 w-full bg-green-600 p-2 rounded text-white hover:bg-green-700 transition\"\r\n      (click)=\"openModal()\"\r\n    >\r\n      Add Player\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Main Content -->\r\n  <div\r\n    class=\"sm:flex-1 sm:p-2 transition-all duration-600 sm:container sm:mx-auto\"\r\n  >\r\n \r\n    <!-- Friendlies Tab Content -->\r\n    <div *ngIf=\"activeTab === 'friendlies'\">\r\n      <div *ngIf=\"selectedPlayer\" class=\"sm:w-4/6 mx-auto\">\r\n        <h2 class=\"text-2xl font-bold mb-4 text-center text-white\">\r\n          Friendly Matches for {{ selectedPlayer.fullName }}\r\n        </h2>\r\n      </div>\r\n      <hr class=\"my-3 border-gray-600\" />\r\n\r\n      <!-- القائمة الأولية -->\r\n      <div>\r\n        <div class=\"flex justify-evenly pt-5\">\r\n          <button\r\n            (click)=\"toggleSidebar()\"\r\n            class=\"bg-blue-600 text-white px-3 py-2 rounded mb-4 hover:bg-blue-700 transition\"\r\n          >\r\n            ☰ Players\r\n          </button>\r\n\r\n          <button\r\n            routerLink=\"/admin/friendly-inbox\"\r\n            class=\"bg-purple-600 hover:bg-purple-700 text-white mb-4 px-3 py-2 rounded transition-all relative\"\r\n          >\r\n            📬 Friendly Inbox\r\n            <div\r\n              class=\"absolute -top-2 -right-2 w-[30px] h-[30px] rounded-full bg-green-600 flex justify-center items-center\"\r\n              *ngIf=\"totalUnreadFriendlyMessages > 0\"\r\n            >\r\n              <h4 class=\"text-white font-bold\">\r\n                {{ totalUnreadFriendlyMessages }}\r\n              </h4>\r\n            </div>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"text-center mb-8\">\r\n          <h2\r\n            class=\"mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-4xl lg:text-4xl text-white\"\r\n          >\r\n            Quick Actions\r\n          </h2>\r\n\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4\">\r\n            <button\r\n              class=\"bg-teal-600 text-white p-4 rounded-lg hover:bg-teal-700 transition-all\"\r\n              (click)=\"openRecordMatchModal()\"\r\n              [disabled]=\"players.length === 0\"\r\n            >\r\n              <h3 class=\"text-lg font-bold\">Record Match</h3>\r\n              <p class=\"text-sm\">Record a new friendly match</p>\r\n            </button>\r\n\r\n            <button\r\n              class=\"bg-green-600 text-white p-4 rounded-lg hover:bg-green-700 transition-all\"\r\n              (click)=\"openModal()\"\r\n            >\r\n              <h3 class=\"text-lg font-bold\">Add New Player</h3>\r\n              <p class=\"text-sm\">Register a new friendly player</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- All Matches Section -->\r\n      <div class=\"mt-8\">\r\n        <!-- Filters Section -->\r\n        <div class=\"mb-6 p-2 bg-gray-800 rounded-lg\">\r\n          <div class=\"mb-4\">\r\n            <h4 class=\"text-lg font-semibold text-white\">Filter Matches</h4>\r\n          </div>\r\n          <div class=\"grid grid-cols-2 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n                >Date Range</label\r\n              >\r\n              <select\r\n                [(ngModel)]=\"filterForm.dateFilter\"\r\n                (ngModelChange)=\"onFilterChange()\"\r\n                class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n              >\r\n                <option [ngValue]=\"DateFilter.AllTime\">All Time</option>\r\n                <option [ngValue]=\"DateFilter.Today\">Today</option>\r\n                <option [ngValue]=\"DateFilter.Last3Days\">Last 3 Days</option>\r\n                <option [ngValue]=\"DateFilter.LastWeek\">Last Week</option>\r\n                <option [ngValue]=\"DateFilter.LastMonth\">Last Month</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n                >Player</label\r\n              >\r\n              <select\r\n                [(ngModel)]=\"filterForm.playerId\"\r\n                (ngModelChange)=\"onFilterChange()\"\r\n                class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n              >\r\n                <option [ngValue]=\"0\">All Players</option>\r\n                <option\r\n                  *ngFor=\"let player of getAllActivePlayers()\"\r\n                  [ngValue]=\"player.playerId\"\r\n                >\r\n                  {{ player.fullName }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"flex justify-center mt-4\">\r\n            <button\r\n              class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n              (click)=\"clearFilters()\"\r\n            >\r\n              Clear Filters\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"w-full text-white\">\r\n            <thead class=\"text-center\">\r\n              <tr class=\"border-b border-gray-600 text-center\">\r\n                <th class=\"p-3\">Date</th>\r\n                <th class=\"p-3\">Player 1</th>\r\n                <th class=\"p-3\">Score</th>\r\n                <th class=\"p-3\">Player 2</th>\r\n                <th class=\"p-3\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                *ngFor=\"let match of getPaginatedMatches()\"\r\n                class=\"border-b border-gray-700 hover:bg-gray-800\"\r\n              >\r\n                <td class=\"p-3\">\r\n                  {{ match.playedOn | date : \"shortDate\" }}\r\n                </td>\r\n                <td class=\"p-3\">\r\n                  {{ match.player1Name || getPlayerName(match.player1Id) }}\r\n                </td>\r\n                <td class=\"p-3 text-center\">\r\n                  <span class=\"font-bold text-lg\">\r\n                    {{ match.player1Score }} - {{ match.player2Score }}\r\n                  </span>\r\n                </td>\r\n                <td class=\"p-3\">\r\n                  {{ match.player2Name || getPlayerName(match.player2Id) }}\r\n                </td>\r\n                <td class=\"p-3 text-center\">\r\n                  <div class=\"flex justify-center space-x-2\">\r\n                    <button\r\n                      class=\"bg-blue-600 px-3 py-1 text-white rounded hover:bg-blue-700 transition text-sm\"\r\n                      (click)=\"editMatch(match)\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      class=\"bg-red-600 px-3 py-1 text-white rounded hover:bg-red-700 transition text-sm\"\r\n                      (click)=\"deleteMatchFromList(match.matchId)\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <!-- Pagination -->\r\n        <div *ngIf=\"totalPages > 1\" class=\"flex justify-center mt-6\">\r\n          <div class=\"flex space-x-2\">\r\n            <button\r\n              class=\"bg-gray-600 px-3 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n              [disabled]=\"currentPage === 1\"\r\n              (click)=\"changePage(currentPage - 1)\"\r\n            >\r\n              Previous\r\n            </button>\r\n\r\n            <span\r\n              *ngFor=\"let page of [].constructor(totalPages); let i = index\"\r\n              class=\"flex\"\r\n            >\r\n              <button\r\n                class=\"px-3 py-2 text-white rounded transition\"\r\n                [class.bg-blue-600]=\"currentPage === i + 1\"\r\n                [class.bg-gray-600]=\"currentPage !== i + 1\"\r\n                [class.hover:bg-blue-700]=\"currentPage === i + 1\"\r\n                [class.hover:bg-gray-700]=\"currentPage !== i + 1\"\r\n                (click)=\"changePage(i + 1)\"\r\n              >\r\n                {{ i + 1 }}\r\n              </button>\r\n            </span>\r\n\r\n            <button\r\n              class=\"bg-gray-600 px-3 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n              [disabled]=\"currentPage === totalPages\"\r\n              (click)=\"changePage(currentPage + 1)\"\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"text-center mt-4 text-gray-300\">\r\n          Showing {{ (currentPage - 1) * itemsPerPage + 1 }} -\r\n          {{ Math.min(currentPage * itemsPerPage, allMatches.length) }} of\r\n          {{ allMatches.length }} matches\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Quick Actions -->\r\n    </div>\r\n    <!-- End Friendlies Tab -->\r\n\r\n    <!-- Delete Confirmation Modal -->\r\n    <div\r\n      *ngIf=\"showDeleteModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n        <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm Delete</h2>\r\n        <p class=\"text-gray-300\">\r\n          Are you sure you want to delete\r\n          <strong>{{ selectedPlayerToDelete?.fullName }}</strong\r\n          >?\r\n        </p>\r\n        <div class=\"mt-4 flex justify-end\">\r\n          <button\r\n            class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n            (click)=\"showDeleteModal = false\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n            (click)=\"deleteConfirmedPlayer()\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Player Modal -->\r\n    <div\r\n      *ngIf=\"showModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n        <h2 class=\"text-lg font-bold mb-4 text-white\">\r\n          Add New Friendly Player\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          [(ngModel)]=\"friendlyPlayerName\"\r\n          class=\"border border-gray-600 p-2 w-full bg-gray-800 text-white rounded placeholder-gray-400\"\r\n          placeholder=\"Enter player name\"\r\n        />\r\n        <div class=\"mt-4 flex justify-end\">\r\n          <button\r\n            class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n            (click)=\"closeModal()\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n            (click)=\"addPlayer()\"\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Record Match Modal -->\r\n    <div\r\n      *ngIf=\"showRecordMatchModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div\r\n        class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg w-96 max-h-[90vh] overflow-y-auto\"\r\n      >\r\n        <h2 class=\"text-lg font-bold mb-4 text-white\">\r\n          {{ selectedPlayerForMatch ? \"Edit Match\" : \"Record New Match\" }}\r\n        </h2>\r\n\r\n        <!-- Player selection for new match -->\r\n        <div *ngIf=\"!selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 1</label\r\n          >\r\n          <select\r\n            [(ngModel)]=\"matchForm.player1Id\"\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n          >\r\n            <option [ngValue]=\"0\">Select Player 1...</option>\r\n            <option\r\n              *ngFor=\"let player of getAllActivePlayers()\"\r\n              [ngValue]=\"player.playerId\"\r\n            >\r\n              {{ player.fullName }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div *ngIf=\"!selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 2</label\r\n          >\r\n          <select\r\n            [(ngModel)]=\"matchForm.player2Id\"\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n          >\r\n            <option [ngValue]=\"0\">Select Player 2...</option>\r\n            <option\r\n              *ngFor=\"\r\n                let opponent of getOpponentsForPlayer(matchForm.player1Id)\r\n              \"\r\n              [ngValue]=\"opponent.playerId\"\r\n            >\r\n              {{ opponent.fullName }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- Fixed player names for edit mode -->\r\n        <div *ngIf=\"selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 1</label\r\n          >\r\n          <div\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-700 text-white\"\r\n          >\r\n            {{\r\n              selectedPlayerForMatch.player1Name ||\r\n                getPlayerName(matchForm.player1Id)\r\n            }}\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 2</label\r\n          >\r\n          <div\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-700 text-white\"\r\n          >\r\n            {{\r\n              selectedPlayerForMatch.player2Name ||\r\n                getPlayerName(matchForm.player2Id)\r\n            }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"grid grid-cols-2 gap-4 mb-4\">\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n              >Player 1 Score</label\r\n            >\r\n            <input\r\n              type=\"number\"\r\n              [(ngModel)]=\"matchForm.player1Score\"\r\n              min=\"0\"\r\n              (input)=\"validateScore('player1')\"\r\n              placeholder=\"Enter score\"\r\n              class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n              >Player 2 Score</label\r\n            >\r\n            <input\r\n              type=\"number\"\r\n              [(ngModel)]=\"matchForm.player2Score\"\r\n              min=\"0\"\r\n              (input)=\"validateScore('player2')\"\r\n              placeholder=\"Enter score\"\r\n              class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex justify-end space-x-4\">\r\n          <button\r\n            class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n            (click)=\"closeRecordMatchModal()\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n            (click)=\"selectedPlayerForMatch ? updateMatch() : recordNewMatch()\"\r\n            [disabled]=\"\r\n              !matchForm.player1Id ||\r\n              !matchForm.player2Id ||\r\n              (!selectedPlayerForMatch &&\r\n                matchForm.player1Id === matchForm.player2Id) ||\r\n              (matchForm.player1Score === 0 && matchForm.player2Score === 0) ||\r\n              isRecordingMatch\r\n            \"\r\n          >\r\n            {{\r\n              isRecordingMatch\r\n                ? \"Processing...\"\r\n                : selectedPlayerForMatch\r\n                ? \"Update Match\"\r\n                : \"Record Match\"\r\n            }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FriendlyMatchService } from '../../core/services/friendly-match.service';\r\nimport { FriendlyMessageService } from '../../core/services/friendly-message.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DateFilter } from 'friendly-match-types';\r\nimport { calculateUnreadCount } from 'friendly-message-types';\r\n\r\n@Component({\r\n  selector: 'app-friendlies',\r\n  templateUrl: './friendlies.component.html',\r\n  styleUrls: ['./friendlies.component.css'],\r\n})\r\nexport class FriendliesComponent implements OnInit {\r\n  // Tab management\r\n  activeTab: 'friendlies' = 'friendlies';\r\n\r\n  // Sidebar state\r\n  isSidebarOpen = false;\r\n\r\n  // Players data\r\n  players: any[] = [];\r\n  selectedPlayer: any = null;\r\n  displayMatches: any[] = [];\r\n\r\n  // Modals\r\n  showModal = false;\r\n  showDeleteModal = false;\r\n  showRecordMatchModal = false;\r\n  selectedPlayerToDelete: any = null;\r\n  selectedPlayerForMatch: any = null;\r\n\r\n  // Form data (for friendly matches)\r\n  friendlyPlayerName = '';\r\n  matchForm = {\r\n    player1Id: 0,\r\n    player2Id: 0,\r\n    player1Score: null as number | null,\r\n    player2Score: null as number | null,\r\n    playedOn: new Date(),\r\n  };\r\n\r\n  // Loading states\r\n  isRecordingMatch = false;\r\n\r\n  // Statistics\r\n  totalPlayers = 0;\r\n  totalMatches = 0;\r\n  totalUnreadFriendlyMessages = 0;\r\n\r\n  // All matches pagination\r\n  allMatches: any[] = [];\r\n  currentPage = 1;\r\n  itemsPerPage = 10;\r\n  totalPages = 0;\r\n  Math = Math; // Make Math available in template\r\n\r\n  // Filter options\r\n  filterForm = {\r\n    playerId: 0,\r\n    opponentIds: [] as number[],\r\n    dateFilter: DateFilter.AllTime,\r\n  };\r\n  DateFilter = DateFilter; // Make enum available in template\r\n\r\n  constructor(\r\n    private friendlyMatchService: FriendlyMatchService,\r\n    private friendlyMessageService: FriendlyMessageService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadPlayers();\r\n    this.loadAllMatches();\r\n    this.loadUnreadFriendlyMessagesCount();\r\n  }\r\n\r\n  loadUnreadFriendlyMessagesCount(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: any) => {\r\n        if (response.success && response.messages) {\r\n          this.totalUnreadFriendlyMessages = calculateUnreadCount(\r\n            response.messages\r\n          );\r\n        } else {\r\n          this.totalUnreadFriendlyMessages = 0;\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading unread friendly messages count:', error);\r\n        this.totalUnreadFriendlyMessages = 0;\r\n      },\r\n    });\r\n  }\r\n\r\n  toggleSidebar(): void {\r\n    this.isSidebarOpen = !this.isSidebarOpen;\r\n  }\r\n\r\n  loadPlayers(): void {\r\n    this.friendlyMatchService.getAllFriendlyPlayers().subscribe({\r\n      next: (players: any) => {\r\n        this.players = players;\r\n        this.totalPlayers = players.length;\r\n        this.calculateStatistics();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل اللاعبين',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  selectPlayer(player: any): void {\r\n    this.selectedPlayer = player;\r\n    this.loadPlayerMatches(player.playerId);\r\n  }\r\n\r\n  loadPlayerMatches(playerId: number): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        // Get the player's name\r\n        const player = this.players.find((p) => p.playerId === playerId);\r\n        const playerName = player?.fullName;\r\n\r\n        this.displayMatches = matches.filter(\r\n          (match: any) =>\r\n            match.player1Name === playerName || match.player2Name === playerName\r\n        );\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل مباريات اللاعب',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  calculateStatistics(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        this.totalMatches = matches.length;\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل الإحصائيات',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Modal methods (for friendly players)\r\n  openModal(): void {\r\n    this.showModal = true;\r\n    this.friendlyPlayerName = '';\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.showModal = false;\r\n    this.friendlyPlayerName = '';\r\n  }\r\n\r\n  addPlayer(): void {\r\n    if (!this.friendlyPlayerName.trim()) {\r\n      this.toastr.warning('الرجاء إدخال اسم اللاعب', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    this.friendlyMatchService\r\n      .addFriendlyPlayerAsync(this.friendlyPlayerName)\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success(\r\n              `تم إضافة اللاعب ${this.friendlyPlayerName} بنجاح`,\r\n              'تم الإضافة'\r\n            );\r\n            // Refresh cache and reload players\r\n            this.friendlyMatchService.refreshFriendlyPlayers();\r\n            this.loadPlayers();\r\n            this.closeModal();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل إضافة اللاعب',\r\n              'خطأ في الإضافة'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء إضافة اللاعب',\r\n            'خطأ في الإضافة'\r\n          );\r\n        },\r\n      });\r\n  }\r\n\r\n  confirmDelete(player: any, event: Event): void {\r\n    event.stopPropagation();\r\n    this.selectedPlayerToDelete = player;\r\n    this.showDeleteModal = true;\r\n  }\r\n\r\n  deleteConfirmedPlayer(): void {\r\n    if (!this.selectedPlayerToDelete) return;\r\n\r\n    this.friendlyMatchService\r\n      .deleteFriendlyPlayerAsync(this.selectedPlayerToDelete.playerId)\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success(\r\n              `تم حذف اللاعب ${this.selectedPlayerToDelete.fullName} بنجاح`,\r\n              'تم الحذف'\r\n            );\r\n            // Refresh cache and reload players\r\n            this.friendlyMatchService.refreshFriendlyPlayers();\r\n            this.loadPlayers();\r\n            if (\r\n              this.selectedPlayer?.playerId ===\r\n              this.selectedPlayerToDelete.playerId\r\n            ) {\r\n              this.selectedPlayer = null;\r\n              this.displayMatches = [];\r\n            }\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل حذف اللاعب',\r\n              'خطأ في الحذف'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message || error.message || 'حصل خطأ أثناء حذف اللاعب',\r\n            'خطأ في الحذف'\r\n          );\r\n        },\r\n      });\r\n\r\n    this.showDeleteModal = false;\r\n    this.selectedPlayerToDelete = null;\r\n  }\r\n\r\n  getActivePlayersCount(): number {\r\n    return this.players.filter((p) => p.isActive).length;\r\n  }\r\n\r\n  getRecentMatches(): any[] {\r\n    return this.displayMatches.slice(0, 10);\r\n  }\r\n\r\n  // Record Match Modal methods\r\n  openRecordMatchModal(player?: any): void {\r\n    this.selectedPlayerForMatch = player || null;\r\n    this.matchForm.player1Id = player?.playerId || 0;\r\n    this.matchForm.player2Id = 0;\r\n    this.matchForm.player1Score = null;\r\n    this.matchForm.player2Score = null;\r\n    this.matchForm.playedOn = new Date();\r\n    this.showRecordMatchModal = true;\r\n  }\r\n\r\n  closeRecordMatchModal(): void {\r\n    this.showRecordMatchModal = false;\r\n    this.selectedPlayerForMatch = null;\r\n    this.matchForm = {\r\n      player1Id: 0,\r\n      player2Id: 0,\r\n      player1Score: 0,\r\n      player2Score: 0,\r\n      playedOn: new Date(),\r\n    };\r\n  }\r\n\r\n  recordNewMatch(): void {\r\n    if (!this.matchForm.player1Id || !this.matchForm.player2Id) {\r\n      this.toastr.warning('الرجاء اختيار كلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    // Only check for same player in new match mode, not edit mode\r\n    if (\r\n      !this.selectedPlayerForMatch &&\r\n      this.matchForm.player1Id === this.matchForm.player2Id\r\n    ) {\r\n      this.toastr.warning(\r\n        'لا يمكن أن يكون اللاعب الأول والثاني نفس الشخص',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === null ||\r\n      this.matchForm.player2Score === null\r\n    ) {\r\n      this.toastr.warning('الرجاء إدخال النقاط لكلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (this.matchForm.player1Score < 0 || this.matchForm.player2Score < 0) {\r\n      this.toastr.warning('لا يمكن أن تكون النقاط سالبة', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === 0 &&\r\n      this.matchForm.player2Score === 0\r\n    ) {\r\n      this.toastr.warning(\r\n        'يجب أن يكون لدى لاعب واحد على الأقل نقاط إيجابية (0-0 غير مسموح)',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    const matchData = {\r\n      player1Id: this.matchForm.player1Id,\r\n      player2Id: this.matchForm.player2Id,\r\n      player1Score: this.matchForm.player1Score,\r\n      player2Score: this.matchForm.player2Score,\r\n      playedOn: this.matchForm.playedOn,\r\n    };\r\n\r\n    this.isRecordingMatch = true;\r\n\r\n    this.friendlyMatchService.recordFriendlyMatchAsync(matchData).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          // Get player names for the toast message\r\n          const player1 = this.players.find(\r\n            (p) => p.playerId === this.matchForm.player1Id\r\n          );\r\n          const player2 = this.players.find(\r\n            (p) => p.playerId === this.matchForm.player2Id\r\n          );\r\n\r\n          this.toastr.success(\r\n            `تم تسجيل المباراة بنجاح: ${player1?.fullName} (${this.matchForm.player1Score}) - ${player2?.fullName} (${this.matchForm.player2Score})`,\r\n            'تم تسجيل المباراة'\r\n          );\r\n\r\n          // Refresh cache and reload data\r\n          this.friendlyMatchService.refreshFriendlyMatches();\r\n          this.friendlyMatchService.refreshFriendlyPlayers();\r\n          this.loadPlayers();\r\n          this.calculateStatistics();\r\n          if (this.selectedPlayer) {\r\n            this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n          }\r\n          this.loadAllMatches();\r\n          this.closeRecordMatchModal();\r\n        } else {\r\n          this.toastr.error(\r\n            response.message || 'فشل تسجيل المباراة',\r\n            'خطأ في التسجيل'\r\n          );\r\n        }\r\n        this.isRecordingMatch = false;\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تسجيل المباراة',\r\n          'خطأ في التسجيل'\r\n        );\r\n        this.isRecordingMatch = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  getOpponentsForPlayer(playerId: number): any[] {\r\n    // In edit mode, allow selecting any player except the current player1\r\n    if (this.selectedPlayerForMatch) {\r\n      return this.players.filter(\r\n        (p) => p.playerId !== playerId && p.isActive !== false\r\n      );\r\n    }\r\n    // In new match mode, filter out the selected player1\r\n    return this.players.filter(\r\n      (p) => p.playerId !== playerId && p.isActive !== false\r\n    );\r\n  }\r\n\r\n  getAllActivePlayers(): any[] {\r\n    // If isActive is undefined, consider all players as active\r\n    return this.players.filter((p) => p.isActive !== false);\r\n  }\r\n\r\n  validateScore(player: 'player1' | 'player2'): void {\r\n    if (player === 'player1') {\r\n      if (\r\n        this.matchForm.player1Score !== null &&\r\n        this.matchForm.player1Score < 0\r\n      ) {\r\n        this.matchForm.player1Score = 0;\r\n      }\r\n    } else {\r\n      if (\r\n        this.matchForm.player2Score !== null &&\r\n        this.matchForm.player2Score < 0\r\n      ) {\r\n        this.matchForm.player2Score = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  // All matches management\r\n  loadAllMatches(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        this.allMatches = matches.sort(\r\n          (a: any, b: any) =>\r\n            new Date(b.playedOn).getTime() - new Date(a.playedOn).getTime()\r\n        );\r\n        this.totalMatches = matches.length;\r\n        this.totalPages = Math.ceil(this.allMatches.length / this.itemsPerPage);\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Cache-based filtering\r\n  loadFilteredMatchesFromCache(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (allMatches: any) => {\r\n        let filteredMatches = [...allMatches];\r\n\r\n        // Apply date filter\r\n        if (this.filterForm.dateFilter !== DateFilter.AllTime) {\r\n          const now = new Date();\r\n          let cutoffDate: Date;\r\n\r\n          switch (this.filterForm.dateFilter) {\r\n            case DateFilter.Today:\r\n              cutoffDate = new Date(\r\n                now.getFullYear(),\r\n                now.getMonth(),\r\n                now.getDate()\r\n              );\r\n              break;\r\n            case DateFilter.Last3Days:\r\n              cutoffDate = new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            case DateFilter.LastWeek:\r\n              cutoffDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            case DateFilter.LastMonth:\r\n              cutoffDate = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            default:\r\n              cutoffDate = new Date(0);\r\n          }\r\n\r\n          filteredMatches = filteredMatches.filter(\r\n            (match) => new Date(match.playedOn) >= cutoffDate\r\n          );\r\n        }\r\n\r\n        // Apply player filter\r\n        if (this.filterForm.playerId) {\r\n          // Get the selected player's name\r\n          const selectedPlayer = this.players.find(\r\n            (p) => p.playerId === this.filterForm.playerId\r\n          );\r\n          const selectedPlayerName = selectedPlayer?.fullName;\r\n\r\n          filteredMatches = filteredMatches.filter((match) => {\r\n            const isMatch =\r\n              match.player1Name === selectedPlayerName ||\r\n              match.player2Name === selectedPlayerName;\r\n\r\n            return isMatch;\r\n          });\r\n\r\n          // Reorder matches so selected player is always Player 1\r\n          filteredMatches = this.reorderMatchesForSelectedPlayer(\r\n            filteredMatches,\r\n            selectedPlayerName\r\n          );\r\n        }\r\n\r\n        // Apply opponent filter\r\n        if (\r\n          this.filterForm.opponentIds &&\r\n          this.filterForm.opponentIds.length > 0\r\n        ) {\r\n          // Get opponent names\r\n          const opponentNames = this.filterForm.opponentIds\r\n            .map((id) => {\r\n              const player = this.players.find((p) => p.playerId === id);\r\n              return player?.fullName;\r\n            })\r\n            .filter((name) => name);\r\n\r\n          filteredMatches = filteredMatches.filter(\r\n            (match) =>\r\n              opponentNames.includes(match.player1Name) ||\r\n              opponentNames.includes(match.player2Name)\r\n          );\r\n        }\r\n\r\n        // Sort by date (newest first)\r\n        filteredMatches.sort(\r\n          (a, b) =>\r\n            new Date(b.playedOn).getTime() - new Date(a.playedOn).getTime()\r\n        );\r\n\r\n        this.allMatches = filteredMatches;\r\n        this.totalMatches = filteredMatches.length;\r\n        this.totalPages = Math.ceil(this.allMatches.length / this.itemsPerPage);\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات المفلترة',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Helper method to reorder matches so selected player is always Player 1\r\n  private reorderMatchesForSelectedPlayer(\r\n    matches: any[],\r\n    selectedPlayerName: string\r\n  ): any[] {\r\n    return matches.map((match) => {\r\n      // If the selected player is already Player 1, keep as is\r\n      if (match.player1Name === selectedPlayerName) {\r\n        return match;\r\n      }\r\n\r\n      // If the selected player is Player 2, swap the players\r\n      if (match.player2Name === selectedPlayerName) {\r\n        return {\r\n          ...match,\r\n          player1Name: match.player2Name,\r\n          player2Name: match.player1Name,\r\n          player1Score: match.player2Score,\r\n          player2Score: match.player1Score,\r\n          player1Id: match.player2Id,\r\n          player2Id: match.player1Id,\r\n        };\r\n      }\r\n\r\n      // If neither player matches (shouldn't happen with our filter), keep as is\r\n      return match;\r\n    });\r\n  }\r\n\r\n  loadFilteredMatches(): void {\r\n    const filter: any = {\r\n      page: this.currentPage,\r\n      pageSize: this.itemsPerPage,\r\n      dateFilter: this.filterForm.dateFilter,\r\n    };\r\n\r\n    if (this.filterForm.playerId) {\r\n      filter.playerId = this.filterForm.playerId;\r\n    }\r\n    if (this.filterForm.opponentIds && this.filterForm.opponentIds.length > 0) {\r\n      filter.opponentIds = this.filterForm.opponentIds;\r\n    }\r\n\r\n    this.friendlyMatchService.getFilteredMatches(filter).subscribe({\r\n      next: (result: any) => {\r\n        this.allMatches = result.matches;\r\n        this.totalMatches = result.totalCount;\r\n        this.totalPages = result.totalPages;\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات المفلترة',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  onFilterChange(): void {\r\n    this.currentPage = 1;\r\n    this.loadFilteredMatchesFromCache();\r\n  }\r\n\r\n  clearFilters(): void {\r\n    this.filterForm = {\r\n      playerId: 0,\r\n      opponentIds: [],\r\n      dateFilter: DateFilter.AllTime,\r\n    };\r\n    this.currentPage = 1;\r\n    this.loadAllMatches();\r\n  }\r\n\r\n  getPaginatedMatches(): any[] {\r\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n    const endIndex = startIndex + this.itemsPerPage;\r\n    return this.allMatches.slice(startIndex, endIndex);\r\n  }\r\n\r\n  changePage(page: number): void {\r\n    if (page >= 1 && page <= this.totalPages) {\r\n      this.currentPage = page;\r\n    }\r\n  }\r\n\r\n  getPlayerName(playerId: number): string {\r\n    const player = this.players.find((p) => p.playerId === playerId);\r\n    return player ? player.fullName : 'Unknown Player';\r\n  }\r\n\r\n  // Edit match functionality\r\n  editMatch(match: any): void {\r\n    // Find player IDs by names\r\n    const player1 = this.players.find((p) => p.fullName === match.player1Name);\r\n    const player2 = this.players.find((p) => p.fullName === match.player2Name);\r\n\r\n    this.matchForm = {\r\n      player1Id: player1?.playerId || 0,\r\n      player2Id: player2?.playerId || 0,\r\n      player1Score: match.player1Score,\r\n      player2Score: match.player2Score,\r\n      playedOn: new Date(match.playedOn),\r\n    };\r\n    this.selectedPlayerForMatch = match;\r\n    this.showRecordMatchModal = true;\r\n  }\r\n\r\n  updateMatch(): void {\r\n    if (!this.selectedPlayerForMatch) return;\r\n\r\n    if (!this.matchForm.player1Id || !this.matchForm.player2Id) {\r\n      this.toastr.warning('الرجاء اختيار كلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    // In edit mode, we don't need to check for same player since names are fixed\r\n\r\n    if (\r\n      this.matchForm.player1Score === null ||\r\n      this.matchForm.player2Score === null\r\n    ) {\r\n      this.toastr.warning('الرجاء إدخال النقاط لكلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (this.matchForm.player1Score < 0 || this.matchForm.player2Score < 0) {\r\n      this.toastr.warning('لا يمكن أن تكون النقاط سالبة', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === 0 &&\r\n      this.matchForm.player2Score === 0\r\n    ) {\r\n      this.toastr.warning(\r\n        'يجب أن يكون لدى لاعب واحد على الأقل نقاط إيجابية (0-0 غير مسموح)',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.isRecordingMatch = true;\r\n\r\n    this.friendlyMatchService\r\n      .updateFriendlyMatchAsync(this.selectedPlayerForMatch.matchId, {\r\n        player1Id: this.matchForm.player1Id,\r\n        player2Id: this.matchForm.player2Id,\r\n        player1Score: this.matchForm.player1Score,\r\n        player2Score: this.matchForm.player2Score,\r\n      })\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            // Get player names for the toast message\r\n            const player1 = this.players.find(\r\n              (p) => p.playerId === this.matchForm.player1Id\r\n            );\r\n            const player2 = this.players.find(\r\n              (p) => p.playerId === this.matchForm.player2Id\r\n            );\r\n\r\n            this.toastr.success(\r\n              `تم تحديث المباراة بنجاح: ${player1?.fullName} (${this.matchForm.player1Score}) - ${player2?.fullName} (${this.matchForm.player2Score})`,\r\n              'تم تحديث المباراة'\r\n            );\r\n\r\n            // Refresh cache and reload data\r\n            this.friendlyMatchService.refreshFriendlyMatches();\r\n            this.loadAllMatches();\r\n            this.calculateStatistics();\r\n            if (this.selectedPlayer) {\r\n              this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n            }\r\n            this.closeRecordMatchModal();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل تحديث المباراة',\r\n              'خطأ في التحديث'\r\n            );\r\n          }\r\n          this.isRecordingMatch = false;\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء تحديث المباراة',\r\n            'خطأ في التحديث'\r\n          );\r\n          this.isRecordingMatch = false;\r\n        },\r\n      });\r\n  }\r\n\r\n  deleteMatchFromList(matchId: number): void {\r\n    if (confirm('هل أنت متأكد من حذف هذه المباراة؟')) {\r\n      this.friendlyMatchService.deleteFriendlyMatchAsync(matchId).subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم حذف المباراة بنجاح', 'تم الحذف');\r\n            // Refresh cache and reload data\r\n            this.friendlyMatchService.refreshFriendlyMatches();\r\n            this.loadAllMatches();\r\n            this.calculateStatistics();\r\n            if (this.selectedPlayer) {\r\n              this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n            }\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل حذف المباراة',\r\n              'خطأ في الحذف'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء حذف المباراة',\r\n            'خطأ في الحذف'\r\n          );\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div\r\n  class=\"container mx-auto p-4 flex flex-col sm:flex-row overflow-hidden h-screen\"\r\n>\r\n  <!-- Chats List -->\r\n  <div\r\n    class=\"w-full sm:w-1/3 border-r border-gray-600 sm:block\"\r\n    [ngClass]=\"{ hidden: selectedChat }\"\r\n  >\r\n    <div class=\"flex items-center justify-between mb-6\">\r\n      <h2 class=\"text-2xl font-bold text-white\">📬 Friendly Inbox</h2>\r\n    </div>\r\n\r\n    <!-- No Chats -->\r\n    <div *ngIf=\"playerChats.length === 0\" class=\"text-center text-gray-300\">\r\n      No friendly messages here 📭\r\n    </div>\r\n\r\n    <!-- Chats List -->\r\n    <div\r\n      *ngIf=\"playerChats.length > 0\"\r\n      class=\"space-y-2 overflow-y-auto max-h-[calc(100vh-120px)]\"\r\n    >\r\n      <div\r\n        *ngFor=\"let chat of playerChats; trackBy: trackByPlayerId\"\r\n        class=\"p-4 backdrop-blur-sm border border-gray-600 rounded-lg hover:bg-gray-700 cursor-pointer flex items-center justify-between\"\r\n        (click)=\"openChat(chat.senderId)\"\r\n      >\r\n        <div>\r\n          <p class=\"font-bold text-white\">{{ chat.senderFullName }}</p>\r\n          <p class=\"text-sm text-gray-300 truncate\">{{ chat.lastMessage }}</p>\r\n        </div>\r\n        <span\r\n          *ngIf=\"chat.unreadCount > 0\"\r\n          class=\"bg-green-600 text-white text-xs font-bold rounded-full px-2 py-1\"\r\n        >\r\n          {{ chat.unreadCount }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Chat View -->\r\n  <div\r\n    class=\"w-full sm:w-2/3 flex flex-col h-full relative\"\r\n    [ngClass]=\"{ block: selectedChat, 'hidden sm:flex': !selectedChat }\"\r\n  >\r\n    <div *ngIf=\"selectedChat; else noChatSelected\" class=\"flex flex-col h-full\">\r\n      <!-- Chat Header - Fixed -->\r\n      <div\r\n        class=\"fixed left-0 right-0 z-40 p-2 backdrop-blur-sm border-b border-gray-600 flex items-center justify-between bg-black bg-opacity-90\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n        [style.top.px]=\"navbarHeight\"\r\n      >\r\n        <div class=\"flex items-center\">\r\n          <button\r\n            (click)=\"closeChat()\"\r\n            class=\"mr-4 text-gray-300 hover:text-white transition\"\r\n          >\r\n            <i class=\"fa-solid fa-arrow-left\" style=\"color: #ffffff\"></i>\r\n          </button>\r\n          <div>\r\n            <p class=\"font-bold text-white text-sm p-0\">\r\n              {{ selectedChat.senderFullName }}\r\n            </p>\r\n            <p class=\"text-xs text-gray-400 p-0\">\r\n              {{ selectedChat.senderPhoneNumber }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Messages - Scrollable Area with padding for fixed header and footer -->\r\n      <div\r\n        #messagesContainer\r\n        class=\"flex-1 p-4 overflow-y-auto backdrop-blur-sm\"\r\n        [style.margin-top.px]=\"navbarHeight + 80\"\r\n        style=\"margin-bottom: 80px\"\r\n      >\r\n        <div\r\n          *ngFor=\"\r\n            let message of selectedChat.messages;\r\n            trackBy: trackByMessageId\r\n          \"\r\n          class=\"mb-4\"\r\n          [ngClass]=\"{\r\n            'text-right': !message.isFromAdmin,\r\n            'text-left': message.isFromAdmin\r\n          }\"\r\n        >\r\n          <div\r\n            class=\"inline-block p-3 rounded-lg max-w-xs\"\r\n            [ngClass]=\"{\r\n              'bg-green-700': !message.isFromAdmin,\r\n              'bg-gray-700 ': message.isFromAdmin\r\n            }\"\r\n          >\r\n            <p class=\"text-white\">{{ message.content }}</p>\r\n            <p class=\"text-xs mt-1 text-gray-300\">\r\n              {{ message.sentAt | date : \"MMM d, y, hh:mm a\" }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Reply Input - Fixed -->\r\n      <div\r\n        class=\"fixed bottom-0 left-0 right-0 z-50 p-4 bg-black bg-opacity-90 backdrop-blur-sm border-t border-gray-600\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n      >\r\n        <form (ngSubmit)=\"sendReply()\" class=\"flex items-center gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"replyMessages[selectedChat.messages[0].id]\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n            (ngModelChange)=\"\r\n              replyMessages[selectedChat.messages[0].id] = $event\r\n            \"\r\n            placeholder=\"Write your reply...\"\r\n            class=\"flex-1 p-2 border border-gray-600 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-600 placeholder-gray-400\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 transition disabled:bg-gray-600\"\r\n            [disabled]=\"!replyMessages[selectedChat.messages[0].id]\"\r\n          >\r\n            Reply\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Placeholder when no chat is selected -->\r\n    <ng-template #noChatSelected>\r\n      <div class=\"w-full flex items-center justify-center text-gray-300\">\r\n        Select a friendly chat to view messages 📩\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { FriendlyMessageService } from '../../../core/services/friendly-message.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {\r\n  FriendlyMessageDto,\r\n  FriendlyMessageResponse,\r\n} from 'friendly-message-types';\r\nimport { Subscription } from 'rxjs';\r\n\r\ninterface PlayerChat {\r\n  senderId: string; // استخدام string فقط للتوافق مع GUID\r\n  senderFullName: string;\r\n  senderPhoneNumber: string; // إضافة رقم الهاتف\r\n  lastMessage: string;\r\n  lastMessageDate: string;\r\n  unreadCount: number;\r\n  messages: FriendlyMessageDto[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-friendly-inbox',\r\n  templateUrl: './friendly-inbox.component.html',\r\n  styleUrls: ['./friendly-inbox.component.css'],\r\n})\r\nexport class FriendlyInboxComponent\r\n  implements OnInit, AfterViewChecked, OnDestroy\r\n{\r\n  playerChats: PlayerChat[] = [];\r\n  selectedPlayerId: string | null = null;\r\n  selectedChat: PlayerChat | null = null;\r\n  replyMessages: { [messageId: number]: string } = {};\r\n  private updateStatusSubscription?: Subscription;\r\n  private refreshSubscription?: Subscription;\r\n  navbarHeight = 60; // default navbar height\r\n\r\n  @ViewChild('messagesContainer')\r\n  messagesContainer!: ElementRef<HTMLDivElement>;\r\n\r\n  constructor(\r\n    private friendlyMessageService: FriendlyMessageService,\r\n    private toastr: ToastrService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadFriendlyMessages();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.updateStatusSubscription) {\r\n      this.updateStatusSubscription.unsubscribe();\r\n    }\r\n    if (this.refreshSubscription) {\r\n      this.refreshSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private loadFriendlyMessages(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: FriendlyMessageResponse) => {\r\n        if (response.success && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n\r\n          // عرض رسالة النجاح مع عدد الرسائل\r\n          const totalMessages = response.messages.length;\r\n          const unreadMessages = response.messages.filter(\r\n            (msg) => !msg.isRead && !msg.isFromAdmin\r\n          ).length;\r\n        } else {\r\n          this.toastr.error(response.message || 'لا يوجد رسائل ودية');\r\n        }\r\n      },\r\n      error: (err: any) => {\r\n        this.toastr.error(\r\n          err.error?.message || err.message || 'حصل خطأ أثناء جلب الرسائل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Add refresh method for immediate updates\r\n  refreshMessages(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: FriendlyMessageResponse) => {\r\n        if (response.success && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n\r\n          // عرض رسالة التحديث مع عدد الرسائل\r\n          const totalMessages = response.messages.length;\r\n          const unreadMessages = response.messages.filter(\r\n            (msg) => !msg.isRead && !msg.isFromAdmin\r\n          ).length;\r\n\r\n          if (totalMessages > 0) {\r\n            this.toastr.info(\r\n              `تم تحديث ${totalMessages} رسالة${\r\n                unreadMessages > 0\r\n                  ? ` (${unreadMessages} رسالة غير مقروءة)`\r\n                  : ''\r\n              }`,\r\n              'تم تحديث الرسائل'\r\n            );\r\n          } else {\r\n            this.toastr.info('لا توجد رسائل ودية حالياً', 'معلومات');\r\n          }\r\n        } else {\r\n          this.toastr.error(response.message || 'لا يوجد رسائل ودية');\r\n        }\r\n      },\r\n      error: (err: any) => {\r\n        this.toastr.error(\r\n          err.error?.message || err.message || 'حصل خطأ أثناء جلب الرسائل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.selectedChat && this.messagesContainer) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  groupMessagesBySender(messages: FriendlyMessageDto[]): PlayerChat[] {\r\n    const chatMap: { [senderId: string | number]: PlayerChat } = {};\r\n    messages.forEach((msg) => {\r\n      // استخدام senderId كـ playerId (قد يكون string أو number)\r\n      let playerId = msg.senderId || msg.playerId;\r\n\r\n      // إذا كان senderId هو GUID، نستخدمه كما هو\r\n      if (typeof playerId === 'string' && playerId.includes('-')) {\r\n        // هذا GUID، نستخدمه كما هو\r\n      } else if (typeof playerId === 'string') {\r\n        // محاولة تحويل إلى number\r\n        const parsedId = parseInt(playerId, 10);\r\n        if (!isNaN(parsedId) && parsedId > 0) {\r\n          playerId = parsedId;\r\n        }\r\n      }\r\n\r\n      // تأكد من أن playerId موجود\r\n      if (!playerId) {\r\n        return; // تخطي هذه الرسالة\r\n      }\r\n\r\n      if (!chatMap[playerId]) {\r\n        chatMap[playerId] = {\r\n          senderId: String(playerId), // تحويل إلى string\r\n          senderFullName:\r\n            msg.senderFullName || msg.playerFullName || `اللاعب ${playerId}`, // fallback للاسم\r\n          senderPhoneNumber: msg.senderPhoneNumber || 'غير متوفر', // استخدام الحقل الصحيح مع fallback\r\n          lastMessage: '',\r\n          lastMessageDate: '',\r\n          unreadCount: 0,\r\n          messages: [],\r\n        };\r\n      }\r\n      chatMap[playerId].messages.push(msg);\r\n      if (!msg.isFromAdmin && !msg.isRead) {\r\n        chatMap[playerId].unreadCount++;\r\n      }\r\n    });\r\n\r\n    const result = Object.values(chatMap).map((chat) => {\r\n      // ترتيب الرسائل من الأقدم للأحدث\r\n      chat.messages = chat.messages.sort(\r\n        (a, b) => new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n      );\r\n      // آخر رسالة\r\n      const lastMsg = chat.messages[chat.messages.length - 1];\r\n      chat.lastMessage = lastMsg?.content ?? '';\r\n      chat.lastMessageDate = lastMsg?.sentAt ?? '';\r\n      return chat;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  openChat(playerId: string): void {\r\n    this.selectedPlayerId = playerId;\r\n    this.selectedChat =\r\n      this.playerChats.find((chat) => chat.senderId === playerId) || null;\r\n\r\n    if (this.selectedChat) {\r\n      // تأكد من وجود اسم اللاعب\r\n      if (!this.selectedChat.senderFullName) {\r\n        this.selectedChat.senderFullName = `اللاعب ${this.selectedChat.senderId}`;\r\n      }\r\n      // Mark messages as read when opening chat\r\n      this.selectedChat.messages\r\n        .filter((msg) => !msg.isRead && !msg.isFromAdmin)\r\n        .forEach((msg) => {\r\n          this.friendlyMessageService.markMessageAsRead(msg.id).subscribe({\r\n            next: (response: any) => {\r\n              if (response.success) {\r\n                msg.isRead = true;\r\n                this.selectedChat!.unreadCount =\r\n                  this.selectedChat!.messages.filter(\r\n                    (m) => !m.isRead && !m.isFromAdmin\r\n                  ).length;\r\n                this.cdr.detectChanges();\r\n              }\r\n            },\r\n            error: (err: any) => {\r\n              this.toastr.error(\r\n                err.error?.message ||\r\n                  err.message ||\r\n                  'حصل خطأ أثناء تحديث حالة الرسالة',\r\n                'خطأ في التحديث'\r\n              );\r\n            },\r\n          });\r\n        });\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  closeChat(): void {\r\n    this.selectedPlayerId = null;\r\n    this.selectedChat = null;\r\n    this.replyMessages = {};\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  sendReply(): void {\r\n    if (!this.selectedChat) {\r\n      this.toastr.warning('الرجاء اختيار محادثة');\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedChat.senderId) {\r\n      this.toastr.error('خطأ: معرف اللاعب غير صحيح');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !this.selectedChat.messages ||\r\n      this.selectedChat.messages.length === 0\r\n    ) {\r\n      this.toastr.error('خطأ: لا توجد رسائل في هذه المحادثة');\r\n      return;\r\n    }\r\n\r\n    const replyContent =\r\n      this.replyMessages[this.selectedChat.messages[0].id]?.trim();\r\n    if (!replyContent) {\r\n      this.toastr.warning('الرجاء كتابة رد');\r\n      return;\r\n    }\r\n\r\n    this.friendlyMessageService\r\n      .sendAdminReply(this.selectedChat.senderId, replyContent)\r\n      .subscribe({\r\n        next: (response: FriendlyMessageResponse) => {\r\n          if (response.success) {\r\n            const playerName =\r\n              this.selectedChat!.senderFullName ||\r\n              `اللاعب ${this.selectedChat!.senderId}`;\r\n            this.toastr.success(\r\n              `تم إرسال الرد بنجاح إلى ${playerName}`,\r\n              'تم الإرسال'\r\n            );\r\n            this.replyMessages[this.selectedChat!.messages[0].id] = '';\r\n\r\n            const newMessage: FriendlyMessageDto = {\r\n              id: Math.random(),\r\n              senderId: this.selectedChat!.senderId,\r\n              senderFullName:\r\n                this.selectedChat!.senderFullName ||\r\n                `اللاعب ${this.selectedChat!.senderId}`,\r\n              senderPhoneNumber:\r\n                this.selectedChat!.senderPhoneNumber || 'غير متوفر',\r\n              content: replyContent,\r\n              isRead: true,\r\n              sentAt: new Date().toISOString(),\r\n              isFromAdmin: true,\r\n              messageType: 'admin_reply',\r\n            };\r\n\r\n            // تحديث الرسائل في المحادثة المحددة\r\n            this.selectedChat!.messages.push(newMessage);\r\n            this.selectedChat!.messages.sort(\r\n              (a, b) =>\r\n                new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n            );\r\n\r\n            // تحديث آخر رسالة في قائمة المحادثات\r\n            this.selectedChat!.lastMessage = replyContent;\r\n            this.selectedChat!.lastMessageDate = newMessage.sentAt;\r\n\r\n            // تحديث اسم اللاعب إذا كان غير موجود\r\n            if (!this.selectedChat!.senderFullName) {\r\n              this.selectedChat!.senderFullName = `اللاعب ${\r\n                this.selectedChat!.senderId\r\n              }`;\r\n            }\r\n\r\n            // إعادة ترتيب قائمة المحادثات حسب الأحدث\r\n            this.playerChats.sort(\r\n              (a, b) =>\r\n                new Date(b.lastMessageDate).getTime() -\r\n                new Date(a.lastMessageDate).getTime()\r\n            );\r\n\r\n            // تحديث المحادثة المحددة بعد إعادة الترتيب\r\n            this.selectedChat =\r\n              this.playerChats.find(\r\n                (chat) => chat.senderId === this.selectedPlayerId\r\n              ) || null;\r\n\r\n            this.cdr.detectChanges();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل إرسال الرد',\r\n              'خطأ في الإرسال'\r\n            );\r\n          }\r\n        },\r\n        error: (err: any) => {\r\n          this.toastr.error(\r\n            err.error?.message || err.message || 'حصل خطأ أثناء إرسال الرد',\r\n            'خطأ في الإرسال'\r\n          );\r\n        },\r\n      });\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    if (this.messagesContainer) {\r\n      const container = this.messagesContainer.nativeElement;\r\n      container.scrollTop = container.scrollHeight;\r\n    }\r\n  }\r\n\r\n  trackByPlayerId(index: number, chat: PlayerChat): string {\r\n    return chat.senderId;\r\n  }\r\n\r\n  trackByMessageId(index: number, message: FriendlyMessageDto): number {\r\n    return message.id;\r\n  }\r\n}\r\n","<div class=\"md:container mx-auto\">\n  <!-- Teams Tournament Dashboard -->\n  <div class=\"p-6\">\n    <!-- Header -->\n    <div class=\"mb-6\">\n      <h2 class=\"text-2xl font-bold text-white mb-4\">\n        Teams Tournament Management\n      </h2>\n\n      <!-- Quick Actions -->\n      <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n        <button\n          class=\"bg-green-600 text-white p-4 rounded-lg hover:bg-green-700 transition-all\"\n          (click)=\"openCreateTournamentModal()\"\n        >\n          <h3 class=\"text-lg font-bold\">Create Tournament</h3>\n          <p class=\"text-sm\">Create a new teams tournament</p>\n        </button>\n\n        <button\n          class=\"bg-purple-600 text-white p-4 rounded-lg hover:bg-purple-700 transition-all\"\n          (click)=\"showAddPlayerModal = true\"\n        >\n          <h3 class=\"text-lg font-bold\">Add Player</h3>\n          <p class=\"text-sm\">Add new player to the pool</p>\n        </button>\n\n        <button\n          class=\"bg-blue-600 text-white p-4 rounded-lg hover:bg-blue-700 transition-all\"\n          routerLink=\"/admin/friendlies\"\n        >\n          <h3 class=\"text-lg font-bold\">👥 Teams Tournament</h3>\n          <p class=\"text-sm\">Manage teams tournament</p>\n        </button>\n\n        <div class=\"bg-gray-700 p-4 rounded-lg\">\n          <h3 class=\"text-lg font-bold text-white\">Statistics</h3>\n          <p class=\"text-sm text-gray-300\">\n            Tournaments: {{ tournaments.length }}\n          </p>\n          <p class=\"text-sm text-gray-300\">\n            Available Players: {{ availablePlayers.length }}\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Loading Tournaments -->\n    <div *ngIf=\"isLoadingTournaments\" class=\"flex justify-center py-8\">\n      <div\n        class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n      ></div>\n    </div>\n\n    <!-- Tournaments List -->\n    <div *ngIf=\"!isLoadingTournaments\" class=\"space-y-4\">\n      <h3 class=\"text-xl font-semibold text-white\">All Tournaments</h3>\n\n      <div *ngIf=\"tournaments.length === 0\" class=\"text-center py-8\">\n        <p class=\"text-gray-400\">No tournaments created yet.</p>\n      </div>\n    </div>\n\n    <!-- Tournament Players Section -->\n    <div class=\"mt-8\">\n      <h3 class=\"text-xl font-semibold text-white mb-4\">Tournament Players</h3>\n\n      <div *ngIf=\"isLoadingPlayers\" class=\"flex justify-center py-8\">\n        <div\n          class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n        ></div>\n      </div>\n\n      <!-- Players Grid -->\n      <div\n        *ngIf=\"!isLoadingPlayers && availablePlayers.length > 0\"\n        class=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\"\n      >\n        <div\n          *ngFor=\"let player of availablePlayers\"\n          class=\"bg-gray-700 p-4 rounded-lg cursor-pointer hover:bg-gray-600 transition-all border-2 border-gray-600\"\n          (click)=\"selectPlayer(player)\"\n        >\n          <div class=\"text-center\">\n            <div class=\"text-lg font-bold text-white mb-2\">\n              {{ player.fullName }}\n            </div>\n            <div class=\"text-sm text-gray-300\">\n              Tournaments: {{ player.multiParticipations }}\n            </div>\n            <div class=\"text-sm text-gray-300\">\n              Titles: {{ player.multiTitlesWon }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div\n        *ngIf=\"!isLoadingPlayers && availablePlayers.length === 0\"\n        class=\"text-center py-8\"\n      >\n        <p class=\"text-gray-400\">No players available. Add players first.</p>\n      </div>\n    </div>\n  </div>\n\n  <!-- Create Tournament Modal -->\n  <div\n    *ngIf=\"showCreateTournamentModal\"\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n  >\n    <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Create New Tournament</h2>\n\n      <div class=\"space-y-4\">\n        <div>\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n            >Tournament Name</label\n          >\n          <input\n            type=\"text\"\n            [(ngModel)]=\"createTournamentForm.name\"\n            placeholder=\"Enter tournament name\"\n            class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded placeholder-gray-400\"\n          />\n        </div>\n\n        <div>\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n            >Scoring System</label\n          >\n          <select\n            [(ngModel)]=\"createTournamentForm.systemOfScoring\"\n            class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded\"\n          >\n            <option value=\"Classic\">Classic (Win/Draw/Loss)</option>\n            <option value=\"Points\">Points System</option>\n          </select>\n        </div>\n\n        <div class=\"grid grid-cols-2 gap-4\">\n          <div>\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n              >Teams Count</label\n            >\n            <input\n              type=\"number\"\n              [(ngModel)]=\"createTournamentForm.teamCount\"\n              min=\"2\"\n              max=\"16\"\n              class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded\"\n            />\n          </div>\n          <div>\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n              >Players per Team</label\n            >\n            <input\n              type=\"number\"\n              [(ngModel)]=\"createTournamentForm.playersPerTeam\"\n              min=\"1\"\n              max=\"10\"\n              class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded\"\n            />\n          </div>\n        </div>\n      </div>\n\n      <div class=\"flex justify-end space-x-4 mt-6\">\n        <button\n          (click)=\"closeCreateTournamentModal()\"\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n        >\n          Cancel\n        </button>\n        <button\n          (click)=\"createTournament()\"\n          [disabled]=\"isCreatingTournament || !createTournamentForm.name.trim()\"\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition disabled:opacity-50\"\n        >\n          {{ isCreatingTournament ? \"Creating...\" : \"Create Tournament\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Create Team Modal -->\n  <div\n    *ngIf=\"showCreateTeamModal\"\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n  >\n    <div\n      class=\"bg-gray-800 p-6 rounded-lg max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto\"\n    >\n      <h2 class=\"text-lg font-bold mb-4 text-white\">\n        Create Team for {{ activeTournament?.name }}\n      </h2>\n\n      <div class=\"mb-4\">\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n          >Team Name</label\n        >\n        <input\n          type=\"text\"\n          [(ngModel)]=\"createTeamForm.teamName\"\n          placeholder=\"Enter team name\"\n          class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded placeholder-gray-400\"\n        />\n      </div>\n\n      <div class=\"mb-4\">\n        <label class=\"block text-sm font-medium mb-2 text-gray-300\">\n          Select Players ({{ createTeamForm.playerIds.length }}/{{\n            activeTournament?.playersPerTeam\n          }})\n        </label>\n\n        <!-- Loading Players -->\n        <div *ngIf=\"isLoadingPlayers\" class=\"flex justify-center py-4\">\n          <div\n            class=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"\n          ></div>\n        </div>\n\n        <!-- No Players Message -->\n        <div\n          *ngIf=\"!isLoadingPlayers && availablePlayers.length === 0\"\n          class=\"text-center py-4 text-gray-400\"\n        >\n          No players available. Add players first.\n        </div>\n\n        <!-- Players Grid -->\n        <div\n          *ngIf=\"!isLoadingPlayers && availablePlayers.length > 0\"\n          class=\"grid grid-cols-1 md:grid-cols-2 gap-2 max-h-60 overflow-y-auto\"\n        >\n          <div\n            *ngFor=\"let player of availablePlayers\"\n            (click)=\"togglePlayerSelection(player.playerId)\"\n            class=\"p-3 rounded border cursor-pointer transition-all\"\n            [class.bg-blue-600]=\"isPlayerSelected(player.playerId)\"\n            [class.border-blue-500]=\"isPlayerSelected(player.playerId)\"\n            [class.bg-gray-700]=\"!isPlayerSelected(player.playerId)\"\n            [class.border-gray-600]=\"!isPlayerSelected(player.playerId)\"\n          >\n            <div class=\"text-white font-medium\">{{ player.fullName }}</div>\n            <div class=\"text-xs text-gray-300\">\n              Tournaments: {{ player.multiParticipations }} | Titles:\n              {{ player.multiTitlesWon }}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"flex justify-end space-x-4 mt-6\">\n        <button\n          (click)=\"closeCreateTeamModal()\"\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n        >\n          Cancel\n        </button>\n        <button\n          (click)=\"createTeam()\"\n          [disabled]=\"\n            isCreatingTeam ||\n            !createTeamForm.teamName.trim() ||\n            createTeamForm.playerIds.length !== activeTournament?.playersPerTeam\n          \"\n          class=\"bg-blue-600 px-4 py-2 text-white rounded hover:bg-blue-700 transition disabled:opacity-50\"\n        >\n          {{ isCreatingTeam ? \"Creating...\" : \"Create Team\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Add Player Modal -->\n  <div\n    *ngIf=\"showAddPlayerModal\"\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n  >\n    <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Add New Player</h2>\n\n      <input\n        type=\"text\"\n        [(ngModel)]=\"newPlayerName\"\n        placeholder=\"Enter player name\"\n        class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded placeholder-gray-400\"\n      />\n\n      <div class=\"flex justify-end space-x-4 mt-6\">\n        <button\n          (click)=\"showAddPlayerModal = false\"\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n        >\n          Cancel\n        </button>\n        <button\n          (click)=\"addNewPlayer()\"\n          [disabled]=\"isAddingPlayer || !newPlayerName.trim()\"\n          class=\"bg-purple-600 px-4 py-2 text-white rounded hover:bg-purple-700 transition disabled:opacity-50\"\n        >\n          {{ isAddingPlayer ? \"Adding...\" : \"Add Player\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Record Match Result Modal -->\n  <div\n    *ngIf=\"showRecordResultModal\"\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\n  >\n    <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Record Match Result</h2>\n\n      <div class=\"grid grid-cols-2 gap-4 mb-4\">\n        <div>\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n            >{{ getPlayerName(selectedPlayer1Id) }}\n          </label>\n          <input\n            type=\"number\"\n            [(ngModel)]=\"recordingScore1\"\n            min=\"0\"\n            class=\"w-full px-3 py-2 border border-gray-600 bg-gray-700 text-white rounded\"\n          />\n        </div>\n        <div>\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n            >{{ getPlayerName(selectedPlayer2Id) }}\n          </label>\n          <input\n            type=\"number\"\n            [(ngModel)]=\"recordingScore2\"\n            min=\"0\"\n            class=\"w-full px-3 py-2 border border-gray-600 bg-gray-700 text-white rounded\"\n          />\n        </div>\n      </div>\n\n      <div\n        *ngIf=\"activeTournament?.systemOfScoring === 'Classic'\"\n        class=\"mb-4 text-xs text-gray-400\"\n      >\n        Classic System: Winner will be determined automatically based on scores\n      </div>\n\n      <div class=\"flex justify-end space-x-4\">\n        <button\n          (click)=\"closeRecordResultModal()\"\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n        >\n          Cancel\n        </button>\n        <button\n          (click)=\"recordMatchResult()\"\n          [disabled]=\"\n            isRecordingResult ||\n            recordingScore1 === null ||\n            recordingScore2 === null\n          \"\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition disabled:opacity-50\"\n        >\n          {{ isRecordingResult ? \"Recording...\" : \"Record Result\" }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <!-- Player Matches Modal -->\n  <div\n    *ngIf=\"showPlayerMatchesModal\"\n    class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\n  >\n    <div\n      class=\"bg-gray-800 rounded-lg p-6 w-full max-w-4xl max-h-[90vh] overflow-y-auto\"\n    >\n      <!-- Modal Header -->\n      <div class=\"flex justify-between items-center mb-6\">\n        <h3 class=\"text-2xl font-bold text-white\">\n          Matches for {{ selectedPlayer?.fullName }}\n        </h3>\n        <button\n          (click)=\"closePlayerMatchesModal()\"\n          class=\"text-gray-400 hover:text-white text-2xl font-bold transition-colors\"\n        >\n          ×\n        </button>\n      </div>\n\n      <!-- Loading State -->\n      <div *ngIf=\"isLoadingMatches\" class=\"flex justify-center py-8\">\n        <div\n          class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\n        ></div>\n      </div>\n\n      <!-- Matches List -->\n      <div\n        *ngIf=\"\n          !isLoadingMatches &&\n          getPlayerMatches(selectedPlayer?.playerId || 0).length > 0\n        \"\n        class=\"space-y-4\"\n      >\n        <div\n          *ngFor=\"let match of getPlayerMatches(selectedPlayer?.playerId || 0)\"\n          class=\"bg-gray-700 rounded-lg p-4\"\n        >\n          <div class=\"flex justify-between items-center\">\n            <div class=\"flex-1\">\n              <span class=\"text-white font-semibold\">{{\n                match.player1Name\n              }}</span>\n            </div>\n\n            <div class=\"px-4 text-center\">\n              <div *ngIf=\"match.isCompleted\" class=\"font-bold text-lg\">\n                <span\n                  [class]=\"\n                    (match.score1 || 0) > (match.score2 || 0)\n                      ? 'text-green-400'\n                      : (match.score1 || 0) < (match.score2 || 0)\n                      ? 'text-red-400'\n                      : 'text-yellow-400'\n                  \"\n                >\n                  {{ match.score1 || 0 }}\n                </span>\n                <span class=\"text-white mx-2\">-</span>\n                <span\n                  [class]=\"\n                    (match.score2 || 0) > (match.score1 || 0)\n                      ? 'text-green-400'\n                      : (match.score2 || 0) < (match.score1 || 0)\n                      ? 'text-red-400'\n                      : 'text-yellow-400'\n                  \"\n                >\n                  {{ match.score2 || 0 }}\n                </span>\n              </div>\n              <div *ngIf=\"!match.isCompleted\" class=\"text-gray-400 text-sm\">\n                Pending\n                <button\n                  *ngIf=\"activeTournament?.status === 'Started'\"\n                  (click)=\"openRecordResultModal(match)\"\n                  class=\"ml-2 bg-green-600 hover:bg-green-700 text-white px-2 py-1 rounded text-xs transition-all\"\n                >\n                  Record\n                </button>\n              </div>\n            </div>\n\n            <!-- Undo Button for completed matches -->\n            <div\n              *ngIf=\"\n                match.isCompleted && activeTournament?.status === 'Started'\n              \"\n              class=\"ml-2\"\n            >\n              <button\n                (click)=\"undoMatchResult(match)\"\n                class=\"bg-red-600 hover:bg-red-700 text-white px-2 py-1 rounded text-xs transition-all\"\n              >\n                Undo\n              </button>\n            </div>\n            <div class=\"flex-1 text-right\">\n              <span class=\"text-white font-semibold\">{{\n                match.player2Name\n              }}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- No Matches Message -->\n      <div\n        *ngIf=\"\n          !isLoadingMatches &&\n          getPlayerMatches(selectedPlayer?.playerId || 0).length === 0\n        \"\n        class=\"text-center py-8\"\n      >\n        <p class=\"text-gray-400\">No matches found for this player.</p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PlayersComponent } from './players/players.component';\r\nimport { InboxComponent } from './inbox/inbox.component';\r\nimport { FriendliesComponent } from './friendlies/friendlies.component';\r\nimport { FriendlyInboxComponent } from './friendlies/friendly-inbox/friendly-inbox.component';\r\nimport { TeamsDashboardComponent } from './teams-dashboard/teams-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlayersComponent },\r\n  { path: 'players', component: PlayersComponent },\r\n  { path: 'inbox', component: InboxComponent },\r\n  { path: 'friendlies', component: FriendliesComponent },\r\n  { path: 'friendly-inbox', component: FriendlyInboxComponent },\r\n  { path: 'teams-dashboard', component: TeamsDashboardComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport {\n  MultiTournamentService,\n  CreateTournamentDto,\n  TeamCreateDto,\n  MultiTournamentDto,\n  PlayerDetail,\n  AddPlayerDto,\n  TeamMatchesDto,\n  MatchDetail,\n  ApiResponse,\n} from '../../core/services/multi-tournament.service';\n\n@Component({\n  selector: 'app-teams-dashboard',\n  templateUrl: './teams-dashboard.component.html',\n  styleUrls: ['./teams-dashboard.component.css'],\n})\nexport class TeamsDashboardComponent implements OnInit {\n  // Data\n  tournaments: MultiTournamentDto[] = [];\n  activeTournament: MultiTournamentDto | null = null;\n  availablePlayers: PlayerDetail[] = [];\n  tournamentMatches: TeamMatchesDto[] = [];\n  selectedPlayer: PlayerDetail | null = null;\n\n  // Modals\n  showCreateTournamentModal = false;\n  showCreateTeamModal = false;\n  showAddPlayerModal = false;\n  showRecordResultModal = false;\n  showPlayerMatchesModal = false;\n\n  // Forms\n  createTournamentForm: CreateTournamentDto = {\n    name: '',\n    systemOfScoring: 'Classic',\n    teamCount: 4,\n    playersPerTeam: 3,\n  };\n\n  createTeamForm: TeamCreateDto = {\n    teamName: '',\n    playerIds: [],\n  };\n\n  newPlayerName = '';\n\n  // Match Recording\n  selectedMatchId: number | null = null;\n  selectedPlayer1Id: number | null = null;\n  selectedPlayer2Id: number | null = null;\n  recordingScore1: number | null = null;\n  recordingScore2: number | null = null;\n\n  // Loading States\n  isLoadingTournaments = false;\n  isLoadingPlayers = false;\n  isLoadingMatches = false;\n  isCreatingTournament = false;\n  isCreatingTeam = false;\n  isAddingPlayer = false;\n  isRecordingResult = false;\n\n  constructor(\n    private multiTournamentService: MultiTournamentService,\n    private toastr: ToastrService\n  ) {}\n\n  ngOnInit(): void {\n    this.loadTournaments();\n    this.loadAvailablePlayers();\n  }\n\n  // Tournament Management\n  loadTournaments(): void {\n    this.isLoadingTournaments = true;\n\n    this.multiTournamentService.getAllTournaments().subscribe({\n      next: (response: ApiResponse<MultiTournamentDto[]>) => {\n        if (response.success && response.data) {\n          this.tournaments = response.data;\n          this.activeTournament =\n            this.tournaments.find((t) => t.isActive) || null;\n\n          if (this.activeTournament) {\n            this.loadTournamentMatches();\n          }\n        }\n        this.isLoadingTournaments = false;\n      },\n      error: (error) => {\n        console.error('Error loading tournaments:', error);\n        this.toastr.error('خطأ في تحميل البطولات', 'خطأ');\n        this.isLoadingTournaments = false;\n      },\n    });\n  }\n\n  createTournament(): void {\n    if (!this.createTournamentForm.name.trim()) {\n      this.toastr.warning('يرجى إدخال اسم البطولة', 'تحذير');\n      return;\n    }\n\n    this.isCreatingTournament = true;\n\n    this.multiTournamentService\n      .createTournament(this.createTournamentForm)\n      .subscribe({\n        next: (response: ApiResponse) => {\n          if (response.success) {\n            this.toastr.success('تم إنشاء البطولة بنجاح', 'نجاح');\n            this.loadTournaments();\n            this.closeCreateTournamentModal();\n          } else {\n            this.toastr.error(\n              response.message || 'فشل في إنشاء البطولة',\n              'خطأ'\n            );\n          }\n          this.isCreatingTournament = false;\n        },\n        error: (error) => {\n          console.error('Error creating tournament:', error);\n          this.toastr.error('خطأ في إنشاء البطولة', 'خطأ');\n          this.isCreatingTournament = false;\n        },\n      });\n  }\n\n  // Modal Controls\n  openCreateTournamentModal(): void {\n    this.createTournamentForm = {\n      name: '',\n      systemOfScoring: 'Classic',\n      teamCount: 4,\n      playersPerTeam: 3,\n    };\n    this.showCreateTournamentModal = true;\n  }\n\n  closeCreateTournamentModal(): void {\n    this.showCreateTournamentModal = false;\n  }\n\n  // Helper Methods\n  getRemainingTeams(tournament: MultiTournamentDto): number {\n    return tournament.teamCount - tournament.teams.length;\n  }\n\n  canStartTournament(tournament: MultiTournamentDto): boolean {\n    return (\n      tournament.status === 'Created' &&\n      tournament.teams.length === tournament.teamCount\n    );\n  }\n\n  getStatusColor(status: string): string {\n    switch (status) {\n      case 'Created':\n        return 'text-yellow-400';\n      case 'Started':\n        return 'text-green-400';\n      case 'Finished':\n        return 'text-blue-400';\n      default:\n        return 'text-gray-400';\n    }\n  }\n\n  // Player Management\n  loadAvailablePlayers(): void {\n    this.isLoadingPlayers = true;\n\n    this.multiTournamentService.getAllPlayers().subscribe({\n      next: (response: ApiResponse<PlayerDetail[]>) => {\n        if (response.success && response.data) {\n          this.availablePlayers = response.data.filter((p) => p.isActive);\n        }\n        this.isLoadingPlayers = false;\n      },\n      error: (error) => {\n        console.error('Error loading players:', error);\n        this.toastr.error('خطأ في تحميل اللاعبين', 'خطأ');\n        this.isLoadingPlayers = false;\n      },\n    });\n  }\n\n  // Match Management\n  loadTournamentMatches(): void {\n    if (!this.activeTournament) return;\n\n    this.isLoadingMatches = true;\n\n    this.multiTournamentService.getActiveTournamentMatches().subscribe({\n      next: (response: ApiResponse<TeamMatchesDto[]>) => {\n        if (response.success && response.data) {\n          this.tournamentMatches = response.data;\n        }\n        this.isLoadingMatches = false;\n      },\n      error: (error) => {\n        console.error('Error loading tournament matches:', error);\n        this.toastr.error('خطأ في تحميل المباريات', 'خطأ');\n        this.isLoadingMatches = false;\n      },\n    });\n  }\n\n  // Start Tournament\n  startTournament(tournament: MultiTournamentDto): void {\n    if (confirm(`هل أنت متأكد من بدء البطولة \"${tournament.name}\"؟`)) {\n      this.multiTournamentService\n        .startTournament(tournament.multiTournamentId)\n        .subscribe({\n          next: (response: ApiResponse) => {\n            if (response.success) {\n              this.toastr.success('تم بدء البطولة بنجاح', 'نجاح');\n              this.loadTournaments();\n            } else {\n              this.toastr.error(\n                response.message || 'فشل في بدء البطولة',\n                'خطأ'\n              );\n            }\n          },\n          error: (error) => {\n            console.error('Error starting tournament:', error);\n            this.toastr.error('خطأ في بدء البطولة', 'خطأ');\n          },\n        });\n    }\n  }\n\n  // Finish Tournament\n  finishTournament(tournament: MultiTournamentDto): void {\n    if (confirm(`هل أنت متأكد من إنهاء البطولة \"${tournament.name}\"؟`)) {\n      this.multiTournamentService\n        .finishTournament(tournament.multiTournamentId)\n        .subscribe({\n          next: (response: ApiResponse) => {\n            if (response.success) {\n              this.toastr.success('تم إنهاء البطولة بنجاح', 'نجاح');\n              this.loadTournaments();\n            } else {\n              this.toastr.error(\n                response.message || 'فشل في إنهاء البطولة',\n                'خطأ'\n              );\n            }\n          },\n          error: (error) => {\n            console.error('Error finishing tournament:', error);\n            this.toastr.error('خطأ في إنهاء البطولة', 'خطأ');\n          },\n        });\n    }\n  }\n\n  // Delete Tournament\n  deleteTournament(tournament: MultiTournamentDto): void {\n    if (\n      confirm(\n        `هل أنت متأكد من حذف البطولة \"${tournament.name}\"؟ سيتم حذف كل البيانات المرتبطة بها.`\n      )\n    ) {\n      this.multiTournamentService\n        .deleteTournament(tournament.multiTournamentId)\n        .subscribe({\n          next: (response: ApiResponse) => {\n            if (response.success) {\n              this.toastr.success('تم حذف البطولة بنجاح', 'نجاح');\n              this.loadTournaments();\n            } else {\n              this.toastr.error(\n                response.message || 'فشل في حذف البطولة',\n                'خطأ'\n              );\n            }\n          },\n          error: (error) => {\n            console.error('Error deleting tournament:', error);\n            this.toastr.error('خطأ في حذف البطولة', 'خطأ');\n          },\n        });\n    }\n  }\n\n  // Create Team\n  createTeam(): void {\n    if (!this.createTeamForm.teamName.trim()) {\n      this.toastr.warning('يرجى إدخال اسم الفريق', 'تحذير');\n      return;\n    }\n\n    if (\n      this.createTeamForm.playerIds.length !==\n      (this.activeTournament?.playersPerTeam || 3)\n    ) {\n      this.toastr.warning(\n        `يجب اختيار ${this.activeTournament?.playersPerTeam} لاعبين بالضبط`,\n        'تحذير'\n      );\n      return;\n    }\n\n    if (!this.activeTournament) return;\n\n    this.isCreatingTeam = true;\n\n    this.multiTournamentService\n      .createTeam(this.activeTournament.multiTournamentId, this.createTeamForm)\n      .subscribe({\n        next: (response: ApiResponse) => {\n          if (response.success) {\n            this.toastr.success('تم إنشاء الفريق بنجاح', 'نجاح');\n            this.loadTournaments();\n            this.closeCreateTeamModal();\n          } else {\n            this.toastr.error(response.message || 'فشل في إنشاء الفريق', 'خطأ');\n          }\n          this.isCreatingTeam = false;\n        },\n        error: (error) => {\n          console.error('Error creating team:', error);\n          this.toastr.error('خطأ في إنشاء الفريق', 'خطأ');\n          this.isCreatingTeam = false;\n        },\n      });\n  }\n\n  // Add Player\n  addNewPlayer(): void {\n    if (!this.newPlayerName.trim()) {\n      this.toastr.warning('يرجى إدخال اسم اللاعب', 'تحذير');\n      return;\n    }\n\n    this.isAddingPlayer = true;\n\n    this.multiTournamentService\n      .addNewPlayer({ fullName: this.newPlayerName.trim() })\n      .subscribe({\n        next: (response: ApiResponse<PlayerDetail>) => {\n          if (response.success) {\n            this.toastr.success(\n              `تم إضافة اللاعب ${this.newPlayerName} بنجاح`,\n              'نجاح'\n            );\n            this.loadAvailablePlayers();\n            this.showAddPlayerModal = false;\n            this.newPlayerName = '';\n          } else {\n            this.toastr.error(response.message || 'فشل في إضافة اللاعب', 'خطأ');\n          }\n          this.isAddingPlayer = false;\n        },\n        error: (error) => {\n          console.error('Error adding player:', error);\n          this.toastr.error('خطأ في إضافة اللاعب', 'خطأ');\n          this.isAddingPlayer = false;\n        },\n      });\n  }\n\n  // Team Management\n  togglePlayerSelection(playerId: number): void {\n    const index = this.createTeamForm.playerIds.indexOf(playerId);\n    if (index === -1) {\n      if (\n        this.createTeamForm.playerIds.length <\n        (this.activeTournament?.playersPerTeam || 3)\n      ) {\n        this.createTeamForm.playerIds.push(playerId);\n      } else {\n        this.toastr.warning(\n          `يمكن اختيار ${this.activeTournament?.playersPerTeam} لاعبين فقط`,\n          'تحذير'\n        );\n      }\n    } else {\n      this.createTeamForm.playerIds.splice(index, 1);\n    }\n  }\n\n  isPlayerSelected(playerId: number): boolean {\n    return this.createTeamForm.playerIds.includes(playerId);\n  }\n\n  // Match Recording\n  recordMatchResult(): void {\n    if (!this.selectedMatchId || !this.activeTournament) return;\n\n    let requestBody: any = {};\n\n    if (this.activeTournament.systemOfScoring === 'Classic') {\n      // Classic system: determine winner automatically based on scores\n      if (this.recordingScore1! > this.recordingScore2!) {\n        requestBody.winnerId = this.selectedPlayer1Id;\n      } else if (this.recordingScore2! > this.recordingScore1!) {\n        requestBody.winnerId = this.selectedPlayer2Id;\n      } else {\n        requestBody.winnerId = null; // Draw\n      }\n    } else {\n      // Points system: send scores directly\n      requestBody.score1 = this.recordingScore1;\n      requestBody.score2 = this.recordingScore2;\n    }\n\n    this.isRecordingResult = true;\n\n    this.multiTournamentService\n      .recordMatchResult(this.selectedMatchId, requestBody)\n      .subscribe({\n        next: (response: ApiResponse) => {\n          if (response.success) {\n            this.toastr.success('تم تسجيل نتيجة المباراة بنجاح', 'نجاح');\n            this.loadTournaments();\n            this.loadTournamentMatches();\n            this.closeRecordResultModal();\n          } else {\n            this.toastr.error(\n              response.message || 'فشل في تسجيل النتيجة',\n              'خطأ'\n            );\n          }\n          this.isRecordingResult = false;\n        },\n        error: (error) => {\n          console.error('Error recording match result:', error);\n          this.toastr.error('خطأ في تسجيل نتيجة المباراة', 'خطأ');\n          this.isRecordingResult = false;\n        },\n      });\n  }\n\n  undoMatchResult(match: MatchDetail): void {\n    if (confirm('هل أنت متأكد من إلغاء نتيجة هذه المباراة؟')) {\n      this.multiTournamentService\n        .undoMatchResult(match.multiMatchId)\n        .subscribe({\n          next: (response: ApiResponse) => {\n            if (response.success) {\n              this.toastr.success('تم إلغاء نتيجة المباراة بنجاح', 'نجاح');\n              this.loadTournaments();\n              this.loadTournamentMatches();\n            } else {\n              this.toastr.error(\n                response.message || 'فشل في إلغاء النتيجة',\n                'خطأ'\n              );\n            }\n          },\n          error: (error) => {\n            console.error('Error undoing match result:', error);\n            this.toastr.error('خطأ في إلغاء نتيجة المباراة', 'خطأ');\n          },\n        });\n    }\n  }\n\n  // Modal Controls\n  openCreateTeamModal(tournament: MultiTournamentDto): void {\n    this.activeTournament = tournament;\n    this.createTeamForm = {\n      teamName: '',\n      playerIds: [],\n    };\n    this.showCreateTeamModal = true;\n  }\n\n  closeCreateTeamModal(): void {\n    this.showCreateTeamModal = false;\n    this.activeTournament = null;\n  }\n\n  closeRecordResultModal(): void {\n    this.showRecordResultModal = false;\n    this.selectedMatchId = null;\n    this.selectedPlayer1Id = null;\n    this.selectedPlayer2Id = null;\n    this.recordingScore1 = null;\n    this.recordingScore2 = null;\n  }\n\n  getTrophyIcon(position: number): string {\n    switch (position) {\n      case 1:\n        return '🥇';\n      case 2:\n        return '🥈';\n      case 3:\n        return '🥉';\n      default:\n        return '';\n    }\n  }\n\n  canFinishTournament(tournament: MultiTournamentDto): boolean {\n    return tournament.status === 'Started';\n  }\n\n  canDeleteTournament(tournament: MultiTournamentDto): boolean {\n    return tournament.status === 'Created';\n  }\n\n  openRecordResultModal(match: MatchDetail): void {\n    this.selectedMatchId = match.multiMatchId;\n    this.selectedPlayer1Id = match.player1Id;\n    this.selectedPlayer2Id = match.player2Id;\n    this.recordingScore1 = null;\n    this.recordingScore2 = null;\n    this.showRecordResultModal = true;\n    // Close player matches modal when opening record result modal\n    this.showPlayerMatchesModal = false;\n  }\n\n  // Close Player Matches Modal\n  closePlayerMatchesModal(): void {\n    this.showPlayerMatchesModal = false;\n    this.selectedPlayer = null;\n  }\n\n  // Player Selection\n  selectPlayer(player: PlayerDetail): void {\n    this.selectedPlayer = player;\n    this.showPlayerMatchesModal = true;\n    this.loadTournamentMatches();\n  }\n\n  // Get Player Matches\n  getPlayerMatches(playerId: number): MatchDetail[] {\n    if (!this.tournamentMatches || this.tournamentMatches.length === 0) {\n      return [];\n    }\n\n    const playerMatches: MatchDetail[] = [];\n\n    this.tournamentMatches.forEach((fixture) => {\n      fixture.matches.forEach((match) => {\n        if (match.player1Id === playerId || match.player2Id === playerId) {\n          playerMatches.push(match);\n        }\n      });\n    });\n\n    return playerMatches;\n  }\n\n  // Get Player Name by ID\n  getPlayerName(playerId: number | null): string {\n    if (!playerId) return 'Unknown Player';\n\n    const player = this.availablePlayers.find((p) => p.playerId === playerId);\n    return player ? player.fullName : 'Unknown Player';\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { PlayersComponent } from './players/players.component';\r\nimport { InboxComponent } from './inbox/inbox.component';\r\nimport { FriendliesComponent } from './friendlies/friendlies.component';\r\nimport { FriendlyInboxComponent } from './friendlies/friendly-inbox/friendly-inbox.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FindPlayerPipe } from '../pipes/find-player.pipe';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { UtcToLocalPipe } from '../pipes/utcToLocal.pipe';\r\nimport { PlayerModule } from '../player/player.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { TeamsDashboardComponent } from './teams-dashboard/teams-dashboard.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlayersComponent,\r\n    InboxComponent,\r\n    FriendliesComponent,\r\n    FriendlyInboxComponent,\r\n    FindPlayerPipe,\r\n    UtcToLocalPipe,\r\n    TeamsDashboardComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    PlayerModule,\r\n    SharedModule,\r\n  ],\r\n})\r\nexport class AdminModule {}\r\n"],"x_google_ignoreList":[0,2]}