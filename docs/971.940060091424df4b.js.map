{"version":3,"file":"971.940060091424df4b.js","mappings":"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","names":["i0","player_r16","_r18","$implicit","ctx_r17","selectPlayer","$event","ctx_r19","confirmDelete","ctx_r15","selectedPlayer","playerId","fullName","PlayersComponent_ul_6_li_1_Template","ctx_r0","players","_r21","ctx_r20","openModal","match_r23","_r26","ctx_r25","updateMatch","matchId","player1Id","ctx_r27","player2Id","ctx_r28","ctx_r29","resetMatch","i_r24","player1Name","player2Name","score1","score2","isCompleted","_c0","ctx_r22","loadingMatches","PlayersComponent_div_9_tr_15_Template","ctx_r2","displayMatches","ctx_r3","totalMessagesLeft","_r31","ctx_r30","openStartLeagueModal","_r33","ctx_r32","showEndLeagueModal","_r35","ctx_r34","onTournamentStageButtonClick","ctx_r6","tournamentStageButtonText","PlayersComponent_div_23_span_10_Template","PlayersComponent_div_23_span_11_Template","PlayersComponent_div_23_span_12_Template","PlayersComponent_div_23_span_18_Template","PlayersComponent_div_23_span_19_Template","ctx_r7","leagueData","description","typeOfLeague","getLeagueTypeText","systemOfLeague","undefined","getSystemTypeText","createdOn","name","league_r41","_r44","ctx_r43","openDeleteLeagueModal","leagueId","_c1","i_r42","leagueName","isFinished","ctx_r8","getLeagueTypeTextForTable","leagueType","getSystemTypeTextForTable","getWinnerForLeague","_r46","ctx_r45","closeDeleteLeagueModal","ctx_r47","deleteConfirmedLeague","ctx_r9","selectedLeagueToDelete","_r49","ctx_r48","showDeleteModal","ctx_r50","deleteConfirmedPlayer","ctx_r10","selectedPlayerToDelete","_r52","ctx_r51","newPlayerName","ctx_r53","closeModal","ctx_r54","addPlayer","ctx_r11","_r57","ctx_r56","newLeague","roundsPerMatch","ctx_r55","_r59","ctx_r58","ctx_r60","ctx_r61","ctx_r62","PlayersComponent_div_66_div_30_Template","ctx_r63","closeStartLeagueModal","ctx_r64","startLeague","ctx_r12","_r66","ctx_r65","ctx_r67","resetTournament","id","_r75","note_r69","ctx_r73","toggleHideNote","_r78","ctx_r76","_r81","ctx_r79","toggleDeleteNote","PlayersComponent_div_68_div_15_div_1_button_5_Template","PlayersComponent_div_68_div_15_div_1_button_6_Template","content","isHidden","PlayersComponent_div_68_div_15_div_1_Template","isDeleted","_r84","ctx_r83","newNote","ctx_r85","sendNote","PlayersComponent_div_68_div_15_Template","ctx_r86","closeNoteModal","ctx_r14","notes","PlayersComponent","constructor","playerService","matchService","toastr","leagueService","noteService","adminDashboardService","this","playerMatches","showModal","isSidebarOpen","showNoteModal","showDeleteLeagueModal","showStartLeagueModal","totalPlayers","totalMatches","totalMatchesLeft","totalMessages","leagues","currentMatches","showTournamentStageButton","tournamentStageButtonAction","requestQueue","isProcessingQueue","showResetModal","ngOnInit","loadEssentialData","ngOnDestroy","getEssentialData","subscribe","next","data","matches","currentLeague","allLeagues","reverse","stats","updateTournamentStageButton","error","err","toggleSidebar","player","loadMatches","getAdminMatches","filter","m","sort","a","b","nameA","toLowerCase","nameB","localeCompare","map","match","forEach","addToQueue","request","push","processQueue","_this","_asyncToGenerator","length","shift","winnerId","Promise","resolve","reject","response","success","message","invalidateCache","deletePlayer","event","stopPropagation","warning","trim","resetLeague","DeleteLeague","find","l","res","note","toggleMarHide","noteId","DeleteNote","openNoteModal","LeagueType","Groups","startGroupStage","groupMatches","stage","TournamentStage","GroupStage","tournamentStage","quarterMatches","QuarterFinals","semiMatches","SemiFinals","finalMatches","Final","allGroupMatchesCompleted","every","allQuarterMatchesCompleted","allSemiMatchesCompleted","startQuarterStage","startSemiFinalStage","startFinalStage","createGroupsAndMatches","startKnockoutStage","startSemiFinals","startFinal","type","Single","Multi","system","SystemOfLeague","Points","Classic","systemType","league","String","knockoutMatches","finalMatch","i1","i2","i3","i4","i5","i6","selectors","decls","vars","consts","template","rf","ctx","PlayersComponent_ul_6_Template","PlayersComponent_button_7_Template","PlayersComponent_div_9_Template","PlayersComponent_div_17_Template","PlayersComponent_button_18_Template","PlayersComponent_button_19_Template","PlayersComponent_button_20_Template","PlayersComponent_div_23_Template","PlayersComponent_tr_62_Template","PlayersComponent_div_63_Template","PlayersComponent_div_64_Template","PlayersComponent_div_65_Template","PlayersComponent_div_66_Template","PlayersComponent_div_67_Template","PlayersComponent_div_68_Template","_c2","chat_r6","unreadCount","_r10","openChat","senderId","InboxComponent_div_6_div_1_span_6_Template","senderFullName","lastMessage","InboxComponent_div_6_div_1_Template","ctx_r1","playerChats","trackByPlayerId","message_r13","isFromAdmin","sentAt","_r15","closeChat","InboxComponent_div_8_div_12_Template","ctx_r16","sendReply","replyMessages","selectedChat","messages","ctx_r18","navbarHeight","_c3","senderPhoneNumber","trackByMessageId","_c4","InboxComponent","messageService","cdr","selectedPlayerId","loadAdminMessages","updateStatusSubscription","unsubscribe","refreshSubscription","loadFromServer","loadFromCache","getSecondaryData","groupedMessages","groupMessagesBySender","Date","lastMessageDate","getTime","refreshMessages","getAdminMessages","ngAfterViewChecked","messagesContainer","scrollToBottom","loadMessages","getMessages","processMessages","detectChanges","chatMap","msg","isRead","Object","values","chat","lastMsg","toggleMarkMessage","replyContent","sendAdminReply","newMessage","Math","random","toISOString","container","nativeElement","scrollTop","scrollHeight","index","viewQuery","InboxComponent_div_5_Template","InboxComponent_div_6_Template","InboxComponent_div_8_Template","InboxComponent_ng_template_9_Template","_c5","_c6","_r3","player_r7","_r9","openRecordMatchModal","FriendliesComponent_ul_6_li_1_Template","_r13","totalUnreadFriendlyMessages","player_r19","match_r20","_r22","ctx_r21","editMatch","ctx_r23","deleteMatchFromList","playedOn","getPlayerName","player1Score","player2Score","i_r26","_r28","changePage","ctx_r24","currentPage","_r30","FriendliesComponent_div_9_div_70_span_4_Template","ctx_r31","totalPages","FriendliesComponent_div_9_div_1_Template","FriendliesComponent_div_9_div_9_Template","ctx_r35","ctx_r36","filterForm","dateFilter","ctx_r37","onFilterChange","ctx_r38","ctx_r39","FriendliesComponent_div_9_option_50_Template","ctx_r40","clearFilters","FriendliesComponent_div_9_tr_69_Template","FriendliesComponent_div_9_div_70_Template","DateFilter","AllTime","Today","Last3Days","LastWeek","LastMonth","getAllActivePlayers","getPaginatedMatches","itemsPerPage","min","allMatches","_r42","ctx_r41","_r45","ctx_r44","friendlyPlayerName","ctx_r46","ctx_r4","player_r53","_r55","matchForm","FriendliesComponent_div_12_div_4_option_6_Template","opponent_r57","FriendliesComponent_div_12_div_5_option_6_Template","ctx_r49","getOpponentsForPlayer","selectedPlayerForMatch","FriendliesComponent_div_12_div_4_Template","FriendliesComponent_div_12_div_5_Template","FriendliesComponent_div_12_div_6_Template","FriendliesComponent_div_12_div_7_Template","_r61","validateScore","closeRecordMatchModal","ctx_r66","recordNewMatch","ctx_r5","isRecordingMatch","FriendliesComponent","friendlyMatchService","friendlyMessageService","activeTab","showRecordMatchModal","opponentIds","loadPlayers","loadAllMatches","loadUnreadFriendlyMessagesCount","getAllMessages","calculateUnreadCount","console","getAllFriendlyPlayers","calculateStatistics","loadPlayerMatches","getAllFriendlyMatches","playerName","p","addFriendlyPlayerAsync","refreshFriendlyPlayers","deleteFriendlyPlayerAsync","getActivePlayersCount","isActive","getRecentMatches","slice","matchData","recordFriendlyMatchAsync","player1","player2","refreshFriendlyMatches","ceil","loadFilteredMatchesFromCache","filteredMatches","now","cutoffDate","getFullYear","getMonth","getDate","selectedPlayerName","reorderMatchesForSelectedPlayer","opponentNames","includes","loadFilteredMatches","page","pageSize","getFilteredMatches","result","totalCount","startIndex","updateFriendlyMatchAsync","confirm","deleteFriendlyMatchAsync","FriendliesComponent_ul_6_Template","FriendliesComponent_button_7_Template","FriendliesComponent_div_9_Template","FriendliesComponent_div_10_Template","FriendliesComponent_div_11_Template","FriendliesComponent_div_12_Template","FriendlyInboxComponent_div_6_div_1_span_6_Template","FriendlyInboxComponent_div_6_div_1_Template","FriendlyInboxComponent_div_8_div_12_Template","FriendlyInboxComponent","loadFriendlyMessages","unreadMessages","info","parsedId","parseInt","isNaN","playerFullName","markMessageAsRead","messageType","FriendlyInboxComponent_div_5_Template","FriendlyInboxComponent_div_6_Template","FriendlyInboxComponent_div_8_Template","FriendlyInboxComponent_ng_template_9_Template","activeTournament","_r24","tournament_r15","openCreateTeamModal","getRemainingTeams","ctx_r26","startTournament","finishTournament","_r34","deleteTournament","playerName_r38","TeamsDashboardComponent_div_29_div_4_div_1_div_21_div_4_span_4_Template","team_r36","teamName","getTeamPlayersNames","TeamsDashboardComponent_div_29_div_4_div_1_div_21_div_4_Template","teams","TeamsDashboardComponent_div_29_div_4_div_1_button_17_Template","TeamsDashboardComponent_div_29_div_4_div_1_button_18_Template","TeamsDashboardComponent_div_29_div_4_div_1_button_19_Template","TeamsDashboardComponent_div_29_div_4_div_1_button_20_Template","TeamsDashboardComponent_div_29_div_4_div_1_div_21_Template","TeamsDashboardComponent_div_29_div_4_div_1_div_22_Template","getStatusColor","status","teamCount","playersPerTeam","systemOfScoring","canStartTournament","canFinishTournament","canDeleteTournament","TeamsDashboardComponent_div_29_div_4_div_1_Template","ctx_r13","tournaments","TeamsDashboardComponent_div_29_div_3_Template","TeamsDashboardComponent_div_29_div_4_Template","player_r41","_r43","ctx_r42","TeamsDashboardComponent_div_40_div_1_Template","filteredPlayers","playerSearchTerm","TeamsDashboardComponent_div_41_p_1_Template","TeamsDashboardComponent_div_41_p_2_Template","_r47","closeCreateTournamentModal","createTournamentForm","ctx_r52","createTournament","isCreatingTournament","player_r60","_r63","togglePlayerSelection","TeamsDashboardComponent_div_43_div_15_div_1_div_5_Template","ctx_r59","isPlayerSelected","multiParticipations","multiTitlesWon","TeamsDashboardComponent_div_43_div_15_div_1_Template","availablePlayers","_r65","closeCreateTeamModal","ctx_r68","createTeamForm","TeamsDashboardComponent_div_43_div_13_Template","TeamsDashboardComponent_div_43_div_14_Template","TeamsDashboardComponent_div_43_div_15_Template","ctx_r69","ctx_r70","createTeam","playerIds","isLoadingPlayers","isCreatingTeam","_r72","ctx_r71","showAddPlayerModal","ctx_r74","ctx_r75","ctx_r77","addNewPlayer","isAddingPlayer","_r80","closeRecordResultModal","ctx_r82","recordingScore1","ctx_r84","recordingScore2","TeamsDashboardComponent_div_45_div_15_Template","recordMatchResult","selectedPlayer1Id","selectedPlayer2Id","isRecordingResult","match_r95","_r103","ctx_r101","openRecordResultModal","TeamsDashboardComponent_div_46_div_15_div_1_div_7_button_2_Template","ctx_r97","_r106","ctx_r104","undoMatchResult","TeamsDashboardComponent_div_46_div_15_div_1_div_6_Template","TeamsDashboardComponent_div_46_div_15_div_1_div_7_Template","TeamsDashboardComponent_div_46_div_15_div_1_div_8_Template","ctx_r94","TeamsDashboardComponent_div_46_div_15_div_1_Template","ctx_r88","filteredPlayerMatches","ctx_r107","opponentSearchTerm","TeamsDashboardComponent_div_46_div_16_p_1_Template","TeamsDashboardComponent_div_46_div_16_p_2_Template","ctx_r89","_r110","ctx_r109","closeConfirmStartTournamentModal","ctx_r111","confirmStartTournament","ctx_r90","tournamentToConfirm","_r113","ctx_r112","closeConfirmFinishTournamentModal","ctx_r114","confirmFinishTournament","ctx_r91","_r116","ctx_r115","closeConfirmDeleteTournamentModal","ctx_r117","confirmDeleteTournament","ctx_r92","_r119","ctx_r118","closeConfirmUndoMatchModal","ctx_r120","confirmUndoMatchResult","ctx_r93","matchToUndo","_r122","ctx_r121","closePlayerMatchesModal","ctx_r124","ctx_r125","ctx_r126","filterPlayerMatches","TeamsDashboardComponent_div_46_div_14_Template","TeamsDashboardComponent_div_46_div_15_Template","TeamsDashboardComponent_div_46_div_16_Template","TeamsDashboardComponent_div_46_div_17_Template","TeamsDashboardComponent_div_46_div_18_Template","TeamsDashboardComponent_div_46_div_19_Template","TeamsDashboardComponent_div_46_div_20_Template","isLoadingMatches","showConfirmStartTournamentModal","showConfirmFinishTournamentModal","showConfirmDeleteTournamentModal","showConfirmUndoMatchModal","routes","path","component","title","TeamsDashboardComponent","multiTournamentService","tournamentMatches","showCreateTournamentModal","showCreateTeamModal","showRecordResultModal","showPlayerMatchesModal","selectedMatchId","isLoadingTournaments","loadTournaments","loadAvailablePlayers","getAllTournaments","t","loadTournamentMatches","openCreateTournamentModal","tournament","getAllPlayers","getActiveTournamentMatches","getPlayerMatches","openConfirmStartTournamentModal","multiTournamentId","openConfirmFinishTournamentModal","openConfirmDeleteTournamentModal","indexOf","splice","parseFloat","requestBody","openConfirmUndoMatchModal","multiMatchId","getTrophyIcon","position","fixture","team","filterPlayers","searchTerm","searchLower","TeamsDashboardComponent_p_26_Template","TeamsDashboardComponent_p_27_Template","TeamsDashboardComponent_div_28_Template","TeamsDashboardComponent_div_29_Template","TeamsDashboardComponent_div_39_Template","TeamsDashboardComponent_div_40_Template","TeamsDashboardComponent_div_41_Template","TeamsDashboardComponent_div_42_Template","TeamsDashboardComponent_div_43_Template","TeamsDashboardComponent_div_44_Template","TeamsDashboardComponent_div_45_Template","TeamsDashboardComponent_div_46_Template","AdminRoutingModule","RouterModule","forChild","AdminModule","CommonModule","FormsModule","HttpClientModule","PlayerModule","SharedModule"],"sourceRoot":"webpack:///","sources":["./src/app/admin/players/players.component.html","./src/app/admin/players/players.component.ts","./src/app/admin/inbox/inbox.component.html","./src/app/admin/inbox/inbox.component.ts","./src/app/admin/friendlies/friendlies.component.html","./src/app/admin/friendlies/friendlies.component.ts","./src/app/admin/friendlies/friendly-inbox/friendly-inbox.component.html","./src/app/admin/friendlies/friendly-inbox/friendly-inbox.component.ts","./src/app/admin/teams-dashboard/teams-dashboard.component.html","./src/app/admin/admin-routing.module.ts","./src/app/admin/teams-dashboard/teams-dashboard.component.ts","./src/app/admin/admin.module.ts"],"sourcesContent":["<!-- Admin Update Status Component -->\r\n\r\n<div class=\"block sm:flex transition-all duration-600\">\r\n  <!-- Sidebar -->\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white transition-all duration-600\"\r\n    [ngClass]=\"{\r\n      'w-64 p-4 sm:min-h-screen': isSidebarOpen,\r\n      'w-0 p-0': !isSidebarOpen\r\n    }\"\r\n  >\r\n    <h2\r\n      class=\"text-lg font-bold mb-4 flex justify-between overflow-hidden text-white\"\r\n    >\r\n      Players\r\n      <button (click)=\"toggleSidebar()\" class=\"text-gray-300 text-3xl\">\r\n        ×\r\n      </button>\r\n    </h2>\r\n    <ul *ngIf=\"isSidebarOpen\">\r\n      <li\r\n        *ngFor=\"let player of players\"\r\n        class=\"flex items-center justify-between p-2 cursor-pointer rounded-md hover:bg-gray-700\"\r\n        [class.bg-blue-600]=\"selectedPlayer?.playerId === player.playerId\"\r\n        (click)=\"selectPlayer(player)\"\r\n      >\r\n        <span class=\"text-white\">{{ player.fullName }}</span>\r\n        <button\r\n          (click)=\"confirmDelete(player, $event)\"\r\n          class=\"bg-red-600 px-2 py-1 text-sm rounded text-white hover:bg-red-700 transition\"\r\n        >\r\n          X\r\n        </button>\r\n      </li>\r\n    </ul>\r\n    <button\r\n      *ngIf=\"isSidebarOpen\"\r\n      class=\"mt-4 w-full bg-green-600 p-2 rounded text-white hover:bg-green-700 transition\"\r\n      (click)=\"openModal()\"\r\n    >\r\n      Add Player\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Main Content -->\r\n  <div\r\n    class=\"sm:flex-1 sm:p-2 transition-all duration-600 sm:container sm:mx-auto\"\r\n  >\r\n    <div *ngIf=\"selectedPlayer\" class=\"sm:w-4/6 mx-auto\">\r\n      <h2 class=\"text-2xl font-bold mb-4 text-center text-white\">\r\n        Matches for {{ selectedPlayer.fullName }}\r\n      </h2>\r\n\r\n      <table class=\"w-full border-collapse border border-gray-600 text-center\">\r\n        <thead>\r\n          <tr class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white\">\r\n            <th class=\"border border-gray-600 p-2\">Player 1</th>\r\n            <th class=\"border border-gray-600 p-2\">Player 2</th>\r\n            <th class=\"border border-gray-600 p-2\">Result</th>\r\n            <th class=\"border border-gray-600 p-2\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let match of displayMatches; let i = index\"\r\n            class=\"border border-gray-600\"\r\n            [ngClass]=\"i % 2 === 0 ? 'bg-gray-900' : 'bg-gray-950'\"\r\n          >\r\n            <td class=\"p-2 font-bold text-white\">{{ match.player1Name }}</td>\r\n            <td class=\"p-2 font-bold text-white\">{{ match.player2Name }}</td>\r\n            <td class=\"p-2 font-bold text-white\">\r\n              {{ match.score1 }} - {{ match.score2 }}\r\n            </td>\r\n            <td class=\"p-2\">\r\n              <button\r\n                class=\"bg-blue-600 px-2 py-1 rounded text-white hover:bg-blue-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, match.player1Id)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Win P1\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-blue-600 px-2 py-1 rounded text-white mx-1 hover:bg-blue-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, match.player2Id)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Win P2\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-yellow-600 px-2 py-1 rounded text-white hover:bg-yellow-700 transition-all\"\r\n                (click)=\"updateMatch(match.matchId, null)\"\r\n                [disabled]=\"match.isCompleted\"\r\n                [ngClass]=\"{\r\n                  'opacity-50 cursor-not-allowed': match.isCompleted\r\n                }\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Draw\" }}\r\n              </button>\r\n              <button\r\n                class=\"bg-gray-600 px-2 py-1 rounded text-white ml-2 hover:bg-gray-700 transition-all\"\r\n                (click)=\"resetMatch(match.matchId)\"\r\n              >\r\n                {{ loadingMatches[match.matchId] ? \"Load..\" : \"Undo\" }}\r\n              </button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <hr class=\"my-3 border-gray-600\" />\r\n\r\n    <!-- القائمة الأولية -->\r\n    <div>\r\n      <div class=\"grid grid-cols-2 lg:grid-cols-5 gap-4 pt-5\">\r\n        <button\r\n          (click)=\"toggleSidebar()\"\r\n          class=\"bg-blue-600 text-white px-3 py-2 rounded mb-4 hover:bg-blue-700 transition\"\r\n        >\r\n          ☰ Players\r\n        </button>\r\n        <button\r\n          routerLink=\"/admin/inbox\"\r\n          class=\"bg-orange-600 hover:bg-orange-700 text-white mb-4 px-3 py-2 rounded transition-all relative\"\r\n        >\r\n          Inbox\r\n          <div\r\n            class=\"absolute -top-2 -right-2 w-[30px] h-[30px] rounded-full bg-green-600 flex justify-center items-center\"\r\n            *ngIf=\"totalMessagesLeft > 0\"\r\n          >\r\n            <h4 class=\"text-white font-bold\">{{ totalMessagesLeft }}</h4>\r\n          </div>\r\n        </button>\r\n\r\n        <button\r\n          class=\"bg-green-600 text-white px-3 py-2 rounded mb-4 hover:bg-green-700 transition\"\r\n          (click)=\"openStartLeagueModal()\"\r\n          *ngIf=\"leagueData == null\"\r\n        >\r\n          Start New League\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 text-white px-3 py-2 rounded mb-4 hover:bg-red-700 transition\"\r\n          *ngIf=\"leagueData != null\"\r\n          (click)=\"showEndLeagueModal = true\"\r\n          s\r\n        >\r\n          End League\r\n        </button>\r\n        <!-- Tournament Stage Button -->\r\n        <button\r\n          class=\"bg-purple-600 text-white px-3 py-2 rounded mb-4 hover:bg-purple-700 transition font-bold\"\r\n          *ngIf=\"showTournamentStageButton && leagueData != null\"\r\n          (click)=\"onTournamentStageButtonClick()\"\r\n        >\r\n          🏆 {{ tournamentStageButtonText }}\r\n        </button>\r\n        <button\r\n          class=\"bg-indigo-600 text-white px-3 py-2 rounded mb-4 hover:bg-indigo-700 transition\"\r\n          (click)=\"openNoteModal()\"\r\n        >\r\n          Notes\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-8\"\r\n        *ngIf=\"leagueData\"\r\n      >\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">\r\n            League Description\r\n          </h3>\r\n          <p class=\"font-bold text-gray-300\">{{ leagueData.description }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">نوع البطولة</h3>\r\n          <p class=\"font-bold text-gray-300\">\r\n            <span *ngIf=\"leagueData.typeOfLeague === 0\">👤</span>\r\n            <span *ngIf=\"leagueData.typeOfLeague === 1\">👥</span>\r\n            <span *ngIf=\"leagueData.typeOfLeague === 2\">🏆</span>\r\n            {{ getLeagueTypeText(leagueData.typeOfLeague) }}\r\n          </p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">نظام البطولة</h3>\r\n          <p class=\"font-bold text-gray-300\">\r\n            <span *ngIf=\"leagueData.systemOfLeague === 0\">📊</span>\r\n            <span *ngIf=\"leagueData.systemOfLeague === 1\">⚔️</span>\r\n            {{\r\n              leagueData.systemOfLeague !== undefined\r\n                ? getSystemTypeText(leagueData.systemOfLeague)\r\n                : \"غير محدد\"\r\n            }}\r\n          </p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Start Date</h3>\r\n          <p class=\"font-bold text-gray-300\">\r\n            {{ leagueData.createdOn | date : \"fullDate\" }}\r\n          </p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">League Name</h3>\r\n          <p class=\"font-bold text-gray-300\">{{ leagueData.name }}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-8 container mx-auto\">\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">\r\n            Remaining Matches\r\n          </h3>\r\n          <p class=\"text-3xl font-bold text-red-500\">{{ totalMatchesLeft }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Total Matches</h3>\r\n          <p class=\"text-3xl font-bold text-green-500\">{{ totalMatches }}</p>\r\n        </div>\r\n        <div\r\n          class=\"bg-black bg-opacity-50 backdrop-blur-sm shadow-md rounded p-6 text-center\"\r\n        >\r\n          <h3 class=\"text-lg font-semibold mb-2 text-white\">Total Players</h3>\r\n          <p class=\"text-3xl font-bold text-blue-500\">{{ totalPlayers }}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- كل البطولات -->\r\n    <div class=\"text-center\">\r\n      <h2\r\n        class=\"mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-4xl lg:text-4xl text-white\"\r\n      >\r\n        All Leagues\r\n      </h2>\r\n\r\n      <div class=\"max-h-[350px] overflow-x-auto\">\r\n        <table class=\"min-w-full divide-y-2 divide-gray-600\">\r\n          <thead class=\"sticky top-0 bg-black bg-opacity-50 backdrop-blur-sm\">\r\n            <tr class=\"*:font-medium *:text-white\">\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Name</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Status</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Type</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League System</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">League Date</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">Winner</th>\r\n              <th class=\"px-3 py-2 whitespace-nowrap\">Delete</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody class=\"divide-y divide-gray-600\">\r\n            <tr\r\n              *ngFor=\"let league of leagues; let i = index\"\r\n              class=\"*:font-bold *:first:font-medium\"\r\n              [ngClass]=\"{\r\n                'bg-gray-900': i % 2 === 0,\r\n                'bg-gray-950': i % 2 !== 0\r\n              }\"\r\n            >\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ league.leagueName }}\r\n              </td>\r\n              <td\r\n                class=\"px-3 py-2 whitespace-nowrap\"\r\n                [class.text-green-500]=\"!league.isFinished\"\r\n                [class.text-red-500]=\"league.isFinished\"\r\n              >\r\n                {{ !league.isFinished ? \"Live Now!!\" : \"Finished\" }}\r\n              </td>\r\n\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ getLeagueTypeTextForTable(league.leagueType) }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ getSystemTypeTextForTable(league.systemOfLeague) }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ league.createdOn | date : \"yyyy/MM/dd\" }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap text-white\">\r\n                {{ getWinnerForLeague(league) }}\r\n              </td>\r\n              <td class=\"px-3 py-2 whitespace-nowrap\">\r\n                <button\r\n                  (click)=\"openDeleteLeagueModal(league.leagueId)\"\r\n                  class=\"bg-red-600 text-white px-3 py-2 rounded hover:bg-red-700 transition\"\r\n                >\r\n                  Delete League\r\n                </button>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Delete League Modal -->\r\n  <div\r\n    *ngIf=\"showDeleteLeagueModal\"\r\n    class=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\r\n  >\r\n    <div\r\n      class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg shadow-lg w-96\"\r\n    >\r\n      <h2 class=\"text-xl font-bold text-white mb-4\">Confirm Delete</h2>\r\n      <p class=\"text-gray-300 mb-6\">\r\n        Are you sure you want to delete league \"{{\r\n          selectedLeagueToDelete?.leagueName\r\n        }}\"?\r\n      </p>\r\n      <div class=\"flex justify-end space-x-4\">\r\n        <button\r\n          (click)=\"closeDeleteLeagueModal()\"\r\n          class=\"bg-gray-600 text-white px-4 py-2 rounded hover:bg-gray-700 transition\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          (click)=\"deleteConfirmedLeague()\"\r\n          class=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Delete Confirmation Modal -->\r\n  <div\r\n    *ngIf=\"showDeleteModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm Delete</h2>\r\n      <p class=\"text-gray-300\">\r\n        Are you sure you want to delete\r\n        <strong>{{ selectedPlayerToDelete?.fullName }}</strong\r\n        >?\r\n      </p>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"showDeleteModal = false\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n          (click)=\"deleteConfirmedPlayer()\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Add Player Modal -->\r\n  <div\r\n    *ngIf=\"showModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Add New Player</h2>\r\n      <input\r\n        type=\"text\"\r\n        [(ngModel)]=\"newPlayerName\"\r\n        class=\"border border-gray-600 p-2 w-full bg-gray-800 text-white rounded placeholder-gray-400\"\r\n        placeholder=\"Enter player name\"\r\n      />\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n          (click)=\"closeModal()\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n          (click)=\"addPlayer()\"\r\n        >\r\n          Add\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Start League Modal -->\r\n  <div\r\n    *ngIf=\"showStartLeagueModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg w-96\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Start New League</h2>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Name</label\r\n        >\r\n        <input\r\n          type=\"text\"\r\n          [(ngModel)]=\"newLeague.name\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          placeholder=\"Enter league name\"\r\n        />\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Description</label\r\n        >\r\n        <textarea\r\n          [(ngModel)]=\"newLeague.description\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          placeholder=\"Enter league description\"\r\n          rows=\"3\"\r\n        ></textarea>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >League Type</label\r\n        >\r\n        <select\r\n          [(ngModel)]=\"newLeague.typeOfLeague\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n        >\r\n          <option [ngValue]=\"0\">Single</option>\r\n          <option [ngValue]=\"1\">Multi</option>\r\n          <option [ngValue]=\"2\">Groups</option>\r\n        </select>\r\n      </div>\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >System Of League</label\r\n        >\r\n        <select\r\n          [(ngModel)]=\"newLeague.systemOfLeague\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n        >\r\n          <option [ngValue]=\"0\">Points</option>\r\n          <option [ngValue]=\"1\">Classic</option>\r\n        </select>\r\n      </div>\r\n      <!-- Rounds Per Match field - only shown when Points system is selected -->\r\n      <div class=\"mb-4\" *ngIf=\"newLeague.systemOfLeague === 0\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >Rounds Per Match</label\r\n        >\r\n        <input\r\n          type=\"number\"\r\n          [(ngModel)]=\"newLeague.roundsPerMatch\"\r\n          min=\"1\"\r\n          max=\"10\"\r\n          class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n          placeholder=\"Enter number of rounds per match (e.g., 3)\"\r\n        />\r\n        <small class=\"text-gray-400 text-xs mt-1 block\">\r\n          Number of rounds each player will play in a match (Points system only)\r\n        </small>\r\n      </div>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"closeStartLeagueModal()\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n          (click)=\"startLeague()\"\r\n        >\r\n          Start League\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- End League Confirmation Modal -->\r\n  <div\r\n    *ngIf=\"showEndLeagueModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm End League</h2>\r\n      <p class=\"text-gray-300\">\r\n        Are you sure you want to end the current league? This action cannot be\r\n        undone.\r\n      </p>\r\n      <div class=\"mt-4 flex justify-end\">\r\n        <button\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n          (click)=\"showEndLeagueModal = false\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n          (click)=\"resetTournament(leagueData!.id)\"\r\n        >\r\n          Confirm End\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Notes Modal -->\r\n  <div\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    *ngIf=\"showNoteModal\"\r\n  >\r\n    <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-4 rounded-lg\">\r\n      <div>\r\n        <h2 class=\"font-bold text-white text-center\">Add New Note</h2>\r\n        <div>\r\n          <label for=\"Notes\">\r\n            <span class=\"text-sm font-medium text-gray-300\">Notes</span>\r\n            <div class=\"relative m-2 overflow-hidden rounded border-gray-600\">\r\n              <textarea\r\n                id=\"Notes\"\r\n                class=\"w-full resize-none p-3 border border-gray-600 bg-gray-800 text-white placeholder-gray-400\"\r\n                rows=\"4\"\r\n                [(ngModel)]=\"newNote\"\r\n              ></textarea>\r\n              <div class=\"flex items-center justify-end gap-2 p-1.5\">\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"rounded p-2 font-bold text-white bg-green-600 hover:bg-green-700 transition\"\r\n                  (click)=\"sendNote()\"\r\n                >\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </label>\r\n        </div>\r\n      </div>\r\n      <div class=\"p-6\">\r\n        <div *ngFor=\"let note of notes\">\r\n          <div\r\n            class=\"mt-4 flex items-center justify-end\"\r\n            *ngIf=\"note.isDeleted == false\"\r\n          >\r\n            <p class=\"font-bold px-3 text-white\">\r\n              {{ note.content }}\r\n            </p>\r\n            <button\r\n              class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n              (click)=\"toggleDeleteNote(note.id)\"\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n              (click)=\"toggleHideNote(note)\"\r\n              *ngIf=\"note.isHidden == true\"\r\n            >\r\n              Show\r\n            </button>\r\n            <button\r\n              class=\"bg-purple-600 px-4 py-2 text-white rounded hover:bg-purple-700 transition\"\r\n              (click)=\"toggleHideNote(note)\"\r\n              *ngIf=\"note.isHidden == false\"\r\n            >\r\n              Hide\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n        (click)=\"closeNoteModal()\"\r\n      >\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { MatchService } from 'src/app/core/services/match.service';\r\nimport { PlayerService } from './../../core/services/player.service';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport {\r\n  Player,\r\n  Match,\r\n  StartLeagueDto,\r\n  League,\r\n  AllLeagueRank,\r\n  Note,\r\n  TournamentStage,\r\n  LeagueType,\r\n  SystemOfLeague,\r\n} from 'src/app/models/interfaces';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { LeagueService } from 'src/app/core/services/league.service';\r\nimport { NoteService } from 'src/app/core/services/note.service';\r\nimport {\r\n  AdminDashboardService,\r\n  AdminDashboardData,\r\n} from 'src/app/core/services/admin-dashboard.service';\r\n\r\n@Component({\r\n  selector: 'app-players',\r\n  templateUrl: './players.component.html',\r\n  styleUrls: ['./players.component.css'],\r\n})\r\nexport class PlayersComponent implements OnInit, OnDestroy {\r\n  // Main data properties\r\n  players: Player[] = [];\r\n  selectedPlayer: Player | null = null;\r\n  playerMatches: Match[] = [];\r\n  displayMatches: Match[] = [];\r\n  notes: Note[] = [];\r\n\r\n  // UI state properties\r\n  showModal = false;\r\n  newPlayerName = '';\r\n  isSidebarOpen = false;\r\n  showDeleteModal = false;\r\n  showNoteModal = false;\r\n  showDeleteLeagueModal = false;\r\n  showEndLeagueModal = false;\r\n  loadingMatches: { [matchId: number]: boolean } = {};\r\n\r\n  // League management properties\r\n  leagueData: League | null = null;\r\n  showStartLeagueModal: boolean = false;\r\n  newLeague: StartLeagueDto = {\r\n    name: '',\r\n    description: '',\r\n    typeOfLeague: 0,\r\n    systemOfLeague: 0,\r\n    roundsPerMatch: 3, // Default value for Points system\r\n  };\r\n\r\n  // Statistics properties\r\n  totalMessagesLeft: number = 0;\r\n  totalPlayers: number = 0;\r\n  totalMatches: number = 0;\r\n  totalMatchesLeft: number = 0;\r\n  totalMessages: number = 0;\r\n  leagues: AllLeagueRank[] = [];\r\n  newNote: string = '';\r\n  selectedLeagueToDelete: AllLeagueRank | null = null;\r\n\r\n  // Tournament stage management properties\r\n  currentMatches: Match[] = [];\r\n  showTournamentStageButton = false;\r\n  tournamentStageButtonText = '';\r\n  tournamentStageButtonAction: (() => void) | null = null;\r\n\r\n  // Queue management properties\r\n  private requestQueue: Array<() => Promise<void>> = [];\r\n  private isProcessingQueue = false;\r\n  showResetModal: boolean = false;\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private matchService: MatchService,\r\n    private toastr: ToastrService,\r\n    private leagueService: LeagueService,\r\n    private noteService: NoteService,\r\n    private adminDashboardService: AdminDashboardService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    // تحميل البيانات الأساسية مع Smart Caching\r\n    this.loadEssentialData();\r\n  }\r\n\r\n  ngOnDestroy(): void {}\r\n\r\n  private loadEssentialData(): void {\r\n    this.adminDashboardService.getEssentialData().subscribe({\r\n      next: (data: AdminDashboardData) => {\r\n        // ✅ عرض جميع البيانات فوراً من الكاش\r\n        this.players = data.players;\r\n        this.currentMatches = data.matches;\r\n        this.leagueData = data.currentLeague;\r\n        this.leagues = data.allLeagues.reverse();\r\n\r\n        this.notes = data.notes;\r\n\r\n        // ✅ عرض إحصائيات كاملة بما فيها عدد الرسائل\r\n        this.totalPlayers = data.stats.totalPlayers;\r\n        this.totalMatches = data.stats.totalMatches;\r\n        this.totalMatchesLeft = data.stats.totalMatchesLeft;\r\n        this.totalMessagesLeft = data.stats.totalMessagesLeft;\r\n\r\n        // Update tournament stage button\r\n        this.updateTournamentStageButton();\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حدث خطأ أثناء تحميل البيانات');\r\n      },\r\n    });\r\n  }\r\n\r\n  toggleSidebar(): void {\r\n    this.isSidebarOpen = !this.isSidebarOpen;\r\n    this.selectedPlayer = null;\r\n  }\r\n\r\n  selectPlayer(player: Player): void {\r\n    this.selectedPlayer = player;\r\n    this.loadMatches();\r\n  }\r\n\r\n  loadMatches(): void {\r\n    if (!this.selectedPlayer) return;\r\n    this.matchService.getAdminMatches().subscribe((matches) => {\r\n      this.playerMatches = matches\r\n        .filter(\r\n          (m) =>\r\n            m.player1Id === this.selectedPlayer!.playerId ||\r\n            m.player2Id === this.selectedPlayer!.playerId\r\n        )\r\n        .sort((a, b) => {\r\n          const nameA =\r\n            (a.player1Id === this.selectedPlayer!.playerId\r\n              ? a.player2Name\r\n              : a.player1Name\r\n            )?.toLowerCase() ?? '';\r\n          const nameB =\r\n            (b.player1Id === this.selectedPlayer!.playerId\r\n              ? b.player2Name\r\n              : b.player1Name\r\n            )?.toLowerCase() ?? '';\r\n          return nameA.localeCompare(nameB);\r\n        });\r\n      this.displayMatches = this.playerMatches.map((match) => {\r\n        if (match.player2Id === this.selectedPlayer!.playerId) {\r\n          return {\r\n            ...match,\r\n            player1Name: match.player2Name,\r\n            player2Name: match.player1Name,\r\n            score1: match.score2,\r\n            score2: match.score1,\r\n            player1Id: match.player2Id,\r\n            player2Id: match.player1Id,\r\n          };\r\n        }\r\n        return { ...match };\r\n      });\r\n      this.playerMatches.forEach((match) => {\r\n        this.loadingMatches[match.matchId] = false;\r\n      });\r\n    });\r\n  }\r\n\r\n  private addToQueue(request: () => Promise<void>): void {\r\n    this.requestQueue.push(request);\r\n    this.processQueue();\r\n  }\r\n\r\n  private async processQueue(): Promise<void> {\r\n    if (this.isProcessingQueue || this.requestQueue.length === 0) return;\r\n\r\n    this.isProcessingQueue = true;\r\n    const request = this.requestQueue.shift();\r\n\r\n    if (request) {\r\n      try {\r\n        await request();\r\n      } catch (error) {}\r\n    }\r\n\r\n    this.isProcessingQueue = false;\r\n    this.processQueue();\r\n  }\r\n\r\n  updateMatch(matchId: number, winnerId: number | null) {\r\n    this.loadingMatches[matchId] = true;\r\n\r\n    this.addToQueue(\r\n      () =>\r\n        new Promise<void>((resolve, reject) => {\r\n          this.matchService.updateMatch(matchId, winnerId).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                this.toastr.success(response.message);\r\n                // Invalidate cache and reload essential data\r\n                this.adminDashboardService.invalidateCache('essential');\r\n                this.loadEssentialData();\r\n                this.loadMatches();\r\n              } else {\r\n                this.toastr.error(response.message);\r\n              }\r\n              this.loadingMatches[matchId] = false;\r\n              resolve();\r\n            },\r\n            error: (error) => {\r\n              this.toastr.error(error.error.message);\r\n              this.loadingMatches[matchId] = false;\r\n              reject(error);\r\n            },\r\n          });\r\n        })\r\n    );\r\n  }\r\n\r\n  resetMatch(matchId: number) {\r\n    this.loadingMatches[matchId] = true;\r\n\r\n    this.addToQueue(\r\n      () =>\r\n        new Promise<void>((resolve, reject) => {\r\n          this.matchService.resetMatch(matchId).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                this.toastr.success(response.message);\r\n                this.loadMatches();\r\n              } else {\r\n                this.toastr.error(response.message, 'Error');\r\n              }\r\n              this.loadingMatches[matchId] = false;\r\n              resolve();\r\n            },\r\n            error: (error) => {\r\n              this.toastr.error(error.error.message);\r\n              this.loadingMatches[matchId] = false;\r\n              reject(error);\r\n            },\r\n          });\r\n        })\r\n    );\r\n  }\r\n\r\n  deletePlayer(playerId: number, event: Event): void {\r\n    event.stopPropagation();\r\n    this.playerService.deletePlayer(playerId).subscribe(() => {\r\n      this.toastr.warning('Player deleted!', 'Deleted');\r\n      this.loadMatches();\r\n      // Invalidate cache and reload essential data\r\n      this.adminDashboardService.invalidateCache('essential');\r\n      this.loadEssentialData();\r\n      this.updateTournamentStageButton(); // Update button state after deleting player\r\n      if (this.selectedPlayer?.playerId === playerId) {\r\n        this.selectedPlayer = null;\r\n        this.playerMatches = [];\r\n        this.displayMatches = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal(): void {\r\n    this.showModal = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.showModal = false;\r\n    this.newPlayerName = '';\r\n  }\r\n\r\n  addPlayer(): void {\r\n    if (!this.newPlayerName.trim()) return;\r\n    this.playerService.addPlayer(this.newPlayerName).subscribe((response) => {\r\n      if (response.success) {\r\n        this.toastr.success(response.message);\r\n        // Invalidate cache and reload essential data\r\n        this.adminDashboardService.invalidateCache('essential');\r\n        this.loadEssentialData();\r\n        this.loadMatches();\r\n        this.closeModal();\r\n      } else this.toastr.warning(response.message);\r\n    });\r\n  }\r\n\r\n  selectedPlayerToDelete: { playerId: number; fullName: string } | null = null;\r\n\r\n  confirmDelete(player: { playerId: number; fullName: string }, event: Event) {\r\n    event.stopPropagation();\r\n    this.selectedPlayerToDelete = player;\r\n    this.showDeleteModal = true;\r\n  }\r\n\r\n  deleteConfirmedPlayer() {\r\n    if (this.selectedPlayerToDelete) {\r\n      this.playerService\r\n        .deletePlayer(this.selectedPlayerToDelete.playerId)\r\n        .subscribe((response) => {\r\n          if (response.success) {\r\n            this.toastr.success(response.message);\r\n            // Invalidate cache and reload essential data\r\n            this.adminDashboardService.invalidateCache('essential');\r\n            this.loadEssentialData();\r\n            this.loadMatches();\r\n          } else {\r\n            this.toastr.error(response.message, 'Error');\r\n          }\r\n        });\r\n\r\n      this.showDeleteModal = false;\r\n      this.selectedPlayerToDelete = null;\r\n    }\r\n  }\r\n\r\n  resetTournament(id: number): void {\r\n    this.leagueService.resetLeague(id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.showResetModal = false;\r\n          this.loadMatches();\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n          this.showEndLeagueModal = false;\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  openStartLeagueModal(): void {\r\n    this.showStartLeagueModal = true;\r\n    this.newLeague = {\r\n      name: '',\r\n      description: '',\r\n      typeOfLeague: 0,\r\n      systemOfLeague: 0,\r\n      roundsPerMatch: 3, // Default value for Points system\r\n    };\r\n  }\r\n\r\n  closeStartLeagueModal(): void {\r\n    this.showStartLeagueModal = false;\r\n  }\r\n\r\n  startLeague(): void {\r\n    if (!this.newLeague.name.trim()) {\r\n      this.toastr.error('League name is required', 'Error');\r\n      return;\r\n    }\r\n\r\n    // Validate rounds per match for Points system\r\n    if (\r\n      this.newLeague.systemOfLeague === 0 &&\r\n      (!this.newLeague.roundsPerMatch || this.newLeague.roundsPerMatch < 1)\r\n    ) {\r\n      this.toastr.error(\r\n        'Rounds per match is required for Points system and must be at least 1',\r\n        'Error'\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.leagueService.startLeague(this.newLeague).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.closeStartLeagueModal();\r\n          this.loadMatches();\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message, 'Error');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n        // console.error(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  DeleteLeague(id: number): void {\r\n    this.leagueService.DeleteLeague(id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          this.showDeleteLeagueModal = false;\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  openDeleteLeagueModal(leagueId: number): void {\r\n    this.selectedLeagueToDelete =\r\n      this.leagues.find((l) => l.leagueId === leagueId) || null;\r\n    this.showDeleteLeagueModal = true;\r\n  }\r\n\r\n  closeDeleteLeagueModal(): void {\r\n    this.showDeleteLeagueModal = false;\r\n    this.selectedLeagueToDelete = null;\r\n  }\r\n\r\n  deleteConfirmedLeague(): void {\r\n    if (this.selectedLeagueToDelete) {\r\n      this.DeleteLeague(this.selectedLeagueToDelete.leagueId);\r\n      this.leagues = this.leagues.filter(\r\n        (l) => l.leagueId !== this.selectedLeagueToDelete?.leagueId\r\n      );\r\n      this.closeDeleteLeagueModal();\r\n    }\r\n  }\r\n\r\n  sendNote(): void {\r\n    if (!this.newNote.trim()) return;\r\n\r\n    this.noteService.sendNote(this.newNote).subscribe({\r\n      next: (res) => {\r\n        this.toastr.success(res.message);\r\n        this.newNote = '';\r\n        // Invalidate cache and reload all data\r\n        this.adminDashboardService.invalidateCache('essential');\r\n        this.loadEssentialData();\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتبعت الملاحظة'),\r\n    });\r\n  }\r\n\r\n  toggleHideNote(note: any): void {\r\n    this.noteService.toggleMarHide(note.id, !note.isHidden).subscribe({\r\n      next: (res) => {\r\n        this.toastr.success(res.message);\r\n        this.loadEssentialData(); // ✅ محل getNotes()\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتغير الظهور'),\r\n    });\r\n  }\r\n\r\n  toggleDeleteNote(noteId: number): void {\r\n    this.noteService.DeleteNote(noteId, false).subscribe({\r\n      next: (res) => {\r\n        this.toastr.warning(res.message);\r\n        this.loadEssentialData(); // ✅ محل getNotes()\r\n      },\r\n      error: () => this.toastr.error('حصل مشكلة وانت بتحذف '),\r\n    });\r\n  }\r\n\r\n  openNoteModal(): void {\r\n    this.showNoteModal = true;\r\n  }\r\n  closeNoteModal(): void {\r\n    this.showNoteModal = false;\r\n  }\r\n\r\n  // Method to determine tournament stage and update button\r\n  // This method checks the current tournament stage and shows appropriate buttons\r\n  // For Groups type leagues, it shows buttons to progress through tournament stages\r\n  private updateTournamentStageButton(): void {\r\n    // Only show button for Groups type leagues\r\n    if (!this.leagueData) {\r\n      this.showTournamentStageButton = false;\r\n      return;\r\n    }\r\n\r\n    // Check if it's a Groups type league (can be string 'Groups' or number 2)\r\n    const leagueType = this.leagueData.typeOfLeague as any;\r\n    const isGroupsLeague =\r\n      leagueType === LeagueType.Groups ||\r\n      leagueType === 'Groups' ||\r\n      leagueType === 2;\r\n\r\n    if (!isGroupsLeague) {\r\n      this.showTournamentStageButton = false;\r\n      return;\r\n    }\r\n\r\n    // Check if there are players but no matches (need to start group stage)\r\n    if (this.totalPlayers > 0 && this.currentMatches.length === 0) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'ابدأ دور المجموعات';\r\n      this.tournamentStageButtonAction = () => this.startGroupStage();\r\n      return;\r\n    }\r\n\r\n    // Check current stage based on matches\r\n    const groupMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.GroupStage ||\r\n        m.tournamentStage === 'GroupStage'\r\n    );\r\n    const quarterMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.QuarterFinals ||\r\n        m.tournamentStage === 'QuarterFinals'\r\n    );\r\n    const semiMatches = this.currentMatches.filter(\r\n      (m) =>\r\n        m.stage === TournamentStage.SemiFinals ||\r\n        m.tournamentStage === 'SemiFinals'\r\n    );\r\n    const finalMatches = this.currentMatches.filter(\r\n      (m) => m.stage === TournamentStage.Final || m.tournamentStage === 'Final'\r\n    );\r\n\r\n    // Check if all matches in a stage are completed\r\n    const allGroupMatchesCompleted =\r\n      groupMatches.length > 0 &&\r\n      groupMatches.every((match) => match.isCompleted);\r\n    const allQuarterMatchesCompleted =\r\n      quarterMatches.length > 0 &&\r\n      quarterMatches.every((match) => match.isCompleted);\r\n    const allSemiMatchesCompleted =\r\n      semiMatches.length > 0 && semiMatches.every((match) => match.isCompleted);\r\n\r\n    // Show quarter button when group stage is completed and no quarter matches exist\r\n    if (\r\n      groupMatches.length > 0 &&\r\n      allGroupMatchesCompleted &&\r\n      quarterMatches.length === 0\r\n    ) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'ابدأ دور ربع النهائي';\r\n      this.tournamentStageButtonAction = () => this.startQuarterStage();\r\n      return;\r\n    }\r\n\r\n    // Show semi button when quarter stage is completed and no semi matches exist\r\n    if (\r\n      quarterMatches.length > 0 &&\r\n      allQuarterMatchesCompleted &&\r\n      semiMatches.length === 0\r\n    ) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'ابدأ دور نصف النهائي';\r\n      this.tournamentStageButtonAction = () => this.startSemiFinalStage();\r\n      return;\r\n    }\r\n\r\n    // Show final button when semi stage is completed and no final matches exist\r\n    if (\r\n      semiMatches.length > 0 &&\r\n      allSemiMatchesCompleted &&\r\n      finalMatches.length === 0\r\n    ) {\r\n      this.showTournamentStageButton = true;\r\n      this.tournamentStageButtonText = 'ابدأ النهائي';\r\n      this.tournamentStageButtonAction = () => this.startFinalStage();\r\n      return;\r\n    }\r\n\r\n    if (finalMatches.length > 0) {\r\n      // Final stage is active, hide button\r\n\r\n      this.showTournamentStageButton = false;\r\n      return;\r\n    }\r\n\r\n    // Default: hide button\r\n    this.showTournamentStageButton = false;\r\n  }\r\n\r\n  // Tournament stage action methods\r\n  startGroupStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.createGroupsAndMatches(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  startQuarterStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startKnockoutStage(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n        // console.error(err);\r\n      },\r\n    });\r\n  }\r\n\r\n  startSemiFinalStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startSemiFinals(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  startFinalStage(): void {\r\n    if (!this.leagueData) return;\r\n\r\n    this.leagueService.startFinal(this.leagueData.id).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          this.toastr.success(response.message);\r\n          // Invalidate cache and reload essential data\r\n          this.adminDashboardService.invalidateCache('essential');\r\n          this.loadEssentialData();\r\n        } else {\r\n          this.toastr.error(response.message);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  // Method to handle tournament stage button click\r\n  onTournamentStageButtonClick(): void {\r\n    if (this.tournamentStageButtonAction) {\r\n      this.tournamentStageButtonAction();\r\n    }\r\n  }\r\n\r\n  // Helper method to get readable league type\r\n  getLeagueTypeText(type: LeagueType): string {\r\n    switch (type) {\r\n      case LeagueType.Single:\r\n        return 'بطولة فردية';\r\n      case LeagueType.Multi:\r\n        return 'بطولة متعددة';\r\n      case LeagueType.Groups:\r\n        return 'بطولة مجموعات';\r\n      default:\r\n        return 'غير محدد';\r\n    }\r\n  }\r\n\r\n  // Helper method to get readable system type\r\n  getSystemTypeText(system: SystemOfLeague): string {\r\n    switch (system) {\r\n      case SystemOfLeague.Points:\r\n        return 'نظام النقاط';\r\n      case SystemOfLeague.Classic:\r\n        return 'النظام الكلاسيكي';\r\n      default:\r\n        return 'غير محدد';\r\n    }\r\n  }\r\n\r\n  // Helper method to get readable league type for table (handles both string and number)\r\n  getLeagueTypeTextForTable(leagueType: any): string {\r\n    if (leagueType === 0 || leagueType === 'Single') {\r\n      return 'بطولة فردية';\r\n    } else if (leagueType === 1 || leagueType === 'Multi') {\r\n      return 'بطولة متعددة';\r\n    } else if (leagueType === 2 || leagueType === 'Groups') {\r\n      return 'بطولة مجموعات';\r\n    } else {\r\n      return 'غير محدد';\r\n    }\r\n  }\r\n\r\n  // Helper method to get readable system type for table (handles both string and number)\r\n  getSystemTypeTextForTable(systemType: any): string {\r\n    if (systemType === 0 || systemType === 'Points') {\r\n      return 'نظام النقاط';\r\n    } else if (systemType === 1 || systemType === 'Classic') {\r\n      return 'النظام الكلاسيكي';\r\n    } else {\r\n      return 'غير محدد';\r\n    }\r\n  }\r\n\r\n  // دالة جديدة لتحديد الفائز بناءً على نوع البطولة\r\n  getWinnerForLeague(league: AllLeagueRank): string {\r\n    // إذا كانت البطولة من نوع المجموعات\r\n    if (\r\n      league.leagueType === 2 ||\r\n      league.leagueType === LeagueType.Groups ||\r\n      String(league.leagueType) === 'Groups'\r\n    ) {\r\n      // البحث عن ماتش الفاينال في knockoutMatches\r\n      if (league.knockoutMatches && league.knockoutMatches.length > 0) {\r\n        const finalMatch = league.knockoutMatches.find((match) => {\r\n          const stage = match.stage || match.tournamentStage;\r\n          return stage === 'Final';\r\n        });\r\n\r\n        if (finalMatch && finalMatch.isCompleted && finalMatch.winnerId) {\r\n          // البحث عن اسم الفائز\r\n          if (finalMatch.winnerId === finalMatch.player1Id) {\r\n            return finalMatch.player1Name;\r\n          } else if (finalMatch.winnerId === finalMatch.player2Id) {\r\n            return finalMatch.player2Name;\r\n          }\r\n        }\r\n      }\r\n\r\n      // إذا لم نجد فائز في الفاينال، نبحث في الماتشات العادية\r\n      if (league.matches && league.matches.length > 0) {\r\n        const finalMatch = league.matches.find((match) => {\r\n          const stage = match.stage || match.tournamentStage;\r\n          return stage === 'Final';\r\n        });\r\n\r\n        if (finalMatch && finalMatch.isCompleted && finalMatch.winnerId) {\r\n          if (finalMatch.winnerId === finalMatch.player1Id) {\r\n            return finalMatch.player1Name;\r\n          } else if (finalMatch.winnerId === finalMatch.player2Id) {\r\n            return finalMatch.player2Name;\r\n          }\r\n        }\r\n      }\r\n\r\n      // إذا لم نجد فائز بعد، نعود للطريقة القديمة\r\n      return league.players && league.players.length > 0\r\n        ? league.players[0].fullName\r\n        : 'No Winner Yet';\r\n    }\r\n\r\n    // للبطولات الأخرى (فردية أو متعددة)، نستخدم الطريقة القديمة\r\n    return league.players && league.players.length > 0\r\n      ? league.players[0].fullName\r\n      : 'No Winner Yet';\r\n  }\r\n}\r\n","<div\r\n  class=\"container mx-auto p-4 flex flex-col sm:flex-row overflow-hidden h-screen\"\r\n>\r\n  <!-- Chats List -->\r\n  <div\r\n    class=\"w-full sm:w-1/3 border-r border-gray-600 sm:block\"\r\n    [ngClass]=\"{ hidden: selectedChat }\"\r\n  >\r\n    <div class=\"flex items-center justify-between mb-6\">\r\n      <h2 class=\"text-2xl font-bold text-white\">📥 Inbox</h2>\r\n    </div>\r\n\r\n    <!-- No Chats -->\r\n    <div *ngIf=\"playerChats.length === 0\" class=\"text-center text-gray-300\">\r\n      No messages here 📭\r\n    </div>\r\n\r\n    <!-- Chats List -->\r\n    <div\r\n      *ngIf=\"playerChats.length > 0\"\r\n      class=\"space-y-2 overflow-y-auto max-h-[calc(100vh-120px)]\"\r\n    >\r\n      <div\r\n        *ngFor=\"let chat of playerChats; trackBy: trackByPlayerId\"\r\n        class=\"p-4 backdrop-blur-sm border border-gray-600 rounded-lg hover:bg-gray-700 cursor-pointer flex items-center justify-between\"\r\n        (click)=\"openChat(chat.senderId)\"\r\n      >\r\n        <div>\r\n          <p class=\"font-bold text-white\">{{ chat.senderFullName }}</p>\r\n          <p class=\"text-sm text-gray-300 truncate\">{{ chat.lastMessage }}</p>\r\n        </div>\r\n        <span\r\n          *ngIf=\"chat.unreadCount > 0\"\r\n          class=\"bg-green-600 text-white text-xs font-bold rounded-full px-2 py-1\"\r\n        >\r\n          {{ chat.unreadCount }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Chat View -->\r\n  <div\r\n    class=\"w-full sm:w-2/3 flex flex-col h-full relative\"\r\n    [ngClass]=\"{ block: selectedChat, 'hidden sm:flex': !selectedChat }\"\r\n  >\r\n    <div *ngIf=\"selectedChat; else noChatSelected\" class=\"flex flex-col h-full\">\r\n      <!-- Chat Header - Fixed -->\r\n      <div\r\n        class=\"fixed left-0 right-0 z-40 p-2 backdrop-blur-sm border-b border-gray-600 flex items-center justify-between bg-black bg-opacity-90\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n        [style.top.px]=\"navbarHeight\"\r\n      >\r\n        <div class=\"flex items-center\">\r\n          <button\r\n            (click)=\"closeChat()\"\r\n            class=\"mr-4 text-gray-300 hover:text-white transition\"\r\n          >\r\n            <i class=\"fa-solid fa-arrow-left\" style=\"color: #ffffff\"></i>\r\n          </button>\r\n          <div>\r\n            <p class=\"font-bold text-white text-sm p-0\">\r\n              {{ selectedChat.senderFullName }}\r\n            </p>\r\n            <p class=\"text-xs text-gray-400 p-0\">\r\n              {{ selectedChat.senderPhoneNumber }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Messages - Scrollable Area with padding for fixed header and footer -->\r\n      <div\r\n        #messagesContainer\r\n        class=\"flex-1 p-4 overflow-y-auto backdrop-blur-sm\"\r\n        [style.margin-top.px]=\"navbarHeight + 80\"\r\n        style=\"margin-bottom: 80px\"\r\n      >\r\n        <div\r\n          *ngFor=\"\r\n            let message of selectedChat.messages;\r\n            trackBy: trackByMessageId\r\n          \"\r\n          class=\"mb-4\"\r\n          [ngClass]=\"{\r\n            'text-right': !message.isFromAdmin,\r\n            'text-left': message.isFromAdmin\r\n          }\"\r\n        >\r\n          <div\r\n            class=\"inline-block p-3 rounded-lg max-w-xs\"\r\n            [ngClass]=\"{\r\n              'bg-green-700': !message.isFromAdmin,\r\n              'bg-gray-700 ': message.isFromAdmin\r\n            }\"\r\n          >\r\n            <p class=\"text-white\">{{ message.content }}</p>\r\n            <p class=\"text-xs mt-1 text-gray-300\">\r\n              {{ message.sentAt | date : \"MMM d, y, hh:mm a\" }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Reply Input - Fixed -->\r\n      <div\r\n        class=\"fixed bottom-0 left-0 right-0 z-50 p-4 bg-black bg-opacity-90 backdrop-blur-sm border-t border-gray-600\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n      >\r\n        <form (ngSubmit)=\"sendReply()\" class=\"flex items-center gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"replyMessages[selectedChat.messages[0].id]\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n            (ngModelChange)=\"\r\n              replyMessages[selectedChat.messages[0].id] = $event\r\n            \"\r\n            placeholder=\"Write your reply...\"\r\n            class=\"flex-1 p-2 border border-gray-600 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-600 placeholder-gray-400\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 transition disabled:bg-gray-600\"\r\n            [disabled]=\"!replyMessages[selectedChat.messages[0].id]\"\r\n          >\r\n            Reply\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Placeholder when no chat is selected -->\r\n    <ng-template #noChatSelected>\r\n      <div class=\"w-full flex items-center justify-center text-gray-300\">\r\n        Select a chat to view messages 📩\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { MessageService } from 'src/app/core/services/message.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Message } from 'src/app/models/interfaces';\r\nimport { AdminDashboardService } from 'src/app/core/services/admin-dashboard.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\ninterface PlayerChat {\r\n  senderId: string;\r\n  senderFullName: string;\r\n  senderPhoneNumber: string;\r\n  lastMessage: string;\r\n  lastMessageDate: string;\r\n  unreadCount: number;\r\n  messages: Message[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-inbox',\r\n  templateUrl: './inbox.component.html',\r\n  styleUrls: ['./inbox.component.css'],\r\n})\r\nexport class InboxComponent implements OnInit, AfterViewChecked, OnDestroy {\r\n  playerChats: PlayerChat[] = [];\r\n  selectedPlayerId: string | null = null;\r\n  selectedChat: PlayerChat | null = null;\r\n  replyMessages: { [messageId: number]: string } = {};\r\n  private updateStatusSubscription?: Subscription;\r\n  private refreshSubscription?: Subscription;\r\n  navbarHeight = 60; // default navbar height\r\n\r\n  @ViewChild('messagesContainer')\r\n  messagesContainer!: ElementRef<HTMLDivElement>;\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private toastr: ToastrService,\r\n    private cdr: ChangeDetectorRef,\r\n    private adminDashboardService: AdminDashboardService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadAdminMessages();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.updateStatusSubscription) {\r\n      this.updateStatusSubscription.unsubscribe();\r\n    }\r\n    if (this.refreshSubscription) {\r\n      this.refreshSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n\r\n  private loadAdminMessages(): void {\r\n    // Always load fresh data from server for immediate updates\r\n    this.loadFromServer();\r\n  }\r\n\r\n  private loadFromCache(): void {\r\n    // تم إلغاء الكاش للادمن، سيتم التحميل دائماً من السيرفر\r\n    this.loadFromServer();\r\n  }\r\n\r\n  private loadFromServer(): void {\r\n    this.adminDashboardService.getSecondaryData('messages').subscribe({\r\n      next: (messages) => {\r\n        if (messages && messages.length > 0) {\r\n          const groupedMessages = this.groupMessagesBySender(messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n  \r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  // Add refresh method for immediate updates\r\n  refreshMessages(): void {\r\n    this.messageService.getAdminMessages().subscribe({\r\n      next: (response) => {\r\n        if (response && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n          \r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.selectedChat && this.messagesContainer) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  loadMessages(): void {\r\n    this.messageService.getMessages().subscribe({\r\n      next: (response) => {\r\n        if (response && response.messages) {\r\n          this.processMessages(response.messages);\r\n        } else {\r\n          this.toastr.error('لا يوجد رسائل الآن');\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حصل خطأ أثناء جلب الرسائل');\r\n      },\r\n    });\r\n  }\r\n\r\n  private processMessages(messages: Message[]): void {\r\n    const groupedMessages = this.groupMessagesBySender(messages);\r\n    // ترتيب حسب الأحدث (آخر رسالة)\r\n    this.playerChats = groupedMessages.sort(\r\n      (a, b) =>\r\n        new Date(b.lastMessageDate).getTime() -\r\n        new Date(a.lastMessageDate).getTime()\r\n    );\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  groupMessagesBySender(messages: Message[]): PlayerChat[] {\r\n    const chatMap: { [senderId: string]: PlayerChat } = {};\r\n    messages\r\n      .filter((msg) => !msg.isDeleted)\r\n      .forEach((msg) => {\r\n        const playerId = msg.isFromAdmin ? msg.senderId : msg.senderId;\r\n        if (!chatMap[playerId]) {\r\n          chatMap[playerId] = {\r\n            senderId: playerId,\r\n            senderFullName: msg.senderFullName,\r\n            senderPhoneNumber: msg.senderPhoneNumber,\r\n            lastMessage: '',\r\n            lastMessageDate: '',\r\n            unreadCount: 0,\r\n            messages: [],\r\n          };\r\n        }\r\n        chatMap[playerId].messages.push(msg);\r\n        if (!msg.isFromAdmin && !msg.isRead) {\r\n          chatMap[playerId].unreadCount++;\r\n        }\r\n      });\r\n\r\n    return Object.values(chatMap).map((chat) => {\r\n      // ترتيب الرسائل من الأقدم للأحدث\r\n      chat.messages = chat.messages.sort(\r\n        (a, b) => new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n      );\r\n      // آخر رسالة\r\n      const lastMsg = chat.messages[chat.messages.length - 1];\r\n      chat.lastMessage = lastMsg?.content ?? '';\r\n      chat.lastMessageDate = lastMsg?.sentAt ?? '';\r\n      return chat;\r\n    });\r\n  }\r\n\r\n  openChat(playerId: string): void {\r\n    this.selectedPlayerId = playerId;\r\n    this.selectedChat =\r\n      this.playerChats.find((chat) => chat.senderId === playerId) || null;\r\n    if (this.selectedChat) {\r\n      this.selectedChat.messages\r\n        .filter((msg) => !msg.isRead && !msg.isFromAdmin)\r\n        .forEach((msg) => {\r\n          this.messageService.toggleMarkMessage(msg.id, true).subscribe({\r\n            next: (response) => {\r\n              if (response.success) {\r\n                msg.isRead = true;\r\n                this.selectedChat!.unreadCount =\r\n                  this.selectedChat!.messages.filter(\r\n                    (m) => !m.isRead && !m.isFromAdmin\r\n                  ).length;\r\n                this.cdr.detectChanges();\r\n              }\r\n            },\r\n            error: (err) => {\r\n              this.toastr.error('حصل خطأ أثناء تحديث حالة الرسالة');\r\n            },\r\n          });\r\n        });\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  closeChat(): void {\r\n    this.selectedPlayerId = null;\r\n    this.selectedChat = null;\r\n    this.replyMessages = {};\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  sendReply(): void {\r\n    if (!this.selectedChat) {\r\n      this.toastr.warning('الرجاء اختيار محادثة');\r\n      return;\r\n    }\r\n    const replyContent =\r\n      this.replyMessages[this.selectedChat.messages[0].id]?.trim();\r\n    if (!replyContent) {\r\n      this.toastr.warning('الرجاء كتابة رد');\r\n      return;\r\n    }\r\n\r\n    this.messageService\r\n      .sendAdminReply(this.selectedChat.senderId, replyContent)\r\n      .subscribe({\r\n        next: (response) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم إرسال الرد');\r\n            this.replyMessages[this.selectedChat!.messages[0].id] = '';\r\n\r\n            const newMessage: Message = {\r\n              id: Math.random(),\r\n              senderId: this.selectedChat!.senderId,\r\n              senderFullName: 'Admin',\r\n              senderPhoneNumber: '',\r\n              content: replyContent,\r\n              isRead: true,\r\n              isDeleted: false,\r\n              sentAt: new Date().toISOString(),\r\n              isFromAdmin: true,\r\n            };\r\n\r\n            // تحديث الرسائل في المحادثة المحددة\r\n            this.selectedChat!.messages.push(newMessage);\r\n            this.selectedChat!.messages.sort(\r\n              (a, b) =>\r\n                new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n            );\r\n\r\n            // تحديث آخر رسالة في قائمة المحادثات\r\n            this.selectedChat!.lastMessage = replyContent;\r\n            this.selectedChat!.lastMessageDate = newMessage.sentAt;\r\n\r\n            // إعادة ترتيب قائمة المحادثات حسب الأحدث\r\n            this.playerChats.sort(\r\n              (a, b) =>\r\n                new Date(b.lastMessageDate).getTime() -\r\n                new Date(a.lastMessageDate).getTime()\r\n            );\r\n\r\n            // تحديث المحادثة المحددة بعد إعادة الترتيب\r\n            this.selectedChat =\r\n              this.playerChats.find(\r\n                (chat) => chat.senderId === this.selectedPlayerId\r\n              ) || null;\r\n\r\n            this.cdr.detectChanges();\r\n          } else {\r\n            this.toastr.error(response.message || 'فشل إرسال الرد');\r\n          }\r\n        },\r\n        error: (err) => {\r\n          this.toastr.error('حصل خطأ أثناء إرسال الرد');\r\n        },\r\n      });\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    if (this.messagesContainer) {\r\n      const container = this.messagesContainer.nativeElement;\r\n      container.scrollTop = container.scrollHeight;\r\n    }\r\n  }\r\n\r\n  trackByPlayerId(index: number, chat: PlayerChat): string {\r\n    return chat.senderId;\r\n  }\r\n\r\n  trackByMessageId(index: number, message: Message): number {\r\n    return message.id;\r\n  }\r\n}\r\n","<!-- Friendlies Dashboard Component -->\r\n\r\n<div class=\"block sm:flex transition-all duration-600\">\r\n  <!-- Sidebar -->\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm text-white transition-all duration-600\"\r\n    [ngClass]=\"{\r\n      'w-64 p-4 sm:min-h-screen': isSidebarOpen,\r\n      'w-0 p-0': !isSidebarOpen\r\n    }\"\r\n  >\r\n    <h2\r\n      class=\"text-lg font-bold mb-4 flex justify-between overflow-hidden text-white\"\r\n    >\r\n      Friendly Players\r\n      <button (click)=\"toggleSidebar()\" class=\"text-gray-300 text-3xl\">\r\n        ×\r\n      </button>\r\n    </h2>\r\n    <ul *ngIf=\"isSidebarOpen\">\r\n      <li\r\n        *ngFor=\"let player of players\"\r\n        class=\"flex items-center justify-between p-2 cursor-pointer rounded-md hover:bg-gray-700\"\r\n        [class.bg-blue-600]=\"selectedPlayer?.playerId === player.playerId\"\r\n        (click)=\"selectPlayer(player)\"\r\n      >\r\n        <span\r\n          class=\"text-white cursor-pointer hover:text-blue-300\"\r\n          (click)=\"openRecordMatchModal()\"\r\n          >{{ player.fullName }}</span\r\n        >\r\n        <button\r\n          (click)=\"confirmDelete(player, $event)\"\r\n          class=\"bg-red-600 px-2 py-1 text-sm rounded text-white hover:bg-red-700 transition\"\r\n        >\r\n          X\r\n        </button>\r\n      </li>\r\n    </ul>\r\n    <button\r\n      *ngIf=\"isSidebarOpen\"\r\n      class=\"mt-4 w-full bg-green-600 p-2 rounded text-white hover:bg-green-700 transition\"\r\n      (click)=\"openModal()\"\r\n    >\r\n      Add Player\r\n    </button>\r\n  </div>\r\n\r\n  <!-- Main Content -->\r\n  <div\r\n    class=\"sm:flex-1 sm:p-2 transition-all duration-600 sm:container sm:mx-auto\"\r\n  >\r\n \r\n    <!-- Friendlies Tab Content -->\r\n    <div *ngIf=\"activeTab === 'friendlies'\">\r\n      <div *ngIf=\"selectedPlayer\" class=\"sm:w-4/6 mx-auto\">\r\n        <h2 class=\"text-2xl font-bold mb-4 text-center text-white\">\r\n          Friendly Matches for {{ selectedPlayer.fullName }}\r\n        </h2>\r\n      </div>\r\n      <hr class=\"my-3 border-gray-600\" />\r\n\r\n      <!-- القائمة الأولية -->\r\n      <div>\r\n        <div class=\"flex justify-evenly pt-5\">\r\n          <button\r\n            (click)=\"toggleSidebar()\"\r\n            class=\"bg-blue-600 text-white px-3 py-2 rounded mb-4 hover:bg-blue-700 transition\"\r\n          >\r\n            ☰ Players\r\n          </button>\r\n\r\n          <button\r\n            routerLink=\"/admin/friendly-inbox\"\r\n            class=\"bg-purple-600 hover:bg-purple-700 text-white mb-4 px-3 py-2 rounded transition-all relative\"\r\n          >\r\n            📬 Friendly Inbox\r\n            <div\r\n              class=\"absolute -top-2 -right-2 w-[30px] h-[30px] rounded-full bg-green-600 flex justify-center items-center\"\r\n              *ngIf=\"totalUnreadFriendlyMessages > 0\"\r\n            >\r\n              <h4 class=\"text-white font-bold\">\r\n                {{ totalUnreadFriendlyMessages }}\r\n              </h4>\r\n            </div>\r\n          </button>\r\n        </div>\r\n\r\n        <div class=\"text-center mb-8\">\r\n          <h2\r\n            class=\"mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-4xl lg:text-4xl text-white\"\r\n          >\r\n            Quick Actions\r\n          </h2>\r\n\r\n          <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-4\">\r\n            <button\r\n              class=\"bg-teal-600 text-white p-4 rounded-lg hover:bg-teal-700 transition-all\"\r\n              (click)=\"openRecordMatchModal()\"\r\n              [disabled]=\"players.length === 0\"\r\n            >\r\n              <h3 class=\"text-lg font-bold\">Record Match</h3>\r\n              <p class=\"text-sm\">Record a new friendly match</p>\r\n            </button>\r\n\r\n            <button\r\n              class=\"bg-green-600 text-white p-4 rounded-lg hover:bg-green-700 transition-all\"\r\n              (click)=\"openModal()\"\r\n            >\r\n              <h3 class=\"text-lg font-bold\">Add New Player</h3>\r\n              <p class=\"text-sm\">Register a new friendly player</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- All Matches Section -->\r\n      <div class=\"mt-8\">\r\n        <!-- Filters Section -->\r\n        <div class=\"mb-6 p-2 bg-gray-800 rounded-lg\">\r\n          <div class=\"mb-4\">\r\n            <h4 class=\"text-lg font-semibold text-white\">Filter Matches</h4>\r\n          </div>\r\n          <div class=\"grid grid-cols-2 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n                >Date Range</label\r\n              >\r\n              <select\r\n                [(ngModel)]=\"filterForm.dateFilter\"\r\n                (ngModelChange)=\"onFilterChange()\"\r\n                class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n              >\r\n                <option [ngValue]=\"DateFilter.AllTime\">All Time</option>\r\n                <option [ngValue]=\"DateFilter.Today\">Today</option>\r\n                <option [ngValue]=\"DateFilter.Last3Days\">Last 3 Days</option>\r\n                <option [ngValue]=\"DateFilter.LastWeek\">Last Week</option>\r\n                <option [ngValue]=\"DateFilter.LastMonth\">Last Month</option>\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n                >Player</label\r\n              >\r\n              <select\r\n                [(ngModel)]=\"filterForm.playerId\"\r\n                (ngModelChange)=\"onFilterChange()\"\r\n                class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n              >\r\n                <option [ngValue]=\"0\">All Players</option>\r\n                <option\r\n                  *ngFor=\"let player of getAllActivePlayers()\"\r\n                  [ngValue]=\"player.playerId\"\r\n                >\r\n                  {{ player.fullName }}\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"flex justify-center mt-4\">\r\n            <button\r\n              class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n              (click)=\"clearFilters()\"\r\n            >\r\n              Clear Filters\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"w-full text-white\">\r\n            <thead class=\"text-center\">\r\n              <tr class=\"border-b border-gray-600 text-center\">\r\n                <th class=\"p-3\">Date</th>\r\n                <th class=\"p-3\">Player 1</th>\r\n                <th class=\"p-3\">Score</th>\r\n                <th class=\"p-3\">Player 2</th>\r\n                <th class=\"p-3\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                *ngFor=\"let match of getPaginatedMatches()\"\r\n                class=\"border-b border-gray-700 hover:bg-gray-800\"\r\n              >\r\n                <td class=\"p-3\">\r\n                  {{ match.playedOn | date : \"shortDate\" }}\r\n                </td>\r\n                <td class=\"p-3\">\r\n                  {{ match.player1Name || getPlayerName(match.player1Id) }}\r\n                </td>\r\n                <td class=\"p-3 text-center\">\r\n                  <span class=\"font-bold text-lg\">\r\n                    {{ match.player1Score }} - {{ match.player2Score }}\r\n                  </span>\r\n                </td>\r\n                <td class=\"p-3\">\r\n                  {{ match.player2Name || getPlayerName(match.player2Id) }}\r\n                </td>\r\n                <td class=\"p-3 text-center\">\r\n                  <div class=\"flex justify-center space-x-2\">\r\n                    <button\r\n                      class=\"bg-blue-600 px-3 py-1 text-white rounded hover:bg-blue-700 transition text-sm\"\r\n                      (click)=\"editMatch(match)\"\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    <button\r\n                      class=\"bg-red-600 px-3 py-1 text-white rounded hover:bg-red-700 transition text-sm\"\r\n                      (click)=\"deleteMatchFromList(match.matchId)\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n\r\n        <!-- Pagination -->\r\n        <div *ngIf=\"totalPages > 1\" class=\"flex justify-center mt-6\">\r\n          <div class=\"flex space-x-2\">\r\n            <button\r\n              class=\"bg-gray-600 px-3 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n              [disabled]=\"currentPage === 1\"\r\n              (click)=\"changePage(currentPage - 1)\"\r\n            >\r\n              Previous\r\n            </button>\r\n\r\n            <span\r\n              *ngFor=\"let page of [].constructor(totalPages); let i = index\"\r\n              class=\"flex\"\r\n            >\r\n              <button\r\n                class=\"px-3 py-2 text-white rounded transition\"\r\n                [class.bg-blue-600]=\"currentPage === i + 1\"\r\n                [class.bg-gray-600]=\"currentPage !== i + 1\"\r\n                [class.hover:bg-blue-700]=\"currentPage === i + 1\"\r\n                [class.hover:bg-gray-700]=\"currentPage !== i + 1\"\r\n                (click)=\"changePage(i + 1)\"\r\n              >\r\n                {{ i + 1 }}\r\n              </button>\r\n            </span>\r\n\r\n            <button\r\n              class=\"bg-gray-600 px-3 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n              [disabled]=\"currentPage === totalPages\"\r\n              (click)=\"changePage(currentPage + 1)\"\r\n            >\r\n              Next\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"text-center mt-4 text-gray-300\">\r\n          Showing {{ (currentPage - 1) * itemsPerPage + 1 }} -\r\n          {{ Math.min(currentPage * itemsPerPage, allMatches.length) }} of\r\n          {{ allMatches.length }} matches\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Quick Actions -->\r\n    </div>\r\n    <!-- End Friendlies Tab -->\r\n\r\n    <!-- Delete Confirmation Modal -->\r\n    <div\r\n      *ngIf=\"showDeleteModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n        <h2 class=\"text-lg font-bold mb-4 text-white\">Confirm Delete</h2>\r\n        <p class=\"text-gray-300\">\r\n          Are you sure you want to delete\r\n          <strong>{{ selectedPlayerToDelete?.fullName }}</strong\r\n          >?\r\n        </p>\r\n        <div class=\"mt-4 flex justify-end\">\r\n          <button\r\n            class=\"bg-gray-600 px-4 py-2 text-white rounded mr-2 hover:bg-gray-700 transition\"\r\n            (click)=\"showDeleteModal = false\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n            (click)=\"deleteConfirmedPlayer()\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Add Player Modal -->\r\n    <div\r\n      *ngIf=\"showModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg\">\r\n        <h2 class=\"text-lg font-bold mb-4 text-white\">\r\n          Add New Friendly Player\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          [(ngModel)]=\"friendlyPlayerName\"\r\n          class=\"border border-gray-600 p-2 w-full bg-gray-800 text-white rounded placeholder-gray-400\"\r\n          placeholder=\"Enter player name\"\r\n        />\r\n        <div class=\"mt-4 flex justify-end\">\r\n          <button\r\n            class=\"bg-red-600 px-4 py-2 text-white rounded mr-2 hover:bg-red-700 transition\"\r\n            (click)=\"closeModal()\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n            (click)=\"addPlayer()\"\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Record Match Modal -->\r\n    <div\r\n      *ngIf=\"showRecordMatchModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div\r\n        class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg w-96 max-h-[90vh] overflow-y-auto\"\r\n      >\r\n        <h2 class=\"text-lg font-bold mb-4 text-white\">\r\n          {{ selectedPlayerForMatch ? \"Edit Match\" : \"Record New Match\" }}\r\n        </h2>\r\n\r\n        <!-- Player selection for new match -->\r\n        <div *ngIf=\"!selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 1</label\r\n          >\r\n          <select\r\n            [(ngModel)]=\"matchForm.player1Id\"\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n          >\r\n            <option [ngValue]=\"0\">Select Player 1...</option>\r\n            <option\r\n              *ngFor=\"let player of getAllActivePlayers()\"\r\n              [ngValue]=\"player.playerId\"\r\n            >\r\n              {{ player.fullName }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div *ngIf=\"!selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 2</label\r\n          >\r\n          <select\r\n            [(ngModel)]=\"matchForm.player2Id\"\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\r\n          >\r\n            <option [ngValue]=\"0\">Select Player 2...</option>\r\n            <option\r\n              *ngFor=\"\r\n                let opponent of getOpponentsForPlayer(matchForm.player1Id)\r\n              \"\r\n              [ngValue]=\"opponent.playerId\"\r\n            >\r\n              {{ opponent.fullName }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <!-- Fixed player names for edit mode -->\r\n        <div *ngIf=\"selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 1</label\r\n          >\r\n          <div\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-700 text-white\"\r\n          >\r\n            {{\r\n              selectedPlayerForMatch.player1Name ||\r\n                getPlayerName(matchForm.player1Id)\r\n            }}\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"selectedPlayerForMatch\" class=\"mb-4\">\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Player 2</label\r\n          >\r\n          <div\r\n            class=\"border border-gray-600 p-2 w-full rounded bg-gray-700 text-white\"\r\n          >\r\n            {{\r\n              selectedPlayerForMatch.player2Name ||\r\n                getPlayerName(matchForm.player2Id)\r\n            }}\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"grid grid-cols-2 gap-4 mb-4\">\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n              >Player 1 Score</label\r\n            >\r\n            <input\r\n              type=\"number\"\r\n              [(ngModel)]=\"matchForm.player1Score\"\r\n              min=\"0\"\r\n              (input)=\"validateScore('player1')\"\r\n              placeholder=\"Enter score\"\r\n              class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n              >Player 2 Score</label\r\n            >\r\n            <input\r\n              type=\"number\"\r\n              [(ngModel)]=\"matchForm.player2Score\"\r\n              min=\"0\"\r\n              (input)=\"validateScore('player2')\"\r\n              placeholder=\"Enter score\"\r\n              class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white placeholder-gray-400\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex justify-end space-x-4\">\r\n          <button\r\n            class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n            (click)=\"closeRecordMatchModal()\"\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n            (click)=\"selectedPlayerForMatch ? updateMatch() : recordNewMatch()\"\r\n            [disabled]=\"\r\n              !matchForm.player1Id ||\r\n              !matchForm.player2Id ||\r\n              (!selectedPlayerForMatch &&\r\n                matchForm.player1Id === matchForm.player2Id) ||\r\n              (matchForm.player1Score === 0 && matchForm.player2Score === 0) ||\r\n              isRecordingMatch\r\n            \"\r\n          >\r\n            {{\r\n              isRecordingMatch\r\n                ? \"Processing...\"\r\n                : selectedPlayerForMatch\r\n                ? \"Update Match\"\r\n                : \"Record Match\"\r\n            }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FriendlyMatchService } from '../../core/services/friendly-match.service';\r\nimport { FriendlyMessageService } from '../../core/services/friendly-message.service';\r\n\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { DateFilter } from 'friendly-match-types';\r\nimport { calculateUnreadCount } from 'friendly-message-types';\r\n\r\n@Component({\r\n  selector: 'app-friendlies',\r\n  templateUrl: './friendlies.component.html',\r\n  styleUrls: ['./friendlies.component.css'],\r\n})\r\nexport class FriendliesComponent implements OnInit {\r\n  // Tab management\r\n  activeTab: 'friendlies' = 'friendlies';\r\n\r\n  // Sidebar state\r\n  isSidebarOpen = false;\r\n\r\n  // Players data\r\n  players: any[] = [];\r\n  selectedPlayer: any = null;\r\n  displayMatches: any[] = [];\r\n\r\n  // Modals\r\n  showModal = false;\r\n  showDeleteModal = false;\r\n  showRecordMatchModal = false;\r\n  selectedPlayerToDelete: any = null;\r\n  selectedPlayerForMatch: any = null;\r\n\r\n  // Form data (for friendly matches)\r\n  friendlyPlayerName = '';\r\n  matchForm = {\r\n    player1Id: 0,\r\n    player2Id: 0,\r\n    player1Score: null as number | null,\r\n    player2Score: null as number | null,\r\n    playedOn: new Date(),\r\n  };\r\n\r\n  // Loading states\r\n  isRecordingMatch = false;\r\n\r\n  // Statistics\r\n  totalPlayers = 0;\r\n  totalMatches = 0;\r\n  totalUnreadFriendlyMessages = 0;\r\n\r\n  // All matches pagination\r\n  allMatches: any[] = [];\r\n  currentPage = 1;\r\n  itemsPerPage = 10;\r\n  totalPages = 0;\r\n  Math = Math; // Make Math available in template\r\n\r\n  // Filter options\r\n  filterForm = {\r\n    playerId: 0,\r\n    opponentIds: [] as number[],\r\n    dateFilter: DateFilter.AllTime,\r\n  };\r\n  DateFilter = DateFilter; // Make enum available in template\r\n\r\n  constructor(\r\n    private friendlyMatchService: FriendlyMatchService,\r\n    private friendlyMessageService: FriendlyMessageService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadPlayers();\r\n    this.loadAllMatches();\r\n    this.loadUnreadFriendlyMessagesCount();\r\n  }\r\n\r\n  loadUnreadFriendlyMessagesCount(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: any) => {\r\n        if (response.success && response.messages) {\r\n          this.totalUnreadFriendlyMessages = calculateUnreadCount(\r\n            response.messages\r\n          );\r\n        } else {\r\n          this.totalUnreadFriendlyMessages = 0;\r\n        }\r\n      },\r\n      error: (error: any) => {\r\n        console.error('Error loading unread friendly messages count:', error);\r\n        this.totalUnreadFriendlyMessages = 0;\r\n      },\r\n    });\r\n  }\r\n\r\n  toggleSidebar(): void {\r\n    this.isSidebarOpen = !this.isSidebarOpen;\r\n  }\r\n\r\n  loadPlayers(): void {\r\n    this.friendlyMatchService.getAllFriendlyPlayers().subscribe({\r\n      next: (players: any) => {\r\n        this.players = players;\r\n        this.totalPlayers = players.length;\r\n        this.calculateStatistics();\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل اللاعبين',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  selectPlayer(player: any): void {\r\n    this.selectedPlayer = player;\r\n    this.loadPlayerMatches(player.playerId);\r\n  }\r\n\r\n  loadPlayerMatches(playerId: number): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        // Get the player's name\r\n        const player = this.players.find((p) => p.playerId === playerId);\r\n        const playerName = player?.fullName;\r\n\r\n        this.displayMatches = matches.filter(\r\n          (match: any) =>\r\n            match.player1Name === playerName || match.player2Name === playerName\r\n        );\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل مباريات اللاعب',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  calculateStatistics(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        this.totalMatches = matches.length;\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل الإحصائيات',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Modal methods (for friendly players)\r\n  openModal(): void {\r\n    this.showModal = true;\r\n    this.friendlyPlayerName = '';\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.showModal = false;\r\n    this.friendlyPlayerName = '';\r\n  }\r\n\r\n  addPlayer(): void {\r\n    if (!this.friendlyPlayerName.trim()) {\r\n      this.toastr.warning('الرجاء إدخال اسم اللاعب', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    this.friendlyMatchService\r\n      .addFriendlyPlayerAsync(this.friendlyPlayerName)\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success(\r\n              `تم إضافة اللاعب ${this.friendlyPlayerName} بنجاح`,\r\n              'تم الإضافة'\r\n            );\r\n            // Refresh cache and reload players\r\n            this.friendlyMatchService.refreshFriendlyPlayers();\r\n            this.loadPlayers();\r\n            this.closeModal();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل إضافة اللاعب',\r\n              'خطأ في الإضافة'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء إضافة اللاعب',\r\n            'خطأ في الإضافة'\r\n          );\r\n        },\r\n      });\r\n  }\r\n\r\n  confirmDelete(player: any, event: Event): void {\r\n    event.stopPropagation();\r\n    this.selectedPlayerToDelete = player;\r\n    this.showDeleteModal = true;\r\n  }\r\n\r\n  deleteConfirmedPlayer(): void {\r\n    if (!this.selectedPlayerToDelete) return;\r\n\r\n    this.friendlyMatchService\r\n      .deleteFriendlyPlayerAsync(this.selectedPlayerToDelete.playerId)\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success(\r\n              `تم حذف اللاعب ${this.selectedPlayerToDelete.fullName} بنجاح`,\r\n              'تم الحذف'\r\n            );\r\n            // Refresh cache and reload players\r\n            this.friendlyMatchService.refreshFriendlyPlayers();\r\n            this.loadPlayers();\r\n            if (\r\n              this.selectedPlayer?.playerId ===\r\n              this.selectedPlayerToDelete.playerId\r\n            ) {\r\n              this.selectedPlayer = null;\r\n              this.displayMatches = [];\r\n            }\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل حذف اللاعب',\r\n              'خطأ في الحذف'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message || error.message || 'حصل خطأ أثناء حذف اللاعب',\r\n            'خطأ في الحذف'\r\n          );\r\n        },\r\n      });\r\n\r\n    this.showDeleteModal = false;\r\n    this.selectedPlayerToDelete = null;\r\n  }\r\n\r\n  getActivePlayersCount(): number {\r\n    return this.players.filter((p) => p.isActive).length;\r\n  }\r\n\r\n  getRecentMatches(): any[] {\r\n    return this.displayMatches.slice(0, 10);\r\n  }\r\n\r\n  // Record Match Modal methods\r\n  openRecordMatchModal(player?: any): void {\r\n    this.selectedPlayerForMatch = player || null;\r\n    this.matchForm.player1Id = player?.playerId || 0;\r\n    this.matchForm.player2Id = 0;\r\n    this.matchForm.player1Score = null;\r\n    this.matchForm.player2Score = null;\r\n    this.matchForm.playedOn = new Date();\r\n    this.showRecordMatchModal = true;\r\n  }\r\n\r\n  closeRecordMatchModal(): void {\r\n    this.showRecordMatchModal = false;\r\n    this.selectedPlayerForMatch = null;\r\n    this.matchForm = {\r\n      player1Id: 0,\r\n      player2Id: 0,\r\n      player1Score: 0,\r\n      player2Score: 0,\r\n      playedOn: new Date(),\r\n    };\r\n  }\r\n\r\n  recordNewMatch(): void {\r\n    if (!this.matchForm.player1Id || !this.matchForm.player2Id) {\r\n      this.toastr.warning('الرجاء اختيار كلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    // Only check for same player in new match mode, not edit mode\r\n    if (\r\n      !this.selectedPlayerForMatch &&\r\n      this.matchForm.player1Id === this.matchForm.player2Id\r\n    ) {\r\n      this.toastr.warning(\r\n        'لا يمكن أن يكون اللاعب الأول والثاني نفس الشخص',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === null ||\r\n      this.matchForm.player2Score === null\r\n    ) {\r\n      this.toastr.warning('الرجاء إدخال النقاط لكلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (this.matchForm.player1Score < 0 || this.matchForm.player2Score < 0) {\r\n      this.toastr.warning('لا يمكن أن تكون النقاط سالبة', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === 0 &&\r\n      this.matchForm.player2Score === 0\r\n    ) {\r\n      this.toastr.warning(\r\n        'يجب أن يكون لدى لاعب واحد على الأقل نقاط إيجابية (0-0 غير مسموح)',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    const matchData = {\r\n      player1Id: this.matchForm.player1Id,\r\n      player2Id: this.matchForm.player2Id,\r\n      player1Score: this.matchForm.player1Score,\r\n      player2Score: this.matchForm.player2Score,\r\n      playedOn: this.matchForm.playedOn,\r\n    };\r\n\r\n    this.isRecordingMatch = true;\r\n\r\n    this.friendlyMatchService.recordFriendlyMatchAsync(matchData).subscribe({\r\n      next: (response) => {\r\n        if (response.success) {\r\n          // Get player names for the toast message\r\n          const player1 = this.players.find(\r\n            (p) => p.playerId === this.matchForm.player1Id\r\n          );\r\n          const player2 = this.players.find(\r\n            (p) => p.playerId === this.matchForm.player2Id\r\n          );\r\n\r\n          this.toastr.success(\r\n            `تم تسجيل المباراة بنجاح: ${player1?.fullName} (${this.matchForm.player1Score}) - ${player2?.fullName} (${this.matchForm.player2Score})`,\r\n            'تم تسجيل المباراة'\r\n          );\r\n\r\n          // Refresh cache and reload data\r\n          this.friendlyMatchService.refreshFriendlyMatches();\r\n          this.friendlyMatchService.refreshFriendlyPlayers();\r\n          this.loadPlayers();\r\n          this.calculateStatistics();\r\n          if (this.selectedPlayer) {\r\n            this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n          }\r\n          this.loadAllMatches();\r\n          this.closeRecordMatchModal();\r\n        } else {\r\n          this.toastr.error(\r\n            response.message || 'فشل تسجيل المباراة',\r\n            'خطأ في التسجيل'\r\n          );\r\n        }\r\n        this.isRecordingMatch = false;\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تسجيل المباراة',\r\n          'خطأ في التسجيل'\r\n        );\r\n        this.isRecordingMatch = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  getOpponentsForPlayer(playerId: number): any[] {\r\n    // In edit mode, allow selecting any player except the current player1\r\n    if (this.selectedPlayerForMatch) {\r\n      return this.players.filter(\r\n        (p) => p.playerId !== playerId && p.isActive !== false\r\n      );\r\n    }\r\n    // In new match mode, filter out the selected player1\r\n    return this.players.filter(\r\n      (p) => p.playerId !== playerId && p.isActive !== false\r\n    );\r\n  }\r\n\r\n  getAllActivePlayers(): any[] {\r\n    // If isActive is undefined, consider all players as active\r\n    return this.players.filter((p) => p.isActive !== false);\r\n  }\r\n\r\n  validateScore(player: 'player1' | 'player2'): void {\r\n    if (player === 'player1') {\r\n      if (\r\n        this.matchForm.player1Score !== null &&\r\n        this.matchForm.player1Score < 0\r\n      ) {\r\n        this.matchForm.player1Score = 0;\r\n      }\r\n    } else {\r\n      if (\r\n        this.matchForm.player2Score !== null &&\r\n        this.matchForm.player2Score < 0\r\n      ) {\r\n        this.matchForm.player2Score = 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  // All matches management\r\n  loadAllMatches(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches: any) => {\r\n        this.allMatches = matches.sort(\r\n          (a: any, b: any) =>\r\n            new Date(b.playedOn).getTime() - new Date(a.playedOn).getTime()\r\n        );\r\n        this.totalMatches = matches.length;\r\n        this.totalPages = Math.ceil(this.allMatches.length / this.itemsPerPage);\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Cache-based filtering\r\n  loadFilteredMatchesFromCache(): void {\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (allMatches: any) => {\r\n        let filteredMatches = [...allMatches];\r\n\r\n        // Apply date filter\r\n        if (this.filterForm.dateFilter !== DateFilter.AllTime) {\r\n          const now = new Date();\r\n          let cutoffDate: Date;\r\n\r\n          switch (this.filterForm.dateFilter) {\r\n            case DateFilter.Today:\r\n              cutoffDate = new Date(\r\n                now.getFullYear(),\r\n                now.getMonth(),\r\n                now.getDate()\r\n              );\r\n              break;\r\n            case DateFilter.Last3Days:\r\n              cutoffDate = new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            case DateFilter.LastWeek:\r\n              cutoffDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            case DateFilter.LastMonth:\r\n              cutoffDate = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\r\n              break;\r\n            default:\r\n              cutoffDate = new Date(0);\r\n          }\r\n\r\n          filteredMatches = filteredMatches.filter(\r\n            (match) => new Date(match.playedOn) >= cutoffDate\r\n          );\r\n        }\r\n\r\n        // Apply player filter\r\n        if (this.filterForm.playerId) {\r\n          // Get the selected player's name\r\n          const selectedPlayer = this.players.find(\r\n            (p) => p.playerId === this.filterForm.playerId\r\n          );\r\n          const selectedPlayerName = selectedPlayer?.fullName;\r\n\r\n          filteredMatches = filteredMatches.filter((match) => {\r\n            const isMatch =\r\n              match.player1Name === selectedPlayerName ||\r\n              match.player2Name === selectedPlayerName;\r\n\r\n            return isMatch;\r\n          });\r\n\r\n          // Reorder matches so selected player is always Player 1\r\n          filteredMatches = this.reorderMatchesForSelectedPlayer(\r\n            filteredMatches,\r\n            selectedPlayerName\r\n          );\r\n        }\r\n\r\n        // Apply opponent filter\r\n        if (\r\n          this.filterForm.opponentIds &&\r\n          this.filterForm.opponentIds.length > 0\r\n        ) {\r\n          // Get opponent names\r\n          const opponentNames = this.filterForm.opponentIds\r\n            .map((id) => {\r\n              const player = this.players.find((p) => p.playerId === id);\r\n              return player?.fullName;\r\n            })\r\n            .filter((name) => name);\r\n\r\n          filteredMatches = filteredMatches.filter(\r\n            (match) =>\r\n              opponentNames.includes(match.player1Name) ||\r\n              opponentNames.includes(match.player2Name)\r\n          );\r\n        }\r\n\r\n        // Sort by date (newest first)\r\n        filteredMatches.sort(\r\n          (a, b) =>\r\n            new Date(b.playedOn).getTime() - new Date(a.playedOn).getTime()\r\n        );\r\n\r\n        this.allMatches = filteredMatches;\r\n        this.totalMatches = filteredMatches.length;\r\n        this.totalPages = Math.ceil(this.allMatches.length / this.itemsPerPage);\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات المفلترة',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Helper method to reorder matches so selected player is always Player 1\r\n  private reorderMatchesForSelectedPlayer(\r\n    matches: any[],\r\n    selectedPlayerName: string\r\n  ): any[] {\r\n    return matches.map((match) => {\r\n      // If the selected player is already Player 1, keep as is\r\n      if (match.player1Name === selectedPlayerName) {\r\n        return match;\r\n      }\r\n\r\n      // If the selected player is Player 2, swap the players\r\n      if (match.player2Name === selectedPlayerName) {\r\n        return {\r\n          ...match,\r\n          player1Name: match.player2Name,\r\n          player2Name: match.player1Name,\r\n          player1Score: match.player2Score,\r\n          player2Score: match.player1Score,\r\n          player1Id: match.player2Id,\r\n          player2Id: match.player1Id,\r\n        };\r\n      }\r\n\r\n      // If neither player matches (shouldn't happen with our filter), keep as is\r\n      return match;\r\n    });\r\n  }\r\n\r\n  loadFilteredMatches(): void {\r\n    const filter: any = {\r\n      page: this.currentPage,\r\n      pageSize: this.itemsPerPage,\r\n      dateFilter: this.filterForm.dateFilter,\r\n    };\r\n\r\n    if (this.filterForm.playerId) {\r\n      filter.playerId = this.filterForm.playerId;\r\n    }\r\n    if (this.filterForm.opponentIds && this.filterForm.opponentIds.length > 0) {\r\n      filter.opponentIds = this.filterForm.opponentIds;\r\n    }\r\n\r\n    this.friendlyMatchService.getFilteredMatches(filter).subscribe({\r\n      next: (result: any) => {\r\n        this.allMatches = result.matches;\r\n        this.totalMatches = result.totalCount;\r\n        this.totalPages = result.totalPages;\r\n      },\r\n      error: (error: any) => {\r\n        this.toastr.error(\r\n          error.error?.message ||\r\n            error.message ||\r\n            'حصل خطأ أثناء تحميل المباريات المفلترة',\r\n          'خطأ في التحميل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  onFilterChange(): void {\r\n    this.currentPage = 1;\r\n    this.loadFilteredMatchesFromCache();\r\n  }\r\n\r\n  clearFilters(): void {\r\n    this.filterForm = {\r\n      playerId: 0,\r\n      opponentIds: [],\r\n      dateFilter: DateFilter.AllTime,\r\n    };\r\n    this.currentPage = 1;\r\n    this.loadAllMatches();\r\n  }\r\n\r\n  getPaginatedMatches(): any[] {\r\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n    const endIndex = startIndex + this.itemsPerPage;\r\n    return this.allMatches.slice(startIndex, endIndex);\r\n  }\r\n\r\n  changePage(page: number): void {\r\n    if (page >= 1 && page <= this.totalPages) {\r\n      this.currentPage = page;\r\n    }\r\n  }\r\n\r\n  getPlayerName(playerId: number): string {\r\n    const player = this.players.find((p) => p.playerId === playerId);\r\n    return player ? player.fullName : 'Unknown Player';\r\n  }\r\n\r\n  // Edit match functionality\r\n  editMatch(match: any): void {\r\n    // Find player IDs by names\r\n    const player1 = this.players.find((p) => p.fullName === match.player1Name);\r\n    const player2 = this.players.find((p) => p.fullName === match.player2Name);\r\n\r\n    this.matchForm = {\r\n      player1Id: player1?.playerId || 0,\r\n      player2Id: player2?.playerId || 0,\r\n      player1Score: match.player1Score,\r\n      player2Score: match.player2Score,\r\n      playedOn: new Date(match.playedOn),\r\n    };\r\n    this.selectedPlayerForMatch = match;\r\n    this.showRecordMatchModal = true;\r\n  }\r\n\r\n  updateMatch(): void {\r\n    if (!this.selectedPlayerForMatch) return;\r\n\r\n    if (!this.matchForm.player1Id || !this.matchForm.player2Id) {\r\n      this.toastr.warning('الرجاء اختيار كلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    // In edit mode, we don't need to check for same player since names are fixed\r\n\r\n    if (\r\n      this.matchForm.player1Score === null ||\r\n      this.matchForm.player2Score === null\r\n    ) {\r\n      this.toastr.warning('الرجاء إدخال النقاط لكلا اللاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (this.matchForm.player1Score < 0 || this.matchForm.player2Score < 0) {\r\n      this.toastr.warning('لا يمكن أن تكون النقاط سالبة', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.matchForm.player1Score === 0 &&\r\n      this.matchForm.player2Score === 0\r\n    ) {\r\n      this.toastr.warning(\r\n        'يجب أن يكون لدى لاعب واحد على الأقل نقاط إيجابية (0-0 غير مسموح)',\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.isRecordingMatch = true;\r\n\r\n    this.friendlyMatchService\r\n      .updateFriendlyMatchAsync(this.selectedPlayerForMatch.matchId, {\r\n        player1Id: this.matchForm.player1Id,\r\n        player2Id: this.matchForm.player2Id,\r\n        player1Score: this.matchForm.player1Score,\r\n        player2Score: this.matchForm.player2Score,\r\n      })\r\n      .subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            // Get player names for the toast message\r\n            const player1 = this.players.find(\r\n              (p) => p.playerId === this.matchForm.player1Id\r\n            );\r\n            const player2 = this.players.find(\r\n              (p) => p.playerId === this.matchForm.player2Id\r\n            );\r\n\r\n            this.toastr.success(\r\n              `تم تحديث المباراة بنجاح: ${player1?.fullName} (${this.matchForm.player1Score}) - ${player2?.fullName} (${this.matchForm.player2Score})`,\r\n              'تم تحديث المباراة'\r\n            );\r\n\r\n            // Refresh cache and reload data\r\n            this.friendlyMatchService.refreshFriendlyMatches();\r\n            this.loadAllMatches();\r\n            this.calculateStatistics();\r\n            if (this.selectedPlayer) {\r\n              this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n            }\r\n            this.closeRecordMatchModal();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل تحديث المباراة',\r\n              'خطأ في التحديث'\r\n            );\r\n          }\r\n          this.isRecordingMatch = false;\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء تحديث المباراة',\r\n            'خطأ في التحديث'\r\n          );\r\n          this.isRecordingMatch = false;\r\n        },\r\n      });\r\n  }\r\n\r\n  deleteMatchFromList(matchId: number): void {\r\n    if (confirm('هل أنت متأكد من حذف هذه المباراة؟')) {\r\n      this.friendlyMatchService.deleteFriendlyMatchAsync(matchId).subscribe({\r\n        next: (response: any) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم حذف المباراة بنجاح', 'تم الحذف');\r\n            // Refresh cache and reload data\r\n            this.friendlyMatchService.refreshFriendlyMatches();\r\n            this.loadAllMatches();\r\n            this.calculateStatistics();\r\n            if (this.selectedPlayer) {\r\n              this.loadPlayerMatches(this.selectedPlayer.playerId);\r\n            }\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل حذف المباراة',\r\n              'خطأ في الحذف'\r\n            );\r\n          }\r\n        },\r\n        error: (error: any) => {\r\n          this.toastr.error(\r\n            error.error?.message ||\r\n              error.message ||\r\n              'حصل خطأ أثناء حذف المباراة',\r\n            'خطأ في الحذف'\r\n          );\r\n        },\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div\r\n  class=\"container mx-auto p-4 flex flex-col sm:flex-row overflow-hidden h-screen\"\r\n>\r\n  <!-- Chats List -->\r\n  <div\r\n    class=\"w-full sm:w-1/3 border-r border-gray-600 sm:block\"\r\n    [ngClass]=\"{ hidden: selectedChat }\"\r\n  >\r\n    <div class=\"flex items-center justify-between mb-6\">\r\n      <h2 class=\"text-2xl font-bold text-white\">📬 Friendly Inbox</h2>\r\n    </div>\r\n\r\n    <!-- No Chats -->\r\n    <div *ngIf=\"playerChats.length === 0\" class=\"text-center text-gray-300\">\r\n      No friendly messages here 📭\r\n    </div>\r\n\r\n    <!-- Chats List -->\r\n    <div\r\n      *ngIf=\"playerChats.length > 0\"\r\n      class=\"space-y-2 overflow-y-auto max-h-[calc(100vh-120px)]\"\r\n    >\r\n      <div\r\n        *ngFor=\"let chat of playerChats; trackBy: trackByPlayerId\"\r\n        class=\"p-4 backdrop-blur-sm border border-gray-600 rounded-lg hover:bg-gray-700 cursor-pointer flex items-center justify-between\"\r\n        (click)=\"openChat(chat.senderId)\"\r\n      >\r\n        <div>\r\n          <p class=\"font-bold text-white\">{{ chat.senderFullName }}</p>\r\n          <p class=\"text-sm text-gray-300 truncate\">{{ chat.lastMessage }}</p>\r\n        </div>\r\n        <span\r\n          *ngIf=\"chat.unreadCount > 0\"\r\n          class=\"bg-green-600 text-white text-xs font-bold rounded-full px-2 py-1\"\r\n        >\r\n          {{ chat.unreadCount }}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Chat View -->\r\n  <div\r\n    class=\"w-full sm:w-2/3 flex flex-col h-full relative\"\r\n    [ngClass]=\"{ block: selectedChat, 'hidden sm:flex': !selectedChat }\"\r\n  >\r\n    <div *ngIf=\"selectedChat; else noChatSelected\" class=\"flex flex-col h-full\">\r\n      <!-- Chat Header - Fixed -->\r\n      <div\r\n        class=\"fixed left-0 right-0 z-40 p-2 backdrop-blur-sm border-b border-gray-600 flex items-center justify-between bg-black bg-opacity-90\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n        [style.top.px]=\"navbarHeight\"\r\n      >\r\n        <div class=\"flex items-center\">\r\n          <button\r\n            (click)=\"closeChat()\"\r\n            class=\"mr-4 text-gray-300 hover:text-white transition\"\r\n          >\r\n            <i class=\"fa-solid fa-arrow-left\" style=\"color: #ffffff\"></i>\r\n          </button>\r\n          <div>\r\n            <p class=\"font-bold text-white text-sm p-0\">\r\n              {{ selectedChat.senderFullName }}\r\n            </p>\r\n            <p class=\"text-xs text-gray-400 p-0\">\r\n              {{ selectedChat.senderPhoneNumber }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Messages - Scrollable Area with padding for fixed header and footer -->\r\n      <div\r\n        #messagesContainer\r\n        class=\"flex-1 p-4 overflow-y-auto backdrop-blur-sm\"\r\n        [style.margin-top.px]=\"navbarHeight + 80\"\r\n        style=\"margin-bottom: 80px\"\r\n      >\r\n        <div\r\n          *ngFor=\"\r\n            let message of selectedChat.messages;\r\n            trackBy: trackByMessageId\r\n          \"\r\n          class=\"mb-4\"\r\n          [ngClass]=\"{\r\n            'text-right': !message.isFromAdmin,\r\n            'text-left': message.isFromAdmin\r\n          }\"\r\n        >\r\n          <div\r\n            class=\"inline-block p-3 rounded-lg max-w-xs\"\r\n            [ngClass]=\"{\r\n              'bg-green-700': !message.isFromAdmin,\r\n              'bg-gray-700 ': message.isFromAdmin\r\n            }\"\r\n          >\r\n            <p class=\"text-white\">{{ message.content }}</p>\r\n            <p class=\"text-xs mt-1 text-gray-300\">\r\n              {{ message.sentAt | date : \"MMM d, y, hh:mm a\" }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Reply Input - Fixed -->\r\n      <div\r\n        class=\"fixed bottom-0 left-0 right-0 z-50 p-4 bg-black bg-opacity-90 backdrop-blur-sm border-t border-gray-600\"\r\n        [ngClass]=\"{ 'sm:left-1/3': selectedChat }\"\r\n      >\r\n        <form (ngSubmit)=\"sendReply()\" class=\"flex items-center gap-2\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"replyMessages[selectedChat.messages[0].id]\"\r\n            [ngModelOptions]=\"{ standalone: true }\"\r\n            (ngModelChange)=\"\r\n              replyMessages[selectedChat.messages[0].id] = $event\r\n            \"\r\n            placeholder=\"Write your reply...\"\r\n            class=\"flex-1 p-2 border border-gray-600 rounded-lg bg-gray-800 text-white focus:outline-none focus:ring-2 focus:ring-blue-600 placeholder-gray-400\"\r\n          />\r\n          <button\r\n            type=\"submit\"\r\n            class=\"bg-blue-600 text-white p-2 rounded-lg hover:bg-blue-700 transition disabled:bg-gray-600\"\r\n            [disabled]=\"!replyMessages[selectedChat.messages[0].id]\"\r\n          >\r\n            Reply\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Placeholder when no chat is selected -->\r\n    <ng-template #noChatSelected>\r\n      <div class=\"w-full flex items-center justify-center text-gray-300\">\r\n        Select a friendly chat to view messages 📩\r\n      </div>\r\n    </ng-template>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectorRef,\r\n  ViewChild,\r\n  ElementRef,\r\n  AfterViewChecked,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport { FriendlyMessageService } from '../../../core/services/friendly-message.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {\r\n  FriendlyMessageDto,\r\n  FriendlyMessageResponse,\r\n} from 'friendly-message-types';\r\nimport { Subscription } from 'rxjs';\r\n\r\ninterface PlayerChat {\r\n  senderId: string; // استخدام string فقط للتوافق مع GUID\r\n  senderFullName: string;\r\n  senderPhoneNumber: string; // إضافة رقم الهاتف\r\n  lastMessage: string;\r\n  lastMessageDate: string;\r\n  unreadCount: number;\r\n  messages: FriendlyMessageDto[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-friendly-inbox',\r\n  templateUrl: './friendly-inbox.component.html',\r\n  styleUrls: ['./friendly-inbox.component.css'],\r\n})\r\nexport class FriendlyInboxComponent\r\n  implements OnInit, AfterViewChecked, OnDestroy\r\n{\r\n  playerChats: PlayerChat[] = [];\r\n  selectedPlayerId: string | null = null;\r\n  selectedChat: PlayerChat | null = null;\r\n  replyMessages: { [messageId: number]: string } = {};\r\n  private updateStatusSubscription?: Subscription;\r\n  private refreshSubscription?: Subscription;\r\n  navbarHeight = 60; // default navbar height\r\n\r\n  @ViewChild('messagesContainer')\r\n  messagesContainer!: ElementRef<HTMLDivElement>;\r\n\r\n  constructor(\r\n    private friendlyMessageService: FriendlyMessageService,\r\n    private toastr: ToastrService,\r\n    private cdr: ChangeDetectorRef\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadFriendlyMessages();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.updateStatusSubscription) {\r\n      this.updateStatusSubscription.unsubscribe();\r\n    }\r\n    if (this.refreshSubscription) {\r\n      this.refreshSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  private loadFriendlyMessages(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: FriendlyMessageResponse) => {\r\n        if (response.success && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n\r\n          // عرض رسالة النجاح مع عدد الرسائل\r\n          const totalMessages = response.messages.length;\r\n          const unreadMessages = response.messages.filter(\r\n            (msg) => !msg.isRead && !msg.isFromAdmin\r\n          ).length;\r\n        } else {\r\n          this.toastr.error(response.message || 'لا يوجد رسائل ودية');\r\n        }\r\n      },\r\n      error: (err: any) => {\r\n        this.toastr.error(\r\n          err.error?.message || err.message || 'حصل خطأ أثناء جلب الرسائل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  // Add refresh method for immediate updates\r\n  refreshMessages(): void {\r\n    this.friendlyMessageService.getAllMessages().subscribe({\r\n      next: (response: FriendlyMessageResponse) => {\r\n        if (response.success && response.messages) {\r\n          const groupedMessages = this.groupMessagesBySender(response.messages);\r\n          // ترتيب المحادثات حسب الأحدث (آخر رسالة)\r\n          this.playerChats = groupedMessages.sort(\r\n            (a, b) =>\r\n              new Date(b.lastMessageDate).getTime() -\r\n              new Date(a.lastMessageDate).getTime()\r\n          );\r\n\r\n          // عرض رسالة التحديث مع عدد الرسائل\r\n          const totalMessages = response.messages.length;\r\n          const unreadMessages = response.messages.filter(\r\n            (msg) => !msg.isRead && !msg.isFromAdmin\r\n          ).length;\r\n\r\n          if (totalMessages > 0) {\r\n            this.toastr.info(\r\n              `تم تحديث ${totalMessages} رسالة${\r\n                unreadMessages > 0\r\n                  ? ` (${unreadMessages} رسالة غير مقروءة)`\r\n                  : ''\r\n              }`,\r\n              'تم تحديث الرسائل'\r\n            );\r\n          } else {\r\n            this.toastr.info('لا توجد رسائل ودية حالياً', 'معلومات');\r\n          }\r\n        } else {\r\n          this.toastr.error(response.message || 'لا يوجد رسائل ودية');\r\n        }\r\n      },\r\n      error: (err: any) => {\r\n        this.toastr.error(\r\n          err.error?.message || err.message || 'حصل خطأ أثناء جلب الرسائل'\r\n        );\r\n      },\r\n    });\r\n  }\r\n\r\n  ngAfterViewChecked(): void {\r\n    if (this.selectedChat && this.messagesContainer) {\r\n      this.scrollToBottom();\r\n    }\r\n  }\r\n\r\n  groupMessagesBySender(messages: FriendlyMessageDto[]): PlayerChat[] {\r\n    const chatMap: { [senderId: string | number]: PlayerChat } = {};\r\n    messages.forEach((msg) => {\r\n      // استخدام senderId كـ playerId (قد يكون string أو number)\r\n      let playerId = msg.senderId || msg.playerId;\r\n\r\n      // إذا كان senderId هو GUID، نستخدمه كما هو\r\n      if (typeof playerId === 'string' && playerId.includes('-')) {\r\n        // هذا GUID، نستخدمه كما هو\r\n      } else if (typeof playerId === 'string') {\r\n        // محاولة تحويل إلى number\r\n        const parsedId = parseInt(playerId, 10);\r\n        if (!isNaN(parsedId) && parsedId > 0) {\r\n          playerId = parsedId;\r\n        }\r\n      }\r\n\r\n      // تأكد من أن playerId موجود\r\n      if (!playerId) {\r\n        return; // تخطي هذه الرسالة\r\n      }\r\n\r\n      if (!chatMap[playerId]) {\r\n        chatMap[playerId] = {\r\n          senderId: String(playerId), // تحويل إلى string\r\n          senderFullName:\r\n            msg.senderFullName || msg.playerFullName || `اللاعب ${playerId}`, // fallback للاسم\r\n          senderPhoneNumber: msg.senderPhoneNumber || 'غير متوفر', // استخدام الحقل الصحيح مع fallback\r\n          lastMessage: '',\r\n          lastMessageDate: '',\r\n          unreadCount: 0,\r\n          messages: [],\r\n        };\r\n      }\r\n      chatMap[playerId].messages.push(msg);\r\n      if (!msg.isFromAdmin && !msg.isRead) {\r\n        chatMap[playerId].unreadCount++;\r\n      }\r\n    });\r\n\r\n    const result = Object.values(chatMap).map((chat) => {\r\n      // ترتيب الرسائل من الأقدم للأحدث\r\n      chat.messages = chat.messages.sort(\r\n        (a, b) => new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n      );\r\n      // آخر رسالة\r\n      const lastMsg = chat.messages[chat.messages.length - 1];\r\n      chat.lastMessage = lastMsg?.content ?? '';\r\n      chat.lastMessageDate = lastMsg?.sentAt ?? '';\r\n      return chat;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  openChat(playerId: string): void {\r\n    this.selectedPlayerId = playerId;\r\n    this.selectedChat =\r\n      this.playerChats.find((chat) => chat.senderId === playerId) || null;\r\n\r\n    if (this.selectedChat) {\r\n      // تأكد من وجود اسم اللاعب\r\n      if (!this.selectedChat.senderFullName) {\r\n        this.selectedChat.senderFullName = `اللاعب ${this.selectedChat.senderId}`;\r\n      }\r\n      // Mark messages as read when opening chat\r\n      this.selectedChat.messages\r\n        .filter((msg) => !msg.isRead && !msg.isFromAdmin)\r\n        .forEach((msg) => {\r\n          this.friendlyMessageService.markMessageAsRead(msg.id).subscribe({\r\n            next: (response: any) => {\r\n              if (response.success) {\r\n                msg.isRead = true;\r\n                this.selectedChat!.unreadCount =\r\n                  this.selectedChat!.messages.filter(\r\n                    (m) => !m.isRead && !m.isFromAdmin\r\n                  ).length;\r\n                this.cdr.detectChanges();\r\n              }\r\n            },\r\n            error: (err: any) => {\r\n              this.toastr.error(\r\n                err.error?.message ||\r\n                  err.message ||\r\n                  'حصل خطأ أثناء تحديث حالة الرسالة',\r\n                'خطأ في التحديث'\r\n              );\r\n            },\r\n          });\r\n        });\r\n      this.cdr.detectChanges();\r\n    }\r\n  }\r\n\r\n  closeChat(): void {\r\n    this.selectedPlayerId = null;\r\n    this.selectedChat = null;\r\n    this.replyMessages = {};\r\n    this.cdr.detectChanges();\r\n  }\r\n\r\n  sendReply(): void {\r\n    if (!this.selectedChat) {\r\n      this.toastr.warning('الرجاء اختيار محادثة');\r\n      return;\r\n    }\r\n\r\n    if (!this.selectedChat.senderId) {\r\n      this.toastr.error('خطأ: معرف اللاعب غير صحيح');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      !this.selectedChat.messages ||\r\n      this.selectedChat.messages.length === 0\r\n    ) {\r\n      this.toastr.error('خطأ: لا توجد رسائل في هذه المحادثة');\r\n      return;\r\n    }\r\n\r\n    const replyContent =\r\n      this.replyMessages[this.selectedChat.messages[0].id]?.trim();\r\n    if (!replyContent) {\r\n      this.toastr.warning('الرجاء كتابة رد');\r\n      return;\r\n    }\r\n\r\n    this.friendlyMessageService\r\n      .sendAdminReply(this.selectedChat.senderId, replyContent)\r\n      .subscribe({\r\n        next: (response: FriendlyMessageResponse) => {\r\n          if (response.success) {\r\n            const playerName =\r\n              this.selectedChat!.senderFullName ||\r\n              `اللاعب ${this.selectedChat!.senderId}`;\r\n            this.toastr.success(\r\n              `تم إرسال الرد بنجاح إلى ${playerName}`,\r\n              'تم الإرسال'\r\n            );\r\n            this.replyMessages[this.selectedChat!.messages[0].id] = '';\r\n\r\n            const newMessage: FriendlyMessageDto = {\r\n              id: Math.random(),\r\n              senderId: this.selectedChat!.senderId,\r\n              senderFullName:\r\n                this.selectedChat!.senderFullName ||\r\n                `اللاعب ${this.selectedChat!.senderId}`,\r\n              senderPhoneNumber:\r\n                this.selectedChat!.senderPhoneNumber || 'غير متوفر',\r\n              content: replyContent,\r\n              isRead: true,\r\n              sentAt: new Date().toISOString(),\r\n              isFromAdmin: true,\r\n              messageType: 'admin_reply',\r\n            };\r\n\r\n            // تحديث الرسائل في المحادثة المحددة\r\n            this.selectedChat!.messages.push(newMessage);\r\n            this.selectedChat!.messages.sort(\r\n              (a, b) =>\r\n                new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\r\n            );\r\n\r\n            // تحديث آخر رسالة في قائمة المحادثات\r\n            this.selectedChat!.lastMessage = replyContent;\r\n            this.selectedChat!.lastMessageDate = newMessage.sentAt;\r\n\r\n            // تحديث اسم اللاعب إذا كان غير موجود\r\n            if (!this.selectedChat!.senderFullName) {\r\n              this.selectedChat!.senderFullName = `اللاعب ${\r\n                this.selectedChat!.senderId\r\n              }`;\r\n            }\r\n\r\n            // إعادة ترتيب قائمة المحادثات حسب الأحدث\r\n            this.playerChats.sort(\r\n              (a, b) =>\r\n                new Date(b.lastMessageDate).getTime() -\r\n                new Date(a.lastMessageDate).getTime()\r\n            );\r\n\r\n            // تحديث المحادثة المحددة بعد إعادة الترتيب\r\n            this.selectedChat =\r\n              this.playerChats.find(\r\n                (chat) => chat.senderId === this.selectedPlayerId\r\n              ) || null;\r\n\r\n            this.cdr.detectChanges();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل إرسال الرد',\r\n              'خطأ في الإرسال'\r\n            );\r\n          }\r\n        },\r\n        error: (err: any) => {\r\n          this.toastr.error(\r\n            err.error?.message || err.message || 'حصل خطأ أثناء إرسال الرد',\r\n            'خطأ في الإرسال'\r\n          );\r\n        },\r\n      });\r\n  }\r\n\r\n  private scrollToBottom(): void {\r\n    if (this.messagesContainer) {\r\n      const container = this.messagesContainer.nativeElement;\r\n      container.scrollTop = container.scrollHeight;\r\n    }\r\n  }\r\n\r\n  trackByPlayerId(index: number, chat: PlayerChat): string {\r\n    return chat.senderId;\r\n  }\r\n\r\n  trackByMessageId(index: number, message: FriendlyMessageDto): number {\r\n    return message.id;\r\n  }\r\n}\r\n","<div class=\"md:container mx-auto\">\r\n  <!-- Teams Tournament Dashboard -->\r\n  <div class=\"p-6\">\r\n    <!-- Header -->\r\n    <div class=\"mb-6\">\r\n      <h2 class=\"text-2xl font-bold text-white mb-4\">\r\n        Teams Tournament Management\r\n      </h2>\r\n\r\n      <!-- Quick Actions -->\r\n      <div class=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n        <button\r\n          class=\"bg-green-600 text-white p-4 rounded-lg hover:bg-green-700 transition-all\"\r\n          (click)=\"openCreateTournamentModal()\"\r\n        >\r\n          <h3 class=\"text-lg font-bold\">Create Tournament</h3>\r\n          <p class=\"text-sm\">Create a new teams tournament</p>\r\n        </button>\r\n\r\n        <button\r\n          class=\"bg-purple-600 text-white p-4 rounded-lg hover:bg-purple-700 transition-all\"\r\n          (click)=\"showAddPlayerModal = true\"\r\n        >\r\n          <h3 class=\"text-lg font-bold\">Add Player</h3>\r\n          <p class=\"text-sm\">Add new player to the pool</p>\r\n        </button>\r\n\r\n        <div class=\"bg-gray-700 p-4 rounded-lg\">\r\n          <h3 class=\"text-lg font-bold text-white\">Statistics</h3>\r\n          <p class=\"text-sm text-gray-300\">\r\n            Tournaments: {{ tournaments.length }}\r\n          </p>\r\n          <p class=\"text-sm text-gray-300\">\r\n            Available Players: {{ availablePlayers.length }}\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"bg-blue-700 p-4 rounded-lg\">\r\n          <h3 class=\"text-lg font-bold text-white\">Active Tournament</h3>\r\n          <p class=\"text-sm text-gray-300\" *ngIf=\"activeTournament\">\r\n            {{ activeTournament.name }}\r\n          </p>\r\n          <p class=\"text-sm text-gray-300\" *ngIf=\"!activeTournament\">\r\n            No active tournament\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Loading Tournaments -->\r\n    <div *ngIf=\"isLoadingTournaments\" class=\"flex justify-center py-8\">\r\n      <div\r\n        class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\r\n      ></div>\r\n    </div>\r\n\r\n    <!-- Tournaments List -->\r\n    <div *ngIf=\"!isLoadingTournaments\" class=\"space-y-4\">\r\n      <h3 class=\"text-xl font-semibold text-white\">All Tournaments</h3>\r\n\r\n      <div *ngIf=\"tournaments.length === 0\" class=\"text-center py-8\">\r\n        <p class=\"text-gray-400\">No tournaments created yet.</p>\r\n      </div>\r\n\r\n      <!-- Tournaments Grid -->\r\n      <div\r\n        *ngIf=\"tournaments.length > 0\"\r\n        class=\"grid grid-cols-1 lg:grid-cols-1 gap-6\"\r\n      >\r\n        <div\r\n          *ngFor=\"let tournament of tournaments\"\r\n          class=\"bg-black bg-opacity-50 rounded-lg p-6 border border-gray-700\"\r\n        >\r\n          <!-- Tournament Header -->\r\n          <div class=\"flex justify-between items-start mb-4\">\r\n            <div>\r\n              <h4 class=\"text-xl font-bold text-white mb-2\">\r\n                {{ tournament.name }}\r\n              </h4>\r\n              <div class=\"flex items-center space-x-4 text-sm\">\r\n                <span class=\"text-gray-300\"\r\n                  >Status:\r\n                  <span [class]=\"getStatusColor(tournament.status)\">{{\r\n                    tournament.status\r\n                  }}</span></span\r\n                >\r\n                <span class=\"text-gray-300\"\r\n                  >Teams: {{ tournament.teams.length }}/{{\r\n                    tournament.teamCount\r\n                  }}</span\r\n                >\r\n                <span class=\"text-gray-300\"\r\n                  >Players per team: {{ tournament.playersPerTeam }}</span\r\n                >\r\n                <span class=\"text-sm text-gray-300\"\r\n                  >Scoring System: {{ tournament.systemOfScoring }}</span\r\n                >\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- Tournament Actions -->\r\n          <div class=\"flex flex-wrap gap-2 mb-4\">\r\n            <!-- Create Team Button -->\r\n            <button\r\n              *ngIf=\"\r\n                tournament.status === 'Created' &&\r\n                getRemainingTeams(tournament) > 0\r\n              \"\r\n              (click)=\"openCreateTeamModal(tournament)\"\r\n              class=\"bg-blue-600 hover:bg-blue-700 text-white px-4 py-2 rounded text-sm transition-all\"\r\n            >\r\n              Create Team ({{ getRemainingTeams(tournament) }} remaining)\r\n            </button>\r\n\r\n            <!-- Start Tournament Button -->\r\n            <button\r\n              *ngIf=\"canStartTournament(tournament)\"\r\n              (click)=\"startTournament(tournament)\"\r\n              class=\"bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded text-sm transition-all\"\r\n            >\r\n              Start Tournament\r\n            </button>\r\n\r\n            <!-- Finish Tournament Button -->\r\n            <button\r\n              *ngIf=\"canFinishTournament(tournament)\"\r\n              (click)=\"finishTournament(tournament)\"\r\n              class=\"bg-yellow-600 hover:bg-yellow-700 text-white px-4 py-2 rounded text-sm transition-all\"\r\n            >\r\n              Finish Tournament\r\n            </button>\r\n\r\n            <!-- Delete Tournament Button -->\r\n            <button\r\n              *ngIf=\"canDeleteTournament(tournament)\"\r\n              (click)=\"deleteTournament(tournament)\"\r\n              class=\"bg-red-600 hover:bg-red-700 text-white px-4 py-2 rounded text-sm transition-all\"\r\n            >\r\n              Delete Tournament\r\n            </button>\r\n          </div>\r\n\r\n          <!-- Teams List -->\r\n          <div *ngIf=\"tournament.teams.length > 0\" class=\"mb-4\">\r\n            <h5 class=\"text-lg font-semibold text-white mb-3\">Teams</h5>\r\n            <div class=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\r\n              <div\r\n                *ngFor=\"let team of tournament.teams\"\r\n                class=\"bg-black bg-opacity-80 rounded p-3\"\r\n              >\r\n                <div class=\"font-medium text-white mb-2 text-center\">\r\n                  {{ team.teamName }}\r\n                </div>\r\n                <div class=\"text-sm text-gray-300 grid grid-cols-3 gap-2\">\r\n                  <span\r\n                    *ngFor=\"let playerName of getTeamPlayersNames(team)\"\r\n                    class=\"px-2 py-2 text-center items-center justify-center flex bg-black bg-opacity-50 border border-gray-600 rounded-full text-white text-xs\"\r\n                  >\r\n                    {{ playerName }}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <!-- No Teams Message -->\r\n          <div *ngIf=\"tournament.teams.length === 0\" class=\"text-center py-4\">\r\n            <p class=\"text-gray-400\">No teams created yet.</p>\r\n            <p class=\"text-sm text-gray-500\">\r\n              Create teams to start the tournament\r\n            </p>\r\n          </div>\r\n\r\n          <!-- Tournament Progress -->\r\n          <div class=\"mt-4 pt-4 border-t border-gray-700\">\r\n            <div class=\"flex justify-between text-sm text-gray-400\">\r\n              <span>Progress</span>\r\n              <span\r\n                >{{\r\n                  (tournament.teams.length / tournament.teamCount) * 100\r\n                    | number : \"1.0-0\"\r\n                }}%</span\r\n              >\r\n            </div>\r\n            <div class=\"w-full bg-gray-700 rounded-full h-2 mt-1\">\r\n              <div\r\n                class=\"bg-blue-600 h-2 rounded-full transition-all duration-300\"\r\n                [style.width.%]=\"\r\n                  (tournament.teams.length / tournament.teamCount) * 100\r\n                \"\r\n              ></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Tournament Players Section -->\r\n    <div class=\"mt-8\">\r\n      <h3 class=\"text-xl font-semibold text-white mb-4\">Tournament Players</h3>\r\n\r\n      <!-- Search Bar -->\r\n      <div class=\"mb-4\">\r\n        <div class=\"relative\">\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"playerSearchTerm\"\r\n            (input)=\"filterPlayers()\"\r\n            placeholder=\"Search players by name...\"\r\n            class=\"w-full px-4 py-2 pl-10 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n          />\r\n          <div\r\n            class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\"\r\n          >\r\n            <svg\r\n              class=\"h-5 w-5 text-gray-400\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n            >\r\n              <path\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                stroke-width=\"2\"\r\n                d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n              ></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div *ngIf=\"isLoadingPlayers\" class=\"flex justify-center py-8\">\r\n        <div\r\n          class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\r\n        ></div>\r\n      </div>\r\n\r\n      <!-- Players Grid -->\r\n      <div\r\n        *ngIf=\"!isLoadingPlayers && filteredPlayers.length > 0\"\r\n        class=\"grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\"\r\n      >\r\n        <div\r\n          *ngFor=\"let player of filteredPlayers\"\r\n          class=\"bg-black bg-opacity-50 p-4 rounded-lg cursor-pointer hover:bg-gray-400 transition-all border-2 border-gray-600\"\r\n          (click)=\"selectPlayer(player)\"\r\n        >\r\n          <div class=\"text-center\">\r\n            <div class=\"text-base font-bold text-white\">\r\n              {{ player.fullName }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        *ngIf=\"!isLoadingPlayers && filteredPlayers.length === 0\"\r\n        class=\"text-center py-8\"\r\n      >\r\n        <p\r\n          class=\"text-gray-400\"\r\n          *ngIf=\"playerSearchTerm && playerSearchTerm.trim() !== ''\"\r\n        >\r\n          No players found matching \"{{ playerSearchTerm }}\"\r\n        </p>\r\n        <p\r\n          class=\"text-gray-400\"\r\n          *ngIf=\"!playerSearchTerm || playerSearchTerm.trim() === ''\"\r\n        >\r\n          No players available. Add players first.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Create Tournament Modal -->\r\n  <div\r\n    *ngIf=\"showCreateTournamentModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    (click)=\"closeCreateTournamentModal()\"\r\n  >\r\n    <div\r\n      class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4 relative\"\r\n      (click)=\"$event.stopPropagation()\"\r\n    >\r\n      <!-- Fixed Close Button -->\r\n      <button\r\n        (click)=\"closeCreateTournamentModal()\"\r\n        class=\"absolute top-4 right-5 z-10 p-2 text-gray-100 hover:text-white text-lg font-bold transition-colors bg-gray-800 bg-opacity-70 rounded-full h-8 flex items-center justify-center\"\r\n      >\r\n        Exit ×\r\n      </button>\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Create New Tournament</h2>\r\n\r\n      <div class=\"space-y-4\">\r\n        <div>\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Tournament Name</label\r\n          >\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"createTournamentForm.name\"\r\n            placeholder=\"Enter tournament name\"\r\n            class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded placeholder-gray-400\"\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >Scoring System</label\r\n          >\r\n          <select\r\n            [(ngModel)]=\"createTournamentForm.systemOfScoring\"\r\n            class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded\"\r\n          >\r\n            <option value=\"Classic\">Classic (Win/Draw/Loss)</option>\r\n            <option value=\"Points\">Points System</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div class=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n              >Teams Count</label\r\n            >\r\n            <input\r\n              type=\"number\"\r\n              [(ngModel)]=\"createTournamentForm.teamCount\"\r\n              min=\"2\"\r\n              max=\"16\"\r\n              class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n              >Players per Team</label\r\n            >\r\n            <input\r\n              type=\"number\"\r\n              [(ngModel)]=\"createTournamentForm.playersPerTeam\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"flex justify-end space-x-4 mt-6\">\r\n        <button\r\n          (click)=\"closeCreateTournamentModal()\"\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          (click)=\"createTournament()\"\r\n          [disabled]=\"isCreatingTournament || !createTournamentForm.name.trim()\"\r\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition disabled:opacity-50\"\r\n        >\r\n          {{ isCreatingTournament ? \"Creating...\" : \"Create Tournament\" }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Create Team Modal -->\r\n  <div\r\n    *ngIf=\"showCreateTeamModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    (click)=\"closeCreateTeamModal()\"\r\n  >\r\n    <div\r\n      class=\"bg-gray-800 p-6 rounded-lg max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto relative\"\r\n      (click)=\"$event.stopPropagation()\"\r\n    >\r\n      <!-- Fixed Close Button -->\r\n      <button\r\n        (click)=\"closeCreateTeamModal()\"\r\n        class=\"absolute top-4 right-5 z-10 p-2 text-gray-100 hover:text-white text-lg font-bold transition-colors bg-gray-800 bg-opacity-70 rounded-full h-8 flex items-center justify-center\"\r\n      >\r\n        Exit ×\r\n      </button>\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">\r\n        Create Team for {{ activeTournament?.name }}\r\n      </h2>\r\n\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n          >Team Name</label\r\n        >\r\n        <input\r\n          type=\"text\"\r\n          [(ngModel)]=\"createTeamForm.teamName\"\r\n          placeholder=\"Enter team name\"\r\n          class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded placeholder-gray-400\"\r\n        />\r\n      </div>\r\n\r\n      <div class=\"mb-4\">\r\n        <label class=\"block text-sm font-medium mb-2 text-gray-300\">\r\n          Select Players ({{ createTeamForm.playerIds.length }}/{{\r\n            activeTournament?.playersPerTeam\r\n          }})\r\n        </label>\r\n\r\n        <!-- Loading Players -->\r\n        <div *ngIf=\"isLoadingPlayers\" class=\"flex justify-center py-4\">\r\n          <div\r\n            class=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"\r\n          ></div>\r\n        </div>\r\n\r\n        <!-- No Players Message -->\r\n        <div\r\n          *ngIf=\"!isLoadingPlayers && availablePlayers.length === 0\"\r\n          class=\"text-center py-4 text-gray-400\"\r\n        >\r\n          No players available. Add players first.\r\n        </div>\r\n\r\n        <!-- Players Grid -->\r\n        <div\r\n          *ngIf=\"!isLoadingPlayers && availablePlayers.length > 0\"\r\n          class=\"grid grid-cols-1 md:grid-cols-2 gap-2 max-h-60 overflow-y-auto\"\r\n        >\r\n          <div\r\n            *ngFor=\"let player of availablePlayers\"\r\n            (click)=\"togglePlayerSelection(player.playerId)\"\r\n            class=\"p-3 rounded border cursor-pointer transition-all\"\r\n            [class.bg-blue-600]=\"isPlayerSelected(player.playerId)\"\r\n            [class.border-blue-500]=\"isPlayerSelected(player.playerId)\"\r\n            [class.bg-gray-700]=\"!isPlayerSelected(player.playerId)\"\r\n            [class.border-gray-600]=\"!isPlayerSelected(player.playerId)\"\r\n          >\r\n            <div class=\"text-white font-medium\">{{ player.fullName }}</div>\r\n            <div class=\"text-xs text-gray-300\">\r\n              Tournaments: {{ player.multiParticipations }} | Titles:\r\n              {{ player.multiTitlesWon }}\r\n            </div>\r\n            <!-- Selection Indicator -->\r\n            <div\r\n              *ngIf=\"isPlayerSelected(player.playerId)\"\r\n              class=\"text-blue-200 text-xs mt-1\"\r\n            >\r\n              ✓ Selected\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"flex justify-end space-x-4 mt-6\">\r\n        <button\r\n          (click)=\"closeCreateTeamModal()\"\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          (click)=\"createTeam()\"\r\n          [disabled]=\"\r\n            isCreatingTeam ||\r\n            !createTeamForm.teamName.trim() ||\r\n            createTeamForm.playerIds.length !== activeTournament?.playersPerTeam\r\n          \"\r\n          class=\"bg-blue-600 px-4 py-2 text-white rounded hover:bg-blue-700 transition disabled:opacity-50\"\r\n        >\r\n          {{ isCreatingTeam ? \"Creating...\" : \"Create Team\" }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Add Player Modal -->\r\n  <div\r\n    *ngIf=\"showAddPlayerModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    (click)=\"showAddPlayerModal = false\"\r\n  >\r\n    <div\r\n      class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4 relative\"\r\n      (click)=\"$event.stopPropagation()\"\r\n    >\r\n      <!-- Fixed Close Button -->\r\n      <button\r\n        (click)=\"showAddPlayerModal = false\"\r\n        class=\"absolute top-4 right-5 z-10 p-2 text-gray-100 hover:text-white text-lg font-bold transition-colors bg-gray-800 bg-opacity-70 rounded-full h-8 flex items-center justify-center\"\r\n      >\r\n        Exit ×\r\n      </button>\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Add New Player</h2>\r\n\r\n      <input\r\n        type=\"text\"\r\n        [(ngModel)]=\"newPlayerName\"\r\n        placeholder=\"Enter player name\"\r\n        class=\"border border-gray-600 p-2 w-full bg-gray-700 text-white rounded placeholder-gray-400\"\r\n      />\r\n\r\n      <div class=\"flex justify-end space-x-4 mt-6\">\r\n        <button\r\n          (click)=\"showAddPlayerModal = false\"\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          (click)=\"addNewPlayer()\"\r\n          [disabled]=\"isAddingPlayer || !newPlayerName.trim()\"\r\n          class=\"bg-purple-600 px-4 py-2 text-white rounded hover:bg-purple-700 transition disabled:opacity-50\"\r\n        >\r\n          {{ isAddingPlayer ? \"Adding...\" : \"Add Player\" }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Record Match Result Modal -->\r\n  <div\r\n    *ngIf=\"showRecordResultModal\"\r\n    class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    (click)=\"closeRecordResultModal()\"\r\n  >\r\n    <div\r\n      class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4 relative\"\r\n      (click)=\"$event.stopPropagation()\"\r\n    >\r\n      <!-- Fixed Close Button -->\r\n      <button\r\n        (click)=\"closeRecordResultModal()\"\r\n        class=\"absolute top-4 right-5 z-10 p-2 text-gray-100 hover:text-white text-lg font-bold transition-colors bg-gray-800 bg-opacity-70 rounded-full h-8 flex items-center justify-center\"\r\n      >\r\n        Exit ×\r\n      </button>\r\n      <h2 class=\"text-lg font-bold mb-4 text-white\">Record Match Result</h2>\r\n\r\n      <div class=\"grid grid-cols-2 gap-4 mb-4\">\r\n        <div>\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >{{ getPlayerName(selectedPlayer1Id) }}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"recordingScore1\"\r\n            placeholder=\"Enter score\"\r\n            class=\"w-full px-3 py-2 border border-gray-600 bg-gray-700 text-white rounded\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label class=\"block text-sm font-medium mb-1 text-gray-300\"\r\n            >{{ getPlayerName(selectedPlayer2Id) }}\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            [(ngModel)]=\"recordingScore2\"\r\n            placeholder=\"Enter score\"\r\n            class=\"w-full px-3 py-2 border border-gray-600 bg-gray-700 text-white rounded\"\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        *ngIf=\"activeTournament?.systemOfScoring === 'Classic'\"\r\n        class=\"mb-4 text-xs text-gray-400\"\r\n      >\r\n        Classic System: Winner will be determined automatically based on scores\r\n      </div>\r\n\r\n      <div class=\"flex justify-end space-x-4\">\r\n        <button\r\n          (click)=\"closeRecordResultModal()\"\r\n          class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          (click)=\"recordMatchResult()\"\r\n          [disabled]=\"\r\n            isRecordingResult ||\r\n            !recordingScore1.trim() ||\r\n            !recordingScore2.trim()\r\n          \"\r\n          class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition disabled:opacity-50\"\r\n        >\r\n          {{ isRecordingResult ? \"Recording...\" : \"Record Result\" }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Player Matches Modal -->\r\n  <div\r\n    *ngIf=\"showPlayerMatchesModal\"\r\n    class=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n    (click)=\"closePlayerMatchesModal()\"\r\n  >\r\n    <div\r\n      class=\"bg-black bg-opacity-50 rounded-lg w-full max-w-4xl max-h-[90vh] overflow-hidden relative\"\r\n      (click)=\"$event.stopPropagation()\"\r\n    >\r\n      <!-- Fixed Close Button -->\r\n      <button\r\n        (click)=\"closePlayerMatchesModal()\"\r\n        class=\"absolute top-4 right-5 z-10 p-2 text-gray-100 hover:text-white text-lg font-bold transition-colors bg-gray-800 bg-opacity-70 rounded-full h-8 flex items-center justify-center\"\r\n      >\r\n        Exit ×\r\n      </button>\r\n\r\n      <!-- Modal Content with Scroll -->\r\n      <div class=\"p-6 overflow-y-auto\" style=\"max-height: calc(90vh - 2rem)\">\r\n        <!-- Modal Header -->\r\n        <div class=\"flex justify-between items-center mb-6\">\r\n          <h3 class=\"text-2xl font-bold text-white\">\r\n            Matches for {{ selectedPlayer?.fullName }}\r\n          </h3>\r\n        </div>\r\n\r\n        <!-- Search Bar for Opponents -->\r\n        <div class=\"mb-4\">\r\n          <div class=\"relative\">\r\n            <input\r\n              type=\"text\"\r\n              [(ngModel)]=\"opponentSearchTerm\"\r\n              (input)=\"filterPlayerMatches()\"\r\n              placeholder=\"Search opponents by name...\"\r\n              class=\"w-full px-4 py-2 pl-10 bg-gray-700 border border-gray-600 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\"\r\n            />\r\n            <div\r\n              class=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\"\r\n            >\r\n              <svg\r\n                class=\"h-5 w-5 text-gray-400\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path\r\n                  stroke-linecap=\"round\"\r\n                  stroke-linejoin=\"round\"\r\n                  stroke-width=\"2\"\r\n                  d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"\r\n                ></path>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Loading State -->\r\n        <div *ngIf=\"isLoadingMatches\" class=\"flex justify-center py-8\">\r\n          <div\r\n            class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"\r\n          ></div>\r\n        </div>\r\n\r\n        <!-- Matches List -->\r\n        <div\r\n          *ngIf=\"!isLoadingMatches && filteredPlayerMatches.length > 0\"\r\n          class=\"space-y-4\"\r\n        >\r\n          <div\r\n            *ngFor=\"let match of filteredPlayerMatches\"\r\n            class=\"bg-black bg-opacity-50 rounded-lg p-4\"\r\n          >\r\n            <div class=\"flex justify-between items-center\">\r\n              <div class=\"flex-1\">\r\n                <span class=\"text-white font-semibold\">{{\r\n                  match.player1Name\r\n                }}</span>\r\n              </div>\r\n\r\n              <div class=\"px-4 text-center\">\r\n                <div *ngIf=\"match.isCompleted\" class=\"font-bold text-lg\">\r\n                  <span\r\n                    [class]=\"\r\n                      (match.score1 || 0) > (match.score2 || 0)\r\n                        ? 'text-green-400'\r\n                        : (match.score1 || 0) < (match.score2 || 0)\r\n                        ? 'text-red-400'\r\n                        : 'text-yellow-400'\r\n                    \"\r\n                  >\r\n                    {{ match.score1 || 0 }}\r\n                  </span>\r\n                  <span class=\"text-white mx-2\">-</span>\r\n                  <span\r\n                    [class]=\"\r\n                      (match.score2 || 0) > (match.score1 || 0)\r\n                        ? 'text-green-400'\r\n                        : (match.score2 || 0) < (match.score1 || 0)\r\n                        ? 'text-red-400'\r\n                        : 'text-yellow-400'\r\n                    \"\r\n                  >\r\n                    {{ match.score2 || 0 }}\r\n                  </span>\r\n                </div>\r\n                <div *ngIf=\"!match.isCompleted\" class=\"text-gray-400 text-sm\">\r\n                  Pending\r\n                  <button\r\n                    *ngIf=\"activeTournament?.status === 'Started'\"\r\n                    (click)=\"openRecordResultModal(match)\"\r\n                    class=\"ml-2 bg-green-600 hover:bg-green-700 text-white px-2 py-1 rounded text-xs transition-all\"\r\n                  >\r\n                    Record\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Undo Button for completed matches -->\r\n              <div\r\n                *ngIf=\"\r\n                  match.isCompleted && activeTournament?.status === 'Started'\r\n                \"\r\n                class=\"ml-2\"\r\n              >\r\n                <button\r\n                  (click)=\"undoMatchResult(match)\"\r\n                  class=\"bg-red-600 hover:bg-red-700 text-white px-2 py-1 rounded text-xs transition-all\"\r\n                >\r\n                  Undo\r\n                </button>\r\n              </div>\r\n              <div class=\"flex-1 text-right\">\r\n                <span class=\"text-white font-semibold\">{{\r\n                  match.player2Name\r\n                }}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- No Matches Message -->\r\n        <div\r\n          *ngIf=\"!isLoadingMatches && filteredPlayerMatches.length === 0\"\r\n          class=\"text-center py-8\"\r\n        >\r\n          <p\r\n            class=\"text-gray-400\"\r\n            *ngIf=\"opponentSearchTerm && opponentSearchTerm.trim() !== ''\"\r\n          >\r\n            No opponents found matching \"{{ opponentSearchTerm }}\"\r\n          </p>\r\n          <p\r\n            class=\"text-gray-400\"\r\n            *ngIf=\"!opponentSearchTerm || opponentSearchTerm.trim() === ''\"\r\n          >\r\n            No matches found for this player.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Confirmation Modals -->\r\n\r\n    <!-- Start Tournament Confirmation Modal -->\r\n    <div\r\n      *ngIf=\"showConfirmStartTournamentModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\r\n        <div class=\"text-center mb-6\">\r\n          <div\r\n            class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100 mb-4\"\r\n          >\r\n            <svg\r\n              class=\"h-6 w-6 text-green-600\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                stroke-width=\"2\"\r\n                d=\"M5 13l4 4L19 7\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <h3 class=\"text-lg font-medium text-white mb-2\">تأكيد بدء البطولة</h3>\r\n          <p class=\"text-sm text-gray-300\">\r\n            هل أنت متأكد من بدء البطولة \"{{ tournamentToConfirm?.name }}\"؟\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"flex justify-end space-x-4\">\r\n          <button\r\n            (click)=\"closeConfirmStartTournamentModal()\"\r\n            class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n          >\r\n            إلغاء\r\n          </button>\r\n          <button\r\n            (click)=\"confirmStartTournament()\"\r\n            class=\"bg-green-600 px-4 py-2 text-white rounded hover:bg-green-700 transition\"\r\n          >\r\n            بدء البطولة\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Finish Tournament Confirmation Modal -->\r\n    <div\r\n      *ngIf=\"showConfirmFinishTournamentModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\r\n        <div class=\"text-center mb-6\">\r\n          <div\r\n            class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-yellow-100 mb-4\"\r\n          >\r\n            <svg\r\n              class=\"h-6 w-6 text-yellow-600\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                stroke-width=\"2\"\r\n                d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <h3 class=\"text-lg font-medium text-white mb-2\">\r\n            تأكيد إنهاء البطولة\r\n          </h3>\r\n          <p class=\"text-sm text-gray-300\">\r\n            هل أنت متأكد من إنهاء البطولة \"{{ tournamentToConfirm?.name }}\"؟\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"flex justify-end space-x-4\">\r\n          <button\r\n            (click)=\"closeConfirmFinishTournamentModal()\"\r\n            class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n          >\r\n            إلغاء\r\n          </button>\r\n          <button\r\n            (click)=\"confirmFinishTournament()\"\r\n            class=\"bg-yellow-600 px-4 py-2 text-white rounded hover:bg-yellow-700 transition\"\r\n          >\r\n            إنهاء البطولة\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Delete Tournament Confirmation Modal -->\r\n    <div\r\n      *ngIf=\"showConfirmDeleteTournamentModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\r\n        <div class=\"text-center mb-6\">\r\n          <div\r\n            class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100 mb-4\"\r\n          >\r\n            <svg\r\n              class=\"h-6 w-6 text-red-600\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                stroke-width=\"2\"\r\n                d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <h3 class=\"text-lg font-medium text-white mb-2\">تأكيد حذف البطولة</h3>\r\n          <p class=\"text-sm text-gray-300 mb-4\">\r\n            هل أنت متأكد من حذف البطولة \"{{ tournamentToConfirm?.name }}\"؟\r\n          </p>\r\n          <p class=\"text-xs text-red-400\">\r\n            ⚠️ سيتم حذف كل البيانات المرتبطة بها نهائياً\r\n          </p>\r\n        </div>\r\n\r\n        <div class=\"flex justify-end space-x-4\">\r\n          <button\r\n            (click)=\"closeConfirmDeleteTournamentModal()\"\r\n            class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n          >\r\n            إلغاء\r\n          </button>\r\n          <button\r\n            (click)=\"confirmDeleteTournament()\"\r\n            class=\"bg-red-600 px-4 py-2 text-white rounded hover:bg-red-700 transition\"\r\n          >\r\n            حذف البطولة\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- Undo Match Result Confirmation Modal -->\r\n    <div\r\n      *ngIf=\"showConfirmUndoMatchModal\"\r\n      class=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-75 z-50\"\r\n    >\r\n      <div class=\"bg-gray-800 p-6 rounded-lg max-w-md w-full mx-4\">\r\n        <div class=\"text-center mb-6\">\r\n          <div\r\n            class=\"mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-orange-100 mb-4\"\r\n          >\r\n            <svg\r\n              class=\"h-6 w-6 text-orange-600\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                stroke-linecap=\"round\"\r\n                stroke-linejoin=\"round\"\r\n                stroke-width=\"2\"\r\n                d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <h3 class=\"text-lg font-medium text-white mb-2\">\r\n            تأكيد إلغاء النتيجة\r\n          </h3>\r\n          <p class=\"text-sm text-gray-300 mb-4\">\r\n            هل أنت متأكد من إلغاء نتيجة المباراة؟\r\n          </p>\r\n          <div class=\"text-xs text-gray-400 bg-gray-700 p-3 rounded\">\r\n            <p>\r\n              {{ matchToUndo?.player1Name }} vs {{ matchToUndo?.player2Name }}\r\n            </p>\r\n            <p>\r\n              النتيجة: {{ matchToUndo?.score1 }} - {{ matchToUndo?.score2 }}\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"flex justify-end space-x-4\">\r\n          <button\r\n            (click)=\"closeConfirmUndoMatchModal()\"\r\n            class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\r\n          >\r\n            إلغاء\r\n          </button>\r\n          <button\r\n            (click)=\"confirmUndoMatchResult()\"\r\n            class=\"bg-orange-600 px-4 py-2 text-white rounded hover:bg-orange-700 transition\"\r\n          >\r\n            إلغاء النتيجة\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { PlayersComponent } from './players/players.component';\r\nimport { InboxComponent } from './inbox/inbox.component';\r\nimport { FriendliesComponent } from './friendlies/friendlies.component';\r\nimport { FriendlyInboxComponent } from './friendlies/friendly-inbox/friendly-inbox.component';\r\nimport { TeamsDashboardComponent } from './teams-dashboard/teams-dashboard.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: PlayersComponent, data: { title: 'Players' } },\r\n  {\r\n    path: 'players',\r\n    component: PlayersComponent,\r\n    data: { title: 'Admin Dashboard' },\r\n  },\r\n  { path: 'inbox', component: InboxComponent, data: { title: 'Inbox' } },\r\n  {\r\n    path: 'friendlies',\r\n    component: FriendliesComponent,\r\n    data: { title: 'Friendlies' },\r\n  },\r\n  {\r\n    path: 'friendly-inbox',\r\n    component: FriendlyInboxComponent,\r\n    data: { title: 'Friendly Inbox' },\r\n  },\r\n  {\r\n    path: 'teams-dashboard',\r\n    component: TeamsDashboardComponent,\r\n    data: { title: 'Teams Dashboard' },\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AdminRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {\r\n  MultiTournamentService,\r\n  CreateTournamentDto,\r\n  TeamCreateDto,\r\n  MultiTournamentDto,\r\n  PlayerDetail,\r\n  AddPlayerDto,\r\n  TeamMatchesDto,\r\n  MatchDetail,\r\n  TeamDetail,\r\n  ApiResponse,\r\n} from '../../core/services/multi-tournament.service';\r\n\r\n@Component({\r\n  selector: 'app-teams-dashboard',\r\n  templateUrl: './teams-dashboard.component.html',\r\n  styleUrls: ['./teams-dashboard.component.css'],\r\n})\r\nexport class TeamsDashboardComponent implements OnInit {\r\n  // Data\r\n  tournaments: MultiTournamentDto[] = [];\r\n  activeTournament: MultiTournamentDto | null = null;\r\n  availablePlayers: PlayerDetail[] = [];\r\n  filteredPlayers: PlayerDetail[] = [];\r\n  tournamentMatches: TeamMatchesDto[] = [];\r\n  filteredPlayerMatches: MatchDetail[] = [];\r\n  selectedPlayer: PlayerDetail | null = null;\r\n\r\n  // Modals\r\n  showCreateTournamentModal = false;\r\n  showCreateTeamModal = false;\r\n  showAddPlayerModal = false;\r\n  showRecordResultModal = false;\r\n  showPlayerMatchesModal = false;\r\n\r\n  // Confirmation Modals\r\n  showConfirmStartTournamentModal = false;\r\n  showConfirmFinishTournamentModal = false;\r\n  showConfirmDeleteTournamentModal = false;\r\n  showConfirmUndoMatchModal = false;\r\n\r\n  // Confirmation Data\r\n  tournamentToConfirm: MultiTournamentDto | null = null;\r\n  matchToUndo: MatchDetail | null = null;\r\n\r\n  // Forms\r\n  createTournamentForm: CreateTournamentDto = {\r\n    name: '',\r\n    systemOfScoring: 'Classic',\r\n    teamCount: 4,\r\n    playersPerTeam: 3,\r\n  };\r\n\r\n  createTeamForm: TeamCreateDto = {\r\n    teamName: '',\r\n    playerIds: [],\r\n  };\r\n\r\n  newPlayerName = '';\r\n  playerSearchTerm = '';\r\n  opponentSearchTerm = '';\r\n\r\n  // Match Recording\r\n  selectedMatchId: number | null = null;\r\n  selectedPlayer1Id: number | null = null;\r\n  selectedPlayer2Id: number | null = null;\r\n  recordingScore1: string = '';\r\n  recordingScore2: string = '';\r\n\r\n  // Loading States\r\n  isLoadingTournaments = false;\r\n  isLoadingPlayers = false;\r\n  isLoadingMatches = false;\r\n  isCreatingTournament = false;\r\n  isCreatingTeam = false;\r\n  isAddingPlayer = false;\r\n  isRecordingResult = false;\r\n\r\n  constructor(\r\n    private multiTournamentService: MultiTournamentService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadTournaments();\r\n    this.loadAvailablePlayers();\r\n  }\r\n\r\n  // Tournament Management\r\n  loadTournaments(): void {\r\n    this.isLoadingTournaments = true;\r\n\r\n    this.multiTournamentService.getAllTournaments().subscribe({\r\n      next: (response: ApiResponse<MultiTournamentDto[]>) => {\r\n        if (response.success && response.data) {\r\n          this.tournaments = response.data;\r\n          this.activeTournament =\r\n            this.tournaments.find((t) => t.isActive) || null;\r\n\r\n          if (this.activeTournament) {\r\n            this.loadTournamentMatches();\r\n          }\r\n        }\r\n        this.isLoadingTournaments = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading tournaments:', error);\r\n        this.toastr.error('خطأ في تحميل البطولات', 'خطأ');\r\n        this.isLoadingTournaments = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  createTournament(): void {\r\n    if (!this.createTournamentForm.name.trim()) {\r\n      this.toastr.warning('يرجى إدخال اسم البطولة', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    this.isCreatingTournament = true;\r\n\r\n    this.multiTournamentService\r\n      .createTournament(this.createTournamentForm)\r\n      .subscribe({\r\n        next: (response: ApiResponse) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم إنشاء البطولة بنجاح', 'نجاح');\r\n            this.loadTournaments();\r\n            this.closeCreateTournamentModal();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل في إنشاء البطولة',\r\n              'خطأ'\r\n            );\r\n          }\r\n          this.isCreatingTournament = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error creating tournament:', error);\r\n          this.toastr.error('خطأ في إنشاء البطولة', 'خطأ');\r\n          this.isCreatingTournament = false;\r\n        },\r\n      });\r\n  }\r\n\r\n  // Modal Controls\r\n  openCreateTournamentModal(): void {\r\n    this.createTournamentForm = {\r\n      name: '',\r\n      systemOfScoring: 'Classic',\r\n      teamCount: 4,\r\n      playersPerTeam: 3,\r\n    };\r\n    this.showCreateTournamentModal = true;\r\n  }\r\n\r\n  closeCreateTournamentModal(): void {\r\n    this.showCreateTournamentModal = false;\r\n  }\r\n\r\n  // Helper Methods\r\n  getRemainingTeams(tournament: MultiTournamentDto): number {\r\n    return tournament.teamCount - tournament.teams.length;\r\n  }\r\n\r\n  canStartTournament(tournament: MultiTournamentDto): boolean {\r\n    return (\r\n      tournament.status === 'Created' &&\r\n      tournament.teams.length === tournament.teamCount\r\n    );\r\n  }\r\n\r\n  getStatusColor(status: string): string {\r\n    switch (status) {\r\n      case 'Created':\r\n        return 'text-yellow-400';\r\n      case 'Started':\r\n        return 'text-green-400';\r\n      case 'Finished':\r\n        return 'text-blue-400';\r\n      default:\r\n        return 'text-gray-400';\r\n    }\r\n  }\r\n\r\n  // Player Management\r\n  loadAvailablePlayers(): void {\r\n    this.isLoadingPlayers = true;\r\n\r\n    this.multiTournamentService.getAllPlayers().subscribe({\r\n      next: (response: ApiResponse<PlayerDetail[]>) => {\r\n        if (response.success && response.data) {\r\n          this.availablePlayers = response.data.filter((p) => p.isActive);\r\n          this.filteredPlayers = [...this.availablePlayers];\r\n        }\r\n        this.isLoadingPlayers = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading players:', error);\r\n        this.toastr.error('خطأ في تحميل اللاعبين', 'خطأ');\r\n        this.isLoadingPlayers = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  // Match Management\r\n  loadTournamentMatches(): void {\r\n    if (!this.activeTournament) return;\r\n\r\n    this.isLoadingMatches = true;\r\n\r\n    this.multiTournamentService.getActiveTournamentMatches().subscribe({\r\n      next: (response: ApiResponse<TeamMatchesDto[]>) => {\r\n        if (response.success && response.data) {\r\n          this.tournamentMatches = response.data;\r\n          // Initialize filtered player matches if a player is selected\r\n          if (this.selectedPlayer) {\r\n            this.filteredPlayerMatches = this.getPlayerMatches(\r\n              this.selectedPlayer.playerId || 0\r\n            );\r\n          }\r\n        }\r\n        this.isLoadingMatches = false;\r\n      },\r\n      error: (error) => {\r\n        console.error('Error loading tournament matches:', error);\r\n        this.toastr.error('خطأ في تحميل المباريات', 'خطأ');\r\n        this.isLoadingMatches = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  // Start Tournament\r\n  startTournament(tournament: MultiTournamentDto): void {\r\n    this.openConfirmStartTournamentModal(tournament);\r\n  }\r\n\r\n  // Confirm and Start Tournament\r\n  confirmStartTournament(): void {\r\n    if (!this.tournamentToConfirm) return;\r\n\r\n    this.multiTournamentService\r\n      .startTournament(this.tournamentToConfirm.multiTournamentId)\r\n      .subscribe({\r\n        next: (response: ApiResponse) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم بدء البطولة بنجاح', 'نجاح');\r\n            this.loadTournaments();\r\n            this.closeConfirmStartTournamentModal();\r\n          } else {\r\n            this.toastr.error(response.message || 'فشل في بدء البطولة', 'خطأ');\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Error starting tournament:', error);\r\n          this.toastr.error('خطأ في بدء البطولة', 'خطأ');\r\n        },\r\n      });\r\n  }\r\n\r\n  // Finish Tournament\r\n  finishTournament(tournament: MultiTournamentDto): void {\r\n    this.openConfirmFinishTournamentModal(tournament);\r\n  }\r\n\r\n  // Confirm and Finish Tournament\r\n  confirmFinishTournament(): void {\r\n    if (!this.tournamentToConfirm) return;\r\n\r\n    this.multiTournamentService\r\n      .finishTournament(this.tournamentToConfirm.multiTournamentId)\r\n      .subscribe({\r\n        next: (response: ApiResponse) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم إنهاء البطولة بنجاح', 'نجاح');\r\n            this.loadTournaments();\r\n            this.closeConfirmFinishTournamentModal();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل في إنهاء البطولة',\r\n              'خطأ'\r\n            );\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Error finishing tournament:', error);\r\n          this.toastr.error('خطأ في إنهاء البطولة', 'خطأ');\r\n        },\r\n      });\r\n  }\r\n\r\n  // Delete Tournament\r\n  deleteTournament(tournament: MultiTournamentDto): void {\r\n    this.openConfirmDeleteTournamentModal(tournament);\r\n  }\r\n\r\n  // Confirm and Delete Tournament\r\n  confirmDeleteTournament(): void {\r\n    if (!this.tournamentToConfirm) return;\r\n\r\n    this.multiTournamentService\r\n      .deleteTournament(this.tournamentToConfirm.multiTournamentId)\r\n      .subscribe({\r\n        next: (response: ApiResponse) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم حذف البطولة بنجاح', 'نجاح');\r\n            this.loadTournaments();\r\n            this.closeConfirmDeleteTournamentModal();\r\n          } else {\r\n            this.toastr.error(response.message || 'فشل في حذف البطولة', 'خطأ');\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Error deleting tournament:', error);\r\n          this.toastr.error('خطأ في حذف البطولة', 'خطأ');\r\n        },\r\n      });\r\n  }\r\n\r\n  // Create Team\r\n  createTeam(): void {\r\n    if (!this.createTeamForm.teamName.trim()) {\r\n      this.toastr.warning('يرجى إدخال اسم الفريق', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    if (\r\n      this.createTeamForm.playerIds.length !==\r\n      (this.activeTournament?.playersPerTeam || 3)\r\n    ) {\r\n      this.toastr.warning(\r\n        `يجب اختيار ${this.activeTournament?.playersPerTeam} لاعبين بالضبط`,\r\n        'تحذير'\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (!this.activeTournament) return;\r\n\r\n    this.isCreatingTeam = true;\r\n\r\n    this.multiTournamentService\r\n      .createTeam(this.activeTournament.multiTournamentId, this.createTeamForm)\r\n      .subscribe({\r\n        next: (response: ApiResponse) => {\r\n          if (response.success) {\r\n            this.toastr.success(\r\n              `تم إنشاء الفريق \"${this.createTeamForm.teamName}\" بنجاح`,\r\n              'نجاح'\r\n            );\r\n            this.loadTournaments();\r\n            this.closeCreateTeamModal();\r\n          } else {\r\n            this.toastr.error(response.message || 'فشل في إنشاء الفريق', 'خطأ');\r\n          }\r\n          this.isCreatingTeam = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error creating team:', error);\r\n          this.toastr.error('خطأ في إنشاء الفريق', 'خطأ');\r\n          this.isCreatingTeam = false;\r\n        },\r\n      });\r\n  }\r\n\r\n  // Add Player\r\n  addNewPlayer(): void {\r\n    if (!this.newPlayerName.trim()) {\r\n      this.toastr.warning('يرجى إدخال اسم اللاعب', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    this.isAddingPlayer = true;\r\n\r\n    this.multiTournamentService\r\n      .addNewPlayer({ fullName: this.newPlayerName.trim() })\r\n      .subscribe({\r\n        next: (response: ApiResponse<PlayerDetail>) => {\r\n          if (response.success) {\r\n            this.toastr.success(\r\n              `تم إضافة اللاعب ${this.newPlayerName} بنجاح`,\r\n              'نجاح'\r\n            );\r\n            this.loadAvailablePlayers();\r\n            this.showAddPlayerModal = false;\r\n            this.newPlayerName = '';\r\n          } else {\r\n            this.toastr.error(response.message || 'فشل في إضافة اللاعب', 'خطأ');\r\n          }\r\n          this.isAddingPlayer = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error adding player:', error);\r\n          this.toastr.error('خطأ في إضافة اللاعب', 'خطأ');\r\n          this.isAddingPlayer = false;\r\n        },\r\n      });\r\n  }\r\n\r\n  // Team Management\r\n  togglePlayerSelection(playerId: number): void {\r\n    const index = this.createTeamForm.playerIds.indexOf(playerId);\r\n    if (index === -1) {\r\n      if (\r\n        this.createTeamForm.playerIds.length <\r\n        (this.activeTournament?.playersPerTeam || 3)\r\n      ) {\r\n        this.createTeamForm.playerIds.push(playerId);\r\n      } else {\r\n        this.toastr.warning(\r\n          `يمكن اختيار ${this.activeTournament?.playersPerTeam} لاعبين فقط`,\r\n          'تحذير'\r\n        );\r\n      }\r\n    } else {\r\n      this.createTeamForm.playerIds.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  isPlayerSelected(playerId: number): boolean {\r\n    return this.createTeamForm.playerIds.includes(playerId);\r\n  }\r\n\r\n  // Match Recording\r\n  recordMatchResult(): void {\r\n    if (!this.selectedMatchId || !this.activeTournament) return;\r\n\r\n    // Validate scores\r\n    if (!this.recordingScore1.trim() || !this.recordingScore2.trim()) {\r\n      this.toastr.warning('يرجى إدخال النتيجة للاعبين', 'تحذير');\r\n      return;\r\n    }\r\n\r\n    // Parse scores to numbers\r\n    const score1 = parseFloat(this.recordingScore1);\r\n    const score2 = parseFloat(this.recordingScore2);\r\n\r\n    // Check if scores are valid numbers\r\n    if (isNaN(score1) || isNaN(score2)) {\r\n      this.toastr.warning('يرجى إدخال أرقام صحيحة', 'تحذير');\r\n      return;\r\n    }\r\n\r\n\r\n\r\n    let requestBody: any = {};\r\n\r\n    if (this.activeTournament.systemOfScoring === 'Classic') {\r\n      // Classic system: determine winner automatically based on scores\r\n      if (score1 > score2) {\r\n        requestBody.winnerId = this.selectedPlayer1Id;\r\n      } else if (score2 > score1) {\r\n        requestBody.winnerId = this.selectedPlayer2Id;\r\n      } else {\r\n        requestBody.winnerId = null; // Draw\r\n      }\r\n    } else {\r\n      // Points system: send scores directly\r\n      requestBody.score1 = score1;\r\n      requestBody.score2 = score2;\r\n    }\r\n\r\n    this.isRecordingResult = true;\r\n\r\n    this.multiTournamentService\r\n      .recordMatchResult(this.selectedMatchId, requestBody)\r\n      .subscribe({\r\n        next: (response: ApiResponse) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم تسجيل نتيجة المباراة بنجاح', 'نجاح');\r\n            this.loadTournaments();\r\n            this.loadTournamentMatches();\r\n            this.closeRecordResultModal();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل في تسجيل النتيجة',\r\n              'خطأ'\r\n            );\r\n          }\r\n          this.isRecordingResult = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error recording match result:', error);\r\n          this.toastr.error('خطأ في تسجيل نتيجة المباراة', 'خطأ');\r\n          this.isRecordingResult = false;\r\n        },\r\n      });\r\n  }\r\n\r\n  undoMatchResult(match: MatchDetail): void {\r\n    this.openConfirmUndoMatchModal(match);\r\n  }\r\n\r\n  // Confirm and Undo Match Result\r\n  confirmUndoMatchResult(): void {\r\n    if (!this.matchToUndo) return;\r\n\r\n    this.multiTournamentService\r\n      .undoMatchResult(this.matchToUndo.multiMatchId)\r\n      .subscribe({\r\n        next: (response: ApiResponse) => {\r\n          if (response.success) {\r\n            this.toastr.success('تم إلغاء نتيجة المباراة بنجاح', 'نجاح');\r\n            this.loadTournaments();\r\n            this.loadTournamentMatches();\r\n            this.closeConfirmUndoMatchModal();\r\n          } else {\r\n            this.toastr.error(\r\n              response.message || 'فشل في إلغاء النتيجة',\r\n              'خطأ'\r\n            );\r\n          }\r\n        },\r\n        error: (error) => {\r\n          console.error('Error undoing match result:', error);\r\n          this.toastr.error('خطأ في إلغاء نتيجة المباراة', 'خطأ');\r\n        },\r\n      });\r\n  }\r\n\r\n  // Modal Controls\r\n  openCreateTeamModal(tournament: MultiTournamentDto): void {\r\n    this.activeTournament = tournament;\r\n    this.createTeamForm = {\r\n      teamName: '',\r\n      playerIds: [],\r\n    };\r\n    this.showCreateTeamModal = true;\r\n  }\r\n\r\n  closeCreateTeamModal(): void {\r\n    this.showCreateTeamModal = false;\r\n    this.activeTournament = null;\r\n  }\r\n\r\n  closeRecordResultModal(): void {\r\n    this.showRecordResultModal = false;\r\n    this.selectedMatchId = null;\r\n    this.selectedPlayer1Id = null;\r\n    this.selectedPlayer2Id = null;\r\n    this.recordingScore1 = '';\r\n    this.recordingScore2 = '';\r\n  }\r\n\r\n  // Confirmation Modal Controls\r\n  openConfirmStartTournamentModal(tournament: MultiTournamentDto): void {\r\n    this.tournamentToConfirm = tournament;\r\n    this.showConfirmStartTournamentModal = true;\r\n  }\r\n\r\n  closeConfirmStartTournamentModal(): void {\r\n    this.showConfirmStartTournamentModal = false;\r\n    this.tournamentToConfirm = null;\r\n  }\r\n\r\n  openConfirmFinishTournamentModal(tournament: MultiTournamentDto): void {\r\n    this.tournamentToConfirm = tournament;\r\n    this.showConfirmFinishTournamentModal = true;\r\n  }\r\n\r\n  closeConfirmFinishTournamentModal(): void {\r\n    this.showConfirmFinishTournamentModal = false;\r\n    this.tournamentToConfirm = null;\r\n  }\r\n\r\n  openConfirmDeleteTournamentModal(tournament: MultiTournamentDto): void {\r\n    this.tournamentToConfirm = tournament;\r\n    this.showConfirmDeleteTournamentModal = true;\r\n  }\r\n\r\n  closeConfirmDeleteTournamentModal(): void {\r\n    this.showConfirmDeleteTournamentModal = false;\r\n    this.tournamentToConfirm = null;\r\n  }\r\n\r\n  openConfirmUndoMatchModal(match: MatchDetail): void {\r\n    this.matchToUndo = match;\r\n    this.showConfirmUndoMatchModal = true;\r\n  }\r\n\r\n  closeConfirmUndoMatchModal(): void {\r\n    this.showConfirmUndoMatchModal = false;\r\n    this.matchToUndo = null;\r\n  }\r\n\r\n  getTrophyIcon(position: number): string {\r\n    switch (position) {\r\n      case 1:\r\n        return '🥇';\r\n      case 2:\r\n        return '🥈';\r\n      case 3:\r\n        return '🥉';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  canFinishTournament(tournament: MultiTournamentDto): boolean {\r\n    return tournament.status === 'Started';\r\n  }\r\n\r\n  canDeleteTournament(tournament: MultiTournamentDto): boolean {\r\n    return tournament.status === 'Created';\r\n  }\r\n\r\n  openRecordResultModal(match: MatchDetail): void {\r\n    this.selectedMatchId = match.multiMatchId;\r\n    this.selectedPlayer1Id = match.player1Id;\r\n    this.selectedPlayer2Id = match.player2Id;\r\n    this.recordingScore1 = '';\r\n    this.recordingScore2 = '';\r\n    this.showRecordResultModal = true;\r\n    // Close player matches modal when opening record result modal\r\n    this.showPlayerMatchesModal = false;\r\n  }\r\n\r\n  // Close Player Matches Modal\r\n  closePlayerMatchesModal(): void {\r\n    this.showPlayerMatchesModal = false;\r\n    this.selectedPlayer = null;\r\n  }\r\n\r\n  // Player Selection\r\n  selectPlayer(player: PlayerDetail): void {\r\n    this.selectedPlayer = player;\r\n    this.opponentSearchTerm = '';\r\n    this.showPlayerMatchesModal = true;\r\n    this.loadTournamentMatches();\r\n  }\r\n\r\n  // Get Player Matches\r\n  getPlayerMatches(playerId: number): MatchDetail[] {\r\n    if (!this.tournamentMatches || this.tournamentMatches.length === 0) {\r\n      return [];\r\n    }\r\n\r\n    const playerMatches: MatchDetail[] = [];\r\n\r\n    this.tournamentMatches.forEach((fixture) => {\r\n      fixture.matches.forEach((match) => {\r\n        if (match.player1Id === playerId || match.player2Id === playerId) {\r\n          playerMatches.push(match);\r\n        }\r\n      });\r\n    });\r\n\r\n    return playerMatches;\r\n  }\r\n\r\n  // Get Player Name by ID\r\n  getPlayerName(playerId: number | null): string {\r\n    if (!playerId) return 'Unknown Player';\r\n\r\n    const player = this.availablePlayers.find((p) => p.playerId === playerId);\r\n    return player ? player.fullName : 'Unknown Player';\r\n  }\r\n\r\n  // Get Team Players Names\r\n  getTeamPlayersNames(team: TeamDetail): string[] {\r\n    if (!team.players || team.players.length === 0) {\r\n      return ['No players'];\r\n    }\r\n    return team.players.map((p) => p.fullName);\r\n  }\r\n\r\n  // Filter Players by Search Term\r\n  filterPlayers(): void {\r\n    if (!this.playerSearchTerm || this.playerSearchTerm.trim() === '') {\r\n      this.filteredPlayers = [...this.availablePlayers];\r\n    } else {\r\n      const searchTerm = this.playerSearchTerm.trim();\r\n      this.filteredPlayers = this.availablePlayers.filter((player) =>\r\n        player.fullName.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n  }\r\n\r\n  // Filter Player Matches by Opponent Name\r\n  filterPlayerMatches(): void {\r\n    if (!this.selectedPlayer) return;\r\n\r\n    const allMatches = this.getPlayerMatches(this.selectedPlayer.playerId || 0);\r\n\r\n    if (!this.opponentSearchTerm || this.opponentSearchTerm.trim() === '') {\r\n      this.filteredPlayerMatches = allMatches;\r\n    } else {\r\n      const searchTerm = this.opponentSearchTerm.trim();\r\n      this.filteredPlayerMatches = allMatches.filter((match) => {\r\n        const player1Name = match.player1Name?.toLowerCase() || '';\r\n        const player2Name = match.player2Name?.toLowerCase() || '';\r\n        const searchLower = searchTerm.toLowerCase();\r\n\r\n        // Search in both player names (excluding the selected player)\r\n        if (match.player1Id === this.selectedPlayer?.playerId) {\r\n          return player2Name.includes(searchLower);\r\n        } else if (match.player2Id === this.selectedPlayer?.playerId) {\r\n          return player1Name.includes(searchLower);\r\n        }\r\n        return false;\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { PlayersComponent } from './players/players.component';\r\n\r\nimport { FriendliesComponent } from './friendlies/friendlies.component';\r\nimport { FriendlyInboxComponent } from './friendlies/friendly-inbox/friendly-inbox.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FindPlayerPipe } from '../pipes/find-player.pipe';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { UtcToLocalPipe } from '../pipes/utcToLocal.pipe';\r\nimport { PlayerModule } from '../player/player.module';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { TeamsDashboardComponent } from './teams-dashboard/teams-dashboard.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PlayersComponent,\r\n    FriendliesComponent,\r\n    FriendlyInboxComponent,\r\n    FindPlayerPipe,\r\n    UtcToLocalPipe,\r\n    TeamsDashboardComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    PlayerModule,\r\n    SharedModule,\r\n  ],\r\n})\r\nexport class AdminModule {}\r\n"],"x_google_ignoreList":[]}