{"version":3,"file":"902.ecb422f193ee6008.js","mappings":"0IAqFO,IAAKA,EAAZ,SAAYA,GACVA,WAAAC,MAAA,WACAD,IAAAE,UAAA,eACAF,IAAAG,SAAA,cACAH,IAAAI,UAAA,eACAJ,IAAAK,QAAA,aALUL,CAMZ,CANA,CAAYA,GAAU,IA0Kf,MAAMM,EAA2B,CAEtCC,gBAAiB,yBACjBC,iBAAmBC,GAAe,0BAA0BA,IAC5DC,WAAY,yBACZC,cAAgBF,GAAe,0BAA0BA,IACzDG,kBAAoBH,GAAe,0BAA0BA,eAC7DI,oBAAqB,iCACrBC,iBAAmBL,GAAe,0BAA0BA,UAG5DM,gBAAiB,yBACjBC,4BAA6BA,CAACC,EAAmBC,IAC/C,0BAA0BD,KAAaC,IACzCC,aAAc,gCACdC,aAAeX,GAAe,0BAA0BA,IACxDY,aAAeZ,GAAe,0BAA0BA,IAGxDa,kBAAmBA,CAACL,EAAmBC,IACrC,gCAAgCD,KAAaC,IAG/CK,qBAAsB,kCACtBC,mBAAqBC,GACnB,iCAAiCA,IACnCC,wBAA0BD,GACxB,iCAAiCA,iBAGnCE,iBAAkB,0BAClBC,uBAAyBH,GACvB,kCAAkCA,IACpCI,qBAAuBC,GACrB,iCAAiCA,IACnCC,eAAiBC,GAAsB,2BAA2BA,IAGlEC,sBAAuB,mCACvBC,6BAA+BT,GAC7B,kCAAkCA,aACpCU,8BAA+B,2CAG/BC,KAAM,kECvOD,MAAMC,EAA6B,CAExCC,aAAc,wBACdC,oBAAqB,+BAGrBC,iBAAkB,yBAClBC,oBAAqB,mCACrBC,kBAAmB,iCACnBC,wBAA0BlB,GACxB,iCAAiCA,IACnCmB,iBAAmBnB,GAAqB,0BAA0BA,IAClEoB,kBAAoBC,GAClB,yBAAyBA,IAC3BC,8BAAgCtB,GAC9B,kCAAkCA,IACpCuB,eAAiBF,GAAsB,2BAA2BA,IAGlEG,iBAAkB,sCAClBC,wBAA0BzB,GACxB,iCAAiCA,iBAGnCW,KAAM,yBAiGKe,EACXC,GAEOA,EAASC,OAAQC,IAASA,EAAIC,SAAWD,EAAIE,aAAaC,8FC7K5D,IAAMC,EAAoB,MAA3B,MAAOA,EAGXC,YAAoBC,EAA0BC,GAA1BC,KAAAF,OAA0BE,KAAAD,eAFtCC,KAAAC,QAAUC,IAAYC,MAE6C,CAG3EC,wBACE,OAAOJ,KAAKD,aAAaM,mBACvB,mBACAL,KAAKF,KAAKQ,IACR,GAAGN,KAAKC,UAAUzD,KAAyBC,mBAGjD,CAEA8D,4BAEE,OAAOP,KAAKF,KAAKQ,IADL,GAAGN,KAAKC,UAAUzD,KAAyBO,sBAEzD,CAEAyD,uBACE7C,GAEA,MAAM8C,EAAM,GAAGT,KAAKC,UAAUzD,KAAyBQ,iBACrDW,KAEF,OAAOqC,KAAKF,KAAKQ,IAA8BG,EACjD,CAEAC,uBAEE,OAAOV,KAAKF,KAAKQ,IADL,GAAGN,KAAKC,UAAUzD,KAAyBO,sBAEzD,CAGA4D,uBAAuBC,GAErB,OAAOZ,KAAKF,KAAKe,KADL,GAAGb,KAAKC,UAAUzD,KAAyBI,aACf,CAAEgE,YAC5C,CAEAE,0BAA0BnD,GACxB,MAAM8C,EAAM,GAAGT,KAAKC,UAAUzD,KAAyBK,cACrDc,KAEF,OAAOqC,KAAKF,KAAKiB,OAAoBN,EACvC,CAEAO,8BAA8BrD,GAC5B,MAAM8C,EAAM,GAAGT,KAAKC,UAAUzD,KAAyBM,kBACrDa,KAEF,OAAOqC,KAAKF,KAAKmB,IAAiBR,EAAK,GACzC,CAGAS,wBACE,OAAOlB,KAAKD,aAAaM,mBACvB,mBACAL,KAAKF,KAAKQ,IACR,GAAGN,KAAKC,UAAUzD,KAAyBS,mBAGjD,CAEAkE,iCACEhE,EACAC,GAEA,MAAMqD,EAAM,GACVT,KAAKC,UACJzD,KAAyBU,4BAC1BC,EACAC,KAEF,OAAO4C,KAAKF,KAAKQ,IAA+BG,EAClD,CAGAW,yBACEC,GAGA,OAAOrB,KAAKF,KAAKe,KADL,GAAGb,KAAKC,UAAUzD,KAAyBa,eACfgE,EAC1C,CAEAC,yBACEtD,EACAqD,GAEA,MAAMZ,EAAM,GAAGT,KAAKC,UAAUzD,KAAyBe,aACrDS,KAEF,OAAOgC,KAAKF,KAAKmB,IAAiBR,EAAKY,EACzC,CAEAE,yBAAyBvD,GACvB,MAAMyC,EAAM,GAAGT,KAAKC,UAAUzD,KAAyBc,aACrDU,KAEF,OAAOgC,KAAKF,KAAKiB,OAAoBN,EACvC,CAGAe,8BACErE,EACAC,GAEA,MAAMqD,EAAM,GAAGT,KAAKC,UAAUzD,KAAyBgB,kBACrDL,EACAC,KAEF,OAAO4C,KAAKF,KAAKQ,IAA4BG,EAC/C,CAGAgB,uBACE,OAAOzB,KAAKD,aAAaM,mBACvB,oBACAL,KAAKF,KAAKQ,IACR,GAAGN,KAAKC,UAAUzD,KAAyBqB,oBAGjD,CAEA6D,0BAA0B/D,GACxB,MAAM8C,EAAM,GACVT,KAAKC,UACJzD,KAAyBsB,uBAAuBH,KACnD,OAAOqC,KAAKF,KAAKQ,IAAwBG,EAC3C,CAEAkB,wBACE3D,GAEA,MAAMyC,EAAM,GAAGT,KAAKC,UAAUzD,KAAyBuB,qBACrDC,KAEF,OAAOgC,KAAKF,KAAKQ,IAA6BG,EAChD,CAGAmB,mBAAmBrC,GAEjB,OAAOS,KAAKF,KAAKQ,IADL,GAAGN,KAAKC,UAAUzD,KAAyBiB,uBAC7B,CAAEoE,OAAQtC,GACtC,CAEAuC,iBAAiBnE,EAAkB4B,GACjC,MAAMkB,EAAM,GAAGT,KAAKC,UAAUzD,KAAyBkB,mBACrDC,KAEF,OAAOqC,KAAKF,KAAKQ,IAAIG,EAAK,CAAEoB,OAAQtC,GACtC,CAEAwC,4BACEpE,EACAqE,EACAzC,GAEA,MAAMkB,EAAM,GACVT,KAAKC,UACJzD,KAAyBoB,wBAAwBD,KACpD,OAAOqC,KAAKF,KAAKe,KAAKJ,EAAKuB,EAAa,CAAEH,OAAQtC,GACpD,CAGA0C,iBAEE,OAAOjC,KAAKF,KAAKQ,IADL,GAAGN,KAAKC,UAAUzD,KAAyB8B,OAEzD,CAGA4D,yBACElC,KAAKD,aAAaoC,OAAO,mBAC3B,CAEAC,yBACEpC,KAAKD,aAAaoC,OAAO,mBAC3B,CAEAE,0BACErC,KAAKD,aAAaoC,OAAO,oBAC3B,iDArLWvC,GAAoB0C,MAAAC,MAAAD,MAAAE,KAAA,sCAApB5C,EAAoB6C,QAApB7C,EAAoB8C,UAAAC,WAFnB,QAAM,SAEP/C,CAAoB,kFCN1B,IAAMgD,EAAsB,MAA7B,MAAOA,EAGX/C,YAAoBC,GAAAE,KAAAF,OAFZE,KAAAC,QAAUC,IAAYC,MAES,CAGvC0C,mBACElF,EACAmF,GAGA,OAAO9C,KAAKF,KAAKe,KADL,GAAGb,KAAKC,UAAU1B,KAA2BC,eACL,CAAEsE,WACxD,CAEAC,kBAAkBpF,GAEhB,OAAOqC,KAAKF,KAAKQ,IADL,GAAGN,KAAKC,UAAU1B,KAA2BE,sBAE3D,CAGAuE,iBAEE,OAAOhD,KAAKF,KAAKQ,IADL,GAAGN,KAAKC,UAAU1B,KAA2BG,mBAE3D,CAEAuE,oBAEE,OAAOjD,KAAKF,KAAKQ,IADL,GAAGN,KAAKC,UAAU1B,KAA2BI,sBAE3D,CAEAuE,kBAEE,OAAOlD,KAAKF,KAAKQ,IADL,GAAGN,KAAKC,UAAU1B,KAA2BK,oBAE3D,CAEAuE,sBAAsBxF,GACpB,MAAM8C,EAAM,GACVT,KAAKC,UACJ1B,KAA2BM,wBAAwBlB,KACtD,OAAOqC,KAAKF,KAAKQ,IAA6BG,EAChD,CAEA2C,eACEzF,EACAmF,GAEA,IAAKnF,EACH,MAAM,IAAI0F,MAAM,6GAGlB,MAAM5C,EAAM,GAAGT,KAAKC,UAAU1B,KAA2BO,iBACvDnB,KAEF,OAAOqC,KAAKF,KAAKe,KAA8BJ,EAAK,CAAEqC,WACxD,CAEAQ,kBAAkBtE,GAChB,MAAMyB,EAAM,GAAGT,KAAKC,UAAU1B,KAA2BQ,kBACvDC,KAEF,OAAOgB,KAAKF,KAAKe,KAA8BJ,EAAK,CAAE8C,QAAQ,GAChE,CAEAC,4BACE7F,GAEA,MAAM8C,EAAM,GACVT,KAAKC,UACJ1B,KAA2BU,8BAA8BtB,KAC5D,OAAOqC,KAAKF,KAAKe,KAA8BJ,EAAK,CAAE8C,QAAQ,GAChE,CAEAE,cAAczE,GACZ,MAAMyB,EAAM,GAAGT,KAAKC,UAAU1B,KAA2BW,eACvDF,KAEF,OAAOgB,KAAKF,KAAKe,KAA8BJ,EAAK,CAAE8C,QAAQ,GAChE,CAGAG,yBAEE,OAAO1D,KAAKF,KAAKQ,IADL,GAAGN,KAAKC,UAAU1B,KAA2BY,mBAE3D,CAEAwE,6BACEhG,GAEA,MAAM8C,EAAM,GACVT,KAAKC,UACJ1B,KAA2Ba,wBAAwBzB,KACtD,OAAOqC,KAAKF,KAAKQ,IAAkCG,EACrD,CAGAwB,iBAEE,OAAOjC,KAAKF,KAAKQ,IADL,GAAGN,KAAKC,UAAU1B,KAA2BD,OAE3D,iDAlGWsE,GAAsBN,MAAAC,MAAA,sCAAtBK,EAAsBH,QAAtBG,EAAsBF,UAAAC,WAFrB,QAAM,SAEPC,CAAsB,kFCE5B,IAAMgB,EAAa,MAApB,MAAOA,EAGX/D,YAAoBC,EAA0BC,GAA1BC,KAAAF,OAA0BE,KAAAD,eAFtCC,KAAAC,QAAUC,IAAYC,MAE6C,CAE3E0D,YAAYC,GACV,OAAO9D,KAAKF,KAAKe,KACf,GAAGb,KAAKC,wBAAwB6D,IAChC,GAEJ,CAEAC,YAAYC,GACV,OAAOhE,KAAKF,KAAKe,KAAqB,GAAGb,KAAKC,uBAAwB+D,EACxE,CAEAC,iBAAiBC,GAAwB,GACvC,MAAMC,EAAUnE,KAAKF,KAAKQ,IACxB,GAAGN,KAAKC,mCAGV,OAAIiE,GAAgBlE,KAAKD,aAAaqE,6BAC7BpE,KAAKD,aAAamE,aACvB,iBACAC,EACA,MAIGnE,KAAKD,aAAaM,mBAAmB,iBAAkB8D,EAChE,CAGAE,wBACE,OAAOrE,KAAKF,KAAKQ,IACf,GAAGN,KAAKC,kCAEZ,CAEAqE,kBACEJ,GAAwB,GAExB,MAAMC,EAAUnE,KAAKF,KAAKQ,IACxB,GAAGN,KAAKC,8BAGV,OAAIiE,GAAgBlE,KAAKD,aAAawE,wBAC7BvE,KAAKD,aAAamE,aACvB,mBACAC,EACA,MAIGnE,KAAKD,aAAayE,uBACvB,mBACAL,EAEJ,CAGAM,qBACE,OAAOzE,KAAKF,KAAKQ,IAAqB,GAAGN,KAAKC,6BAChD,CAEAyE,aAAaC,GACX,OAAO3E,KAAKF,KAAKiB,OACf,GAAGf,KAAKC,yBAAyB0E,IAErC,CAEAC,uBAAuBD,GACrB,OAAO3E,KAAKF,KAAKe,KACf,GAAGb,KAAKC,kBAAkB0E,kBAC1B,GAEJ,CAEAE,mBAAmBF,GACjB,OAAO3E,KAAKF,KAAKe,KACf,GAAGb,KAAKC,kBAAkB0E,oBAC1B,GAEJ,CAEAG,gBAAgBH,GACd,OAAO3E,KAAKF,KAAKe,KACf,GAAGb,KAAKC,kBAAkB0E,qBAC1B,GAEJ,CAEAI,WAAWJ,GACT,OAAO3E,KAAKF,KAAKe,KACf,GAAGb,KAAKC,kBAAkB0E,gBAC1B,GAEJ,CAGAK,+BACE,OAAOhF,KAAKD,aAAakF,kBAAkB,mBAC7C,CAGAC,iCACE,OAAOlF,KAAKD,aAAakF,kBAAkB,iBAC7C,CAGAE,yBACE,OAAOnF,KAAKD,aAAaqF,eAAe,mBAC1C,CAGAC,8BACE,OAAOrF,KAAKD,aAAaqF,eAAe,iBAC1C,CAGAE,4BACE,OAAOtF,KAAKD,aAAawF,mBAAmB,mBAC9C,CAGAC,iCACE,OAAOxF,KAAKD,aAAawF,mBAAmB,iBAC9C,CAGAE,uBACE,OAAOzF,KAAKsE,mBAAkB,EAChC,CAGAoB,4BACE,OAAO1F,KAAKiE,kBAAiB,EAC/B,iDAzIWL,GAAatB,MAAAC,MAAAD,MAAAE,KAAA,sCAAboB,EAAanB,QAAbmB,EAAalB,UAAAC,WAFZ,QAAM,SAEPiB,CAAa,sGCJnB,IAAM+B,EAAY,MAAnB,MAAOA,EAGX9F,YACUC,EACA8F,EACA7F,GAFAC,KAAAF,OACAE,KAAA4F,gBACA5F,KAAAD,eALFC,KAAAC,QAAUC,IAAYC,MAM3B,CAEH0F,aACE,OAAO7F,KAAKD,aAAaM,mBACvB,kBACAL,KAAKF,KAAKQ,IAAa,GAAGN,KAAKC,iBAEnC,CAGA6F,kBACE,OAAO9F,KAAKF,KAAKQ,IAAa,GAAGN,KAAKC,gBACxC,CAEA8F,YACE/H,EACAgI,GAEA,OAAOhG,KAAKF,KACTe,KAAqB,GAAGb,KAAKC,iBAAiBjC,WAAkB,CAC/DgI,aAEDC,QACCC,KAAI,KACFlG,KAAK4F,cAAcO,gBAAc,GAGzC,CAEAC,WAAWpI,GACT,OAAOgC,KAAKF,KACTiB,OAAuB,GAAGf,KAAKC,uBAAuBjC,KACtDiI,QACCC,KAAI,KACFlG,KAAK4F,cAAcO,gBAAc,GAGzC,CAGAE,2BACE,OAAOrG,KAAKD,aAAakF,kBAAkB,kBAC7C,iDAjDWU,GAAYrD,MAAAC,MAAAD,MAAAE,KAAAF,MAAAgE,KAAA,sCAAZX,EAAYlD,QAAZkD,EAAYjD,UAAAC,WAFX,QAAM,SAEPgD,CAAY,kFCDlB,IAAMY,EAAc,MAArB,MAAOA,EAGX1G,YAAoBC,EAA0BC,GAA1BC,KAAAF,OAA0BE,KAAAD,eAFtCC,KAAAC,QAAUC,IAAYC,MAE6C,CAE3EqG,YAAYC,GACV,OAAOzG,KAAKF,KAAKe,KAAqB,GAAGb,KAAKC,uBAAwB,CACpEyG,QAASD,GAEb,CAEAE,cACE,OAAO3G,KAAKF,KAAKQ,IAAsB,GAAGN,KAAKC,wBACjD,CAGA2G,mBACE,OAAO5G,KAAKF,KAAKQ,IAAsB,GAAGN,KAAKC,wBACjD,CAEA4G,kBACE7H,EACAuE,GAEA,OAAOvD,KAAKF,KAAKe,KACf,GAAGb,KAAKC,wBAAwBjB,IAChC,CAAE8H,OAAQvD,GAEd,CAEAwD,oBACE/H,EACAuE,GAEA,OAAOvD,KAAKF,KAAKe,KACf,GAAGb,KAAKC,0BAA0BjB,IAClC,CAAE8H,OAAQvD,GAEd,CAEAR,oBACE,OAAO/C,KAAKF,KAAKQ,IACf,GAAGN,KAAKC,8BAEZ,CAEAmD,eACEzF,EACA8I,GAEA,OAAOzG,KAAKF,KAAKe,KACf,GAAGb,KAAKC,yBAAyBtC,IACjC,CAAE+I,QAASD,GAEf,iDAtDWF,GAAcjE,MAAAC,MAAAD,MAAAE,KAAA,sCAAd+D,EAAc9D,QAAd8D,EAAc7D,UAAAC,WAFb,QAAM,SAEP4D,CAAc,sGCApB,IAAMS,EAAa,MAApB,MAAOA,EAMXnH,YAAoBC,EAA0BC,GAA1BC,KAAAF,OAA0BE,KAAAD,eALtCC,KAAAC,QAAUC,IAAYC,OAEtBH,KAAAiH,eAAiB,IAAIC,IAAoB,IACjDlH,KAAAmH,SAAWnH,KAAKiH,eAAeG,cAE4C,CAE3EC,UACE,OAAOrH,KAAKD,aAAaM,mBACvB,iBACAL,KAAKF,KACFQ,IAAQ,GAAGN,KAAKC,0BAChBgG,QAAKC,KAAKoB,GAAStH,KAAKiH,eAAeM,KAAKD,KAEnD,CAEAE,aACE,OAAOxH,KAAKD,aAAaM,mBACvB,eACAL,KAAKF,KACFQ,IAAQ,GAAGN,KAAKC,kBAChBgG,QAAKC,KAAKoB,GAAStH,KAAKiH,eAAeM,KAAKD,KAEnD,CAGAG,kBACE,OAAOzH,KAAKF,KACTQ,IAAQ,GAAGN,KAAKC,kBAChBgG,QAAKC,KAAKoB,GAAStH,KAAKiH,eAAeM,KAAKD,IACjD,CAEAI,UAAU9G,GACR,OAAOZ,KAAKF,KACTe,KAAqB,GAAGb,KAAKC,iBAAkB,CAAEW,aACjDqF,QACCC,KAAI,KACFlG,KAAKD,aAAa4H,kBAAkB,UACpC3H,KAAKmG,gBAAc,GAG3B,CAEAyB,aAAajK,GACX,OAAOqC,KAAKF,KACTiB,OAAuB,GAAGf,KAAKC,kBAAkBtC,KACjDsI,QACCC,KAAI,KACFlG,KAAKD,aAAa4H,kBAAkB,UACpC3H,KAAKmG,gBAAc,GAG3B,CAEA0B,iBACE7H,KAAKD,aAAaoC,OAAO,kBACzBnC,KAAKF,KAAKQ,IAAQ,GAAGN,KAAKC,0BAA0B6H,UAAWR,IAC7DtH,KAAKiH,eAAeM,KAAKD,EAAI,EAEjC,CAEAnB,iBACEnG,KAAKD,aAAaoC,OAAO,gBACzBnC,KAAKF,KAAKQ,IAAQ,GAAGN,KAAKC,kBAAkB6H,UAAWR,IACrDtH,KAAKiH,eAAeM,KAAKD,EAAI,EAEjC,CAGAS,oBACE,OAAO/H,KAAKD,aAAaiI,yBAC3B,CAGAC,2BACE,OAAOjI,KAAKD,aAAakF,kBAAkB,iBAC7C,CAGAiD,2BACE,OAAOlI,KAAKD,aAAakF,kBAAkB,eAC7C,iDAlFW+B,GAAa1E,MAAAC,MAAAD,MAAAE,KAAA,sCAAbwE,EAAavE,QAAbuE,EAAatE,UAAAC,WAFZ,QAAM,SAEPqE,CAAa,yDCiDnB,IAAKmB,EAAZ,SAAYA,GACVA,WAAAC,OAAA,YACAD,IAAAE,WAAA,gBACAF,IAAAG,cAAA,mBACAH,IAAAI,WAAA,gBACAJ,IAAAK,MAAA,WALUL,CAMZ,CANA,CAAYA,GAAe,IAsBfM,EAAZ,SAAYA,GACVA,WAAAC,OAAA,YACAD,IAAAE,QAAA,aAFUF,CAGZ,CAHA,CAAYA,GAAc,IAYdG,EAAZ,SAAYA,GACVA,WAAAC,OAAA,YACAD,IAAAE,MAAA,WACAF,IAAAG,OAAA,YAHUH,CAIZ,CAJA,CAAYA,GAAU,iKCxFlBtG,MAAA,UAAAA,CAA+C,UAA/CA,CAA+C,UAGzCA,MAAA,8BACFA,QACAA,MAAA,UAAAA,CAAmD,YAE/CA,MAAA,SACAA,MAAA,iBACFA,QACAA,MAAA,aACEA,MAAA,UACAA,MAAA,wBACFA,QACAA,MAAA,cACEA,MAAA,WACAA,MAAA,uBACFA,wCAtBVA,MAAA,UAAAA,CAAwC,WAKpCA,MAAA,EAAA0G,EAAA,cAqBF1G,gCArBQA,MAAA,GAAAA,MAAA,OAAA2G,EAAAC,6CAyBV5G,MAAA,UAAAA,CAAyC,UAAzCA,CAAyC,WAISA,MAAA,0BAAoBA,QAClEA,MAAA,UAAyBA,MAAA,8CAAwCA,aCzB9D,IAAM6G,EAAuB,MAA9B,MAAOA,EAKXtJ,YACUuJ,EACAC,GADArJ,KAAAoJ,gBACApJ,KAAAqJ,SANVrJ,KAAAsJ,cAA+B,KAC/BtJ,KAAA4I,WAAaA,KACb5I,KAAAyI,eAAiBA,IAKd,CAEHc,WACEvJ,KAAKwJ,mBACP,CAEQA,oBACNxJ,KAAKoJ,cAAcnF,mBAAmB6D,UAAU,CAC9CP,KAAOkC,IACLzJ,KAAKsJ,cAAgBG,EAASC,QAEhCC,MAAQC,IAEN5J,KAAKsJ,cAAgB,OAG3B,CAGAO,oBACE,IAAK7J,KAAKsJ,cAAe,MAAO,UAEhC,OAAQtJ,KAAKsJ,cAAcQ,cACzB,KAAKlB,KAAWC,OACd,MAAO,gBACT,KAAKD,KAAWE,MACd,MAAO,eACT,KAAKF,KAAWG,OACd,MAAO,oBACT,QACE,MAAO,UAEb,CAGAgB,wBACE,OAAK/J,KAAKsJ,eAAeU,eAGP,IADHhK,KAAKsJ,cAAcU,eACZ,gBAAkB,iBAHQ,SAIlD,CAGAd,qBACE,OAAOlJ,KAAKsJ,eAAeQ,eAAiBlB,KAAWG,MACzD,CAGAkB,mBACE,OAAKjK,KAAKsJ,eAAeY,UAClB,IAAIC,KAAKnK,KAAKsJ,cAAcY,WAAWE,mBAAmB,QAAS,CACxEC,KAAM,UACNC,MAAO,OACPC,IAAK,YAJoC,SAM7C,CAGAC,sBACE,OAAKxK,KAAKsJ,cAINtJ,KAAKsJ,cAAcmB,WACd,CAAEC,KAAM,WAAYC,MAAO,gBAE3B,CAAED,KAAM,YAAaC,MAAO,kBAN5B,CAAED,KAAM,uBAAwBC,MAAO,gBAQlD,iDA5EWxB,GAAuB7G,MAAAC,KAAAD,MAAAE,MAAA,oCAAvB2G,EAAuByB,UAAA,0BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,kiBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDVpC3I,MAAA,EAAA6I,EAAA,aA8BA7I,MAAA,EAAA8I,EAAA,oBA9BM9I,MAAA,OAAA4I,EAAA5B,eA8BAhH,MAAA,GAAAA,MAAA,QAAA4I,EAAA5B,o8DCpBOH,CAAuB,6CCmBpB7G,MAAA,WAIEA,MAAA,yBAAA+I,EAAA/I,MAAAgJ,GAAAC,UAAAC,EAAAlJ,MAAA,UAASA,MAAAkJ,EAAAC,gBAAAJ,EAAA1N,UAAgC,GAOzC2E,MAAA,GACFA,+CAPEA,MAAA,UAAAoJ,EAAAC,mBAAAN,EAAA1N,SAAA,uCAMA2E,MAAA,GAAAA,MAAA,IAAA+I,EAAAzK,SAAA,4BAwBA0B,MAAA,aAIEA,MAAA,WACFA,kCAEEA,MAAA,GAMEA,MAAA,aACEA,MAAA,GACFA,QACFA,wEAHQA,MAAA,GAAAA,MAAA,UAAAsJ,EAAAC,eAAAC,EAAAC,GAAApB,OACJrI,MAAA,GAAAA,MAAA,IAAAsJ,EAAAC,eAAAC,EAAAC,GAAAC,OAAA,+BAIF1J,MAAA,aAGEA,MAAA,GACFA,wEAHEA,MAAA,UAAA2J,EAAAC,iBAAAJ,EAAAC,GAAApB,OAEArI,MAAA,GAAAA,MAAA,IAAA2J,EAAAC,iBAAAJ,EAAAC,GAAAC,OAAA,+BAfN1J,MAAA,UACEA,MAAA,EAAA6J,EAAA,uBAUA7J,MAAA,EAAA8J,EAAA,0BAAA9J,OAOFA,0CAhBKA,MAAA,GAAAA,MAAA,OAAA+J,EAAArC,iBAAAqC,EAAA5D,eAAAC,OAAApG,CAGnB,WAAAgK,0FAnBYhK,MAAA,WAQEA,MAAA,EAAAiK,EAAA,eAMAjK,MAAA,EAAAkK,EAAA,eAmBFlK,iEA9BEA,MAAA,UAAAA,MAAA,EAAAmK,GAAAC,EAAAf,oBAAAG,EAAAnO,WAMG2E,MAAA,GAAAA,MAAA,OAAAyJ,EAAApO,WAAAmO,EAAAnO,UAKI2E,MAAA,GAAAA,MAAA,OAAAyJ,EAAApO,WAAAmO,EAAAnO,qCAtBX2E,MAAA,WAQEA,MAAA,EAAAqK,GAAA,aAkCArK,MAAA,WACEA,MAAA,GACFA,6EAtCAA,MAAA,UAAAsK,EAAA,kCAGsBtK,MAAA,GAAAA,MAAA,UAAAuK,EAAAC,oBAAAC,IAkCpBzK,MAAA,GAAAA,MAAA,IAAAyJ,EAAAnL,SAAA,gCAhFZ0B,MAAA,UAAAA,CAGC,UAHDA,CAGC,UAKKA,MAAA,GACFA,UAGFA,MAAA,UAAAA,CAA6B,aAA7BA,CAA6B,aAA7BA,CAA6B,WAMrBA,MAAA,EAAA0K,EAAA,aAaA1K,MAAA,WACEA,MAAA,yDACFA,YAGJA,MAAA,YACEA,MAAA,GAAA2K,GAAA,aA8CF3K,mDA3EAA,MAAA,GAAAA,MAAA,UAAAyK,EAAA,aAWyBzK,MAAA,GAAAA,MAAA,UAAA4K,EAAAJ,oBAAAC,IAoBYzK,MAAA,GAAAA,MAAA,UAAA4K,EAAAJ,oBAAAC,+BA7C/CzK,MAAA,UAAAA,CAGC,WAGGA,MAAA,EAAA6K,GAAA,cAuFF7K,gCAtF4BA,MAAA,GAAAA,MAAA,UAAA2G,EAAAmE,2CAyF9B9K,MAAA,WAAAA,CAA4D,WAA5DA,CAA4D,WAKtDA,MAAA,oCACFA,aCzFC,IAAM+K,GAA2B,MAAlC,MAAOA,EAUXxN,YACU+F,EACA0H,EACAlE,EACAC,GAHArJ,KAAA4F,gBACA5F,KAAAsN,eACAtN,KAAAoJ,gBACApJ,KAAAqJ,SAbVrJ,KAAAuN,QAAoB,GACpBvN,KAAAwN,QAAmB,GACnBxN,KAAAsJ,cAA+B,KAC/BtJ,KAAAyN,SAAmB,EACnBzN,KAAA2L,kBAAmC,KAEnC3L,KAAAyI,eAAiBA,KACjBzI,KAAA4I,WAAaA,IAOV,CAEHW,WACEvJ,KAAKwJ,oBACLxJ,KAAK0N,cACL1N,KAAK2N,cACL3N,KAAK4N,kBACP,CAEQpE,oBACNxJ,KAAKoJ,cAAcnF,mBAAmB6D,UAAU,CAC9CP,KAAOkC,IACLzJ,KAAKsJ,cAAgBG,EAASC,QAEhCC,MAAQC,IAEN5J,KAAKsJ,cAAgB,OAG3B,CAEQoE,cACN1N,KAAK4F,cAAcyB,UAAUS,UAAU,CACrCP,KAAOkC,IACLzJ,KAAKuN,QAAU9D,GAEjBE,MAAQC,IACN5J,KAAKqJ,OAAOM,MAAM,2IAA4B,GAIpD,CAEQgE,cACN3N,KAAKsN,aAAazH,aAAaiC,UAAU,CACvCP,KAAOkC,IACDA,IACFzJ,KAAKwN,QAAU/D,EACfzJ,KAAKyN,QAAUzN,KAAKwN,QAAQK,MACzBC,GAA0B,GAAhBA,EAAMC,QAA+B,GAAhBD,EAAME,QAAW,EAIvDrE,MAAQC,IACN5J,KAAKqJ,OAAOM,MAAM,2IAA4B,GAGpD,CAEQiE,mBACN5N,KAAKoJ,cAAcnF,mBAAmB6D,UAAU,CAC9CP,KAAO0G,IACLjO,KAAKgK,eAAiBiE,EAAIvE,QAAQM,gBAEpCL,MAAOA,KACL3J,KAAKqJ,OAAOM,MAAM,wJAA+B,GAGvD,CAGAmD,oBACE,MAAMoB,EAAsD,GAG5D,OAAAlO,KAAKuN,QAAQY,QAASC,IAChBA,EAAOC,cACJH,EAAeE,EAAOC,eACzBH,EAAeE,EAAOC,aAAe,IAEvCH,EAAeE,EAAOC,aAAaC,KAAKF,GAAM,GAKP,IAAvCG,OAAOC,KAAKN,GAAgBvO,QACR,IAAIK,KAAKuN,SAASkB,KACtC,CAACC,EAAGC,IAAMA,EAAEC,OAASF,EAAEE,QAEXT,QAAQ,CAACC,EAAQS,KAC7B,MAAMR,EAAeQ,EAAQ,EAAK,EAC7BX,EAAeG,KAClBH,EAAeG,GAAe,IAEhCH,EAAeG,GAAaC,KAAKF,EAAM,GAIpCF,CACT,CAGAd,kBACE,MAAMc,EAAiBlO,KAAK8M,oBAC5B,OAAOyB,OAAOC,KAAKN,GAChBY,IAAKC,GAAQC,SAASD,IACtBN,KAAK,CAACC,EAAGC,IAAMD,EAAIC,EACxB,CAGAM,oBACE,MAAMf,EAAiBlO,KAAK8M,oBAC5B,OAAOyB,OAAOC,KAAKN,GAAgBvO,OAAS,CAC9C,CAGAuJ,qBACE,OAAOlJ,KAAKsJ,eAAeQ,eAAiBlB,KAAWG,MACzD,CAGA8C,eAAeqD,EAAiBC,GAC9B,GAAID,EAAQvR,WAAawR,EAAQxR,SAC/B,MAAO,CAAEqO,OAAQ,MAAOrB,MAAO,iBAGjC,MAAMmD,EAAQ9N,KAAKwN,QAAQ4B,KACxBC,GACEA,EAAEC,cAAgBJ,EAAQtO,UACzByO,EAAEE,cAAgBJ,EAAQvO,UAC3ByO,EAAEC,cAAgBH,EAAQvO,UACzByO,EAAEE,cAAgBL,EAAQtO,UAGhC,IAAKkN,EACH,MAAO,CAAE9B,OAAQ,IAAKrB,MAAO,iBAG/B,MAAM6E,EACJ1B,EAAMwB,cAAgBJ,EAAQtO,SAAWkN,EAAMC,OAASD,EAAME,OAC1DyB,EACJ3B,EAAMyB,cAAgBJ,EAAQvO,SAAWkN,EAAME,OAASF,EAAMC,OAEhE,IAAI2B,EAAa,cACjB,OAAIF,EAAeC,EACjBC,EAAa,2BACJF,EAAeC,EACxBC,EAAa,yBACJF,GAAgBC,GAAgC,GAAhBD,IACzCE,EAAa,2CAGR,CAAE1D,OAAQ,GAAGwD,OAAkBC,IAAgB9E,MAAO+E,EAC/D,CAGAxD,iBAAiBgD,EAAiBC,GAChC,GAAID,EAAQvR,WAAawR,EAAQxR,SAC/B,MAAO,CAAEqO,OAAQ,MAAOrB,MAAO,iBAEjC,MAAMmD,EAAQ9N,KAAKwN,QAAQ4B,KACxBC,GACEA,EAAEC,cAAgBJ,EAAQtO,UACzByO,EAAEE,cAAgBJ,EAAQvO,UAC3ByO,EAAEC,cAAgBH,EAAQvO,UACzByO,EAAEE,cAAgBL,EAAQtO,UAEhC,IAAKkN,EACH,MAAO,CAAE9B,OAAQ,IAAKrB,MAAO,iBAE/B,MAAM6E,EACJ1B,EAAMwB,cAAgBJ,EAAQtO,SAAWkN,EAAMC,OAASD,EAAME,OAC1DyB,EACJ3B,EAAMyB,cAAgBJ,EAAQvO,SAAWkN,EAAME,OAASF,EAAMC,OAChE,OAAIyB,EAAeC,EACV,CAAEzD,OAAQ,qBAAOrB,MAAO,4BACtB6E,EAAeC,EACjB,CAAEzD,OAAQ,iCAASrB,MAAO,0BACxB6E,IAAiBC,GAAiC,IAAjBD,EACnC,CAAExD,OAAQ,iCAASrB,MAAO,6BAE5B,CAAEqB,OAAQ,IAAKrB,MAAO,gBAC/B,CAGAc,gBAAgB9N,GACdqC,KAAK2L,kBACH3L,KAAK2L,oBAAsBhO,EAAW,KAAOA,CACjD,iDAjMW0P,GAA2B/K,MAAAC,KAAAD,MAAAE,KAAAF,MAAAgE,KAAAhE,MAAAqN,MAAA,oCAA3BtC,EAA2BzC,UAAA,+BAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,ukDAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDlBxC3I,MAAA,WAEEA,MAAA,yBAGAA,MAAA,EAAAsN,GAAA,aAgGAtN,MAAA,EAAAuN,GAAA,aASFvN,eAxGKA,MAAA,GAAAA,MAAA,OAAA4I,EAAA5B,eAAA4B,EAAAhC,sBAAAgC,EAAA+D,sBAAA/D,EAAAuC,SA+FGnL,MAAA,GAAAA,MAAA,OAAA4I,EAAAuC,s7ECnFKJ,CAA2B,4BCXtC/K,MAAA,UAAAA,CAAsE,UAAtEA,CAAsE,UAKhEA,MAAA,oCACFA,mCAKJA,MAAA,uEAYQA,MAAA,WAIEA,MAAA,yBAAAwN,EAAAxN,MAAAgJ,GAAAC,UAAAC,EAAAlJ,MAAA,UAASA,MAAAkJ,EAAAC,gBAAAqE,EAAAnS,UAAgC,GASzC2E,MAAA,GACFA,yDAJEA,MAAA,eAAAyN,EAAAzN,CAAwB,gBAAA0N,EAAAzC,QAAA5N,QALxB2C,MAAA,UAAA0N,EAAArE,mBAAAmE,EAAAnS,SAAA,mCAQA2E,MAAA,GAAAA,MAAA,IAAAwN,EAAAlP,SAAA,6BAoBA0B,MAAA,aAIEA,MAAA,WACFA,mCAEEA,MAAA,GAMEA,MAAA,aACEA,MAAA,GACFA,QACFA,wEAHQA,MAAA,GAAAA,MAAA,UAAAsJ,EAAAC,eAAAC,EAAAC,GAAApB,OACJrI,MAAA,GAAAA,MAAA,IAAAsJ,EAAAC,eAAAC,EAAAC,GAAAC,OAAA,gCAIF1J,MAAA,aACEA,MAAA,GACFA,wEAFMA,MAAA,UAAA2J,EAAAC,iBAAAJ,EAAAC,GAAApB,OACJrI,MAAA,GAAAA,MAAA,IAAA2J,EAAAC,iBAAAJ,EAAAC,GAAAC,OAAA,gCAbN1J,MAAA,UACEA,MAAA,EAAA2N,GAAA,uBAUA3N,MAAA,EAAA4N,GAAA,0BAAA5N,OAKFA,0CAdKA,MAAA,GAAAA,MAAA,OAAA+J,EAAArC,iBAAAqC,EAAA5D,eAAAC,OAAApG,CAEmB,WAAAgK,iFAjB1BhK,MAAA,WAOEA,MAAA,EAAA6N,GAAA,eAMA7N,MAAA,EAAA8N,GAAA,cAiBF9N,iEA3BEA,MAAA,UAAAA,MAAA,EAAAmK,GAAAC,EAAAf,oBAAAG,EAAAnO,WAKG2E,MAAA,GAAAA,MAAA,OAAAyJ,EAAApO,WAAAmO,EAAAnO,UAKI2E,MAAA,GAAAA,MAAA,OAAAyJ,EAAApO,WAAAmO,EAAAnO,qCAlBX2E,MAAA,WAKEA,MAAA,EAAA+N,GAAA,aA+BA/N,MAAA,WACEA,MAAA,GACFA,yDAnCAA,MAAA,UAAAsK,EAAA,oCAGsBtK,MAAA,GAAAA,MAAA,UAAAoJ,EAAA6B,SA+BpBjL,MAAA,GAAAA,MAAA,IAAAyJ,EAAAnL,SAAA,gCAjEV0B,MAAA,UAAAA,CAGC,YAHDA,CAGC,aAHDA,CAGC,WAIOA,MAAA,EAAAgO,GAAA,aAeAhO,MAAA,WACEA,MAAA,wDACFA,YAGJA,MAAA,WACEA,MAAA,EAAAiO,GAAA,aAwCFjO,kCA5DyBA,MAAA,GAAAA,MAAA,UAAA4K,EAAAK,SAqBDjL,MAAA,GAAAA,MAAA,UAAA4K,EAAAK,UClCvB,IAAMiD,GAAoB,MAA3B,MAAOA,EAUX3Q,YACU+F,EACA0H,EACAjE,EACAD,GAHApJ,KAAA4F,gBACA5F,KAAAsN,eACAtN,KAAAqJ,SACArJ,KAAAoJ,gBAbVpJ,KAAAuN,QAAoB,GACpBvN,KAAAwN,QAAmB,GACnBxN,KAAAyN,SAAmB,EACnBzN,KAAA2L,kBAAmC,KAEnC3L,KAAAsJ,cAA+B,KAC/BtJ,KAAAyI,eAAiBA,KACjBzI,KAAA4I,WAAaA,IAOV,CAEHW,WACEvJ,KAAKwJ,oBACLxJ,KAAK0N,cACL1N,KAAK2N,cACL3N,KAAK4N,kBACP,CAEAF,cACE1N,KAAK4F,cAAc4B,aAAaM,UAAU,CACxCP,KAAOkC,IACDA,IACFzJ,KAAKuN,QAAU9D,IAGnBE,MAAQC,IACN5J,KAAKqJ,OAAOM,MAAM,2IAA4B,GAGpD,CAEAgE,cACE3N,KAAKsN,aAAazH,aAAaiC,UAAU,CACvCP,KAAOkC,IACDA,IACFzJ,KAAKwN,QAAU/D,EACfzJ,KAAKyN,QAAUzN,KAAKwN,QAAQK,MACzBC,GAA0B,GAAhBA,EAAMC,QAA+B,GAAhBD,EAAME,QAAW,EAIvDrE,MAAQC,IACN5J,KAAKqJ,OAAOM,MAAM,2IAA4B,GAGpD,CAEQH,oBACNxJ,KAAKoJ,cAAcnF,mBAAmB6D,UAAU,CAC9CP,KAAOkC,IACLzJ,KAAKsJ,cAAgBG,EAASC,QAEhCC,MAAQC,IAEN5J,KAAKsJ,cAAgB,OAG3B,CAEAsE,mBACE5N,KAAKoJ,cAAcnF,mBAAmB6D,UAAU,CAC9CP,KAAO0G,IACLjO,KAAKgK,eAAiBiE,EAAIvE,QAAQM,gBAEpCL,MAAOA,KACL3J,KAAKqJ,OAAOM,MAAM,wJAA+B,GAGvD,CAEAkC,eAAeqD,EAAiBC,GAC9B,GAAID,EAAQvR,WAAawR,EAAQxR,SAC/B,MAAO,CAAEqO,OAAQ,MAAOrB,MAAO,iBAGjC,MAAMmD,EAAQ9N,KAAKwN,QAAQ4B,KACxBC,GACEA,EAAEC,cAAgBJ,EAAQtO,UACzByO,EAAEE,cAAgBJ,EAAQvO,UAC3ByO,EAAEC,cAAgBH,EAAQvO,UACzByO,EAAEE,cAAgBL,EAAQtO,UAGhC,IAAKkN,EACH,MAAO,CAAE9B,OAAQ,IAAKrB,MAAO,iBAG/B,MAAM6E,EACJ1B,EAAMwB,cAAgBJ,EAAQtO,SAAWkN,EAAMC,OAASD,EAAME,OAC1DyB,EACJ3B,EAAMyB,cAAgBJ,EAAQvO,SAAWkN,EAAME,OAASF,EAAMC,OAEhE,IAAI2B,EAAa,cACjB,OAAIF,EAAeC,EACjBC,EAAa,2BACJF,EAAeC,EACxBC,EAAa,yBACJF,GAAgBC,GAAgC,GAAhBD,IACzCE,EAAa,2CAGR,CAAE1D,OAAQ,GAAGwD,OAAkBC,IAAgB9E,MAAO+E,EAC/D,CAEAxD,iBAAiBgD,EAAiBC,GAChC,GAAID,EAAQvR,WAAawR,EAAQxR,SAC/B,MAAO,CAAEqO,OAAQ,MAAOrB,MAAO,iBAEjC,MAAMmD,EAAQ9N,KAAKwN,QAAQ4B,KACxBC,GACEA,EAAEC,cAAgBJ,EAAQtO,UACzByO,EAAEE,cAAgBJ,EAAQvO,UAC3ByO,EAAEC,cAAgBH,EAAQvO,UACzByO,EAAEE,cAAgBL,EAAQtO,UAEhC,IAAKkN,EACH,MAAO,CAAE9B,OAAQ,IAAKrB,MAAO,iBAE/B,MAAM6E,EACJ1B,EAAMwB,cAAgBJ,EAAQtO,SAAWkN,EAAMC,OAASD,EAAME,OAC1DyB,EACJ3B,EAAMyB,cAAgBJ,EAAQvO,SAAWkN,EAAME,OAASF,EAAMC,OAChE,OAAIyB,EAAeC,EACV,CAAEzD,OAAQ,qBAAOrB,MAAO,4BACtB6E,EAAeC,EACjB,CAAEzD,OAAQ,iCAASrB,MAAO,0BACxB6E,IAAiBC,GAAiC,IAAjBD,EACnC,CAAExD,OAAQ,iCAASrB,MAAO,6BAE5B,CAAEqB,OAAQ,IAAKrB,MAAO,gBAC/B,CAEAc,gBAAgB9N,GACdqC,KAAK2L,kBACH3L,KAAK2L,oBAAsBhO,EAAW,KAAOA,CACjD,CAEA8S,eAAeC,GACb,MAAMC,EAAQC,SAASC,cAAc,SACjCF,IAAUA,EAAMG,SAASJ,EAAMK,UACjC/Q,KAAK2L,kBAAoB,KAE7B,iDApJW6E,GAAoBlO,MAAAC,KAAAD,MAAAE,KAAAF,MAAAgE,MAAAhE,MAAAqN,KAAA,oCAApBa,EAAoB5F,UAAA,uBAAAoG,aAAA,SAAA/F,EAAAC,GAAA,EAAAD,oCAApBC,EAAAuF,eAAAQ,EAAsB,KAAA3O,k7CDlBnCA,MAAA,UAAAA,CAAiB,UAEbA,MAAA,mBACFA,QAIAA,MAAA,EAAA4O,GAAA,aAWA5O,MAAA,EAAA6O,GAAA,kCAKA7O,MAAA,EAAA8O,GAAA,aAuEF9O,eAvFQA,MAAA,GAAAA,MAAA,QAAA4I,EAAA5B,eAYHhH,MAAA,GAAAA,MAAA,OAAA4I,EAAA5B,gBAAA,MAAA4B,EAAA5B,cAAA,KAAA4B,EAAA5B,cAAAQ,gBAAAoB,EAAAtC,WAAAG,QAKAzG,MAAA,GAAAA,MAAA,OAAA4I,EAAA5B,gBAAA,MAAA4B,EAAA5B,cAAA,KAAA4B,EAAA5B,cAAAQ,gBAAAoB,EAAAtC,WAAAG,+jECNQyH,CAAoB,4BCTnBlO,MAAA,aAGGA,MAAA,YAACA,gCAQJA,MAAA,aAGGA,MAAA,YAACA,mCAlBVA,MAAA,UAAAA,CAAyD,UAAzDA,CAAyD,WAGnDA,MAAA,GACAA,MAAA,EAAA+O,GAAA,cAKF/O,UAEFA,MAAA,YAAgBA,MAAA,QAAEA,QAClBA,MAAA,UAAAA,CAA8B,WAE1BA,MAAA,GACAA,MAAA,GAAAgP,GAAA,cAKFhP,sCAjBEA,MAAA,GAAAA,MAAA,IAAAiP,EAAAjC,aAAA,WAEGhN,MAAA,GAAAA,MAAA,OAAAiP,EAAAC,aAAAD,EAAAxD,OAAAwD,EAAAvD,QASH1L,MAAA,GAAAA,MAAA,IAAAiP,EAAAhC,aAAA,WAEGjN,MAAA,GAAAA,MAAA,OAAAiP,EAAAC,aAAAD,EAAAvD,OAAAuD,EAAAxD,mCAnBbzL,MAAA,UAAAA,CAAwD,QAClDA,MAAA,oBAAcA,QAClBA,MAAA,WACEA,MAAA,EAAAmP,GAAA,cAuBFnP,gCAvByBA,MAAA,GAAAA,MAAA,UAAA2G,EAAAyI,yCAmCjBpP,MAAA,aAGGA,MAAA,YAACA,gCAQJA,MAAA,aAGGA,MAAA,YAACA,mCAlBVA,MAAA,UAAAA,CAAsD,UAAtDA,CAAsD,WAGhDA,MAAA,GACAA,MAAA,EAAAqP,GAAA,cAKFrP,UAEFA,MAAA,YAAgBA,MAAA,QAAEA,QAClBA,MAAA,UAAAA,CAA8B,WAE1BA,MAAA,GACAA,MAAA,GAAAsP,GAAA,cAKFtP,sCAjBEA,MAAA,GAAAA,MAAA,IAAAuP,EAAAvC,aAAA,WAEGhN,MAAA,GAAAA,MAAA,OAAAuP,EAAAL,aAAAK,EAAA9D,OAAA8D,EAAA7D,QASH1L,MAAA,GAAAA,MAAA,IAAAuP,EAAAtC,aAAA,WAEGjN,MAAA,GAAAA,MAAA,OAAAuP,EAAAL,aAAAK,EAAA7D,OAAA6D,EAAA9D,mCAnBbzL,MAAA,UAAAA,CAAqD,QAC/CA,MAAA,iBAAWA,QACfA,MAAA,WACEA,MAAA,EAAAwP,GAAA,cAuBFxP,gCAvByBA,MAAA,GAAAA,MAAA,UAAAyP,EAAAC,sCAmCjB1P,MAAA,aAKGA,MAAA,eAAEA,gCAQLA,MAAA,aAKGA,MAAA,eAAEA,mCAzBfA,MAAA,UAAAA,CAA6C,QACvCA,MAAA,WAAKA,QACTA,MAAA,UAAAA,CAAqB,UAArBA,CAAqB,UAArBA,CAAqB,WAIbA,MAAA,GACAA,MAAA,EAAA2P,GAAA,eAOF3P,UAEFA,MAAA,YAAgBA,MAAA,SAAEA,QAClBA,MAAA,WAAAA,CAA8B,YAE1BA,MAAA,IACAA,MAAA,GAAA4P,GAAA,eAOF5P,8CArBEA,MAAA,GAAAA,MAAA,YAAA6P,EAAA,OAAAA,EAAAjF,EAAAkF,SAAA,KAAAD,EAAA7C,mBAAA+C,IAAAF,IAAA,WAEG7P,MAAA,GAAAA,MAAA,OAAA4K,EAAAkF,QAAAZ,aAAAtE,EAAAkF,QAAArE,OAAAb,EAAAkF,QAAApE,QAWH1L,MAAA,GAAAA,MAAA,YAAAgQ,EAAA,OAAAA,EAAApF,EAAAkF,SAAA,KAAAE,EAAA/C,mBAAA8C,IAAAC,IAAA,WAEGhQ,MAAA,GAAAA,MAAA,OAAA4K,EAAAkF,QAAAZ,aAAAtE,EAAAkF,QAAApE,OAAAd,EAAAkF,QAAArE,SChEV,IAAMwE,EAAoB,MAA3B,MAAOA,EAOX1S,YAAoBuJ,GAAApJ,KAAAoJ,gBAJpBpJ,KAAA0R,iBAAgBc,OAAgB,IAChCxS,KAAAgS,cAAaQ,OAAgB,IAC7BxS,KAAAoS,SAAQI,OAAqB,KAEsB,CAEnDjJ,WACEvJ,KAAKyS,qBACP,CAEAC,YAAYC,GACNA,EAAQhO,UACV3E,KAAKyS,qBAET,CAEQA,sBACN,IAAKzS,KAAK2E,SAIR,OAHA3E,KAAK0R,cAAckB,IAAI,IACvB5S,KAAKgS,WAAWY,IAAI,SACpB5S,KAAKoS,MAAMQ,IAAI,MAIjB5S,KAAKoJ,cAAc9E,oBAAoBwD,UAAU,CAC/CP,KAAOsL,IACL,MAAMnJ,EAASmJ,EAAQzD,KAAM0D,GAAMA,EAAEnO,WAAa3E,KAAK2E,UACnD+E,GAAUA,EAAOqJ,gBACnB/S,KAAKgT,uBAAuBtJ,EAAOqJ,kBAEnC/S,KAAK0R,cAAckB,IAAI,IACvB5S,KAAKgS,WAAWY,IAAI,IACpB5S,KAAKoS,MAAMQ,IAAI,MAAI,EAGvBjJ,MAAQA,IACN3J,KAAK0R,cAAckB,IAAI,IACvB5S,KAAKgS,WAAWY,IAAI,IACpB5S,KAAKoS,MAAMQ,IAAI,KAAI,GAGzB,CAEQI,uBAAuBD,GAC7B/S,KAAK0R,cAAckB,IACjB5S,KAAKiT,eACHF,EAAgBxT,OAAQ8P,IACtB,MAAM6D,EAAQ7D,EAAE8D,gBACZnE,SAASK,EAAE8D,iBACX9D,EAAE6D,MACN,OAAO7D,EAAE6D,QAAU/K,KAAgBG,eAA2B,IAAV4K,CAAU,KAIpElT,KAAKgS,WAAWY,IACd5S,KAAKiT,eACHF,EAAgBxT,OAAQ8P,IACtB,MAAM6D,EAAQ7D,EAAE8D,gBACZnE,SAASK,EAAE8D,iBACX9D,EAAE6D,MACN,OAAO7D,EAAE6D,QAAU/K,KAAgBI,YAAwB,IAAV2K,CAAU,KAIjElT,KAAKoS,MAAMQ,IACTG,EAAgB3D,KAAMC,IACpB,MAAM6D,EAAQ7D,EAAE8D,gBAAkBnE,SAASK,EAAE8D,iBAAmB9D,EAAE6D,MAClE,OAAO7D,EAAE6D,QAAU/K,KAAgBK,OAAmB,IAAV0K,CAAU,IAClD,KAEV,CAEQD,eAAezF,GACrB,OAAOA,EAAQsB,IAAKhB,GAEdsF,KAAKC,SAAW,GACX,IACFvF,EACHwB,YAAaxB,EAAMyB,YACnBA,YAAazB,EAAMwB,YACnBnS,UAAW2Q,EAAM1Q,UACjBA,UAAW0Q,EAAM3Q,UACjB4Q,OAAQD,EAAME,OACdA,OAAQF,EAAMC,QAGXD,EAEX,CAEAwF,mBACE,OAAOtT,KAAK0R,gBAAgB/R,OAAS,CACvC,CAEA4T,gBACE,OAAOvT,KAAKgS,aAAarS,OAAS,CACpC,iDAnGW4S,GAAoBjQ,MAAAC,KAAA,oCAApBgQ,EAAoB3H,UAAA,uBAAA4I,OAAA,CAAA7O,SAAA,YAAA8O,YAAA,EAAAC,SAAA,CAAApR,aAAAuI,MAAA,EAAAC,KAAA,EAAAC,OAAA,oUAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDrBjC3I,MAAA,UAAAA,CAA+B,WAE3BA,MAAA,EAAAqR,GAAA,aA4BFrR,QAEAA,MAAA,WACEA,MAAA,EAAAsR,GAAA,aA4BFtR,QAEAA,MAAA,WACEA,MAAA,EAAAuR,GAAA,cAgCFvR,iBA9FgCA,MAAA,GAAAA,MAAA,OAAA4I,EAAAoI,oBA+BAhR,MAAA,GAAAA,MAAA,OAAA4I,EAAAqI,iBA+BAjR,MAAA,GAAAA,MAAA,OAAA4I,EAAAkH,yBC7CtB0B,KAAYtR,WAAAuR,OAAA,m+EAAAC,gBAAA,YAEXzB,CAAoB,+BCkBnBjQ,MAAA,UAAAA,CAOC,WAKGA,MAAA,GACFA,QACAA,MAAA,WACEA,MAAA,GACFA,QACAA,MAAA,WACEA,MAAA,GACFA,QACAA,MAAA,WAGEA,MAAA,GACFA,QACAA,MAAA,WAGEA,MAAA,IACFA,QACAA,MAAA,YAGEA,MAAA,IACFA,QACAA,MAAA,YACEA,MAAA,IACFA,oCA/BAA,MAAA,oDAMEA,MAAA,GAAAA,MAAA,IAAAwN,EAAAmE,KAAA,KAGA3R,MAAA,GAAAA,MAAA,IAAAwN,EAAAlP,SAAA,KAGA0B,MAAA,GAAAA,MAAA,IAAAwN,EAAAlB,OAAA,KAKAtM,MAAA,GAAAA,MAAA,IAAAwN,EAAAoE,KAAA,KAKA5R,MAAA,GAAAA,MAAA,IAAAwN,EAAAqE,MAAA,KAKA7R,MAAA,GAAAA,MAAA,IAAAwN,EAAAsE,OAAA,KAGA9R,MAAA,GAAAA,MAAA,IAAAwN,EAAAuE,cAAA,gCAhEZ/R,MAAA,UAAAA,CAGC,UAHDA,CAGC,UAKKA,MAAA,GACFA,UAGFA,MAAA,UAAAA,CAA6B,aAA7BA,CAA6B,aAA7BA,CAA6B,UAA7BA,CAA6B,WAMaA,MAAA,UAAIA,QACtCA,MAAA,YAAkCA,MAAA,WAAIA,QACtCA,MAAA,YAAkCA,MAAA,aAAMA,QACxCA,MAAA,YAAuDA,MAAA,UAAGA,QAC1DA,MAAA,YAAuDA,MAAA,WAAIA,QAC3DA,MAAA,YAAuDA,MAAA,WAAIA,QAC3DA,MAAA,YAAkCA,MAAA,YAAKA,YAG3CA,MAAA,YACEA,MAAA,GAAAgS,GAAA,cAuCFhS,mDA3DAA,MAAA,GAAAA,MAAA,UAAAyK,EAAA,KAsBoCzK,MAAA,IAAAA,MAAA,UAAA4K,EAAAJ,oBAAAC,+BApC9CzK,MAAA,UAAAA,CAGC,WAGGA,MAAA,EAAAiS,GAAA,cAuEFjS,gCAtE4BA,MAAA,GAAAA,MAAA,UAAA2G,EAAAmE,2CAyE9B9K,MAAA,WAAAA,CAA4D,WAA5DA,CAA4D,WAKtDA,MAAA,oCACFA,aChFC,IAAMkS,GAAoB,MAA3B,MAAOA,EAMX3U,YACU+F,EACAwD,EACAC,GAFArJ,KAAA4F,gBACA5F,KAAAoJ,gBACApJ,KAAAqJ,SARVrJ,KAAAuN,QAAoB,GACpBvN,KAAAsJ,cAA+B,KAC/BtJ,KAAA4I,WAAaA,KACb5I,KAAAyN,SAAmB,CAMhB,CAEHlE,WACEvJ,KAAKwJ,oBACLxJ,KAAK0N,aACP,CAEQlE,oBACNxJ,KAAKoJ,cAAcnF,mBAAmB6D,UAAU,CAC9CP,KAAOkC,IACLzJ,KAAKsJ,cAAgBG,EAASC,QAEhCC,MAAQC,IAEN5J,KAAKsJ,cAAgB,OAG3B,CAEQoE,cACN1N,KAAK4F,cAAcyB,UAAUS,UAAU,CACrCP,KAAOkC,IACLzJ,KAAKuN,QAAU9D,EACfzJ,KAAKyN,QAAUzN,KAAKuN,QAAQM,MACzBO,GAAoC,IAAzBA,EAAOiG,cAAmB,EAG1C1K,MAAQC,IACN5J,KAAKqJ,OAAOM,MAAM,2IAA4B,GAIpD,CAGAmD,oBACE,MAAMoB,EAAsD,GAG5D,OAAAlO,KAAKuN,QAAQY,QAASC,IAChBA,EAAOC,cACJH,EAAeE,EAAOC,eACzBH,EAAeE,EAAOC,aAAe,IAEvCH,EAAeE,EAAOC,aAAaC,KAAKF,GAAM,GAKP,IAAvCG,OAAOC,KAAKN,GAAgBvO,QACR,IAAIK,KAAKuN,SAASkB,KACtC,CAACC,EAAGC,IAAMA,EAAEC,OAASF,EAAEE,QAEXT,QAAQ,CAACC,EAAQS,KAC7B,MAAMR,EAAeQ,EAAQ,EAAK,EAC7BX,EAAeG,KAClBH,EAAeG,GAAe,IAEhCH,EAAeG,GAAaC,KAAKF,EAAM,GAK3CG,OAAOC,KAAKN,GAAgBC,QAASsG,IACnC,MAAMpG,EAAcW,SAASyF,GAC7BvG,EAAeG,GAAaI,KAAK,CAACC,EAAGC,IAAMA,EAAEC,OAASF,EAAEE,OAAM,GAGzDV,CACT,CAGAd,kBACE,MAAMc,EAAiBlO,KAAK8M,oBAC5B,OAAOyB,OAAOC,KAAKN,GAChBY,IAAKC,GAAQC,SAASD,IACtBN,KAAK,CAACC,EAAGC,IAAMD,EAAIC,EACxB,CAGAM,oBACE,MAAMf,EAAiBlO,KAAK8M,oBAC5B,OAAOyB,OAAOC,KAAKN,GAAgBvO,OAAS,CAC9C,CAGAuJ,qBACE,OAAOlJ,KAAKsJ,eAAeQ,eAAiBlB,KAAWG,MACzD,iDAlGWyL,GAAoBlS,MAAAC,KAAAD,MAAAE,KAAAF,MAAAgE,MAAA,oCAApBkO,EAAoB5J,UAAA,uBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,wnDAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDXjC3I,MAAA,WAEEA,MAAA,yBAGAA,MAAA,EAAAoS,GAAA,aAgFApS,MAAA,EAAAqS,GAAA,aAUFrS,eAzFKA,MAAA,GAAAA,MAAA,OAAA4I,EAAA5B,eAAA4B,EAAAhC,sBAAAgC,EAAA+D,sBAAA/D,EAAAuC,SA+EGnL,MAAA,GAAAA,MAAA,OAAA4I,EAAAuC,ipHC1EK+G,CAAoB,8CCI3BlS,MAAA,WAAAA,CAIgE,YAM5DA,MAAA,YACAA,MAAA,YAA0BA,MAAA,GAAuBA,UAInDA,MAAA,YACEA,MAAA,GACFA,yDAdAA,MAAA,gBAAAsS,IAAA1H,EAAA2H,kBAAAvS,CAA+C,kBAAA4K,EAAA4H,iBAAAC,EAAA1G,cAK1C/L,MAAA,GAAAA,MAAA,UAAA4K,EAAA8H,iBAAAD,EAAA1G,aAAA/L,CAAqD,SAAA4K,EAAA4H,iBAAAC,EAAA1G,cAG9B/L,MAAA,GAAAA,MAAAyS,EAAA1G,aAK1B/L,MAAA,GAAAA,MAAA,UAAAyS,EAAA1G,YAAA,gCAeF/L,MAAA,WAAAA,CAIuC,YAEZA,MAAA,GAAWA,QACpCA,MAAA,YAAyBA,MAAA,GAAqBA,yDAH9CA,MAAA,sBAAA2S,EAAA,MADA3S,MAAA,WAAA2S,GAAAC,EAAAC,uBAGyB7S,MAAA,GAAAA,MAAA2S,EAAA,GACA3S,MAAA,GAAAA,MAAA8S,EAAAxU,qCAhB/B0B,MAAA,WAAAA,CAAyD,WAAzDA,CAAyD,WAGnDA,MAAA,GACFA,UAIFA,MAAA,YACEA,MAAA,EAAA+S,GAAA,cASF/S,yCAfIA,MAAA,GAAAA,MAAA,2BAAA6P,EAAAnC,EAAAsF,mBAAA,KAAAnD,EAAA9D,YAAA,uBAOmB/L,MAAA,GAAAA,MAAA,iBAAAiT,EAAAvF,EAAAsF,mBAAA,KAAAC,EAAAhI,oCAnC3BjL,MAAA,UAAAA,CAA8C,WAG1CA,MAAA,EAAAkT,GAAA,cAmBFlT,QAGAA,MAAA,EAAAmT,GAAA,cAoBFnT,8BAzCwBA,MAAA,GAAAA,MAAA,UAAA2G,EAAAyM,iBAqBUpT,MAAA,GAAAA,MAAA,OAAA2G,EAAAqM,0CAwBhChT,MAAA,8DC/CG,IAAMqT,GAA2B,MAAlC,MAAOA,EASX9V,cARSG,KAAAuN,QAAoB,GACnBvN,KAAA4V,kBAAoB,IAAIC,MAElC7V,KAAA0V,gBAAoC,GACpC1V,KAAA6U,kBAAoB,EACpB7U,KAAA8V,WAAY,EACZ9V,KAAAmV,uBAAwB,CAET,CAEf5L,WACEvJ,KAAK+V,iBACL/V,KAAKgW,gBACP,CAEQD,iBAEN,MAAM7H,EAAiBlO,KAAK8M,oBAG5ByB,OAAOC,KAAKN,GAAgBC,QAASsG,IACnC,MAAMpG,EAAcW,SAASyF,GAC7BzU,KAAK0V,gBAAgBpH,KAAK,CACxBD,cACAd,QAASW,EAAeG,GACxB4H,eAAgB,WACjB,GAIHjW,KAAK0V,gBAAgBjH,KAAK,CAACC,EAAGC,IAAMD,EAAEL,YAAcM,EAAEN,YACxD,CAEQvB,oBACN,MAAMoB,EAAsD,GAE5D,OAAAlO,KAAKuN,QAAQY,QAASC,IAChBA,EAAOC,cACJH,EAAeE,EAAOC,eACzBH,EAAeE,EAAOC,aAAe,IAEvCH,EAAeE,EAAOC,aAAaC,KAAKF,GAAM,GAKP,IAAvCG,OAAOC,KAAKN,GAAgBvO,QACR,IAAIK,KAAKuN,SAASkB,KACtC,CAACC,EAAGC,IAAMA,EAAEC,OAASF,EAAEE,QAEXT,QAAQ,CAACC,EAAQS,KAC7B,MAAMR,EAAeQ,EAAQ,EAAK,EAC7BX,EAAeG,KAClBH,EAAeG,GAAe,IAEhCH,EAAeG,GAAaC,KAAKF,EAAM,GAK3CG,OAAOC,KAAKN,GAAgBC,QAASsG,IACnC,MAAMpG,EAAcW,SAASyF,GAC7BvG,EAAeG,GAAaI,KAAK,CAACC,EAAGC,IAAMA,EAAEC,OAASF,EAAEE,OAAM,GAGzDV,CACT,CAEc8H,iBAAc,IAAAE,EAAAlW,KAAA,SAAAmW,MAAA,kBAEpBD,EAAKE,MAAM,KAGjBF,EAAKJ,WAAY,QACXI,EAAKE,MAAM,MAGjB,QAASC,EAAI,EAAGA,EAAIH,EAAKR,gBAAgB/V,OAAQ0W,IAC/CH,EAAKrB,kBAAoBwB,EACzBH,EAAKf,uBAAwB,QACvBe,EAAKI,aAAaJ,EAAKR,gBAAgBW,IAGzCA,EAAIH,EAAKR,gBAAgB/V,OAAS,SAC9BuW,EAAKE,MAAM,MACjBF,EAAKf,uBAAwB,QACvBe,EAAKE,MAAM,YAGXF,EAAKE,MAAM,WAKfF,EAAKE,MAAM,MACjBF,EAAKN,kBAAkBW,MAAO,EA3BJ,EA4B5B,CAEgBD,aAAaE,GAAqB,IAAAC,EAAAzW,KAAA,SAAAmW,MAAA,YAChDK,EAAMP,eAAiB,kBAGjBQ,EAAKL,MAAM,MAGjB,QAASC,EAAI,EAAGA,EAAIG,EAAMjJ,QAAQ5N,OAAQ0W,IACxCI,EAAKtB,sBAAwBkB,QACvBI,EAAKL,MAAM,KAGnBI,EAAMP,eAAiB,WACvB,EAbgD,EAclD,CAEQG,MAAMM,GACZ,OAAO,IAAIC,QAASC,GAAYC,WAAWD,EAASF,GACtD,CAEApB,kBACE,OAAOtV,KAAK0V,gBAAgB1V,KAAK6U,oBAAsB,IACzD,CAEAG,iBAAiB3G,GAIf,MAAiC,cAHnBrO,KAAK0V,gBAAgBtG,KAChC0H,GAAMA,EAAEzI,cAAgBA,IAEb4H,cAChB,CAEAnB,iBAAiBzG,GAIf,MAAiC,cAHnBrO,KAAK0V,gBAAgBtG,KAChC0H,GAAMA,EAAEzI,cAAgBA,IAEb4H,cAChB,iDAvIWN,EAA2B,oCAA3BA,EAA2B/K,UAAA,+BAAA4I,OAAA,CAAAjG,QAAA,WAAAwJ,QAAA,CAAAnB,kBAAA,qBAAA/K,MAAA,EAAAC,KAAA,EAAAC,OAAA,kwBAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDdxC3I,MAAA,UAAAA,CAAsC,UAAtCA,CAAsC,UAI/BA,MAAA,uBACHA,QACAA,MAAA,SACEA,MAAA,2BACFA,UAIFA,MAAA,EAAA0U,GAAA,aAgDA1U,MAAA,WACEA,MAAA,EAAA2U,GAAA,aACF3U,iBAlD6BA,MAAA,GAAAA,MAAA,OAAA4I,EAAA4K,WAiDSxT,MAAA,GAAAA,MAAA,UAAAA,MAAA,EAAAmK,60NC/C3BkJ,CAA2B,4BCXtCrT,MAAA,UAAAA,CAAmE,UAAnEA,CAAmE,UAK7DA,MAAA,oCACFA,sDAKJA,MAAA,gCAGEA,MAAA,+BAAAA,MAAA4U,GAAA,MAAAxL,EAAApJ,QAAA,OAAqBA,MAAAoJ,EAAAyL,0BAAyB,GAEhD7U,gCAHEA,MAAA,UAAAyP,EAAAxE,gCAQAjL,MAAA,4CA0CcA,MAAA,oCATJA,MAAA,UAAAA,CAIC,WAKGA,MAAA,EAAA8U,GAAA,YAKA9U,MAAA,GACFA,QACAA,MAAA,WACEA,MAAA,GACFA,QACAA,MAAA,WACEA,MAAA,GACFA,QACAA,MAAA,WAGEA,MAAA,GACFA,QACAA,MAAA,YAGEA,MAAA,IACFA,QACAA,MAAA,YAGEA,MAAA,IACFA,QACAA,MAAA,YACEA,MAAA,IACFA,QACAA,MAAA,YAUEA,MAAA,uBACFA,oCAhDAA,MAAA,oDASKA,MAAA,GAAAA,MAAA,UAAA+U,EAAApD,MAEH3R,MAAA,GAAAA,MAAA,IAAA+U,EAAApD,KAAA,KAGA3R,MAAA,GAAAA,MAAA,IAAA+U,EAAAzW,SAAA,KAGA0B,MAAA,GAAAA,MAAA,IAAA+U,EAAAzI,OAAA,KAKAtM,MAAA,GAAAA,MAAA,IAAA+U,EAAAnD,KAAA,KAKA5R,MAAA,GAAAA,MAAA,IAAA+U,EAAAlD,MAAA,KAKA7R,MAAA,GAAAA,MAAA,IAAA+U,EAAAjD,OAAA,KAGA9R,MAAA,GAAAA,MAAA,IAAA+U,EAAAhD,cAAA,KAIA/R,MAAA,GAAAA,MAAA,UAAA+U,EAAAC,QAAA,kBAAAD,EAAAC,SAAA,IAAAD,EAAAC,SAAA,uCAQAhV,MAAA,GAAAA,MAAA,IAAAA,MAAA,MAAA+U,EAAAC,QAAA,2CAvEZhV,MAAA,WAAAA,CAKC,WALDA,CAKC,aALDA,CAKC,aALDA,CAKC,UALDA,CAKC,WAK2CA,MAAA,UAAIA,QACtCA,MAAA,WAAkCA,MAAA,UAAIA,QACtCA,MAAA,WAAkCA,MAAA,aAAMA,QACxCA,MAAA,YAAuDA,MAAA,UAAGA,QAC1DA,MAAA,YAAuDA,MAAA,WAAIA,QAC3DA,MAAA,YAAuDA,MAAA,WAAIA,QAC3DA,MAAA,YAAkCA,MAAA,YAAKA,QACvCA,MAAA,YAAkCA,MAAA,eAAQA,YAG9CA,MAAA,YACEA,MAAA,GAAAiV,GAAA,eAqDFjV,qCApDuBA,MAAA,IAAAA,MAAA,UAAAkV,EAAAjK,oCA7B/BjL,MAAA,YAOEA,MAAA,EAAAmV,GAAA,eA8EFnV,+BA7EKA,MAAA,GAAAA,MAAA,QAAAkJ,EAAAlC,gBAAA,MAAAkC,EAAAlC,cAAA,KAAAkC,EAAAlC,cAAAQ,gBAAA0B,EAAA5C,WAAAG,mCAfPzG,MAAA,SAEEA,MAAA,EAAAoV,GAAA,0BAKApV,MAAA,EAAAqV,GAAA,cAsFFrV,8BA1FKA,MAAA,GAAAA,MAAA,cAAA4K,EAAA5D,cAAA,KAAA4D,EAAA5D,cAAAQ,gBAAAoD,EAAAtE,WAAAG,QAKAzG,MAAA,GAAAA,MAAA,QAAA4K,EAAA5D,gBAAA,MAAA4D,EAAA5D,cAAA,KAAA4D,EAAA5D,cAAAQ,gBAAAoD,EAAAtE,WAAAG,mCAuFLzG,MAAA,YACEA,MAAA,yBACFA,8BADoBA,MAAA,GAAAA,MAAA,iBAAA0N,EAAA1G,cAAA,KAAA0G,EAAA1G,cAAA3M,KC3Gf,IAAMib,GAAgB,MAAvB,MAAOA,EAQX/X,YACU+F,EACAwD,EACAC,GAFArJ,KAAA4F,gBACA5F,KAAAoJ,gBACApJ,KAAAqJ,SAVVrJ,KAAAuN,QAAoB,GACpBvN,KAAAyN,SAAmB,EACnBzN,KAAA6X,KAAe,EACf7X,KAAAsJ,cAA+B,KAC/BtJ,KAAA4I,WAAaA,KACb5I,KAAA8X,mBAA6B,CAM1B,CAEHvO,WACEvJ,KAAKwJ,oBACLxJ,KAAK0N,aACP,CAEQlE,oBACNxJ,KAAKoJ,cAAcnF,mBAAmB6D,UAAU,CAC9CP,KAAOkC,IACLzJ,KAAKsJ,cAAgBG,EAASC,OAE9B1J,KAAK+X,0BAAwB,EAE/BpO,MAAQC,IACN5J,KAAKsJ,cAAgB,OAG3B,CAEQoE,cACN1N,KAAK4F,cAAcyB,UAAUS,UAAU,CACrCP,KAAOkC,IACLzJ,KAAKuN,QAAU9D,EACfzJ,KAAK6X,KAAOpO,EAAS9J,OAAS,EAC9BK,KAAKyN,QAAUzN,KAAKuN,QAAQM,MAAOC,GAAkC,IAAxBA,EAAMuG,eAGnDrU,KAAK+X,0BAAwB,EAE/BpO,MAAQC,IACN5J,KAAKqJ,OAAOM,MAAM,2IAA4B,GAGpD,CAEQoO,2BAEN,IAAK/X,KAAKsJ,gBAAkBtJ,KAAKuN,SAAmC,IAAxBvN,KAAKuN,QAAQ5N,OAEvD,YADAK,KAAK8X,mBAAoB,GAQ3B,MAAM5O,EACJlJ,KAAKsJ,cAAcQ,eAAiBlB,KAAWG,OAC3CiP,EAAYhY,KAAKuN,QAAQ0K,KAAM7J,GAAWA,EAAOC,aACjD6J,EAAkBlY,KAAKuN,QAAQM,MAClCO,GAAoC,IAAzBA,EAAOiG,eAGrBrU,KAAK8X,kBAAoB5O,GAAsB8O,GAAaE,CAC9D,CAEAf,0BACEnX,KAAK8X,mBAAoB,CAC3B,iDAvEWF,GAAgBtV,MAAAC,KAAAD,MAAAE,KAAAF,MAAAgE,MAAA,oCAAhBsR,EAAgBhN,UAAA,kBAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,0sDAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDX7B3I,MAAA,UAAAA,CAAsC,UACuBA,MAAA,gBAAUA,QAErEA,MAAA,EAAA6V,GAAA,aAWA7V,MAAA,EAAA8V,GAAA,kCAQA9V,MAAA,EAAA+V,GAAA,aA+FA/V,MAAA,EAAAgW,GAAA,aAGFhW,eArHQA,MAAA,GAAAA,MAAA,QAAA4I,EAAA5B,eAYHhH,MAAA,GAAAA,MAAA,OAAA4I,EAAA4M,mBAOGxV,MAAA,GAAAA,MAAA,OAAA4I,EAAA5B,gBAAA4B,EAAA4M,mBA+FexV,MAAA,GAAAA,MAAA,cAAA4I,EAAA5B,cAAA,KAAA4B,EAAA5B,cAAAQ,gBAAAoB,EAAAtC,WAAAG,+DC1GV6O,CAAgB,wGCL7B,MAAMW,GAA0B,CAAC,cAAe,kBAC1CC,GAAqB,CAAC,mBAAoB,uBAC1CC,GAAgB,CAAC,KAAM,OACtB,SAASC,EAAU3H,EAAQ4H,EAAWC,EAASC,GAKlD,MAJIC,KAAWF,KACXC,EAAiBD,EACjBA,OAAUvG,GAEVwG,EACA,OAAOH,EAAU3H,EAAQ4H,EAAWC,GAAS3S,QAAK8S,MAAiBF,IAEvE,MAAOG,EAAK7W,GA+BhB,SAAS8W,GAAclI,GACnB,SAAO+H,KAAW/H,EAAOmI,oBAAgB,EAAKJ,KAAW/H,EAAOoI,oBACpE,CAjC0BF,CAAclI,GAC9ByH,GAAmB1J,IAAKsK,GAAgBC,GAAYtI,EAAOqI,GAAYT,EAAWU,EAAST,IAwBrG,SAASU,GAAwBvI,GAC7B,SAAO+H,KAAW/H,EAAOwI,eAAW,EAAKT,KAAW/H,EAAOyI,eAC/D,CAxBYF,CAAwBvI,GAClBwH,GAAwBzJ,IAAI2K,GAAwB1I,EAAQ4H,IAwB9E,SAASe,GAA0B3I,GAC/B,SAAO+H,KAAW/H,EAAO4I,MAAE,EAAKb,KAAW/H,EAAO6I,IACtD,CAzBkBF,CAA0B3I,GACtB0H,GAAc3J,IAAI2K,GAAwB1I,EAAQ4H,IAClD,GAClB,IAAKK,MACGa,MAAY9I,GACZ,SAAO+I,MAAUC,GAAcrB,EAAUqB,EAAWpB,EAAWC,GAA/D,EAAuE,EAAEoB,OAAUjJ,IAG3F,IAAKiI,EACD,MAAM,IAAIiB,UAAU,wBAExB,OAAO,IAAIC,KAAYC,IACnB,MAAMd,EAAUA,IAAIe,IAASD,EAAW5S,KAAK,EAAI6S,EAAKza,OAASya,EAAOA,EAAK,IAC3EpB,SAAIK,GACG,IAAMlX,EAAOkX,EAAO,EAEnC,CACA,SAASI,GAAwB1I,EAAQ4H,GACrC,OAAQS,GAAgBC,GAAYtI,EAAOqI,GAAYT,EAAWU,EACtE,kECxCO,SAASgB,GAAKC,GACjB,SAAO/a,KAAO,CAACgb,EAAG1L,IAAUyL,GAASzL,EACzC,kCCDA,MAAM2L,GAAaA,CAACC,EAAKC,KAAWD,EAAInM,KAAKoM,GAAQD,kBCD9C,MAAME,WAAeC,MACxB/a,YAAYgb,EAAWC,GACnBC,OACJ,CACAC,SAASC,EAAO7E,EAAQ,GACpB,OAAOpW,IACX,ECPG,MAAMkb,EAAmB,CAC5BC,YAAY9B,EAAS+B,KAAYhB,GAC7B,MAAQiB,YAAaH,EACrB,OAAwDG,GAASF,YACtDE,EAASF,YAAY9B,EAAS+B,KAAYhB,GAE9Ce,YAAY9B,EAAS+B,KAAYhB,EAC5C,EACAkB,cAAcC,GACV,MAAQF,YAAaH,EACrB,OAA6DG,GAASC,eAAkBA,eAAeC,EAC3G,EACAF,cAAUhJ,4BCXP,MAAMmJ,EACT3b,YAAY4b,EAAqBC,EAAMF,EAAUE,KAC7C1b,KAAKyb,oBAAsBA,EAC3Bzb,KAAK0b,IAAMA,CACf,CACAV,SAASF,EAAM1E,EAAQ,EAAG6E,GACtB,OAAO,IAAIjb,KAAKyb,oBAAoBzb,KAAM8a,GAAME,SAASC,EAAO7E,EACpE,EAEJoF,EAAUE,IAAMC,KAAsBD,ICR/B,MAAME,GAAiB,ICDvB,MAAMC,WAAuBL,EAChC3b,YAAYic,EAAiBJ,EAAMF,EAAUE,KACzCX,MAAMe,EAAiBJ,GACvB1b,KAAK+b,QAAU,GACf/b,KAAKgc,SAAU,CACnB,CACAC,MAAMC,GACF,MAAQH,WAAY/b,KACpB,GAAIA,KAAKgc,QAEL,YADAD,EAAQzN,KAAK4N,GAGjB,IAAIvS,EACJ3J,KAAKgc,SAAU,EACf,MACSrS,EAAQuS,EAAOC,QAAQD,EAAOjB,MAAOiB,EAAO9F,OAC7C,YAEE8F,EAASH,EAAQK,SAE3B,GADApc,KAAKgc,SAAU,EACXrS,EAAO,CACP,KAAQuS,EAASH,EAAQK,SACrBF,EAAOG,cAEX,MAAM1S,CACV,CACJ,GCxBG,MAAM2S,WAAoB3B,GAC7B9a,YAAYgb,EAAWC,GACnBC,MAAMF,EAAWC,GACjB9a,KAAK6a,UAAYA,EACjB7a,KAAK8a,KAAOA,EACZ9a,KAAKuc,SAAU,CACnB,CACAvB,SAASC,EAAO7E,EAAQ,GACpB,IAAIoG,EACJ,GAAIxc,KAAKyc,OACL,OAAOzc,KAEXA,KAAKib,MAAQA,EACb,MAAMte,EAAKqD,KAAKrD,GACVke,EAAY7a,KAAK6a,UACvB,OAAU,MAANle,IACAqD,KAAKrD,GAAKqD,KAAK0c,eAAe7B,EAAWle,EAAIyZ,IAEjDpW,KAAKuc,SAAU,EACfvc,KAAKoW,MAAQA,EACbpW,KAAKrD,GAAwB,QAAlB6f,EAAKxc,KAAKrD,UAAuB,IAAP6f,EAAgBA,EAAKxc,KAAK2c,eAAe9B,EAAW7a,KAAKrD,GAAIyZ,GAC3FpW,IACX,CACA2c,eAAe9B,EAAW+B,EAAKxG,EAAQ,GACnC,OAAO8E,EAAiBC,YAAYN,EAAUoB,MAAMY,KAAKhC,EAAW7a,MAAOoW,EAC/E,CACAsG,eAAeI,EAAYngB,EAAIyZ,EAAQ,GACnC,GAAa,MAATA,GAAiBpW,KAAKoW,QAAUA,IAA0B,IAAjBpW,KAAKuc,QAC9C,OAAO5f,EAED,MAANA,GACAue,EAAiBI,cAAc3e,EAGvC,CACAwf,QAAQlB,EAAO7E,GACX,GAAIpW,KAAKyc,OACL,OAAO,IAAIpZ,MAAM,gCAErBrD,KAAKuc,SAAU,EACf,MAAM5S,EAAQ3J,KAAK+c,SAAS9B,EAAO7E,GACnC,GAAIzM,EACA,OAAOA,GAEe,IAAjB3J,KAAKuc,SAAgC,MAAXvc,KAAKrD,KACpCqD,KAAKrD,GAAKqD,KAAK0c,eAAe1c,KAAK6a,UAAW7a,KAAKrD,GAAI,MAE/D,CACAogB,SAAS9B,EAAO+B,GACZ,IACIC,EADAC,GAAU,EAEd,IACIld,KAAK8a,KAAKG,EACd,OACOkC,GACHD,GAAU,EACVD,EAAaE,GAAQ,IAAI9Z,MAAM,qCACnC,CACA,GAAI6Z,EACA,OAAAld,KAAKqc,cACEY,CAEf,CACAZ,cACI,IAAKrc,KAAKyc,OAAQ,CACd,MAAQ9f,KAAIke,aAAc7a,MAClB+b,WAAYlB,EACpB7a,KAAK8a,KAAO9a,KAAKib,MAAQjb,KAAK6a,UAAY,KAC1C7a,KAAKuc,SAAU,KACfa,MAAUrB,EAAS/b,MACT,MAANrD,IACAqD,KAAKrD,GAAKqD,KAAK0c,eAAe7B,EAAWle,EAAI,OAEjDqD,KAAKoW,MAAQ,KACb2E,MAAMsB,aACV,CACJ,IF5ESgB,GAAQzB,mDGGd,SAAS0B,GAAUC,EAAuBC,GAC7C,OAAIA,EACQC,MAAWC,MAAOF,EAAkBvX,QAAK0X,KAAK,GCLvD,SAASC,KACZ,SAAOC,KAAQ,CAACJ,EAAQtD,KACpBsD,EAAO3V,aAAUgW,MAAyB3D,EAAY4D,MAAK,EAEnE,CDCkEH,IAAmBH,EAAOxX,KAAKqX,GAAUC,MAAuB,EAEvHzD,MAAS,CAACY,EAAO7L,OAAUmL,OAAUuD,EAAsB7C,EAAO7L,IAAQ5I,QAAK0X,KAAK,IAAC,EAAGK,MAAMtD,IACzG,8BEDA,SAAAuD,GAAAhT,EAAAC,GAAA,OAAAuB,GAAA,SAAAyR,EAAAC,GAAA,OAAA5S,UAAA2S,EAAArP,MAAAsP,EAAA,WAAAC,GAAAnT,EAAAC,GAw9F2K,GAx9F3K,EAAAD,GA6H6F3I,MAAE,EAAA2b,GAAA,qBA21F4E,EAAAhT,EAAA,OAAA4B,EA31F9EvK,QAAE+b,EAAAxR,EAAAtB,UAAA+S,EAAAzR,EAAAgC,MAAAmB,EAAF1N,cAAE,mBAAA+b,EAAAE,OAAFjc,CA21FhB,0BA31FgBA,MAAE,EAAAmK,GAAAuD,EAAAwO,mBAAAH,GAAAC,GA21FlB,QAAAG,GAAA,SAAAP,EAAAC,EAAAO,EAAAC,GAAA,OAAAC,MAAAV,EAAA,cAAAC,EAAA,eAAAO,EAAAG,KAAAF,EAAA,WAAAG,GAAA7T,EAAAC,GAAA,KAAAD,EAAA,OAAA8T,EA31FgBzc,cAAE,GAAFA,MAAE,WAAFA,MAAE,gCAAA+b,EAAF/b,MAAEyc,GAAAxT,UAAA2J,EAAF5S,QAAE,OAAFA,MAy1F7C4S,EAAA8J,MAAAX,EAAA1hB,IAAe,GAz1F8B2F,MAAE,EAAA8b,GAAA,YAAF9b,eA61FtE,MAAA2I,EAAA,OAAAoT,EAAAnT,EAAAK,UA71FsEjJ,MAAE,GAAFA,MAAE,UAAA+b,EAAAY,QAAF3c,CAo1FpC,UAp1FoCA,MAAE,EAAAmc,GAAAJ,EAAAO,MAAA,KAAAP,EAAAa,QAAAb,EAAAa,QAAA,QAAAb,EAAAc,QAAAd,EAAAc,QAAA,QAAAd,EAAAQ,MAAFvc,CAo1FpC,cAAA+b,EAAAe,aAp1FoC9c,MAAE,GAAFA,MAAE,OAAA+b,EAAAgB,KA21FrD,QAAAC,GAAA,SAAApB,EAAAC,EAAAO,EAAAC,EAAAY,GAAA,OAAAX,MAAAV,EAAAsB,UAAArB,EAAAsB,WAAAf,EAAA,eAAAC,EAAA,gBAAAY,EAAA,EAAAG,GAAA,SAAAxB,EAAAC,GAAA,OAAAwB,gBAAAzB,EAAA0B,gBAAAzB,EAAA,WAAA0B,GAAA5U,EAAAC,GAgd9B,GAhd8B,EAAAD,IA31FmD3I,MAAE,WAAFA,MAAE,iBAAFA,SA2yGjF,EAAA2I,EAAA,OAAA8G,EA3yGiFzP,cAAE,GAAFA,MAAE,eAAFA,MAAE,EAAAod,GAAA,MAAA3N,EAAA+N,WAAA,KAAA/N,EAAA+N,WAAAH,gBAAA,MAAA5N,EAAA+N,WAAA,KAAA/N,EAAA+N,WAAAF,iBAAFtd,CAwyGuC,YAAAyP,EAAAgO,UAxyGvCzd,CAwyGuC,aAAAyP,EAAAiO,WAAA,QAAAC,GAAA,SAAA/B,EAAAC,GAAA,OAAA+B,OAAAhC,EAAA,eAAAC,EAAA,WAAAgC,GAAAlV,EAAAC,GAAA,KAAAD,EAAA,OAAAmV,EAxyGvC9d,cAAE,YAAFA,MAAE,yBAAA+d,EAAF/d,MAAE8d,GAAA7U,UAAAsB,EAAFvK,MAAE,UAAFA,MAkzGuDuK,EAAAyT,UAAAD,EAAA1jB,IAAiB,GAlzGxE2F,MAAE,aAAFA,OAozG7E,MAAA2I,EAAA,OAAAoV,EAAAnV,EAAAK,UApzG6EjJ,MAAE,UAAFA,MAAE,EAAA2d,GAAAI,EAAAH,OAAAG,EAAAE,mBAAFje,MAAE,GAAFA,MAAE,YAAA+d,EAAAG,aAAFle,MAmzG7C,QAAAme,EAAA,SAAAvC,GAAA,OAAAwC,SAAAxC,EAAA,WAAAyC,GAAA1V,EAAAC,GAAA,KAAAD,EAAA,OAAAK,EAnzG6ChJ,cAAE,GAAFA,MAAE,UAAFA,CA6yGpB,WA7yGoBA,MAAE,mBAAFA,MAAEgJ,GAAA,MAAAE,EAAFlJ,QAAE,OAAFA,MA8yGFkJ,EAAAoV,OAAM,GA9yGJte,cAAE,WAAFA,MAAE,mBAAFA,MAAEgJ,GAAA,MAAAuV,EAAFve,QAAE,OAAFA,MA+yGFue,EAAAtZ,OAAM,GA/yGJjF,gBAAE,WAAFA,MAAE,EAAA6d,GAAA,cAAF7d,eAszGxE,MAAA2I,EAAA,OAAAiC,EAtzGwE5K,cAAE,GAAFA,MAAE,UAAFA,MAAE,EAAAme,EAAA,MAAAvT,EAAA4T,QAAA,KAAA5T,EAAA4T,QAAAJ,WAAFpe,MAAE,GAAFA,MAAE,UAAFA,MAAE,EAAAme,EAAA,MAAAvT,EAAA4T,SAAA,MAAA5T,EAAA4T,QAAAF,KAAA,KAAA1T,EAAA4T,QAAAF,KAAAF,UAAFpe,CA8yGZ,kBAAA4K,EAAA4T,SAAA,MAAA5T,EAAA4T,QAAAF,KAAA,KAAA1T,EAAA4T,QAAAF,KAAAG,SA9yGYze,aAAE,GAAFA,MAAE,UAAFA,MAAE,GAAAme,EAAA,MAAAvT,EAAA4T,SAAA,MAAA5T,EAAA4T,QAAAvZ,KAAA,KAAA2F,EAAA4T,QAAAvZ,KAAAmZ,UAAFpe,CA+yGZ,kBAAA4K,EAAA4T,SAAA,MAAA5T,EAAA4T,QAAAvZ,KAAA,KAAA2F,EAAA4T,QAAAvZ,KAAAwZ,SA/yGYze,aAAE,GAAFA,MAAE,UAAFA,MAAE,GAAAme,EAAA,MAAAvT,EAAA8T,SAAA,KAAA9T,EAAA8T,SAAAN,WAAFpe,MAAE,GAAFA,MAAE,gBAAA4K,EAAA8T,SAAA,KAAA9T,EAAA8T,SAAAC,KAkzG/C,QAAAC,GAAA,SAAAhD,EAAAC,EAAAO,EAAAC,EAAAY,GAAA,iBAAArB,EAAA,aAAAC,EAAA,iBAAAO,EAAA,WAAAC,EAAA,WAAAY,EAAA,EA56GhD,MAAM4B,GACFC,MAAQ,EACRC,oBAAqB,EACrBC,MAAO,EACPC,QAAS,EACTC,QAAS,EACTC,WAAY,EACZC,WAAY,EACZC,UAAW,EACXC,UAAW,EACXC,OAAS,EACTC,aAAe,EACfC,OAAQ,EACRC,UAAW,EACXC,WAAY,EACZC,cAAgB,EAChBC,KAAM,EACNC,WAAa,IACbC,YAAa,EACbC,cAAe,EACfC,WAAa,CAAC,EACdC,sBAAwB,IAExBC,KAAM,EACNC,QAAU,CAAC,OAAQ,QACnBC,UAAW,EACXC,QAAU,EACV3B,MAAO,EACP4B,UAAW,EACX7B,UAAW,EACX8B,WAAY,EAEZC,UAAW,EACXC,gBAAkB,IAClBC,oBAAqB,EACrBC,eAAgB,EAChBC,0BAA4B,EAE5BC,UAAW,EACXC,cAAgB,EAEhBC,gBAAkB,GAClBC,YAAa,EACbC,WAAY,EAEZC,YAAa,EAEbC,iBAAkB,EAClB7jB,cAAgB,EAOpB,MAAM8jB,GACFvC,MAAQ,SACRC,mBAAqB,UACrBC,KAAO,UACPC,OAAS,UACTC,OAAS,UACTC,UAAY,UACZC,UAAY,UACZC,SAAW,UACXC,SAAW,UACXC,OAAS,SACTC,aAAe,SACfC,MAAQ,UACRC,SAAW,UACXC,UAAY,UACZC,cAAgB,gBAChBC,IAAM,UACNC,WAAa,SACbC,WAAa,UACbC,aAAe,iBACfC,WAAa,CAAC,EACdC,sBAAwB,SAExBC,IAAM,UACNC,QAAU,WACVC,SAAW,iBACXC,QAAU,gBACV3B,KAAO,UACP4B,SAAW,iBACX7B,SAAW,UACX8B,UAAY,iBAEZC,SAAW,UACXC,gBAAkB,SAClBC,mBAAqB,UACrBC,cAAgB,iBAChBC,0BAA4B,SAE5BC,SAAW,UACXC,cAAgB,SAEhBC,gBAAkB,SAClBC,WAAa,iBACbC,UAAY,iBAEZC,WAAa,UAEbC,gBAAkB,UAClB7jB,cAAgB,EACnB,IAEK+jB,GAAS,MAAf,MAAMA,EACFC,aACAhkB,YAAYgkB,GACR7jB,KAAK6jB,aAAeA,CACxB,CACAC,IAAIpJ,KAAUqJ,IACV,EAAIC,UACAC,QAAQH,IAAIpJ,KAAUqJ,EAE9B,CACApa,MAAMA,GACF3J,KAAK6jB,aAAaK,YAAYva,EAClC,CACAwa,KAAKzJ,KAAUqJ,GACXE,QAAQE,KAAKzJ,KAAUqJ,EAC3B,CACAK,iBAAW,SAAAC,GAAA,WAAAA,GAAwFT,GAAVthB,MAAqCA,OAAe,EAC7I8hB,kBADyF9hB,MAAE,CAAAgiB,MACYV,EAASnhB,QAATmhB,EAASlhB,YACnH,OAlBKkhB,CAAS,KAkCf,IAAIW,GACH,SAAUA,GACPA,SAAKC,MAAW,QAChBD,EAAKE,MAAW,QAFTF,CAGX,CAHC,CAGEA,IAAgB,CAAC,GAMhBG,EACH,SAAUA,GACPA,SAAMC,QAAa,UACnBD,EAAME,MAAW,QACjBF,EAAMG,MAAW,QAHVH,CAIX,CAJC,CAIEA,GAAkB,CAAC,GAkBrB,IACKI,EAAe,MAArB,MAAMA,EACFC,OAIAC,sBAAwB,IAAIC,IAI5BC,sBAAwB,IAAID,IAI5BE,yBAA2B,IAAIF,IAI/BG,0BAA4B,IAAIH,IAIhCI,oBAAsB,IAAIJ,IAI1BK,qBAAuB,IAAIL,IAI3BM,iBAAmB,IAAIN,IAIvBO,kBAAoB,IAAIP,IAIxBQ,kBAAoB,IAAIR,IAIxBS,oBAAsB,IAAIT,IAI1BU,eAAiB,IAAIV,IAIrBW,kBAAoB,IAAIX,IAIxBY,SAAW,CACPzE,MAAO,GAKXtB,WAAa,CACTqC,KAAK,EACL2D,cAAc,EACdC,aAAa,EACbC,UAAU,EACVC,WAAW,EACXtG,iBAAiB,EACjBuG,QAAQ,EACRtG,iBAAiB,GAKrBG,UAAY,CACRP,UAAW,2BACXC,WAAY,KACZb,MAAO,EACPuH,SAAU,EACVC,SAAU,GAKdpG,WAIAc,QAIAE,SAIAqF,OAIAC,OAAS,GAITC,QAAU,GAIVC,SAAW,CAAC,EAIZC,SAAW,CAAC,EAIZC,SAAW,KAIXC,QAAU,GAKVC,SAAW,GAIXC,OAAS,KAKTC,aAAe,GAKfC,YAAc,KAIdC,eAAiB,UAIjBC,SAAW,CAAC,EAIZC,aAAe,CAAC,EAEhB,eAAIC,GACA,OAAOnnB,KAAKknB,YAChB,CAIAE,QAAU,CACNC,QAAS,CAAC,EACVC,KAAM,CACFC,aAAc,CAAC,QACfC,UAAW,CAAC,QACZC,SAAU,CAAC,iBAInB,UAAIC,GACA,OAAO1nB,KAAKonB,OAChB,CAIAO,MAAQ,CAOJ,CACIpoB,OAAQ,CAAC,QAAS,QAAS,YAC3BqoB,IAAKC,IACDA,EAAMR,QAAUrnB,KAAKsmB,QAAUtmB,KAAKsmB,OAAOtmB,KAAK8nB,SAAS9nB,KAAK0mB,YAAY/pB,KASlF,CACI4C,OAAQ,CAAC,QAAS,QAAS,YAC3BqoB,IAAMC,IACF,MAAMhG,EAAS7hB,KAAK6lB,SAAShE,QAAU,GAAqCM,EAAMniB,KAAK6lB,SAAS1D,IAAK4F,EAAM,CACvG,cAAe5F,EAAMN,EAAS,GAC9B,eAAgBM,EAAM,GAAKN,IAFoB7hB,KAAK6lB,SAAS5D,WAK7DjiB,KAAKggB,WAAW7R,QAAQ6Z,IACpBA,EAAM9I,QAAU6I,EAAI,eACpBC,EAAM7I,QAAU4I,EAAI,eAAc,GAG1CF,EAAME,IAAMA,IAEjB,CACCxoB,OAAQ,CAAC,QAAS,QAAS,YAC3BqoB,IAAMC,IACF,MAAMjJ,IAAU5e,KAAK4e,QAAU5e,KAAK6lB,SAASzE,OAAO6G,QAAQ,GAAKjoB,KAAK6lB,SAAShE,OAAQqG,GAAQloB,KAAK6lB,SAAS5D,UAAWkG,EAAS,GACjI,IAAIpG,EAAQ,KAAMqG,EAAWpoB,KAAKsmB,OAAO3mB,OAKzC,IAJAkoB,EAAMzG,MAAQ,CACVW,OAAO,EACPnD,MAAOA,GAEJwJ,KAAa,GAChBrG,EAAQ/hB,KAAK4mB,SAASwB,GACtBrG,EAAQ/hB,KAAK6lB,SAAS7D,UAAY5O,KAAKiV,IAAItG,EAAO/hB,KAAK6lB,SAASzE,QAAUW,EAC1E8F,EAAMzG,MAAMW,MAAQA,EAAQ,GAAK8F,EAAMzG,MAAMW,MAC7CoG,EAAOC,GAAaF,EAA2EtJ,EAAQmD,EAA5E/hB,KAAKsmB,OAAO8B,GAAUxJ,MAAQ5e,KAAKsmB,OAAO8B,GAAUxJ,MAAQA,EAE3F5e,KAAKumB,QAAU4B,EACfnoB,KAAKggB,WAAW7R,QAAQ,CAAC6Z,EAAO3R,KAC5B2R,EAAMpJ,MAAQ5e,KAAKumB,QAAQlQ,GAC3B2R,EAAM7I,QAAU0I,EAAME,IAAI,gBAC1BC,EAAM9I,QAAU2I,EAAME,IAAI,cAAa,EAC1C,GAEN,CACCxoB,OAAQ,CAAC,QAAS,YAClBqoB,IAAKA,KACD,MAAMU,EAAS,GAAIlH,EAAQphB,KAAKsmB,OAAQT,EAAW7lB,KAAK6lB,SAExD0C,EAAOnV,KAAKoV,IAAqB,EAAjB3C,EAASzE,MAAW,GAAIqH,EAAqC,EAA9BrV,KAAKsV,KAAKtH,EAAMzhB,OAAS,GACxE,IAAIgpB,EAAS,GAAIC,EAAU,GAAIC,EAAShD,EAASvE,MAAQF,EAAMzhB,OAASkmB,EAASrE,OAAS+G,EAAOnV,KAAKoV,IAAID,EAAME,GAAQ,EAExH,IADAI,GAAU,EACHA,KAAW,GAEdP,EAAOha,KAAKtO,KAAK8oB,UAAUR,EAAO3oB,OAAS,GAAG,IAC9CgpB,EAAOra,KAAK,IAAKtO,KAAKggB,WAAWsI,EAAOA,EAAO3oB,OAAS,MACxD2oB,EAAOha,KAAKtO,KAAK8oB,UAAU1H,EAAMzhB,OAAS,GAAK2oB,EAAO3oB,OAAS,GAAK,GAAG,IACvEipB,EAAQG,QAAQ,IAAK/oB,KAAKggB,WAAWsI,EAAOA,EAAO3oB,OAAS,MAEhEK,KAAK2mB,QAAU2B,EACfK,EAASA,EAAO7Z,IAAIkZ,IAChBA,EAAMrrB,GAAM,GAAEqD,KAAKgnB,iBAAiBgB,EAAMrrB,KAC1CqrB,EAAMgB,UAAW,EACjBhB,EAAMiB,UAAW,EACVjB,IAEXY,EAAUA,EAAQ9Z,IAAIkZ,IAClBA,EAAMrrB,GAAM,GAAEqD,KAAKgnB,iBAAiBgB,EAAMrrB,KAC1CqrB,EAAMgB,UAAW,EACjBhB,EAAMiB,UAAW,EACVjB,IAEXhoB,KAAKggB,WAAa4I,EAAQlL,OAAO1d,KAAKggB,YAAYtC,OAAOiL,EAAM,GAEpE,CACCppB,OAAQ,CAAC,QAAS,QAAS,YAC3BqoB,IAAKA,KACD,MAAMzF,EAAMniB,KAAK6lB,SAAS1D,IAAM,GAAI,EAAIsG,EAAOzoB,KAAK2mB,QAAQhnB,OAASK,KAAKsmB,OAAO3mB,OAAQupB,EAAc,GACvG,IAAId,GAAW,EAAIe,EAAW,EAAG9B,EAAU,EAC3C,OAASe,EAAWK,GAChBU,EAAWD,EAAYd,EAAW,IAAM,EACxCf,EAAUrnB,KAAKumB,QAAQvmB,KAAK8nB,SAASM,IAAapoB,KAAK6lB,SAAShE,OAChEqH,EAAY5a,KAAK6a,EAAW9B,EAAUlF,GAE1CniB,KAAK8mB,aAAeoC,IAEzB,CACC3pB,OAAQ,CAAC,QAAS,QAAS,YAC3BqoB,IAAKA,KACD,MAAMwB,EAAUppB,KAAK6lB,SAAS/D,aAAcoH,EAAclpB,KAAK8mB,aAAciB,EAAM,CAC/EnJ,MAASxL,KAAKsV,KAAKtV,KAAKiW,IAAIH,EAAYA,EAAYvpB,OAAS,KAAiB,EAAVypB,EACpE,eAAgBA,GAAW,GAC3B,gBAAiBA,GAAW,IAEhCppB,KAAK+f,UAAUnB,MAAQmJ,EAAInJ,MAC3B5e,KAAK+f,UAAUoG,SAAW4B,EAAI,gBAC9B/nB,KAAK+f,UAAUqG,SAAW2B,EAAI,gBAAe,GAElD,CAuBCxoB,OAAQ,CAAC,QAAS,QAAS,YAC3BqoB,IAAKC,IACD,IAAIR,EAAUQ,EAAMR,QAAUrnB,KAAKggB,WAAWsJ,UAAUtB,GAASA,EAAMrrB,KAAOkrB,EAAMR,SAAW,EAC/FA,EAAUjU,KAAKoV,IAAIxoB,KAAKupB,UAAWnW,KAAKiV,IAAIroB,KAAKwpB,UAAWnC,IAC5DrnB,KAAKypB,MAAMpC,EAAO,GAEvB,CACC9nB,OAAQ,CAAC,YACTqoB,IAAKA,KACD5nB,KAAK0pB,QAAQ1pB,KAAKkpB,YAAYlpB,KAAK0mB,UAAS,GAEjD,CACCnnB,OAAQ,CAAC,QAAS,WAAY,QAAS,YACvCqoB,IAAKA,KACD,MAAMzF,EAAMniB,KAAK6lB,SAAS1D,IAAM,GAAI,EAAIiH,EAAuC,EAA7BppB,KAAK6lB,SAAS/D,aAAkBtU,EAAU,GAC5F,IAAImc,EAAOC,EAAKC,EAAOC,EAAOzT,EAAG0T,EASjC,GARAJ,EAAQ3pB,KAAKkpB,YAAYlpB,KAAKqnB,WACT,iBAAVsC,EACPA,GAASP,EAGTO,EAAQ,EAEZC,EAAMD,EAAQ3pB,KAAK4e,QAAUuD,GACjB,IAARA,GAAcniB,KAAK6lB,SAAStE,OAAQ,CACpC,MAAMvV,EAAShM,KAAK8mB,aAAavnB,OAAOyqB,GAC7BhqB,KAAK6lB,SAASzE,MAAQ,GAAM,EAAI4I,GAAWL,EAAQK,EAAUL,GAExEA,EAAQ3d,EAAOrM,OAASqM,EAAOA,EAAOrM,OAAS,GAAKgqB,CACxD,CACA,IAAKtT,EAAI,EAAG0T,EAAI/pB,KAAK8mB,aAAannB,OAAQ0W,EAAI0T,EAAG1T,IAC7CwT,EAAQzW,KAAKsV,KAAK1oB,KAAK8mB,aAAazQ,EAAI,IAAM,GAC9CyT,EAAQ1W,KAAKsV,KAAKtV,KAAKiW,IAAIrpB,KAAK8mB,aAAazQ,IAAM+S,EAAUjH,IACxDniB,KAAKiqB,IAAIJ,EAAO,KAAMF,IAAW3pB,KAAKiqB,IAAIJ,EAAO,IAAKD,IACnD5pB,KAAKiqB,IAAIH,EAAO,IAAKH,IAAU3pB,KAAKiqB,IAAIH,EAAO,IAAKF,KACxDpc,EAAQc,KAAK+H,GAGrBrW,KAAKggB,WAAW7R,QAAQ6Z,IACpBA,EAAMgB,UAAW,EACVhB,IAEXxa,EAAQW,QAAQ+b,IACZlqB,KAAKggB,WAAWkK,GAAMlB,UAAW,IAEjChpB,KAAK6lB,SAAStE,SACdvhB,KAAKggB,WAAW7R,QAAQ6Z,IACpBA,EAAMmC,YAAa,EACZnC,IAEXhoB,KAAKggB,WAAWhgB,KAAKqnB,WAAW8C,YAAa,MAK7DtqB,YAAYklB,GACR/kB,KAAK+kB,OAASA,CAClB,CAKAqF,qBACI,OAAOpqB,KAAKglB,sBAAsB5d,cACtC,CAKAijB,sBACI,OAAOrqB,KAAKklB,sBAAsB9d,cACtC,CAKAkjB,iBACI,OAAOtqB,KAAKmlB,yBAAyB/d,cACzC,CAKAmjB,kBACI,OAAOvqB,KAAKolB,0BAA0Bhe,cAC1C,CAKAojB,oBACI,OAAOxqB,KAAKqlB,oBAAoBje,cACpC,CAKAqjB,qBACI,OAAOzqB,KAAKslB,qBAAqBle,cACrC,CAKAsjB,iBACI,OAAO1qB,KAAKulB,iBAAiBne,cACjC,CAKAujB,kBACI,OAAO3qB,KAAKwlB,kBAAkBpe,cAClC,CAKAwjB,kBACI,OAAO5qB,KAAKylB,kBAAkBre,cAClC,CAKAyjB,oBACI,OAAO7qB,KAAK0lB,oBAAoBte,cACpC,CAKA0jB,eACI,OAAO9qB,KAAK2lB,eAAeve,cAC/B,CAKA2jB,kBACI,OAAO/qB,KAAK4lB,kBAAkBxe,cAClC,CAKA4jB,WAAWpS,GACP,MAAMqS,EAAgB,IAAI9J,GACpB+J,EAAiBlrB,KAAKmrB,iBAAiBvS,EAASqS,GACtDjrB,KAAKinB,SAAW,IAAKgE,KAAkBC,EAC3C,CAUAC,iBAAiBvS,EAASqS,GACtB,MAAMC,EAAiB,IAAKtS,GACtBwS,EAAc,IAAIzH,GAClB0H,EAAiBA,CAACC,EAAMvc,KAC1B/O,KAAK+kB,OAAOjB,IAAK,WAAU/U,qBAAuBuc,MAASvc,KAAO6J,EAAQ7J,2BAA6BA,KAAOkc,EAAclc,MACrHkc,EAAclc,IAEzB,UAAWA,KAAOmc,EACd,GAAIA,EAAeK,eAAexc,GAE9B,GAAyB,WAArBqc,EAAYrc,GACR/O,KAAKwrB,WAAWN,EAAenc,KAC/Bmc,EAAenc,IAAQmc,EAAenc,GACtCmc,EAAenc,GAAe,UAARA,EAAkB/O,KAAKyrB,eAAeP,EAAenc,GAAMmc,EAAe7J,oBAAsB6J,EAAenc,IAGrImc,EAAenc,GAAOsc,EAAeD,EAAYrc,GAAMA,QAAG,GAGpC,YAArBqc,EAAYrc,IAAqD,kBAAxBmc,EAAenc,GAC7Dmc,EAAenc,GAAOsc,EAAeD,EAAYrc,GAAMA,QAAG,GAEhC,mBAArBqc,EAAYrc,IAA8B/O,KAAK0rB,mBAAmBR,EAAenc,IAC5B,GAEhC,kBAArBqc,EAAYrc,IAA6B/O,KAAK2rB,kBAAkBT,EAAenc,IAC1B,GAEhC,mBAArBqc,EAAYrc,IAA8B/O,KAAK4rB,mBAAmBV,EAAenc,KAC5B,GAEhC,aAArBqc,EAAYrc,GACjB,GAAI8c,MAAMC,QAAQZ,EAAenc,IAAO,CACpC,IAAIgd,GAAW,EACfb,EAAenc,GAAKZ,QAAQ6b,IACxB+B,EAA8B,iBAAZ/B,CAAY,GAE7B+B,IACDb,EAAenc,GAAOsc,EAAeD,EAAYrc,GAAMA,GAG/D,MAEImc,EAAenc,GAAOsc,EAAeD,EAAYrc,GAAMA,QAd3Dmc,EAAenc,GAAOsc,EAAeD,EAAYrc,GAAMA,QAHvDmc,EAAenc,GAAOsc,EAAeD,EAAYrc,GAAMA,QAHvDmc,EAAenc,GAAOsc,EAAeD,EAAYrc,GAAMA,GAyBnE,OAAOmc,CACX,CAOAO,eAAerK,EAAOC,GAClB,IAAIrV,EAASoV,EACb,OAAIA,EAAQphB,KAAKsmB,OAAO3mB,OAChB0hB,EACArhB,KAAK+kB,OAAOjB,IAAI,wGAGhB9X,EAAShM,KAAKsmB,OAAO3mB,OACrBK,KAAK+kB,OAAOjB,IAAI,mKAIhB1C,IAAUphB,KAAKsmB,OAAO3mB,SAAWK,KAAK6lB,SAAS5E,MAAQjhB,KAAK6lB,SAASpD,MACrEziB,KAAK+kB,OAAOjB,IAAI,mGAGjB9X,CACX,CAKAggB,iBAAiBpN,GACb5e,KAAKqmB,OAASzH,CAClB,CASAqN,MAAMC,EAAeC,EAAQvT,GACzB5Y,KAAKgsB,iBAAiBE,GACtBlsB,KAAKosB,SAASD,GACdnsB,KAAKqsB,oBACLrsB,KAAKgrB,WAAWpS,GAChB5Y,KAAK6lB,SAAW,IAAK7lB,KAAKinB,UAC1BjnB,KAAKssB,wBACLtsB,KAAKusB,SAAS,SAAU,CAAEC,SAAU,CAAEC,KAAM,WAAY/R,MAAO1a,KAAK6lB,YACpE7lB,KAAK0sB,WAAW,YAChB1sB,KAAKusB,SAAS,UAAW,CAAEC,SAAU,CAAEC,KAAM,WAAY/R,MAAO1a,KAAK6lB,WACzE,CAIAyG,wBACI,MAAMK,EAAW3sB,KAAKqmB,OAAQuG,EAAa5sB,KAAKinB,SAAS1E,WACzD,IAAIzU,GAAQ,EACZ,IAAKS,OAAOC,KAAKoe,GAAYjtB,OACzB,OAEJ,IAAKgtB,EAED,YADA3sB,KAAK6lB,SAASzE,MAAQ,GAG1B,UAAWrS,KAAO6d,EACVA,EAAWrB,eAAexc,KACrBA,GAAO4d,IAAa5d,EAAMjB,IAC3BA,EAAQ+e,OAAO9d,IAI3B/O,KAAK6lB,SAAW,IAAK7lB,KAAKinB,YAAa2F,EAAW9e,GAAQsT,MAAQwL,EAAW9e,IAAU8e,EAAW9e,GAAOsT,MAASphB,KAAKyrB,eAAemB,EAAW9e,GAAOsT,MAAOphB,KAAKinB,SAAS5F,oBAAsBrhB,KAAKinB,SAAS7F,cAI1MphB,KAAK6lB,SAAStD,WACrBviB,KAAK8f,WAAWgG,cAAe,EAC/B9lB,KAAK8f,WAAWH,gBAAkB3f,KAAK6lB,SAASpE,UAChDzhB,KAAK8f,WAAWF,gBAAkB5f,KAAK6lB,SAASnE,UAChD,MAAMoL,EAAU,GAChB9sB,KAAKsmB,OAAOnY,QAAQ+b,IAEhB4C,EAAQxe,KADOtO,KAAK6lB,SAAS9D,MAAQmI,EAAK6C,UAAY,EACnC,GAEvB/sB,KAAK4mB,SAAWkG,EAChB9sB,KAAK+mB,YAAcjZ,EACnB9N,KAAK0sB,WAAW,WACpB,CAKAM,WAAWb,GACPnsB,KAAKitB,MAAM,gBAEXjtB,KAAK8f,WAAWqC,IAAMniB,KAAK6lB,SAAS1D,IAChCniB,KAAK4mB,SAASjnB,SACdK,KAAK4mB,SAAW,IAEpBuF,EAAOhe,QAAQ+b,IAEXlqB,KAAK4mB,SAAStY,KADCtO,KAAK6lB,SAAS9D,MAAQmI,EAAK6C,UAAY,EAC7B,GAE7B/sB,KAAK2mB,QAAU,GACf3mB,KAAKypB,MAAMzpB,KAAKwrB,WAAWxrB,KAAK6lB,SAAS3D,gBAAkBliB,KAAK6lB,SAAS3D,cAAgB,GACzFliB,KAAK0sB,WAAW,SAChB1sB,KAAKktB,UACLltB,KAAK8f,WAAWkG,UAAW,EAC3BhmB,KAAK8f,WAAWH,gBAAkB3f,KAAK6lB,SAASpE,UAChDzhB,KAAK8f,WAAWF,gBAAkB5f,KAAK6lB,SAASnE,UAChD1hB,KAAKmtB,cACLntB,KAAKotB,MAAM,gBACXptB,KAAKusB,SAAS,cAClB,CAKAY,cACIntB,KAAKglB,sBAAsBzd,KAAK,CAC5BuY,WAAY9f,KAAK8f,WACjBC,UAAW/f,KAAK+f,UAChBC,WAAYhgB,KAAKggB,WACjBc,QAAS9gB,KAAK8gB,QACdE,SAAUhhB,KAAKghB,UAEvB,CAIAqM,gBACQrtB,KAAK6lB,SAAS5D,YACdjiB,KAAK6lB,SAAS/D,aAAe,EAC7B9hB,KAAK6lB,SAAS9D,OAAQ,EAE9B,CAIAuL,SACI,IAAIjX,EAAI,EACR,MAAM0T,EAAI/pB,KAAK2nB,MAAMhoB,OAAQJ,EAAS2qB,GAAQlqB,KAAKknB,aAAagD,GAAOrC,EAAQ,CAAC,EAChF,KAAOxR,EAAI0T,GAAG,CACV,MAAMwD,EAAevtB,KAAK2nB,MAAMtR,GAAG9W,OAAOA,OAAOA,IAC7CS,KAAKknB,aAAasG,KAAOD,EAAa5tB,OAAS,IAC/CK,KAAK2nB,MAAMtR,GAAGuR,IAAIC,GAEtBxR,GACJ,CACArW,KAAKggB,WAAW7R,QAAQ6Z,GAASA,EAAM/I,QAAUjf,KAAKytB,mBAAmBzF,IACzEhoB,KAAKmtB,cACLntB,KAAKknB,aAAe,CAAC,EAChBlnB,KAAK0tB,GAAG,UACT1tB,KAAKitB,MAAM,QAEnB,CAMArO,MAAM+O,GAEF,OADAA,EAAYA,GAAajJ,EAAMC,SAE3B,KAAKD,EAAME,MACX,KAAKF,EAAMG,MACP,OAAO7kB,KAAKqmB,OAChB,QACI,OAAOrmB,KAAKqmB,OAAsC,EAA7BrmB,KAAK6lB,SAAS/D,aAAmB9hB,KAAK6lB,SAAShE,OAEhF,CAIAqL,UACIltB,KAAKitB,MAAM,cACXjtB,KAAKusB,SAAS,WACdvsB,KAAKqsB,oBACLrsB,KAAKssB,wBACLtsB,KAAKqtB,gBAELrtB,KAAKstB,SAELttB,KAAKotB,MAAM,cACXptB,KAAKusB,SAAS,YAClB,CAKAqB,SAASC,GACL,IAAK7tB,KAAKsmB,OAAO3mB,OACb,OAAO,EAEXK,KAAKgsB,iBAAiB6B,GACtB7tB,KAAKitB,MAAM,YAKXjtB,KAAKusB,SAAS,UACdvsB,KAAK0sB,WAAW,SAChB1sB,KAAKktB,UACLltB,KAAKotB,MAAM,YACXptB,KAAKusB,SAAS,UAClB,CAQAuB,gBAAgBpd,GACZ,IAAkBqd,EAAd7a,EAAQ,KAOZ6a,SAAe/tB,KAAK+f,UAAUP,UAAUwO,QAAQ,0BAA2B,IAAIC,MAAM,KACrF/a,EAAQ,CACJgb,GAAIH,EAAa,GACjBI,GAAIJ,EAAa,IAEjB/tB,KAAK0tB,GAAG,cACR1tB,KAAK0sB,WAAW,YAED,cAAfhc,EAAM4a,OACNtrB,KAAK8f,WAAWoG,QAAS,GAE7BlmB,KAAKouB,MAAM,GACJlb,CACX,CAIAmb,gBACIruB,KAAKitB,MAAM,YACXjtB,KAAKusB,SAAS,OAClB,CAQA+B,oBAAoB5d,EAAO6d,GACvB,IAAIhF,EAAU,KAAMC,EAAU,KAAMgF,EAAO,KAC3C,MAAMC,EAAQzuB,KAAK0uB,WAAWH,EAASI,QAAS3uB,KAAK2uB,QAAQje,IAASwC,EAAQlT,KAAK0uB,WAAWH,EAASrb,MAAM0b,MAAOH,GACpH,QAAKzuB,KAAK0tB,GAAG,cAGT1tB,KAAK6lB,SAASvE,MACdiI,EAAUvpB,KAAKkpB,YAAYlpB,KAAKupB,WAChCC,GAAWxpB,KAAKkpB,YAAYlpB,KAAKwpB,UAAY,GAAKD,EAClDrW,EAAMgb,IAAOhb,EAAMgb,EAAI3E,GAAWC,EAAUA,GAAWA,EAAWD,IAGlEA,EAA8BvpB,KAAKkpB,YAAzBlpB,KAAK6lB,SAAS1D,IAAuBniB,KAAKwpB,UAA8BxpB,KAAKupB,WACvFC,EAA8BxpB,KAAKkpB,YAAzBlpB,KAAK6lB,SAAS1D,IAAuBniB,KAAKupB,UAA8BvpB,KAAKwpB,WACvFgF,EAAOxuB,KAAK6lB,SAASlE,UAAW,EAAK8M,EAAMP,EAAI,EAAI,EACnDhb,EAAMgb,EAAI9a,KAAKoV,IAAIpV,KAAKiV,IAAInV,EAAMgb,EAAG3E,EAAUiF,GAAOhF,EAAUgF,IAE7Dtb,EACX,CASA2b,eAAene,EAAOoe,EAASC,GAC3B,MAAsCN,EAAQzuB,KAAK0uB,WAAWI,EAAQH,QAAS3uB,KAAK2uB,QAAQje,IAASwC,EAAQ4b,EAAQ5b,MAAMmU,QAAS2H,EAAjH,CAAC,QAAS,UAAgIhvB,KAAK6lB,SAAS1D,IAAMsM,EAAMP,GAAKluB,KAAK6lB,SAAS1D,IAAMsM,EAAMP,GAAKluB,KAAK6lB,SAAS1D,MACzO,IAAI8M,EAAe5H,EAAS6H,GACZ,IAAZT,EAAMP,GAAWluB,KAAK0tB,GAAG,cAAgB1tB,KAAK0tB,GAAG,YACjD1tB,KAAKouB,OAAOpuB,KAAK6lB,SAASvD,cAAgBtiB,KAAK6lB,SAASzD,YACxD6M,EAAgBjvB,KAAKmvB,QAAQjc,EAAMgb,EAAe,IAAZO,EAAMP,EAAUc,EAAYF,EAAQE,WAC1E3H,EAAUrnB,KAAKqnB,UACf6H,EAAalvB,KAAKqnB,SAA0B,IAAlB4H,OAAuB5c,EAAY4c,GACzD5H,IAAY6H,IACZlvB,KAAK0sB,WAAW,YAChB1sB,KAAKstB,UAETwB,EAAQE,UAAYA,GAChB5b,KAAKiW,IAAIoF,EAAMP,GAAK,QAAS/jB,MAAOilB,UAAYN,EAAQO,KAAO,MAC/DN,KAGH/uB,KAAK0tB,GAAG,cAGb1tB,KAAKotB,MAAM,YACXptB,KAAKusB,SAAS,WAClB,CAQA4C,QAAQG,EAAYN,GAChB,MAAiBpQ,EAAQ5e,KAAK4e,QAC9B,IAAIsK,EAAclpB,KAAKkpB,cAAeqG,GAAW,EAC7CvvB,KAAK6lB,SAAStE,SACd2H,EAAcA,EAAYpa,IAAIob,IACb,IAATA,IACAA,GAAQ,MAELA,KASf,QAAS7T,EAAI,EAAGA,EAAI6S,EAAYvpB,SACV,SAAdqvB,GAAwBM,EAAapG,EAAY7S,GAAKmY,IAAQc,EAAapG,EAAY7S,GAAKmY,GAC5Fe,EAAWlZ,EAIQ,UAAd2Y,GAAyBM,EAAapG,EAAY7S,GAAKuI,EAAQ4P,IAAQc,EAAapG,EAAY7S,GAAKuI,EAAQ4P,GAClHe,EAAWlZ,EAAI,EAEVrW,KAAKiqB,IAAIqF,EAAY,IAAKpG,EAAY7S,KACxCrW,KAAKiqB,IAAIqF,EAAY,IAAKpG,EAAY7S,EAAI,IAAM6S,EAAY7S,GAAKuI,GACpE2Q,EAAyB,SAAdP,EAAuB3Y,EAAI,EAAIA,EAEvB,OAAd2Y,GAAsBM,EAAapG,EAAY7S,GAAKmY,IAAQc,EAAapG,EAAY7S,GAAKmY,KAC/Fe,EAAWlZ,IAEE,IAAbkZ,GAhBgClZ,KAsBxC,OAAKrW,KAAK6lB,SAASvE,OAEXthB,KAAKiqB,IAAIqF,EAAY,IAAKpG,EAAYlpB,KAAKupB,YAC3CgG,EAAWD,EAAatvB,KAAKupB,UAExBvpB,KAAKiqB,IAAIqF,EAAY,IAAKpG,EAAYlpB,KAAKwpB,cAChD+F,EAAWD,EAAatvB,KAAKwpB,YAG9B+F,CACX,CAMA7F,QAAQ4F,GACJ,MAAM5F,EAAU1pB,KAAKouB,QAAU,EAC3BpuB,KAAK0tB,GAAG,cACR1tB,KAAKwvB,kBAEL9F,IACA1pB,KAAKitB,MAAM,aACXjtB,KAAKusB,SAAS,cAElBvsB,KAAK+f,UAAUP,UAAY,eAAiB8P,EAAa,cACzDtvB,KAAK+f,UAAUN,WAAczf,KAAKouB,QAAU,IAAQ,KAAOpuB,KAAK6lB,SAASvC,gBAAkB,IAAMtjB,KAAK6lB,SAASvC,gBAAkB,GAErI,CAMAoK,GAAGzS,GACC,OAAOjb,KAAKonB,QAAQC,QAAQpM,IAAUjb,KAAKonB,QAAQC,QAAQpM,GAAS,CACxE,CAOAoM,QAAQkI,GACJ,YAAiBld,IAAbkd,EACOvvB,KAAK0mB,SAEW,IAAvB1mB,KAAKsmB,OAAO3mB,QAGhB4vB,EAAWvvB,KAAK8oB,UAAUyG,GACtBvvB,KAAK0mB,WAAa6I,IACJvvB,KAAKusB,SAAS,SAAU,CAAEC,SAAU,CAAEC,KAAM,WAAY/R,MAAO6U,KAI7EvvB,KAAK0mB,SAAW6I,EAChBvvB,KAAK0sB,WAAW,YAChB1sB,KAAKusB,SAAS,UAAW,CAAEC,SAAU,CAAEC,KAAM,WAAY/R,MAAO1a,KAAK0mB,aAElE1mB,KAAK0mB,eAbZ,CAcJ,CAMAgG,WAAW+C,GACP,MAAoB,iBAATA,IACPzvB,KAAKknB,aAAauI,IAAQ,EACtBzvB,KAAK0tB,GAAG,UACR1tB,KAAKotB,MAAM,UAGZ7e,OAAOC,KAAKxO,KAAKknB,aAC5B,CAMAuC,MAAM8F,QAEeld,KADjBkd,EAAWvvB,KAAK8oB,UAAUyG,MAI1BvvB,KAAK6mB,OAAS,EACd7mB,KAAK0mB,SAAW6I,EAChBvvB,KAAK0vB,UAAU,CAAC,YAAa,eAC7B1vB,KAAK0pB,QAAQ1pB,KAAKkpB,YAAYqG,IAC9BvvB,KAAK2vB,SAAS,CAAC,YAAa,eAChC,CAOA7G,UAAUyG,EAAUzH,GAChB,MAAMiC,EAAI/pB,KAAKsmB,OAAO3mB,OAAQ0P,EAAIyY,EAAW,EAAI9nB,KAAK2mB,QAAQhnB,OAC9D,OAAKK,KAAKwrB,WAAW+D,IAAaxF,EAAI,EAClCwF,OAAWld,GAENkd,EAAW,GAAKA,GAAYxF,EAAI1a,KACrCkgB,IAAaA,EAAWlgB,EAAI,GAAK0a,EAAIA,GAAKA,EAAI1a,EAAI,GAE/CkgB,CACX,CAMAzH,SAASyH,GACLA,OACOvvB,KAAK8oB,UADZyG,GAAYvvB,KAAK2mB,QAAQhnB,OAAS,GACF,EACpC,CAMA6pB,QAAQ1B,GAAW,GACf,MAAMjC,EAAW7lB,KAAK6lB,SACtB,IAAwCuC,EAAUwH,EAAsBC,EAApErG,EAAUxpB,KAAK8mB,aAAannB,OAChC,GAAIkmB,EAASvE,KACTkI,EAAUxpB,KAAK2mB,QAAQhnB,OAAS,EAAIK,KAAKsmB,OAAO3mB,OAAS,UAEpDkmB,EAAS5D,WAAa4D,EAAS9D,MAAO,CAI3C,IAHAqG,EAAWpoB,KAAKsmB,OAAO3mB,OACvBiwB,EAAuB5vB,KAAKggB,aAAaoI,GAAUxJ,MACnDiR,EAAe7vB,KAAKqmB,OACb+B,KAAa,IAEhBwH,IAAyB5vB,KAAKggB,WAAWoI,GAAUxJ,MAAQ5e,KAAK6lB,SAAShE,SACrE+N,EAAuBC,MAI/BrG,EAAUpB,EAAW,CACzB,MAEIoB,EADK3D,EAAStE,OACJvhB,KAAKsmB,OAAO3mB,OAAS,EAGrBK,KAAKsmB,OAAO3mB,OAASkmB,EAASzE,MAE5C,OAAI0G,IACA0B,GAAWxpB,KAAK2mB,QAAQhnB,OAAS,GAE9ByT,KAAKoV,IAAIgB,EAAS,EAC7B,CAMAD,QAAQzB,GAAW,GACf,OAAOA,EAAW,EAAI9nB,KAAK2mB,QAAQhnB,OAAS,CAChD,CAMAyhB,MAAMmO,GACF,YAAiBld,IAAbkd,EACOvvB,KAAKsmB,OAAOwJ,SAEvBP,EAAWvvB,KAAK8oB,UAAUyG,GAAU,GAC7B,CAACvvB,KAAKsmB,OAAOiJ,IACxB,CAMAzC,QAAQyC,GACJ,YAAiBld,IAAbkd,EACOvvB,KAAK4mB,SAASkJ,SAEzBP,EAAWvvB,KAAK8oB,UAAUyG,GAAU,GAC7BvvB,KAAK4mB,SAAS2I,GACzB,CAMAjH,OAAOiH,GACH,MAAMQ,EAAM/vB,KAAK2mB,QAAQhnB,OAAS,EAAGqwB,EAAOD,EAAM/vB,KAAKsmB,OAAO3mB,OAAQmP,EAAMD,GAASA,EAAQ,GAAM,EAAImhB,EAAOnhB,EAAQ,EAAIkhB,GAAOlhB,EAAQ,GAAK,EAC9I,YAAiBwD,IAAbkd,EACOvvB,KAAK2mB,QAAQ7X,IAAI,CAACmhB,EAAG5Z,IAAMvH,EAAIuH,IAEnCrW,KAAK2mB,QAAQ7X,IAAI,CAACmhB,EAAG5Z,IAAM4Z,IAAMV,EAAWzgB,EAAIuH,GAAK,MAAM9W,OAAO2qB,GAAQA,EACrF,CAMAkE,MAAMA,GACF,YAAc/b,IAAV+b,IACApuB,KAAK6mB,OAASuH,GAEXpuB,KAAK6mB,MAChB,CAOAqC,YAAYqG,GACR,IAAgDD,EAAYtjB,EAAxDkkB,EAAa,EAAGC,EAAcZ,EAAW,EAC7C,YAAiBld,IAAbkd,GACAvjB,EAAShM,KAAK8mB,aAAahY,IAAI,CAACob,EAAMrb,IAC3B7O,KAAKkpB,YAAYra,IAErB7C,IAEPhM,KAAK6lB,SAAStE,QACVvhB,KAAK6lB,SAAS1D,MACd+N,GAAa,EACbC,EAAcZ,EAAW,GAE7BD,EAAatvB,KAAK8mB,aAAayI,GAC/BD,IAAetvB,KAAK4e,QAAU0Q,GAActvB,KAAK8mB,aAAaqJ,IAAgB,IAAM,EAAID,GAGxFZ,EAAatvB,KAAK8mB,aAAaqJ,IAAgB,EAEnDb,EAAalc,KAAKsV,KAAK4G,GAChBA,EACX,CAQAc,UAAUC,EAAMC,EAAIC,GAChB,OAAe,IAAXA,EACO,EAEJnd,KAAKiV,IAAIjV,KAAKoV,IAAIpV,KAAKiW,IAAIiH,EAAKD,GAAO,GAAI,GAAKjd,KAAKiW,KAAMkH,GAAUvwB,KAAK6lB,SAASzD,WAC9F,CAMAkO,GAAGf,EAAUnB,GACT,IAAI/G,EAAUrnB,KAAKqnB,UAAWmJ,EAAS,KAAMC,EAAWlB,EAAWvvB,KAAK8nB,SAAST,GAAUmC,EAAUxpB,KAAKwpB,UAAWkH,EAAe,EACpI,MAAM1B,IAAcyB,EAAW,KAAOA,EAAW,GAAIrP,EAAQphB,KAAKsmB,OAAO3mB,OAAQ4pB,EAAUvpB,KAAKupB,UAC5FvpB,KAAK6lB,SAASvE,OACTthB,KAAK6lB,SAASrE,QAAUpO,KAAKiW,IAAIoH,GAAYrP,EAAQ,IACtDqP,IAAwB,EAAZzB,EAAiB5N,GAGjCoP,KADAjB,EAAWlI,EAAUoJ,GACClH,GAAWnI,EAAQA,GAASA,EAAQmI,EACtDiH,IAAWjB,GAAYiB,EAASC,GAAYjH,GAAWgH,EAASC,EAAW,IAC3EpJ,EAAUmJ,EAASC,EACnBlB,EAAWiB,EACXE,EAAe,GACf1wB,KAAKypB,MAAMpC,GACXrnB,KAAKmtB,gBAGJntB,KAAK6lB,SAASrE,QACnBgI,GAAW,EACX+F,GAAYA,EAAW/F,EAAUA,GAAWA,GAG5C+F,EAAWnc,KAAKoV,IAAIe,EAASnW,KAAKiV,IAAImB,EAAS+F,IAEnD1Y,WAAW,KACP7W,KAAKouB,MAAMpuB,KAAKowB,UAAU/I,EAASkI,EAAUnB,IAC7CpuB,KAAKqnB,QAAQkI,GACbvvB,KAAKstB,QAAO,EACboD,EACP,CAKAnpB,KAAK6mB,GACDA,EAAQA,IAAS,EACjBpuB,KAAKswB,GAAGtwB,KAAK8nB,SAAS9nB,KAAKqnB,WAAa,EAAG+G,EAC/C,CAKAxN,KAAKwN,GACDA,EAAQA,IAAS,EACjBpuB,KAAKswB,GAAGtwB,KAAK8nB,SAAS9nB,KAAKqnB,WAAa,EAAG+G,EAC/C,CAKAoB,gBAAgB9e,GAEZ,QAAc2B,IAAV3B,EAMA,OAAO,EAEX1Q,KAAKotB,MAAM,aACXptB,KAAKusB,SAAS,aAClB,CAKAoE,YACI,IAAI/R,EACJ,OAAI5e,KAAKqmB,OACLzH,EAAQ5e,KAAKqmB,OAGbrmB,KAAK+kB,OAAOjB,IAAI,kCAEblF,CACX,CAKAwN,SAAStpB,GACL9C,KAAKsmB,OAASxjB,CAClB,CAIAupB,oBAKI,IAAIuE,EACA5wB,KAAKggB,YAAchgB,KAAKggB,WAAWrgB,SACnCixB,EAAU,IAAIC,IACd7wB,KAAKggB,WAAW7R,QAAQ+b,IAChBA,EAAK7K,MACLuR,EAAQhe,IAAIsX,EAAKvtB,GAAIutB,EAAK7K,KAAI,IAI1Crf,KAAKggB,WAAahgB,KAAKsmB,OAAOxX,IAAIkZ,KAE1BrrB,GAAK,GAAEqrB,EAAMrrB,KACbqsB,UAAU,EACVzK,OAAQyJ,EAAMzJ,OACdwO,UAAW/E,EAAM+E,UACjBnO,MAAO,EACPqK,UAAU,EACV5J,OAAMuR,GAAUA,EAAQtwB,IAAI0nB,EAAMrrB,IAClCm0B,aAAc9I,EAAM+I,WAGhC,CAMAtD,mBAAmBzF,GAEf,MAAMgJ,EAAiB,CACnB9Q,OAAU8H,EAAMgB,SAChBzH,OAAUyG,EAAMmC,WAChB8G,OAAUjJ,EAAMiB,SAChBiI,SAAYlJ,EAAMmJ,WAClB,kBAAmBnJ,EAAMoJ,gBACzB,mBAAoBpJ,EAAMqJ,kBAE9B,OAAIrxB,KAAK6lB,SAASrC,YACdwN,EAAehxB,KAAK6lB,SAASrC,WAAawE,EAAMsJ,oBAEhDtxB,KAAK6lB,SAAStC,aACdyN,EAAehxB,KAAK6lB,SAAStC,YAAcyE,EAAMuJ,qBAE9CP,CACX,CAQA/G,IAAIvb,EAAG8iB,EAAG7iB,GACN,MAAMwT,EAAMniB,KAAK6lB,SAAS1D,IAC1B,OAAQqP,GACJ,IAAK,IACD,OAAOrP,EAAMzT,EAAIC,EAAID,EAAIC,EAC7B,IAAK,IACD,OAAOwT,EAAMzT,EAAIC,EAAID,EAAIC,EAC7B,IAAK,KACD,OAAOwT,EAAMzT,GAAKC,EAAID,GAAKC,EAC/B,IAAK,KACD,OAAOwT,EAAMzT,GAAKC,EAAID,GAAKC,EAIvC,CAUA4d,SAASE,EAAMnlB,EAAMmqB,EAAWxW,EAAOgS,GACnC,OAAQR,GACJ,IAAK,cACDzsB,KAAKklB,sBAAsB3d,KAAKklB,GAChC,MACJ,IAAK,SACDzsB,KAAKmlB,yBAAyB5d,KAAKD,GACnC,MACJ,IAAK,UACDtH,KAAKolB,0BAA0B7d,KAAKD,GACpC,MACJ,IAAK,OACDtH,KAAK2lB,eAAepe,KAAKklB,GACzB,MACJ,IAAK,UACDzsB,KAAK4lB,kBAAkBre,KAAKklB,GAC5B,MACJ,IAAK,SACDzsB,KAAKulB,iBAAiBhe,KAAKklB,GAC3B,MACJ,IAAK,UACDzsB,KAAKwlB,kBAAkBje,KAAKklB,GAC5B,MACJ,IAAK,UACDzsB,KAAKylB,kBAAkBle,KAAKklB,GAC5B,MACJ,IAAK,YACDzsB,KAAK0lB,oBAAoBne,KAAKklB,GAC9B,MACJ,IAAK,YACDzsB,KAAKqlB,oBAAoB9d,KAAKklB,GAC9B,MACJ,IAAK,aACDzsB,KAAKslB,qBAAqB/d,KAAKklB,GAK3C,CAKAQ,MAAMR,GACF,CAACA,GAAM/O,OAAO1d,KAAKonB,QAAQE,KAAKmF,IAAS,IAAIte,QAASujB,SACVrf,IAApCrS,KAAKonB,QAAQC,QAAQqK,KACrB1xB,KAAKonB,QAAQC,QAAQqK,GAAa,GAEtC1xB,KAAKonB,QAAQC,QAAQqK,IAAS,EAEtC,CAMAtE,MAAMX,GACF,CAACA,GAAM/O,OAAO1d,KAAKonB,QAAQE,KAAKmF,IAAS,IAAIte,QAASujB,KACV,IAApC1xB,KAAKonB,QAAQC,QAAQqK,IAAsB1xB,KAAKonB,QAAQC,QAAQqK,KAChE1xB,KAAKonB,QAAQC,QAAQqK,IAAS,EAG1C,CAMAC,SAASC,GACDA,EAAOtG,OAAS/G,GAAKE,QAKjBzkB,KAAKonB,QAAQE,KAAKsK,EAAOnF,MAJxBzsB,KAAKonB,QAAQE,KAAKsK,EAAOnF,MAIOzsB,KAAKonB,QAAQE,KAAKsK,EAAOnF,MAAM/O,OAAOkU,EAAOtK,MAH7CsK,EAAOtK,KAK5CtnB,KAAKonB,QAAQE,KAAKsK,EAAOnF,MAAQzsB,KAAKonB,QAAQE,KAAKsK,EAAOnF,MAAMltB,OAAO,CAACsyB,EAAKxb,IAClErW,KAAKonB,QAAQE,KAAKsK,EAAOnF,MAAMqF,QAAQD,KAASxb,GAGnE,CAKAqZ,UAAUqC,GACNA,EAAO5jB,QAAQuC,IACX1Q,KAAKwmB,SAAS9V,IAAS,GAE/B,CAKAif,SAASoC,GACLA,EAAO5jB,QAAQuC,WACJ1Q,KAAKwmB,SAAS9V,EAAK,EAElC,CAOAie,QAAQje,GACJ,MAAM1E,EAAS,CAAEkiB,EAAG,KAAMC,EAAG,MAC7Bzd,OACAA,GADAA,EAAQA,EAAMshB,eAAiBthB,GAASuhB,OAAOvhB,OACjCwhB,SAAWxhB,EAAMwhB,QAAQvyB,OACnC+Q,EAAMwhB,QAAQ,GAAKxhB,EAAMyhB,gBAAkBzhB,EAAMyhB,eAAexyB,OAChE+Q,EAAMyhB,eAAe,GAAKzhB,GACpB0hB,OACNpmB,EAAOkiB,EAAIxd,EAAM0hB,MACjBpmB,EAAOmiB,EAAIzd,EAAM2hB,QAGjBrmB,EAAOkiB,EAAIxd,EAAM4hB,QACjBtmB,EAAOmiB,EAAIzd,EAAM6hB,SAEdvmB,CACX,CAMAwf,WAAWgH,GACP,OAAQC,MAAMC,WAAWF,GAC7B,CAMA9G,mBAAmBhR,GACf,OAAO1a,KAAKwrB,WAAW9Q,IAA2B,kBAAVA,CAC5C,CAMAiR,kBAAkBjR,GACd,OAAO1a,KAAKwrB,WAAW9Q,IAA2B,iBAAVA,CAC5C,CAMAkR,mBAAmBlR,GACf,MAAwB,iBAAVA,GAAuC,kBAAVA,CAC/C,CAQAgU,WAAWiE,EAAOC,GACd,OAAI,OAASD,GAAS,OAASC,EACpB,CACH1E,EAAG,EACHC,EAAG,GAGJ,CACHD,EAAGyE,EAAMzE,EAAI0E,EAAO1E,EACpBC,EAAGwE,EAAMxE,EAAIyE,EAAOzE,EAE5B,CACA/J,iBAAW,SAAAC,GAAA,WAAAA,GAAwFS,GAh+CVxiB,MAg+C2CshB,IAAS,EAC7IQ,kBAj+CyF9hB,MAAE,CAAAgiB,MAi+CYQ,EAAeriB,QAAfqiB,EAAepiB,YACzH,OA96CKoiB,CAAe,KAm7Cf+N,GAAiB,MAAvB,MAAMA,EACFC,gBAIAC,gBAIAC,cAAe,EAIfC,OAAS,GAITC,SAAW,CACPxS,UAAU,EACVE,KAAM,CACFF,UAAU,EACVK,SAAU,IAEdxZ,KAAM,CACFmZ,UAAU,EACVK,SAAU,KAMlBoS,UAAY,CACRzS,UAAU,EACVO,KAAM,IAEVphB,YAAYizB,GACR9yB,KAAK8yB,gBAAkBA,EACvB9yB,KAAKozB,gBACT,CACAC,cACIrzB,KAAK+yB,gBAAgB1W,aACzB,CAIA+W,iBACI,MAAME,EAAuBtzB,KAAK8yB,gBAAgBzI,sBAAsBpkB,QAAKC,KAAI+U,IAC7Ejb,KAAKgtB,aACLhtB,KAAKuzB,kBACLvzB,KAAKwzB,OACLxzB,KAAKstB,SACLttB,KAAK8yB,gBAAgB3F,aAAY,IAI/BsG,EAAmBzzB,KAAK8yB,gBAAgBvI,kBAAkBtkB,QAAK1G,KAAO+H,GAA+B,aAAvBA,EAAKklB,SAASC,OAAmB,EAAGvmB,KAAIoB,IACxHtH,KAAKstB,QAAO,IAQVoG,EAAqB1zB,KAAK8yB,gBAAgBjI,oBAAoB5kB,QAAKC,KAAI,KACzElG,KAAKuzB,kBACLvzB,KAAKwzB,OACLxzB,KAAKstB,SACLttB,KAAK8yB,gBAAgB3F,aAAY,IAE/BwG,KAAY5R,KAAMuR,EAAsBG,EAAkBC,GAChE1zB,KAAK+yB,gBAAkBY,EAAU7rB,UAAU,OAC/C,CAIAklB,aACIhtB,KAAKkzB,SAASxS,UAAW,EACzB1gB,KAAKkzB,SAAStS,KAAKG,SAAW/gB,KAAK8yB,gBAAgBjN,SAASnD,QAAQ,GACpE1iB,KAAKkzB,SAAS3rB,KAAKwZ,SAAW/gB,KAAK8yB,gBAAgBjN,SAASnD,QAAQ,GACpE1iB,KAAKmzB,UAAUzS,UAAW,EAC1B1gB,KAAK8yB,gBAAgBhS,QAAU9gB,KAAKkzB,SACpClzB,KAAK8yB,gBAAgB9R,SAAWhhB,KAAKmzB,SACzC,CAIAI,kBACI,IAAIld,EAAGud,EAAGC,EACV,MAAMC,EAAQ9zB,KAAK8yB,gBAAgBxK,SAAS3oB,OAAS,EAAGo0B,EAAQD,EAAQ9zB,KAAK8yB,gBAAgB1R,QAAQzhB,OAAQ6pB,EAAUxpB,KAAK8yB,gBAAgBtJ,SAAQ,GAAOwK,EAAQ,GAAInO,EAAW7lB,KAAK8yB,gBAAgBjN,SACvM,IAAI4C,EAAO5C,EAAStE,QAAUsE,EAAS5D,WAAa4D,EAAS7E,SACvD,EAAI5N,KAAK6gB,MAAMpH,OAAOhH,EAAShD,YAAczP,KAAK6gB,MAAMpO,EAASzE,OAKvE,GAJAqH,GAAQA,EACiB,SAArB5C,EAASjD,UACTiD,EAASjD,QAAUxP,KAAKiV,KAAKxC,EAASjD,QAASiD,EAASzE,QAExDyE,EAAS5E,MAA6B,SAArB4E,EAASjD,QAC1B,IAAKvM,EAAIyd,EAAOF,EAAI,EAAGC,EAAI,EAAGxd,EAAI0d,EAAO1d,IAAK,CAC1C,GAAIud,GAAKnL,GAAc,IAANmL,EAAS,CAKtB,GAJAI,EAAM1lB,KAAK,CACPsgB,MAAOxb,KAAKiV,IAAImB,EAASnT,EAAIyd,GAC7BlK,IAAKvT,EAAIyd,EAAQrL,EAAO,IAExBrV,KAAKiV,IAAImB,EAASnT,EAAIyd,KAAWtK,EACjC,MAEJoK,EAAI,IAAKC,CACb,CACAD,GAAK5zB,KAAK8yB,gBAAgBhG,QAAQ9sB,KAAK8yB,gBAAgBhL,SAASzR,GACpE,CAEJrW,KAAKizB,OAASe,CAClB,CAKAR,OACI,IAAI9E,EACJ,MAAM7I,EAAW7lB,KAAK8yB,gBAAgBjN,SAAUzE,EAAQphB,KAAK8yB,gBAAgB1R,QAASV,EAAWU,EAAMzhB,QAAUkmB,EAASzE,MAG1H,GAFAphB,KAAKkzB,SAASxS,UAAYmF,EAASpD,KAAO/B,EAC1C1gB,KAAKmzB,UAAUzS,UAAYmF,EAAS5E,MAAQP,EACxCmF,EAAS5E,KAET,GADAyN,EAAa1uB,KAAKizB,OAAOtzB,OAASK,KAAKmzB,UAAUlS,KAAKthB,OAClDkmB,EAAS7E,UAA2B,IAAf0N,EACrB1uB,KAAKmzB,UAAUlS,KAAO,GACtBG,EAAMjT,QAAQ+b,IACVlqB,KAAKmzB,UAAUlS,KAAK3S,KAAK,CACrB4R,QAAQ,EACRvjB,GAAK,OAAMutB,EAAKvtB,KAChB6jB,aAAc0J,EAAKgK,WACnB3T,kBAAkB,GACrB,QACJ,GAEImO,EAAa,EAAG,CACrB,MAAMyF,EAASn0B,KAAKmzB,UAAUlS,KAAKthB,OAAS,EAAIK,KAAKmzB,UAAUlS,KAAKthB,OAAS,EAC7E,QAAS0W,EAAI,EAAGA,EAAIqY,EAAYrY,IAC5BrW,KAAKmzB,UAAUlS,KAAK3S,KAAK,CACrB4R,QAAQ,EACRvjB,GAAK,OAAM0Z,EAAI8d,IACf3T,aAAc,GACdD,kBAAkB,GAG9B,MACSmO,EAAa,GAClB1uB,KAAKmzB,UAAUlS,KAAKmT,OAAO1F,EAAYtb,KAAKiW,IAAIqF,IAGxD1uB,KAAK8yB,gBAAgBhS,QAAU9gB,KAAKkzB,SACpClzB,KAAK8yB,gBAAgB9R,SAAWhhB,KAAKmzB,SACzC,CAKA7F,SACIttB,KAAKq0B,oBACLr0B,KAAKs0B,aACT,CAIAD,oBACI,MAAMxO,EAAW7lB,KAAK8yB,gBAAgBjN,SAAUvE,EAAOuE,EAASvE,MAAQuE,EAASrE,OAAQ3S,EAAQ7O,KAAK8yB,gBAAgBhL,SAAS9nB,KAAK8yB,gBAAgBzL,WAChJxB,EAASpD,MACTziB,KAAKkzB,SAAStS,KAAKF,UAAYY,GAAQzS,GAAS7O,KAAK8yB,gBAAgBvJ,SAAQ,GAC7EvpB,KAAKkzB,SAAS3rB,KAAKmZ,UAAYY,GAAQzS,GAAS7O,KAAK8yB,gBAAgBtJ,SAAQ,IAEjFxpB,KAAK8yB,gBAAgBhS,QAAU9gB,KAAKkzB,QACxC,CAIAoB,cACI,IAAIC,EACCv0B,KAAK8yB,gBAAgBjN,SAAS5E,OAGnCjhB,KAAKmzB,UAAUlS,KAAK9S,QAAQ+b,KACJ,IAAhBA,EAAKhK,SACLgK,EAAKhK,QAAS,KAGtBqU,EAAgBv0B,KAAK0mB,WACjB1mB,KAAKmzB,UAAUlS,KAAKthB,SACpBK,KAAKmzB,UAAUlS,KAAKsT,GAAerU,QAAS,GAEhDlgB,KAAK8yB,gBAAgB9R,SAAWhhB,KAAKmzB,UACzC,CAKAzM,WACI,MAAMW,EAAUrnB,KAAK8yB,gBAAgBhL,SAAS9nB,KAAK8yB,gBAAgBzL,WACnE,IAAImN,EACJ,MAAMR,EAAQh0B,KAAKizB,OAAO1zB,OAAO,CAACk1B,EAAM5lB,IAC7B4lB,EAAK7F,OAASvH,GAAWoN,EAAK7K,KAAOvC,GAC7CqN,MACHF,SAAex0B,KAAKizB,OAAO3J,UAAUmL,GAC1BA,EAAK7F,QAAUoF,EAAMpF,OAAS6F,EAAK7K,MAAQoK,EAAMpK,KAErD4K,CACX,CAOAG,aAAaC,GACT,IAAIrF,EAAU5vB,EACd,MAAMkmB,EAAW7lB,KAAK8yB,gBAAgBjN,SACtC,MAAyB,SAArBA,EAASjD,SACT2M,EAAWvvB,KAAK0mB,WAChB/mB,EAASK,KAAKizB,OAAOtzB,OACrBi1B,IAAcrF,IAAaA,EAC3BA,EAAWvvB,KAAKizB,QAAS1D,EAAW5vB,EAAUA,GAAUA,GAAQivB,QAGhEW,EAAWvvB,KAAK8yB,gBAAgBhL,SAAS9nB,KAAK8yB,gBAAgBzL,WAC9D1nB,EAASK,KAAK8yB,gBAAgB1R,QAAQzhB,OACtCi1B,EAAYrF,IAAa1J,EAASjD,QAAU2M,IAAa1J,EAASjD,SAE/D2M,CACX,CAMAhoB,KAAK6mB,GACDpuB,KAAK8yB,gBAAgBxC,GAAGtwB,KAAK20B,cAAa,GAAOvG,EACrD,CAMAxN,KAAKwN,GACDpuB,KAAK8yB,gBAAgBxC,GAAGtwB,KAAK20B,cAAa,GAAQvG,EACtD,CAQAkC,GAAGf,EAAUnB,EAAOyG,GAChB,IAAIl1B,GACCk1B,GAAY70B,KAAKizB,OAAOtzB,QACzBA,EAASK,KAAKizB,OAAOtzB,OACrBK,KAAK8yB,gBAAgBxC,GAAGtwB,KAAKizB,QAAS1D,EAAW5vB,EAAUA,GAAUA,GAAQivB,MAAOR,IAGpFpuB,KAAK8yB,gBAAgBxC,GAAGf,EAAUnB,EAE1C,CAKA9N,UAAUwU,GACN,MAAMjmB,EAAQ7O,KAAKmzB,UAAUlS,KAAKqI,UAAUyL,GAAOD,IAAUC,EAAIp4B,IACjEqD,KAAKswB,GAAGzhB,EAAO7O,KAAK8yB,gBAAgBjN,SAAS/C,UACjD,CAKAkS,YAAYr4B,GACR,MAAM4yB,EAAWvvB,KAAK8yB,gBAAgB9S,WAAWsJ,UAAUtB,GAASA,EAAMrrB,KAAOA,IAAyB,IAAnBqrB,EAAMiB,WAC5E,IAAbsG,GAAmBA,IAAavvB,KAAK8yB,gBAAgBzL,WAGzDrnB,KAAK8yB,gBAAgBxC,GAAGtwB,KAAK8yB,gBAAgBhL,SAASyH,IAAW,EACrE,CACAnL,iBAAW,SAAAC,GAAA,WAAAA,GAAwFwO,GA/vDVvwB,MA+vD6CwiB,GAAe,EACrJV,kBAhwDyF9hB,MAAE,CAAAgiB,MAgwDYuO,EAAiBpwB,QAAjBowB,EAAiBnwB,YAC3H,OA1RKmwB,CAAiB,KA6SvB,MAAMoC,GAAS,IAAIC,MAAe,eAIlC,MAAMC,GACF,gBAAIC,GACA,MAAM,IAAI/xB,MAAM,mBACpB,EAwCJ,MAeMgyB,GAAmB,CAfK,CAC1BC,QAASH,GACTI,SArCkB,MAAtB,MAAMC,UAAyBL,GAC3Bt1B,cACIkb,OACJ,CAIA,gBAAIqa,GACA,OAAOnD,MACX,CACA7N,iBAAW,SAAAC,GAAA,WAAAA,GAAwFmR,EAAgB,EACnHpR,kBA3yDyF9hB,MAAE,CAAAgiB,MA2yDYkR,EAAgB/yB,QAAhB+yB,EAAgB9yB,YAC1H,OAZK8yB,CAAgB,MA0CC,CACnBF,QAASL,GACTQ,WAtBJ,SAASC,GAAcC,EAAkBC,GACrC,SAAIC,MAAkBD,GACXD,EAAiBP,aAEhB,CACRve,WAAYA,CAACif,EAAMzG,KAAPxY,EACZkf,aAAernB,MAGvB,EAcIsnB,KAAM,CAACb,GAAWc,SAUhBC,GAAW,IAAIhB,MAAe,iBAIpC,MAAMiB,GACF,kBAAIC,GACA,MAAM,IAAI/yB,MAAM,mBACpB,EAwCJ,MAeMgzB,GAAqB,CAfK,CAC5Bf,QAASa,GACTZ,SArCoB,MAAxB,MAAMe,UAA2BH,GAC7Bt2B,cACIkb,OACJ,CAIA,kBAAIqb,GACA,OAAOxlB,QACX,CACAwT,iBAAW,SAAAC,GAAA,WAAAA,GAAwFiS,EAAkB,EACrHlS,kBA92DyF9hB,MAAE,CAAAgiB,MA82DYgS,EAAkB7zB,QAAlB6zB,EAAkB5zB,YAC5H,OAZK4zB,CAAkB,MA0CC,CACrBhB,QAASY,GACTT,WAtBJ,SAASc,GAAgBC,EAAoBZ,GACzC,SAAIC,MAAkBD,GACXY,EAAmBJ,eAElB,CACRK,QAAQ,EACRC,gBAAiB,UAGzB,EAcIV,KAAM,CAACG,GAAaF,SAK+C,IAEjEU,GAAe,MAArB,MAAMA,EACF7D,gBACA8D,OAIAC,qBAIAC,SAAW,KAIXC,SAAU,EAIVC,6BAKAC,oBAAqB,EACrB,qBAAIC,GACA,OAAOl3B,KAAKi3B,kBAChB,CACA,qBAAIC,CAAkBxc,GAClB1a,KAAKi3B,mBAAqBvc,CAC9B,CACAyc,OACAC,OACAv3B,YAAYizB,EAAiBqE,EAAQC,EAAQR,GACzC52B,KAAK8yB,gBAAkBA,EACvB9yB,KAAK42B,OAASA,EACd52B,KAAKm3B,OAASA,EACdn3B,KAAKo3B,OAASA,EACdp3B,KAAKozB,gBACT,CACAC,cACIrzB,KAAK62B,qBAAqBxa,aAC9B,CAIA+W,iBACI,MAAME,EAAuBtzB,KAAK8yB,gBAAgBzI,sBAAsBpkB,QAAKC,KAAI,KACzElG,KAAK8yB,gBAAgBjN,SAAS9C,UAC9B/iB,KAAKq3B,MAAK,IAGZ5D,EAAmBzzB,KAAK8yB,gBAAgBvI,kBAAkBtkB,QAAKC,KAAIoB,IACrEtH,KAAKs3B,wBAAwBhwB,EAAI,IAE/BiwB,EAAWv3B,KAAK8yB,gBAAgBnI,kBAAkB1kB,QAAKC,KAAI,KACzDlG,KAAK8yB,gBAAgBjN,SAAS9C,WAAa/iB,KAAKi3B,mBAChDj3B,KAAKq3B,OAGLr3B,KAAKw3B,MAAK,IAKZC,KAAiB1V,KAAMuR,EAAsBG,EAAkB8D,GACrEv3B,KAAK62B,qBAAuBY,EAAe3vB,UAAU,OACzD,CAMAuvB,KAAKjc,EAASgT,GACNpuB,KAAK+2B,UACL/2B,KAAK+2B,SAAU,EACf/2B,KAAK03B,qBAAqB13B,KAAK8yB,gBAAgBjN,SAAS1C,6BAExDnjB,KAAK8yB,gBAAgBpF,GAAG,cAG5B1tB,KAAK8yB,gBAAgB7F,MAAM,YAC3BjtB,KAAK03B,uBACT,CAQAC,gBAAgBvc,EAASgT,GACrB,OAAIpuB,KAAK82B,UACL92B,KAAKm3B,OAAOpB,aAAa/1B,KAAK82B,UAElC92B,KAAKg3B,+BAA+B5b,EAC7Bpb,KAAK42B,OAAOgB,kBAAkB,IAC1B53B,KAAKm3B,OAAOtgB,WAAW,KAC1B7W,KAAK42B,OAAOhP,IAAI,KACR5nB,KAAK+2B,SAAW/2B,KAAK8yB,gBAAgBpF,GAAG,SAAW1tB,KAAK8yB,gBAAgBpF,GAAG,gBAAkB1tB,KAAKo3B,OAAOX,QAG7Gz2B,KAAK8yB,gBAAgBvrB,KAAK6mB,GAASpuB,KAAK8yB,gBAAgBjN,SAAS3C,cAAa,EACjF,EACF9H,GAAWpb,KAAK8yB,gBAAgBjN,SAAS7C,iBAEpD,CAKA0U,qBAAqBtc,GACjBpb,KAAK82B,SAAW92B,KAAK23B,gBAAgBvc,EACzC,CAKAoc,OACSx3B,KAAK8yB,gBAAgBpF,GAAG,cAG7B1tB,KAAK+2B,SAAU,EACf/2B,KAAKm3B,OAAOpB,aAAa/1B,KAAK82B,UAC9B92B,KAAK8yB,gBAAgB1F,MAAM,YAC/B,CAKAyK,QACS73B,KAAK8yB,gBAAgBpF,GAAG,cAG7B1tB,KAAK+2B,SAAU,EACnB,CAMAO,wBAAwBhwB,GACO,aAAvBA,EAAKklB,SAASC,KACVzsB,KAAK8yB,gBAAgBjN,SAAS9C,SAC9B/iB,KAAKq3B,OAGLr3B,KAAKw3B,OAGmB,aAAvBlwB,EAAKklB,SAASC,MAEfzsB,KAAK8yB,gBAAgBjN,SAAS9C,UAC9B/iB,KAAK03B,sBAGjB,CAIAI,wBACIC,QAAG,cAAc9xB,QAAK+xB,KAAU1wB,GAAQtH,KAAK8yB,gBAAgBrI,uBAAoB,EAAGkI,QAAM,EAAGpzB,KAAO,IAAMS,KAAKg3B,+BAA4B,EAAG9wB,KAAI,IAAMlG,KAAK03B,yBAAyB5vB,UAAU,OACpM,CAIAmwB,eACQj4B,KAAK8yB,gBAAgBjN,SAAS5C,oBAAsBjjB,KAAK8yB,gBAAgBpF,GAAG,aAC5E1tB,KAAK63B,OAEb,CAIAK,yBACQl4B,KAAK8yB,gBAAgBjN,SAAS5C,oBAAsBjjB,KAAK8yB,gBAAgBpF,GAAG,cAC5E1tB,KAAKq3B,OACLr3B,KAAK83B,uBAEb,CAIAK,uBACQn4B,KAAK8yB,gBAAgBjN,SAAS5C,oBAAsBjjB,KAAK8yB,gBAAgBpF,GAAG,cAC5E1tB,KAAKq3B,OACLr3B,KAAK83B,uBAEb,CACA1T,iBAAW,SAAAC,GAAA,WAAAA,GAAwFsS,GAnlEVr0B,MAmlE2CwiB,GAnlE3CxiB,MAmlEuE2yB,IAnlEvE3yB,MAmlE0F4zB,IAnlE1F5zB,MAmlE+GA,OAAS,EACjN8hB,kBAplEyF9hB,MAAE,CAAAgiB,MAolEYqS,EAAel0B,QAAfk0B,EAAej0B,YACzH,OA9LKi0B,CAAe,KAyMfyB,GAAe,MAArB,MAAMA,EACFtF,gBAIAuF,qBACAx4B,YAAYizB,GACR9yB,KAAK8yB,gBAAkBA,EACvB9yB,KAAKozB,gBACT,CACAC,cACIrzB,KAAKq4B,qBAAqBhc,aAC9B,CAIA+W,iBACI,MAAME,EAAuBtzB,KAAK8yB,gBAAgBzI,sBAAsBpkB,QAAKC,KAAI,KAC7E,MAAMoyB,EAAat4B,KAAK8yB,gBAAgBjN,WAAa7lB,KAAK8yB,gBAAgBjN,SAASzC,SACnFpjB,KAAK8yB,gBAAgB9S,WAAW7R,QAAQ+b,GAAQA,EAAK7K,OAAOiZ,EAAyB,IAEnFC,EAAkBv4B,KAAK8yB,gBAAgBxI,iBACvCkO,EAAmBx4B,KAAK8yB,gBAAgBnI,kBACxC8N,KAAiB1W,KAAMuR,EAAsBiF,EAAiBC,GAAkBvyB,QAAKC,KAAIoB,GAAQtH,KAAK04B,sBAAsBpxB,KAClItH,KAAKq4B,qBAAuBI,EAAe3wB,UAAU,OACzD,CACA4wB,sBAAsBpxB,GAClB,GAAKtH,KAAK8yB,gBAAgBjN,UAAa7lB,KAAK8yB,gBAAgBjN,SAASzC,WAGhE9b,EAAKklB,UAAmC,aAAvBllB,EAAKklB,SAASC,MAAiC,gBAATnlB,GAAmC,YAATA,GAAoB,CACtG,MAAMue,EAAW7lB,KAAK8yB,gBAAgBjN,SAAUyC,EAAStoB,KAAK8yB,gBAAgBxK,SAAS3oB,OACvF,IAAIoqB,EAAKlE,EAAStE,QAAUnO,KAAKsV,KAAK7C,EAASzE,MAAQ,IAAMyE,EAASzE,MAAQ/K,EAAMwP,EAAStE,SAAc,EAAJwI,GAAW,EAAIwF,GAAYjoB,EAAKklB,eAAoCna,IAAxB/K,EAAKklB,SAAS9R,MAAsBpT,EAAKklB,SAAS9R,MAAQ1a,KAAK8yB,gBAAgBzL,WAAahR,EAW/O,IARIwP,EAASxC,cAAgB,IACzB0G,GAAKlE,EAASxC,cAEVwC,EAASvE,OACTiO,GAAY1J,EAASxC,cACrB0G,MAGD1T,IAAM0T,GACT/pB,KAAK24B,MAAMrQ,EAAS,EAAItoB,KAAK8yB,gBAAgBhL,SAASyH,IAClDjH,GACAtoB,KAAK8yB,gBAAgBxK,OAAOtoB,KAAK8yB,gBAAgBhL,SAASyH,IAAWphB,QAAQuM,GAAS1a,KAAK24B,MAAMje,IAErG6U,GAER,CACJ,CAKAoJ,MAAMpJ,GACEvvB,KAAK8yB,gBAAgB9S,WAAWuP,GAAUlQ,OAG9Crf,KAAK8yB,gBAAgB9S,WAAWuP,GAAUlQ,MAAO,EACrD,CACA+E,iBAAW,SAAAC,GAAA,WAAAA,GAAwF+T,GA9pEV91B,MA8pE2CwiB,GAAe,EACnJV,kBA/pEyF9hB,MAAE,CAAAgiB,MA+pEY8T,EAAe31B,QAAf21B,EAAe11B,YACzH,OAhEK01B,CAAe,KAqEfQ,GAAc,MAApB,MAAMA,EACF9F,gBAIA+F,oBAIAC,UAAW,EAIX3P,cAAW9W,EAIX9K,UAAO8K,EACPxS,YAAYizB,GACR9yB,KAAK8yB,gBAAkBA,EACvB9yB,KAAKozB,gBACT,CACAC,cACIrzB,KAAK64B,oBAAoBxc,aAC7B,CAIA+W,iBACI,MAAMmF,EAAkBv4B,KAAK8yB,gBAAgBxI,iBAAiBrkB,QAAKC,KAAIoB,IACxC,aAAvBA,EAAKklB,SAASC,OACdzsB,KAAKmpB,SAAWnpB,KAAK8yB,gBAAgBzL,UACrCrnB,KAAKuH,KAAOD,EAAKklB,SAAS9R,UAG5Bqe,EAAgB/4B,KAAK8yB,gBAAgBhI,eACrCkO,EAAmBh5B,KAAK8yB,gBAAgB/H,kBACxCkO,EAAsBj5B,KAAK8yB,gBAAgBrI,qBAC3CyO,KAAuBnX,KAAMgX,EAAeC,EAAkBC,GAAqBhzB,QAAKC,KAAIoB,GAAQtH,KAAK84B,SAAoB,eAATxxB,IACpH6xB,EAAqBn5B,KAAK8yB,gBAAgBtI,oBAAoBvkB,QAAKC,KAAIoB,IACrEtH,KAAK84B,WAAa94B,KAAK8yB,gBAAgB7L,SAAS1D,YAAcvjB,KAAK8yB,gBAAgB7L,SAASzD,YAC5FxjB,KAAKo5B,OAAM,IAGbC,KAAgBtX,KAAMwW,EAAiBY,EAAoBD,GAAsBjzB,OACvFjG,KAAK64B,oBAAsBQ,EAAcvxB,UAAU,OACvD,CAKAsxB,QACI,GAA4C,IAAxCp5B,KAAK8yB,gBAAgBjN,SAASzE,MAC9B,OAMJ,IAAIvC,EADJ7e,KAAK8yB,gBAAgB1E,MAAM,GAE3B,MAAMjF,EAAWnpB,KAAK8yB,gBAAgB9S,WAAWhgB,KAAKmpB,UAAW5hB,EAAOvH,KAAK8yB,gBAAgB9S,WAAWhgB,KAAKuH,MAAO+xB,EAAWt5B,KAAK8yB,gBAAgBjN,SAASrC,UAAW+V,EAAWv5B,KAAK8yB,gBAAgBjN,SAAStC,WAC7MvjB,KAAK8yB,gBAAgBzL,YAAcrnB,KAAKmpB,WAGxCoQ,IACA1a,GAAQ7e,KAAK8yB,gBAAgB5J,YAAYlpB,KAAKmpB,WAAanpB,KAAK8yB,gBAAgB5J,YAAYlpB,KAAKuH,MACjGvH,KAAK8yB,gBAAgB9S,WAAW7R,QAAQ6Z,IAChCA,EAAMrrB,KAAOwsB,EAASxsB,KACtBqrB,EAAMnJ,KAAQ,GAAEA,MAChBmJ,EAAMmJ,YAAa,EACnBnJ,EAAMqJ,kBAAmB,EACzBrJ,EAAMuJ,qBAAsB,MAIpC+H,GACAt5B,KAAK8yB,gBAAgB9S,WAAW7R,QAAQ6Z,IAChCA,EAAMrrB,KAAO4K,EAAK5K,KAClBqrB,EAAMmJ,YAAa,EACnBnJ,EAAMoJ,iBAAkB,EACxBpJ,EAAMsJ,oBAAqB,KAI3C,CAMAtS,MAAMriB,GACFqD,KAAK8yB,gBAAgB9S,WAAW7R,QAAQ6Z,IAChCA,EAAMrrB,KAAOA,IACbqrB,EAAMnJ,KAAO,GACbmJ,EAAMmJ,YAAa,EACnBnJ,EAAMqJ,kBAAmB,EACzBrJ,EAAMuJ,qBAAsB,EAC5BvJ,EAAMoJ,iBAAkB,EACxBpJ,EAAMsJ,oBAAqB,EAC3BtJ,EAAM/I,QAAUjf,KAAK8yB,gBAAgBrF,mBAAmBzF,GAAK,GAGrEhoB,KAAK8yB,gBAAgBtD,iBACzB,CAEApL,iBAAW,SAAAC,GAAA,WAAAA,GAAwFuU,GA9wEVt2B,MA8wE0CwiB,GAAe,EAClJV,kBA/wEyF9hB,MAAE,CAAAgiB,MA+wEYsU,EAAcn2B,QAAdm2B,EAAcl2B,YACxH,OA3GKk2B,CAAc,KAgHdY,GAAiB,MAAvB,MAAMA,EACF1G,gBAIA2G,uBACA55B,YAAYizB,GACR9yB,KAAK8yB,gBAAkBA,EACvB9yB,KAAKozB,gBACT,CACAC,cACIrzB,KAAKy5B,uBAAuBpd,aAChC,CAIA+W,iBACI,MAAME,EAAuBtzB,KAAK8yB,gBAAgBzI,sBAAsBpkB,QAAKC,KAAIoB,IACzEtH,KAAK8yB,gBAAgBjN,SAASpC,WAC9BzjB,KAAKstB,SAGLttB,KAAK8yB,gBAAgB9S,WAAW7R,QAAQ6Z,GAASA,EAAM5I,YAAc,OAAM,IAG7EqU,EAAmBzzB,KAAK8yB,gBAAgBvI,kBAAkBtkB,QAAKC,KAAIoB,IACjEtH,KAAK8yB,gBAAgBjN,SAASpC,YAAqC,aAAvBnc,EAAKklB,SAASC,MAC1DzsB,KAAKstB,QAAO,IAGdoG,EAAqB1zB,KAAK8yB,gBAAgBjI,oBAAoB5kB,QAAKC,KAAIoB,IACrEtH,KAAK8yB,gBAAgBjN,SAASpC,YAC9BzjB,KAAKstB,QAAO,IAGdoM,KAAc3X,KAAMuR,EAAsBG,EAAkBC,GAClE1zB,KAAKy5B,uBAAyBC,EAAY5xB,UAAU,OACxD,CAIAwlB,SACI,MAAMlM,EAAQphB,KAAK8yB,gBAAgBjN,SAASzE,MAC5C,IAAIwN,EAAQ5uB,KAAK8yB,gBAAgBzL,UAAWuC,EAAMgF,EAAQxN,EACtDphB,KAAK8yB,gBAAgBjN,SAAStE,SAC9BqN,EAAQxN,EAAQ,GAAM,EAAIwN,GAASxN,EAAQ,GAAK,EAAIwN,EAAQxN,EAAQ,EACpEwI,EAAMxI,EAAQ,GAAM,EAAIwN,EAAQxN,EAAQwN,EAAQxN,EAAQ,GAE5DphB,KAAK8yB,gBAAgB9S,WAAW7R,QAAQ,CAAC6Z,EAAO3R,KAC5C2R,EAAM5I,YAAe/I,GAAKuY,GAASvY,EAAIuT,EAAO,OAAS,UAE/D,CACAxF,iBAAW,SAAAC,GAAA,WAAAA,GAAwFmV,GAz0EVl3B,MAy0E6CwiB,GAAe,EACrJV,kBA10EyF9hB,MAAE,CAAAgiB,MA00EYkV,EAAiB/2B,QAAjB+2B,EAAiB92B,YAC3H,OAtDK82B,CAAiB,KA2DjBG,GAAW,MAAjB,MAAMA,EACF7G,gBACA8G,MACAC,OAIAC,iBAIAC,oBACAl6B,YAAYizB,EAAiB8G,EAAOC,GAChC75B,KAAK8yB,gBAAkBA,EACvB9yB,KAAK45B,MAAQA,EACb55B,KAAK65B,OAASA,EACd75B,KAAKozB,iBACApzB,KAAK45B,QACN55B,KAAK45B,MAAQ,CACTI,YAAUjC,MAAG,YAAY9xB,QAAK0X,KAAK,MAItC3d,KAAK65B,SACN75B,KAAK65B,OAAS,CACVI,SAAUA,CAACC,EAAUC,KAAXF,GAGtB,CACA5G,cACIrzB,KAAK85B,iBAAiBzd,aAC1B,CAIA+W,iBACI,MAAME,EAAuBtzB,KAAK8yB,gBAAgBzI,sBAAsBpkB,QAAKC,KAAI,IAAMlG,KAAKo6B,kBACtF3G,EAAmBzzB,KAAK8yB,gBAAgBvI,kBAAkBtkB,QAAKC,KAAIoB,IACrE,GAAItH,KAAK8yB,gBAAgBjN,SAASnC,iBAA0C,aAAvBpc,EAAKklB,SAASC,KAAqB,CACpF,MAAM4N,EAAcr6B,KAAK8yB,gBAAgBzL,UACnCiT,EAAiBt6B,KAAK8yB,gBAAgB9S,WAAWqa,GAAavJ,aACpE,IAAKwJ,GAAkBA,IAAmBt6B,KAAK+5B,oBAC3C,OAEJ/5B,KAAK65B,OAAOI,SAAS,CAAC,MAAO,CAAED,SAAUM,EAAgBC,WAAYv6B,KAAK45B,OAC9E,KAEEY,KAAgBzY,KAAMuR,EAAsBG,GAClDzzB,KAAK85B,iBAAmBU,EAAc1yB,UAAU,OACpD,CAKA0Z,OAAOwY,GACH,MAAMzK,EAAWvvB,KAAK8yB,gBAAgB9S,WAAWsJ,UAAUtB,GAASA,EAAM8I,eAAiBkJ,IAA+B,IAAnBhS,EAAMiB,WAC5F,IAAbsG,GAAmBA,IAAavvB,KAAK8yB,gBAAgBzL,WAGzDrnB,KAAK8yB,gBAAgBxC,GAAGtwB,KAAK8yB,gBAAgBhL,SAASyH,IAAW,EACrE,CAIA6K,gBAEIp6B,KAAK45B,MAAMI,SAAS/zB,KAAKoU,GADqC,YAAhDra,KAAK8yB,gBAAgBjN,SAAS3D,cAA8B,EAAI,IAEzEpa,UAAUkyB,IACXh6B,KAAK+5B,oBAAsBC,EAC3Bh6B,KAAKwhB,OAAOwY,EAAQ,EAE5B,CACA5V,iBAAW,SAAAC,GAAA,WAAAA,GAAwFsV,GAx5EVr3B,MAw5EuCwiB,GAx5EvCxiB,MAw5EmEC,KAAiB,GAx5EpFD,MAw5EiHC,KAAS,KACnN6hB,kBAz5EyF9hB,MAAE,CAAAgiB,MAy5EYqV,EAAWl3B,QAAXk3B,EAAWj3B,YACrH,OA1EKi3B,CAAW,KAmFbc,GAAS,EACPC,GAAsB,MAA5B,MAAMA,EACFnc,OAKA5hB,GAAM,aAAY89B,KAKlBE,WAAa,EACb,aAAI5N,CAAUzlB,GACVtH,KAAK26B,WAAa36B,KAAK46B,UAAUtzB,GAAQA,EAAO,CACpD,CAEA,aAAIylB,GAAc,OAAO/sB,KAAK26B,UAAY,CAI1C/b,MAAQ,EAIRsV,WAAa,GAIbnD,SAAW,GACXlxB,YAAY0e,GACRve,KAAKue,OAASA,CAClB,CAMAqc,UAAUpI,GACN,OAAQC,MAAMC,WAAWF,GAC7B,CACApO,iBAAW,SAAAC,GAAA,WAAAA,GAAwFqW,GA58EVp4B,MA48EkDA,OAAc,EACzJ8hB,iBA78EyF9hB,MAAE,CAAAgpB,KA68EJoP,EAAsB9vB,UAAA,qCAAA4I,OAAA,CAAA7W,GAAA,KAAAowB,UAAA,YAAAnO,MAAA,QAAAsV,WAAA,aAAAnD,SAAA,cAChH,OA1CK2J,CAAsB,KA0DtBG,GAAa,MAAnB,MAAMA,EACFC,kBAKA,aAAIC,GACA,OAAO/6B,KAAK86B,iBAChB,CACAj7B,YAAYs3B,EAAQvB,GAChB51B,KAAK86B,qBAAoBjF,MAAkBD,GAAcld,EAAUye,EAAQ,WAAa,IAAIlS,KAAW7d,cAC3G,CACAgd,iBAAW,SAAAC,GAAA,WAAAA,GAAwFwW,GA1+EVv4B,MA0+EyC2yB,IA1+EzC3yB,MA0+E4D2zB,OAAW,EAChK7R,kBA3+EyF9hB,MAAE,CAAAgiB,MA2+EYuW,EAAap4B,QAAbo4B,EAAan4B,YACvH,OAdKm4B,CAAa,KAyBbG,GAAc,MAApB,MAAMA,EACFC,KACAC,GACAC,SACArI,gBACAsI,eAIAC,aAIAtb,UAIAC,WAIAsb,kBAIAC,kBAIAC,qBAIAC,qBAIAC,gBAIAC,iBAIAC,iBACAC,aAIAC,MAAQ,CACJzM,KAAM,KACNte,OAAQ,KACR4d,QAAS,KACTzb,MAAO,CACH0b,MAAO,KACPvH,QAAS,MAEb2H,UAAW,KACX9O,QAAQ,EACR6b,QAAQ,GAKZC,cAAgB,IAAI/W,IAIpBgX,oBACAzd,mBAAsBwJ,IAClB,MAAMkU,EAAW,IAAKlU,GACtB,cAAOkU,EAAS3d,OACT2d,GAEXr8B,YAAYo7B,EAAMC,EAAIC,EAAUrI,EAAiBsI,GAC7Cp7B,KAAKi7B,KAAOA,EACZj7B,KAAKk7B,GAAKA,EACVl7B,KAAKm7B,SAAWA,EAChBn7B,KAAK8yB,gBAAkBA,EACvB9yB,KAAKo7B,eAAiBA,CAC1B,CACAe,YAAYzrB,GACJ1Q,KAAKq7B,aAAa1b,iBAClB3f,KAAKo8B,aAAa1rB,EAE1B,CACA2rB,aAAa3rB,GACT,GAAIA,EAAM4rB,cAAc38B,QAAU,EAC9B,OAAO,EAEPK,KAAKq7B,aAAazb,iBAClB5f,KAAKo8B,aAAa1rB,EAE1B,CACA6rB,cAAc7rB,GACV1Q,KAAKw8B,WAAW9rB,EACpB,CACA+rB,cACI,GAAIz8B,KAAKq7B,aAAa1b,gBAClB,OAAO,CAEf,CACA+c,gBACI,GAAI18B,KAAKq7B,aAAa1b,gBAClB,OAAO,CAEf,CACApW,WACIvJ,KAAKi8B,oBAAsBj8B,KAAKg8B,cAC3B/1B,QAAK0sB,QACL7qB,UAAU,KACX9H,KAAK28B,cAAa,EAE1B,CACAtJ,cACIrzB,KAAKi8B,oBAAoB5f,aAC7B,CAIAugB,sBAAyBC,IACrB78B,KAAK88B,mBAAmBD,EAAE,EAK9BE,eAAkBF,IACd78B,KAAKg9B,YAAYH,EAAE,EAKvBI,cAAiBJ,IAEb78B,KAAKw8B,WAAWK,EAAE,EAStBT,aAAa1rB,GACT,IAAIwC,EAAQ,KACQ,IAAhBxC,EAAMwsB,QAGVhqB,EAAQlT,KAAKm9B,iBAAiBzsB,GAC9B1Q,KAAK87B,MAAMzM,UAAWllB,MAAOilB,UAC7BpvB,KAAK87B,MAAM/qB,OAASL,EAAMK,OAC1B/Q,KAAK87B,MAAM5oB,MAAM0b,MAAQ1b,EACzBlT,KAAK87B,MAAM5oB,MAAMmU,QAAUnU,EAC3BlT,KAAK87B,MAAMnN,QAAU3uB,KAAKo9B,SAAS1sB,GACnC1Q,KAAK07B,gBAAkB17B,KAAKm7B,SAASkC,OAAOzsB,SAAU,UAAW5Q,KAAKi9B,eACtEj9B,KAAK27B,iBAAmB37B,KAAKm7B,SAASkC,OAAOzsB,SAAU,WAAY5Q,KAAKi9B,eACxEj9B,KAAKi7B,KAAKrD,kBAAkB,KACxB53B,KAAKw7B,qBAAuBx7B,KAAKm7B,SAASkC,OAAOzsB,SAAU,YAAa5Q,KAAK48B,uBAC7E58B,KAAKy7B,qBAAuBz7B,KAAKm7B,SAASkC,OAAOzsB,SAAU,YAAa5Q,KAAK48B,sBAAqB,GAE1G,CAKAE,mBAAmBpsB,GACf,MAAM+d,EAAQzuB,KAAKs9B,YAAYt9B,KAAK87B,MAAMnN,QAAS3uB,KAAKo9B,SAAS1sB,IAC7D1Q,KAAK67B,cACL77B,KAAK67B,iBAELzoB,KAAKiW,IAAIoF,EAAMP,GAAK,GAAK9a,KAAKiW,IAAIoF,EAAMN,GAAK,GAAKnuB,KAAKu9B,IAAI,YAG1DnqB,KAAKiW,IAAIoF,EAAMP,GAAK,GAAK9a,KAAKiW,IAAIoF,EAAMP,GAAK9a,KAAKiW,IAAIoF,EAAMN,IAAOnuB,KAAKu9B,IAAI,WAGjFv9B,KAAKw7B,uBACLx7B,KAAKy7B,uBACLz7B,KAAK87B,MAAMC,QAAS,EACpB/7B,KAAKw9B,2BAA2B9sB,GAChC1Q,KAAKs7B,kBAAoBt7B,KAAKm7B,SAASkC,OAAOzsB,SAAU,YAAa5Q,KAAK+8B,gBAC1E/8B,KAAKu7B,kBAAoBv7B,KAAKm7B,SAASkC,OAAOzsB,SAAU,YAAa5Q,KAAK+8B,gBAC1ErsB,EAAM+sB,iBACNz9B,KAAK09B,iBACL19B,KAAKg8B,cAAcz0B,KAAKmJ,IAE5B,CAKA8sB,2BAA2B9sB,GACvB,IAAIK,EAASL,EAAMK,OACnB,KAAOA,KAAYA,aAAkB4sB,oBACjC5sB,EAASA,EAAO6sB,cAEhB7sB,aAAkB4sB,oBAClB39B,KAAK67B,aAAe77B,KAAKm7B,SAASkC,OAAOtsB,EAAQ,QAAS,KAAM,GAExE,CAMAisB,YAAYtsB,GACR,IAAIwC,EACJ,MAAM2qB,EAAc79B,KAAK8yB,gBAAgBxE,oBAAoB5d,EAAO1Q,KAAK87B,QACrD,IAAhB+B,IAGJ3qB,EAAQ2qB,EACRntB,EAAM+sB,iBACNz9B,KAAK87B,MAAM5oB,MAAMmU,QAAUnU,EAC3BlT,KAAK89B,SAAS5qB,EAAMgb,EAAIluB,KAAK87B,MAAM5oB,MAAM0b,MAAMV,GACnD,CAMA4P,SAASxO,GACLtvB,KAAKm7B,SAAS4C,SAAS/9B,KAAKk7B,GAAG8C,cAAcC,SAAS,GAAI,YAAc,eAAc3O,eACtFtvB,KAAKm7B,SAAS4C,SAAS/9B,KAAKk7B,GAAG8C,cAAcC,SAAS,GAAI,aAAc,KAC5E,CAOAzB,WAAW9rB,GACP1Q,KAAK8yB,gBAAgBhT,WAAWoG,QAAS,EACzClmB,KAAKw7B,uBACLx7B,KAAKy7B,uBACDz7B,KAAK87B,MAAMC,SACX/7B,KAAKm7B,SAAS4C,SAAS/9B,KAAKk7B,GAAG8C,cAAcC,SAAS,GAAI,YAAc,IACxEj+B,KAAKm7B,SAAS4C,SAAS/9B,KAAKk7B,GAAG8C,cAAcC,SAAS,GAAI,aAAcj+B,KAAK8yB,gBAAgB1E,OAAOpuB,KAAK8yB,gBAAgBjN,SAASvD,cAAgBtiB,KAAK8yB,gBAAgBjN,SAASzD,YAAc,IAAO,KACrMpiB,KAAKk+B,gBAAgBxtB,GACrB1Q,KAAKs7B,oBACLt7B,KAAKu7B,qBAETv7B,KAAK87B,MAAQ,CACTzM,KAAM,KACNte,OAAQ,KACR4d,QAAS,KACTzb,MAAO,CACH0b,MAAO,KACPvH,QAAS,MAEb2H,UAAW,KACX9O,QAAQ,EACR6b,QAAQ,GAGZ/7B,KAAK07B,kBACL17B,KAAK27B,kBACT,CAOAwB,iBAAiBzsB,GACb,OAAO1Q,KAAK8yB,gBAAgBhF,gBAAgBpd,EAChD,CAIAytB,iBAAmBA,KACfn+B,KAAK47B,iBAAmB57B,KAAKm7B,SAASkC,OAAOr9B,KAAK87B,MAAM/qB,OAAQ,QAAS,KAAM,GAC/E/Q,KAAK47B,kBAAiB,EAM1BsC,gBAAgBxtB,GACZ1Q,KAAK8yB,gBAAgBjE,eAAene,EAAO1Q,KAAK87B,MAAO97B,KAAKm+B,iBAChE,CAMAf,SAAS1sB,GACL,OAAO1Q,KAAK8yB,gBAAgBnE,QAAQje,EACxC,CAOA4sB,YAAYc,EAAQxL,GAChB,OAAO5yB,KAAK8yB,gBAAgBpE,WAAW0P,EAAQxL,EACnD,CAMA2K,IAAIc,GACA,OAAOr+B,KAAK8yB,gBAAgBpF,GAAG2Q,EACnC,CAKAC,OAAO7R,GACHzsB,KAAK8yB,gBAAgB7F,MAAMR,EAC/B,CAIAkQ,eACI38B,KAAK8yB,gBAAgB3F,aACzB,CAIAqC,kBACIxvB,KAAK8yB,gBAAgBtD,iBACzB,CAIAkO,iBACI19B,KAAK8yB,gBAAgBzE,eACzB,CAKArP,MAAMriB,GACFqD,KAAKo7B,eAAepc,MAAMriB,EAC9B,CACAynB,iBAAW,SAAAC,GAAA,WAAAA,GAAwF2W,GA10FV14B,MA00F0CA,OA10F1CA,MA00FgEA,OA10FhEA,MA00F0FA,OA10F1FA,MA00FmHwiB,GA10FnHxiB,MA00F+Is2B,IAAc,EACtPxU,iBA30FyF9hB,MAAE,CAAAgpB,KA20FJ0P,EAAcpwB,UAAA,gBAAAoG,aAAA,SAAA/F,EAAAC,GAAA,EAAAD,GA30FZ3I,MAAE,qBAAA2O,GAAA,OA20FJ/F,EAAAixB,YAAAlrB,EAAmB,EA30FjB3O,CA20FiB,sBAAA2O,GAAA,OAAnB/F,EAAAmxB,aAAAprB,EAAoB,EA30FlB3O,CA20FkB,uBAAA2O,GAAA,OAApB/F,EAAAqxB,cAAAtrB,EAAqB,EA30FnB3O,CA20FmB,8BAArB4I,EAAAuxB,aAAa,EA30FXn6B,CA20FW,gCAAb4I,EAAAwxB,eAAe,IAAAlpB,OAAA,CAAA6nB,aAAA,eAAAtb,UAAA,YAAAC,WAAA,cAAAnV,MAAA,EAAAC,KAAA,EAAAC,OAAA,oLAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IA30Fb3I,MAAE,QAAFA,CA40FpF,WA50FoFA,MAAE,kCAk1FpE4I,EAAAskB,iBAAiB,GAl1FiDltB,MAAE,EAAAwc,GAAA,sBAAFxc,WA81FjF,EAAA2I,IA91FiF3I,MAAE,GAAFA,MAAE,UAAFA,MAAE,EAAAgd,GAAApU,EAAA6U,UAAAnB,MAAA,KAAA1T,EAAA6U,UAAAP,UAAAtU,EAAA6U,UAAAN,WAAAvU,EAAA6U,UAAAoG,SAAAjb,EAAA6U,UAAAoG,SAAA,QAAAjb,EAAA6U,UAAAqG,SAAAlb,EAAA6U,UAAAqG,SAAA,UAAF9jB,MAAE,GAAFA,MAAE,UAAA4I,EAAA8U,YAm1FxC,EAAAue,aAAA,CAaQj4B,KAA8FA,KAA6HA,KAAoGA,KAAuKA,MAAUk4B,cAAA,EAAAl3B,KAAA,CAAAm3B,UAA6D,IAChmBC,MAAQ,aAAc,IAClBzjB,MAAM,YAAU0jB,MAAM,CAAEC,OAAQ,MAAI,EACpC3jB,MAAM,UAAQ0jB,MAAM,CAAEC,OAAQ,QAAM,EACpCnf,MAAW,iBAAkB,IAEzBiK,MAAQ,kBACX,EACDjK,MAAW,iBAAkB,IAEzBiK,MAAQ,aAI3B,OAvXKsR,CAAc,KAwbd6D,GAAiB,MAAvB,MAAMA,EACF3D,GACA4D,cACAhM,gBACAiM,kBACAC,gBACAC,gBACA7D,eACA8D,kBACAC,YACApa,OACAqa,kBACAjT,OACAkT,WAAa,IAAIxpB,MACjB4R,SAAW,IAAI5R,MACfypB,OAAS,IAAIzpB,MACb0pB,QAAU,IAAI1pB,MACd2pB,YAAc,IAAI3pB,MAIlB4pB,oBAIAC,mBAIAC,uBAMAC,2BAIA9f,WAIAC,UAIAC,WAAa,GAIbc,QAIAE,SAIA6e,iBAIAC,gBAAiB,EAIjBlnB,QACAmnB,YAIAC,kBAIA1a,qBAIA2a,mBAIAC,iBAIAC,kBAIAjb,sBAIAkb,gBACAhJ,OACAv3B,YAAYq7B,EAAI4D,EAAehM,EAAiBiM,EAAmBC,EAAiBC,EAAiB7D,EAAgB8D,EAAmBC,EAAapa,EAAQqa,EAAmBhI,IAC5Kp3B,KAAKk7B,GAAKA,EACVl7B,KAAK8+B,cAAgBA,EACrB9+B,KAAK8yB,gBAAkBA,EACvB9yB,KAAK++B,kBAAoBA,EACzB/+B,KAAKg/B,gBAAkBA,EACvBh/B,KAAKi/B,gBAAkBA,EACvBj/B,KAAKo7B,eAAiBA,EACtBp7B,KAAKk/B,kBAAoBA,EACzBl/B,KAAKm/B,YAAcA,EACnBn/B,KAAK+kB,OAASA,EACd/kB,KAAKo/B,kBAAoBA,EACzBp/B,KAAKo3B,OAASA,EAClB,CACAiJ,mBAAmBxD,GACf,GAAK78B,KAAK8yB,gBAAgBjN,SAAS9C,SAEnC,OAAQ/iB,KAAKo3B,OAAOV,iBAChB,IAAK,WACA12B,KAAKg/B,gBAAgB9H,mBAAqBl3B,KAAKg/B,gBAAgB3H,OAChE,MACJ,IAAK,SACDr3B,KAAKg/B,gBAAgBnH,QAKjC,CAEAtuB,WACIvJ,KAAKozB,iBACLpzB,KAAKy/B,oBAAsBz/B,KAAKk7B,GAAG8C,cAAcntB,cAAc,iBAAiByvB,WACpF,CACA5tB,cACQ1S,KAAK+/B,cAAgB//B,KAAK4Y,UACtB5Y,KAAK+/B,aAAe//B,KAAKmsB,QAAQoU,UAAU5gC,QAC3CK,KAAK8yB,gBAAgB7G,MAAMjsB,KAAKy/B,oBAAqBz/B,KAAKmsB,OAAOoU,UAAWvgC,KAAK4Y,SACjF5Y,KAAK8yB,gBAAgB9F,WAAWhtB,KAAKmsB,OAAOoU,YAEvCvgC,KAAK+/B,cAAgB//B,KAAKmsB,QAAQoU,UAAU5gC,QACjDK,KAAK8/B,gBAAiB,EACtB9/B,KAAK+kB,OAAOjB,IAAK,sEAGjB9jB,KAAK8/B,gBAAiB,EAE1B9/B,KAAK+/B,YAAc//B,KAAK4Y,QAEhC,CACA4nB,qBACQxgC,KAAKmsB,OAAOoU,UAAU5gC,QACtBK,KAAK8yB,gBAAgB7G,MAAMjsB,KAAKy/B,oBAAqBz/B,KAAKmsB,OAAOoU,UAAWvgC,KAAK4Y,SACjF5Y,KAAK8yB,gBAAgB9F,WAAWhtB,KAAKmsB,OAAOoU,WAC5CvgC,KAAKygC,qBAGLzgC,KAAK+kB,OAAOjB,IAAK,kEAErB9jB,KAAK4/B,2BAA6B5/B,KAAKmsB,OAAOxZ,QAAQ1M,QAAKC,KAAKimB,IAC5DnsB,KAAK8yB,gBAAgB7G,MAAMjsB,KAAKy/B,oBAAqBtT,EAAOoU,UAAWvgC,KAAK4Y,SAC5E5Y,KAAK8yB,gBAAgB9F,WAAWb,EAAOoU,WAClCpU,EAAOoU,UAAU5gC,SAClBK,KAAK8/B,gBAAiB,GAEtB3T,EAAOoU,UAAU5gC,SAAWK,KAAK0/B,oBACjC1/B,KAAKygC,mBAAkB,IAE3B34B,UAAU,OAClB,CACAurB,cACQrzB,KAAK0/B,oBACL1/B,KAAK0/B,mBAAmBrjB,cAExBrc,KAAK4/B,4BACL5/B,KAAK4/B,2BAA2BvjB,cAEhCrc,KAAK2/B,wBACL3/B,KAAK2/B,uBAAuBtjB,aAEpC,CAKA+W,iBACIpzB,KAAKggC,kBAAoBhgC,KAAK8yB,gBAAgB1I,qBAAqBnkB,QAAKC,KAAIoB,IACxEtH,KAAK8f,WAAaxY,EAAKwY,WACvB9f,KAAK+f,UAAYzY,EAAKyY,UACtB/f,KAAKggB,WAAa1Y,EAAK0Y,WAClBhgB,KAAK8/B,iBACN9/B,KAAK8/B,gBAAiB,GAE1B9/B,KAAK8gB,QAAUxZ,EAAKwZ,QACpB9gB,KAAKghB,SAAW1Z,EAAK0Z,SACrBhhB,KAAKo/B,kBAAkBsB,cAAa,IAExC1gC,KAAKklB,sBAAwBllB,KAAK8yB,gBAAgBzI,sBAAsBpkB,QAAKC,KAAI,KAC7ElG,KAAK2gC,uBACL3gC,KAAKw/B,YAAYjpB,KAAKvW,KAAK6/B,iBAAgB,IAG/C7/B,KAAKslB,qBAAuBtlB,KAAK8yB,gBAAgBrI,qBAAqBxkB,QAAKC,KAAI,KAC3ElG,KAAK2gC,uBACL3gC,KAAKq/B,WAAW9oB,KAAKvW,KAAK6/B,iBAAgB,IAG9C7/B,KAAKkgC,iBAAmBlgC,KAAK8yB,gBAAgBxI,iBAAiBrkB,QAAKC,KAAI,KACnElG,KAAK2gC,uBACL3gC,KAAKs/B,OAAO/oB,KAAKvW,KAAK6/B,iBAAgB,IAG1C7/B,KAAKmgC,kBAAoBngC,KAAK8yB,gBAAgBxI,iBAAiBrkB,QAAK+xB,KAAUtd,IAC1E,MAAMkmB,KAAkB7I,MAAGrd,GAAOzU,QAAK1G,KAAO,IAA8B,aAAxBmb,EAAM8R,SAASC,OAAmB,EAAGuL,KAAU,OAAM3H,MAAKrwB,KAAKggB,aAAc3F,GAAKK,EAAM8R,SAAS9R,QAAK,EAAGiD,KAAK3d,KAAK8yB,gBAAgBjN,SAASzE,QAAK,EAAGtS,KAAIkZ,IACxM,MAAMhB,EAAiBhnB,KAAK8yB,gBAAgB9L,eACtCrqB,EAAKqrB,EAAMrrB,GAAGm1B,QAAQ9K,IAAmB,EAAIgB,EAAMrrB,GAAGmzB,MAAM9I,EAAernB,QAAUqoB,EAAMrrB,GACjG,MAAO,IAAKqrB,EAAOrrB,GAAIA,EAAIqsB,UAAU,EAAK,GTxwGnD,SAASuX,KACZ,SAAO1iB,KAAQ,CAACJ,EAAQtD,MUFrB,SAAS0mB,GAAOC,EAAaC,GAChC,SAAOljB,QAAQmjB,MAAcF,EAAaC,EAAME,UAAUthC,QAAU,GAAG,GAAO,GAClF,EVCQkhC,CAAOrmB,GAAY,GAAnBqmB,CAAuBpjB,GAAQ3V,UAAUqS,EAAU,EAE3D,CSqwGgBomB,IAAQ,EAAGzxB,KAAIqd,KAEXA,OAAQA,EACRjK,cAAeliB,KAAK8yB,gBAAgBhL,SAASpN,EAAM8R,SAAS9R,WAYpE,SAAOqH,KAAM6e,EAAe,IAC/B,EAAG16B,KAAI8Z,IACJhgB,KAAK2gC,uBACL3gC,KAAKu/B,QAAQhpB,KAAKyJ,EAAWmM,OAAOxsB,OAASqgB,EAAahgB,KAAK6/B,iBAAgB,IAInF7/B,KAAKigC,mBAAqBjgC,KAAK8yB,gBAAgBhI,eAAe7kB,QAAKC,KAAI,KACnElG,KAAK2gC,uBACL3gC,KAAKynB,SAASlR,KAAK,CAAEkR,UAAU,EAAMngB,KAAMtH,KAAK6/B,kBAAkB,IACrE,EAAG7H,KAAU,IAAMh4B,KAAK8yB,gBAAgB/H,kBAAkB9kB,QAAK6I,KAAI,MAAQ9O,KAAK8yB,gBAAgBpF,GAAG,iBAAc,EAAGsK,KAAUkJ,GACvHA,EACOlhC,KAAK8yB,gBAAgBrI,qBAAqBxkB,QAAK0sB,SAAO,EAGtDoF,MAAG,mBAEjB,EAAG7xB,KAAI,KACJlG,KAAKynB,SAASlR,KAAK,CAAEkR,UAAU,EAAOngB,KAAMtH,KAAK6/B,kBAAkB,IAEvE7/B,KAAKogC,mBAAkBre,KAAM/hB,KAAKggC,kBAAmBhgC,KAAKslB,qBAAsBtlB,KAAKigC,mBAAoBjgC,KAAKkgC,iBAAkBlgC,KAAKmgC,kBAAmBngC,KAAKklB,uBAC7JllB,KAAK2/B,uBAAyB3/B,KAAKogC,gBAAgBt4B,UAAU,OACjE,CAIA24B,oBACQlyB,OAAOC,KAAKxO,KAAK8yB,gBAAgB7L,SAAS1E,YAAY5iB,SACtDK,KAAK0/B,mBAAqB1/B,KAAK8+B,cAAc/D,UACxC90B,QAAK1G,KAAO,IAAMS,KAAKy/B,sBAAwBz/B,KAAKk7B,GAAG8C,cAAcntB,cAAc,iBAAiByvB,aErzG9G,SAASlqB,GAAM+qB,EAAKtmB,EAAYe,IACnC,MAAMwlB,ECAH,SAASC,GAAMC,EAAU,EAAGC,EAAqB1mB,EAAYe,IAChE,IAAI4lB,GAAmB,EACvB,OAA2B,MAAvBD,KAAuB,EACnBE,MAAYF,GACZ1mB,EAAY0mB,EAGZC,EAAmBD,GAGpB,IAAIrnB,KAAYC,IACnB,IAAIgnB,ECfL,SAASO,GAAYhnB,GACxB,OAAOA,aAAiBvQ,OAASsoB,MAAM/X,EAC3C,CDakBgnB,CAAYJ,IAAYA,EAAUzmB,EAAUa,MAAQ4lB,EAC1DH,EAAM,IACNA,EAAM,GAEV,IAAIpX,EAAI,EACR,OAAOlP,EAAUG,SAAS,WACjBb,EAAWsC,SACZtC,EAAW5S,KAAKwiB,KACZ,GAAKyX,EACLxhC,KAAKgb,cAAS3I,EAAWmvB,GAGzBrnB,EAAWwnB,WAGvB,EAAGR,EAAG,EAEd,CD5BqBE,CAAMF,EAAKtmB,GAC5B,OAAOyC,GAAU,IAAM8jB,EAC3B,CFkzGmIhrB,CAAMpW,KAAK8yB,gBAAgBjN,SAASrD,wBACtJ1a,UAAU,KACX9H,KAAK8yB,gBAAgBlF,SAAS5tB,KAAKk7B,GAAG8C,cAAcntB,cAAc,iBAAiByvB,aACnFtgC,KAAKy/B,oBAAsBz/B,KAAKk7B,GAAG8C,cAAcntB,cAAc,iBAAiByvB,cAG5F,CAIA9Q,kBACIxvB,KAAK8yB,gBAAgBtD,iBACzB,CAIAjoB,OACSvH,KAAK8/B,gBAEV9/B,KAAK++B,kBAAkBx3B,KAAKvH,KAAK8yB,gBAAgBjN,SAASlD,SAC9D,CAIA/B,OACS5gB,KAAK8/B,gBAEV9/B,KAAK++B,kBAAkBne,KAAK5gB,KAAK8yB,gBAAgBjN,SAASlD,SAC9D,CAIArC,UAAUwU,GACD90B,KAAK8/B,gBAEV9/B,KAAK++B,kBAAkBze,UAAUwU,EACrC,CAKAxE,GAAG3zB,GAEMqD,KAAK8/B,gBAEV9/B,KAAK++B,kBAAkB/J,YAAYr4B,EACvC,CAIAgkC,uBACI,IAAIze,EACJ,MAAM8E,EAAiBhnB,KAAK8yB,gBAAgB9L,eACtC4a,EAAe5hC,KAAKggB,WACrBzgB,OAAOyoB,IAA4B,IAAnBA,EAAMgB,UACtBla,IAAIkZ,KAGDrrB,GAFOqrB,EAAMrrB,GAAGm1B,QAAQ9K,IAAmB,EAAIgB,EAAMrrB,GAAGmzB,MAAM9I,EAAernB,QAAUqoB,EAAMrrB,GAG7FiiB,MAAOoJ,EAAMpJ,MACbM,QAAS8I,EAAM9I,QACfC,QAAS6I,EAAM7I,QACfoC,OAAQyG,EAAMmC,cAGtBjI,EAAgBliB,KAAK8yB,gBAAgBhL,SAAS9nB,KAAK8yB,gBAAgBzL,WACnErnB,KAAK6/B,iBAAmB,CACpB3d,cAAeA,EACfiK,OAAQyV,EAEhB,CAIA3J,eACIj4B,KAAKg/B,gBAAgB/G,cACzB,CAIA4J,cACI7hC,KAAKg/B,gBAAgB9G,wBACzB,CAIA4J,cACI9hC,KAAKg/B,gBAAgB7G,sBACzB,CACA4J,eACI/hC,KAAKg/B,gBAAgB9H,mBAAoB,EACzCl3B,KAAKg/B,gBAAgBxH,MACzB,CACAwK,gBACIhiC,KAAKg/B,gBAAgB9H,mBAAoB,EACzCl3B,KAAKg/B,gBAAgB3H,MACzB,CACAjT,iBAAW,SAAAC,GAAA,WAAAA,GAAwFwa,GAlxGVv8B,MAkxG6CA,OAlxG7CA,MAkxGuEu4B,IAlxGvEv4B,MAkxGiGwiB,GAlxGjGxiB,MAkxG6HuwB,IAlxG7HvwB,MAkxG2Jq0B,IAlxG3Jr0B,MAkxGuL81B,IAlxGvL91B,MAkxGmNs2B,IAlxGnNt2B,MAkxG8Ok3B,IAlxG9Ol3B,MAkxG4Qq3B,IAlxG5Qr3B,MAkxGoSshB,IAlxGpSthB,MAkxG0TA,OAlxG1TA,MAkxG2V4zB,IAAQ,EAC5b9R,iBAnxGyF9hB,MAAE,CAAAgpB,KAmxGJuT,EAAiBj0B,UAAA,qBAAAq3B,eAAA,SAAAh3B,EAAAC,EAAAg3B,GAQ5B,GAR4B,EAAAj3B,GAnxGf3I,MAAE4/B,EA2xGrCxH,GAAsB,KAAAzvB,EAAA,KAAAk3B,EA3xGa7/B,MAAE6/B,EAAF7/B,WAAE4I,EAAAihB,OAAAgW,EAAA,GAAAnxB,aAAA,SAAA/F,EAAAC,GAAA,EAAAD,GAAF3I,MAAE,4BAAA2O,GAAA,OAmxGJ/F,EAAAm1B,mBAAApvB,EAA0B,KAnxGxB3O,MAAE,EAAAkR,OAAA,CAAAoF,QAAA,WAAA7B,QAAA,CAAAsoB,WAAA,aAAA5X,SAAA,WAAA6X,OAAA,SAAAC,QAAA,UAAAC,YAAA,eAAA9rB,SAAA,CAAFpR,MAmxG2S,CAC5XuwB,GACA8D,GACA7R,EACAsT,GACAQ,GACAY,GACAG,KA1xGiFr3B,OAAEuI,MAAA,EAAAC,KAAA,EAAAC,OAAA,oeAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IAAF3I,MAAE,aAAFA,MAAE,8BAkyG5E4I,EAAA+sB,cAAc,EAlyG4D31B,CAkyG3D,+BACd4I,EAAA22B,aAAa,EAnyG4Dv/B,CAkyG3D,+BAEd4I,EAAA+sB,cAAc,EApyG2D31B,CAkyG3D,6BAGhB4I,EAAA42B,aAAa,GAryG8Dx/B,MAAE,EAAAud,GAAA,aAAFvd,MAAE,EAAAqe,GAAA,uBAAFre,SAuzGnF,EAAA2I,IAvzGmF3I,MAAE,UAAFA,MAAE,EAAA4e,GAAA,MAAAhW,EAAA4U,WAAA,KAAA5U,EAAA4U,WAAAqC,IAAA,MAAAjX,EAAA4U,WAAA,KAAA5U,EAAA4U,WAAAkG,SAAA,MAAA9a,EAAA4U,WAAA,KAAA5U,EAAA4U,WAAAgG,aAAA,MAAA5a,EAAA4U,WAAA,KAAA5U,EAAA4U,WAAAH,gBAAA,MAAAzU,EAAA4U,WAAA,KAAA5U,EAAA4U,WAAAoG,SAAF5jB,MAAE,GAAFA,MAAE,OAAA4I,EAAA40B,gBAAFx9B,MAAE,GAAFA,MAAE,OAAA4I,EAAAihB,OAAAoU,UAAA5gC,QA4yG7C,EAAA4+B,aAAA,CAYsDj4B,KAA8FA,KAA6HA,KAAoG00B,IAAcjnB,OAAA,iDAAAC,gBAAA,IACpb,OA1YK6qB,CAAiB,KAqrBjBuD,GAAc,MAApB,MAAMA,EACFhe,iBAAW,SAAAC,GAAA,WAAAA,GAAwF+d,EAAc,EACjHhe,iBAtmHyF9hB,KAAE,CAAAgpB,KAsmHS8W,IACpGhe,iBAvmHyF9hB,MAAE,CAAA+/B,UAumHoC,CAAChN,GAAkBwF,GAAexE,GAAoBzS,IAAU0e,QAAA,CAAYxuB,QAC9M,OAJKsuB,CAAc,+BKhtHR9/B,MAAA,UAAAA,CAOC,WAKGA,MAAA,GACFA,QACAA,MAAA,WACEA,MAAA,GACFA,QACAA,MAAA,WACEA,MAAA,GACFA,oCAbAA,MAAA,oDAMEA,MAAA,GAAAA,MAAA,IAAAwN,EAAAmE,KAAA,KAGA3R,MAAA,GAAAA,MAAA,IAAAwN,EAAAlP,SAAA,KAGA0B,MAAA,GAAAA,MAAA,IAAAwN,EAAAlB,OAAA,+CAxCZtM,MAAA,UAAAA,CAGC,UAHDA,CAGC,UAKKA,MAAA,GACFA,UAGFA,MAAA,UAAAA,CAAiB,aAAjBA,CAAiB,aAAjBA,CAAiB,UAAjBA,CAAiB,WAIyBA,MAAA,UAAIA,QACtCA,MAAA,YAAkCA,MAAA,WAAIA,QACtCA,MAAA,YAAkCA,MAAA,aAAMA,YAG5CA,MAAA,YACEA,MAAA,GAAAigC,GAAA,aAqBFjgC,UAGFA,MAAA,gBACEA,MAAA,yBAAAyK,EAAAzK,MAAAgJ,GAAAC,UAAAC,EAAAlJ,MAAA,UAASA,MAAAkJ,EAAAg3B,iBAAAz1B,GAA6B,GAGtCzK,MAAA,IACFA,mDA3CEA,MAAA,GAAAA,MAAA,UAAAyK,EAAA,KAgBkCzK,MAAA,IAAAA,MAAA,UAAA4K,EAAAJ,oBAAAC,IA0BlCzK,MAAA,GAAAA,MAAA,eAAAyK,EAAA,wCAvDVzK,MAAA,UAAAA,CAAsE,UACVA,MAAA,oBAAcA,QAGxEA,MAAA,WACEA,MAAA,EAAAmgC,GAAA,cAsDFngC,gCArD4BA,MAAA,GAAAA,MAAA,UAAA2G,EAAAmE,8CAmFlB9K,MAAA,WAKEA,MAAA,GACFA,kCADEA,MAAA,GAAAA,MAAA,IAAAogC,EAAA9hC,SAAA,6BAoBA0B,MAAA,aAIEA,MAAA,WACFA,mCAEEA,MAAA,GAMEA,MAAA,aAMEA,MAAA,GAIFA,QACFA,wEAVIA,MAAA,GAAAA,MAAA,UAAAqgC,EAAA92B,eAAA+2B,EAAAC,EAAAF,EAAAG,sBAAAn4B,OAKArI,MAAA,GAAAA,MAAA,IAAAqgC,EAAA92B,eAAA+2B,EAAAC,EAAAF,EAAAG,sBAAA92B,OAAA,gCAOF1J,MAAA,aAMEA,MAAA,GAIFA,wEATEA,MAAA,UAAAygC,EAAA72B,iBAAA02B,EAAAC,EAAAE,EAAAD,sBAAAn4B,OAKArI,MAAA,GAAAA,MAAA,IAAAygC,EAAA72B,iBAAA02B,EAAAC,EAAAE,EAAAD,sBAAA92B,OAAA,gCA1BN1J,MAAA,UACEA,MAAA,EAAA0gC,GAAA,uBAkBA1gC,MAAA,EAAA2gC,GAAA,0BAAA3gC,OAaFA,0CA9BKA,MAAA,GAAAA,MAAA,OAAA2J,EAAAjC,iBAAAiC,EAAAxD,eAAAC,OAAApG,CAGnB,WAAA4gC,8BAfY5gC,MAAA,WAIEA,MAAA,EAAA6gC,GAAA,eAMA7gC,MAAA,EAAA8gC,GAAA,eAiCF9gC,sDAtCKA,MAAA,GAAAA,MAAA,OAAAugC,EAAAllC,WAAAilC,EAAAjlC,UAKI2E,MAAA,GAAAA,MAAA,OAAAugC,EAAAllC,WAAAilC,EAAAjlC,qCAlBX2E,MAAA,WAQEA,MAAA,EAAA+gC,GAAA,aA4CA/gC,MAAA,WACEA,MAAA,GACFA,yDAhDAA,MAAA,UAAAghC,EAAA,kCAGsBhhC,MAAA,GAAAA,MAAA,UAAAihC,EAAAz2B,oBAAAy2B,EAAAC,gBA4CpBlhC,MAAA,GAAAA,MAAA,IAAAugC,EAAAjiC,SAAA,+CA3Fd0B,MAAA,YAGEA,MAAA,mBAAAA,MAAAmhC,GAAA,MAAAC,EAAAphC,QAAA,OAASA,MAAAohC,EAAAC,oBAAmB,GAE5BrhC,MAAA,YAEEA,MAAA,iBAAA2O,GAAA,OAASA,EAAA2yB,iBAAwB,GAEjCthC,MAAA,WAAAA,CAAoD,WAEhDA,MAAA,GACFA,QACAA,MAAA,eAEEA,MAAA,mBAAAA,MAAAmhC,GAAA,MAAAI,EAAAvhC,QAAA,OAASA,MAAAuhC,EAAAF,oBAAmB,GAE5BrhC,MAAA,UACFA,UAGFA,MAAA,WAAAA,CAA6B,aAA7BA,CAA6B,aAA7BA,CAA6B,YAIrBA,MAAA,GAAAwhC,GAAA,aAOAxhC,MAAA,YACEA,MAAA,yDACFA,YAGJA,MAAA,YACEA,MAAA,GAAAyhC,GAAA,aAwDFzhC,wCAnFAA,MAAA,GAAAA,MAAA,UAAAyP,EAAAyxB,cAAA,aAeyBlhC,MAAA,GAAAA,MAAA,UAAAyP,EAAAjF,oBAAAiF,EAAAyxB,gBAcQlhC,MAAA,GAAAA,MAAA,UAAAyP,EAAAjF,oBAAAiF,EAAAyxB,iBC1FlC,IAAMQ,GAA4B,MAAnC,MAAOA,EALbnkC,cAMWG,KAAAikC,OAAkB,GAClBjkC,KAAAwN,QAAmB,GAI5BxN,KAAAyI,eAAiBA,KACjBzI,KAAA4I,WAAaA,KACb5I,KAAAwjC,cAA+B,KAC/BxjC,KAAAkkC,kBAAmB,EACnBlkC,KAAA8iC,qBAAgC,GAEhCv5B,WAAkB,CAGlBuD,oBACE,MAAMoB,EAAsD,GAC5D,OAAAlO,KAAKikC,OAAO91B,QAASqI,IACnBtI,EAAesI,EAAMnI,aAAemI,EAAMjJ,UAErCW,CACT,CAGAi2B,gBAAgB91B,GAEd,OADcrO,KAAKikC,OAAO70B,KAAM0H,GAAMA,EAAEzI,cAAgBA,IAC1Cb,SAAW,EAC3B,CAGAJ,kBACE,OAAOpN,KAAKikC,OAAOn1B,IAAKgI,GAAMA,EAAEzI,aAAaI,KAAK,CAACC,EAAGC,IAAMD,EAAIC,EAClE,CAGAM,oBACE,OAAOjP,KAAKikC,QAAUjkC,KAAKikC,OAAOtkC,OAAS,CAC7C,CAGAuJ,qBACE,OAAOlJ,KAAKokC,aAAex7B,KAAWG,MACxC,CAGA8C,eAAeqD,EAAiBC,EAAiBk1B,GAC/C,GAAIn1B,EAAQvR,WAAawR,EAAQxR,SAC/B,MAAO,CAAEqO,OAAQ,MAAOrB,MAAO,iBAGjC,MAAMmD,EAAQu2B,EAAaj1B,KACxBC,GACEA,EAAEC,cAAgBJ,EAAQtO,UACzByO,EAAEE,cAAgBJ,EAAQvO,UAC3ByO,EAAEC,cAAgBH,EAAQvO,UACzByO,EAAEE,cAAgBL,EAAQtO,UAGhC,IAAKkN,EACH,MAAO,CAAE9B,OAAQ,IAAKrB,MAAO,iBAG/B,MAAM6E,EACJ1B,EAAMwB,cAAgBJ,EAAQtO,SAAWkN,EAAMC,OAASD,EAAME,OAC1DyB,EACJ3B,EAAMyB,cAAgBJ,EAAQvO,SAAWkN,EAAME,OAASF,EAAMC,OAEhE,IAAI2B,EAAa,cACjB,OAAIF,EAAeC,EACjBC,EAAa,2BACJF,EAAeC,EACxBC,EAAa,yBACJF,GAAgBC,GAAgC,GAAhBD,IACzCE,EAAa,2CAGR,CAAE1D,OAAQ,GAAGwD,OAAkBC,IAAgB9E,MAAO+E,EAC/D,CAGAxD,iBAAiBgD,EAAiBC,EAAiBk1B,GACjD,GAAIn1B,EAAQvR,WAAawR,EAAQxR,SAC/B,MAAO,CAAEqO,OAAQ,MAAOrB,MAAO,iBAEjC,MAAMmD,EAAQu2B,EAAaj1B,KACxBC,GACEA,EAAEC,cAAgBJ,EAAQtO,UACzByO,EAAEE,cAAgBJ,EAAQvO,UAC3ByO,EAAEC,cAAgBH,EAAQvO,UACzByO,EAAEE,cAAgBL,EAAQtO,UAEhC,IAAKkN,EACH,MAAO,CAAE9B,OAAQ,IAAKrB,MAAO,iBAE/B,MAAM6E,EACJ1B,EAAMwB,cAAgBJ,EAAQtO,SAAWkN,EAAMC,OAASD,EAAME,OAC1DyB,EACJ3B,EAAMyB,cAAgBJ,EAAQvO,SAAWkN,EAAME,OAASF,EAAMC,OAChE,OAAIyB,EAAeC,EACV,CAAEzD,OAAQ,qBAAOrB,MAAO,4BACtB6E,EAAeC,EACjB,CAAEzD,OAAQ,iCAASrB,MAAO,0BACxB6E,IAAiBC,GAAiC,IAAjBD,EACnC,CAAExD,OAAQ,iCAASrB,MAAO,6BAE5B,CAAEqB,OAAQ,IAAKrB,MAAO,gBAC/B,CAGA63B,iBAAiBn0B,GACfrO,KAAKwjC,cAAgBn1B,EACrBrO,KAAK8iC,qBAAuB9iC,KAAKmkC,gBAAgB91B,GACjDrO,KAAKkkC,kBAAmB,CAC1B,CAGAP,oBACE3jC,KAAKkkC,kBAAmB,EACxBlkC,KAAKwjC,cAAgB,KACrBxjC,KAAK8iC,qBAAuB,EAC9B,iDAxHWkB,EAA4B,oCAA5BA,EAA4Bp5B,UAAA,gCAAA4I,OAAA,CAAAywB,OAAA,SAAAz2B,QAAA,UAAAxD,eAAA,iBAAAo6B,WAAA,cAAAv5B,MAAA,EAAAC,KAAA,EAAAC,OAAA,ghFAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDdzC3I,MAAA,EAAAgiC,GAAA,aAgEAhiC,MAAA,EAAAiiC,GAAA,qBAhEMjiC,MAAA,OAAA4I,EAAAhC,sBAAAgC,EAAA+D,qBAiEH3M,MAAA,GAAAA,MAAA,OAAA4I,EAAAg5B,ssHCnDUF,CAA4B,uECVvC1hC,MAAA,UAAAA,CAA2E,cAGvEA,MAAA,mBAAAA,MAAA8d,GAAA,MAAAvT,EAAAvK,QAAA,OAASA,MAAAuK,EAAA23B,gBAAe,GAGxBliC,MAAA,SAA6CA,MAAA,WAC/CA,QACAA,MAAA,cAEEA,MAAA,mBAAAA,MAAA8d,GAAA,MAAA5U,EAAAlJ,QAAA,OAASA,MAAAkJ,EAAAi5B,YAAW,GAGpBniC,MAAA,WAAIA,MAAA,UACNA,kCAVEA,MAAA,GAAAA,MAAA,WAAA2G,EAAAy7B,gBAOApiC,MAAA,GAAAA,MAAA,WAAA2G,EAAA07B,uCAkEIriC,MAAA,SAAAA,CAGC,aACwCA,MAAA,gBAAUA,kCAEnDA,MAAA,SAAAA,CAGC,aACsCA,MAAA,cAAQA,oDAI/CA,MAAA,WAAAA,CAA8D,eAG1DA,MAAA,mBAAAA,MAAAsiC,GAAA,MAAAC,EAAAviC,MAAA,GAAAiJ,UAAAu5B,EAAAxiC,QAAA,OAASA,MAAAwiC,EAAAC,kBAAAF,EAAAlgC,UAAkC,GAE3CrC,MAAA,6BACFA,kEAIFA,MAAA,4EAEEA,MAAA,SAAAuiC,EAAAZ,QAAA3hC,MAAA,EAAAmc,IAAAnc,CAA8B,UAAA0iC,EAAAC,iBAAAJ,EAAAlgC,UAA9BrC,CAA8B,iBAAAuiC,EAAA76B,eAA9B1H,CAA8B,aAAAuiC,EAAAT,uCAQhC9hC,MAAA,YAIEA,MAAA,yBACFA,yCADoBA,MAAA,GAAAA,MAAA,WAAAuiC,EAAAlgC,iCA+CVrC,MAAA,oCATJA,MAAA,UAAAA,CAIC,WAKGA,MAAA,EAAA4iC,GAAA,YAKA5iC,MAAA,GACFA,QACAA,MAAA,WAAiCA,MAAA,GAAqBA,QACtDA,MAAA,WACEA,MAAA,GACFA,QACAA,MAAA,WAGEA,MAAA,GACFA,QACAA,MAAA,YAGEA,MAAA,IACFA,QACAA,MAAA,YAGEA,MAAA,IACFA,QACAA,MAAA,YACEA,MAAA,IACFA,QACAA,MAAA,YAUEA,MAAA,uBACFA,oCA9CAA,MAAA,oDASKA,MAAA,GAAAA,MAAA,UAAA6iC,EAAAlxB,MAEH3R,MAAA,GAAAA,MAAA,IAAA6iC,EAAAlxB,KAAA,KAE+B3R,MAAA,GAAAA,MAAA6iC,EAAAvkC,UAE/B0B,MAAA,GAAAA,MAAA,IAAA6iC,EAAAv2B,OAAA,KAKAtM,MAAA,GAAAA,MAAA,IAAA6iC,EAAAjxB,KAAA,KAKA5R,MAAA,GAAAA,MAAA,IAAA6iC,EAAAhxB,MAAA,KAKA7R,MAAA,GAAAA,MAAA,IAAA6iC,EAAA/wB,OAAA,KAGA9R,MAAA,GAAAA,MAAA,IAAA6iC,EAAA9wB,cAAA,KAIA/R,MAAA,GAAAA,MAAA,UAAA6iC,EAAA7tB,QAAA,kBAAA6tB,EAAA7tB,SAAA,IAAA6tB,EAAA7tB,SAAA,uCAQAhV,MAAA,GAAAA,MAAA,IAAAA,MAAA,MAAA6iC,EAAA7tB,QAAA,0DAnFVhV,MAAA,WAAAA,CAGC,eAGGA,MAAA,mBAAAA,MAAAmhC,GAAA,MAAAoB,EAAAviC,MAAA,GAAAiJ,UAAA65B,EAAA9iC,QAAA,OAASA,MAAA8iC,EAAAC,UAAAR,EAAAlgC,UAA0B,GAEnCrC,MAAA,8BACFA,QAEAA,MAAA,aAAAA,CAEC,aAFDA,CAEC,UAFDA,CAEC,WAKuCA,MAAA,UAAIA,QACtCA,MAAA,WAAkCA,MAAA,UAAIA,QACtCA,MAAA,YAAkCA,MAAA,aAAMA,QACxCA,MAAA,YACEA,MAAA,YACFA,QACAA,MAAA,YACEA,MAAA,aACFA,QACAA,MAAA,YACEA,MAAA,aACFA,QACAA,MAAA,YAAkCA,MAAA,YAAKA,QACvCA,MAAA,YAAkCA,MAAA,eAAQA,YAG9CA,MAAA,YACEA,MAAA,GAAAgjC,GAAA,eAmDFhjC,+CAlDuBA,MAAA,IAAAA,MAAA,UAAAuiC,EAAAt3B,oCA/H7BjL,MAAA,WAAAA,CAEC,WAEGA,MAAA,GACFA,QACAA,MAAA,UACEA,MAAA,GACFA,QACAA,MAAA,UACEA,MAAA,mBACFA,QACAA,MAAA,UACEA,MAAA,0BACAA,MAAA,cAQEA,MAAA,IAKFA,UAEFA,MAAA,WACEA,MAAA,yBACAA,MAAA,cAUEA,MAAA,IAOFA,UAEFA,MAAA,GAAAijC,GAAA,YAMAjjC,MAAA,GAAAkjC,GAAA,YAQAljC,MAAA,GAAAmjC,GAAA,cAUAnjC,MAAA,GAAAojC,GAAA,oCAUApjC,MAAA,GAAAqjC,GAAA,cAOArjC,MAAA,GAAAsjC,GAAA,eAyFFtjC,kDAhLIA,MAAA,GAAAA,MAAA,IAAAuiC,EAAAgB,WAAA,KAGAvjC,MAAA,GAAAA,MAAA,IAAAuiC,EAAAiB,kBAAA,KAGAxjC,MAAA,GAAAA,MAAA,qBAAAA,MAAA,KAAAuiC,EAAA36B,UAAA,uBAME5H,MAAA,GAAAA,MAAA,2BAMAA,MAAA,GAAAA,MAAA,IAAAuiC,EAAA76B,iBAAA6W,EAAApY,eAAAC,OAAA,0BAWApG,MAAA,GAAAA,MAAA,2BAQAA,MAAA,GAAAA,MAAA,QAAAuiC,EAAAT,WAAA,cAAAS,EAAAT,WAAA,wBAWD9hC,MAAA,GAAAA,MAAA,UAAAuiC,EAAAp6B,YAMAnI,MAAA,GAAAA,MAAA,UAAAuiC,EAAAp6B,YAMGnI,MAAA,GAAAA,MAAA,WAAAuiC,EAAAT,YAWH9hC,MAAA,GAAAA,MAAA,WAAAuiC,EAAAT,YAUA9hC,MAAA,GAAAA,MAAA,WAAAuiC,EAAAT,YAAAvjB,EAAAklB,qBAOAzjC,MAAA,GAAAA,MAAA,WAAAuiC,EAAAT,oCA9FT9hC,MAAA,GACEA,MAAA,EAAA0jC,GAAA,wBAuLF1jC,kDA0BQA,MAAA,WAIEA,MAAA,yBAAA2jC,EAAA3jC,MAAA4jC,GAAA36B,UAAA46B,EAAA7jC,MAAA,UAASA,MAAA6jC,EAAA16B,gBAAAw6B,EAAAtoC,UAAgC,GASzC2E,MAAA,GACFA,yDAJEA,MAAA,eAAA8jC,EAAA9jC,CAAwB,gBAAA+jC,EAAA94B,QAAA5N,QALxB2C,MAAA,UAAA+jC,EAAA16B,mBAAAs6B,EAAAtoC,SAAA,mCAQA2E,MAAA,GAAAA,MAAA,IAAA2jC,EAAArlC,SAAA,6BAuBA0B,MAAA,aAIEA,MAAA,WACFA,mCAEEA,MAAA,GAMEA,MAAA,aACEA,MAAA,GACFA,QACFA,wEAHQA,MAAA,GAAAA,MAAA,UAAAgkC,EAAAz6B,eAAA06B,EAAAC,GAAA77B,OACJrI,MAAA,GAAAA,MAAA,IAAAgkC,EAAAz6B,eAAA06B,EAAAC,GAAAx6B,OAAA,gCAIF1J,MAAA,aACEA,MAAA,GACFA,wEAFMA,MAAA,UAAAmkC,EAAAv6B,iBAAAq6B,EAAAC,GAAA77B,OACJrI,MAAA,GAAAA,MAAA,IAAAmkC,EAAAv6B,iBAAAq6B,EAAAC,GAAAx6B,OAAA,gCAbN1J,MAAA,UACEA,MAAA,EAAAokC,GAAA,uBAUApkC,MAAA,EAAAqkC,GAAA,0BAAArkC,OAKFA,0CAdKA,MAAA,GAAAA,MAAA,OAAAskC,EAAAC,6BAAAD,EAAAn+B,eAAAC,OAAApG,CAGnB,WAAAwkC,iFAlBYxkC,MAAA,WAOEA,MAAA,EAAAykC,GAAA,eAMAzkC,MAAA,EAAA0kC,GAAA,eAiBF1kC,iEA3BEA,MAAA,UAAAA,MAAA,EAAAgd,GAAA2nB,EAAAt7B,oBAAA46B,EAAA5oC,WAKG2E,MAAA,GAAAA,MAAA,OAAAkkC,EAAA7oC,WAAA4oC,EAAA5oC,UAKI2E,MAAA,GAAAA,MAAA,OAAAkkC,EAAA7oC,WAAA4oC,EAAA5oC,qCAlBX2E,MAAA,WAKEA,MAAA,EAAA4kC,GAAA,aA+BA5kC,MAAA,WACEA,MAAA,GACFA,yDAnCAA,MAAA,UAAA6kC,EAAA,kCAGsB7kC,MAAA,GAAAA,MAAA,UAAA8kC,EAAA75B,SA+BpBjL,MAAA,GAAAA,MAAA,IAAAkkC,EAAA5lC,SAAA,+CAlFd0B,MAAA,YAGEA,MAAA,mBAAAA,MAAA+kC,GAAA,MAAAC,EAAAhlC,QAAA,OAASA,MAAAglC,EAAAC,aAAY,GAErBjlC,MAAA,YAEEA,MAAA,iBAAA2O,GAAA,OAASA,EAAA2yB,iBAAwB,GAEjCthC,MAAA,WAAAA,CAAoD,WACTA,MAAA,kBAAYA,QACrDA,MAAA,eAA+CA,MAAA,mBAAAA,MAAA+kC,GAAA,MAAAG,EAAAllC,QAAA,OAASA,MAAAklC,EAAAD,aAAY,GAClEjlC,MAAA,UACFA,UAEFA,MAAA,WAAAA,CAEC,aAFDA,CAEC,aAFDA,CAEC,SAIOA,MAAA,GAAAmlC,GAAA,aAeAnlC,MAAA,YAIEA,MAAA,yDACFA,YAGJA,MAAA,YACEA,MAAA,GAAAolC,GAAA,aAwCFplC,wCA/DyBA,MAAA,IAAAA,MAAA,UAAA0N,EAAAzC,SAwBDjL,MAAA,GAAAA,MAAA,UAAA0N,EAAAzC,mDA8ChCjL,MAAA,YAGEA,MAAA,mBAAAA,MAAAqlC,GAAA,MAAAC,EAAAtlC,QAAA,OAASA,MAAAslC,EAAAC,qBAAoB,GAE7BvlC,MAAA,YAEEA,MAAA,iBAAA2O,GAAA,OAASA,EAAA2yB,iBAAwB,GAEjCthC,MAAA,WAAAA,CAA8D,WACnBA,MAAA,sBAAgBA,QACzDA,MAAA,eAEEA,MAAA,mBAAAA,MAAAqlC,GAAA,MAAAG,EAAAxlC,QAAA,OAASA,MAAAwlC,EAAAD,qBAAoB,GAE7BvlC,MAAA,UACFA,UAEFA,MAAA,YACEA,MAAA,yBACFA,oCADoBA,MAAA,GAAAA,MAAA,WAAAoJ,EAAAq8B,0BCzTjB,IAAMC,GAAmB,MAA1B,MAAOA,EAeXnoC,YACUuJ,EACAC,GADArJ,KAAAoJ,gBACApJ,KAAAqJ,SAfVrJ,KAAAioC,YAA+B,GAC/BjoC,KAAAuN,QAAoB,GACpBvN,KAAA2L,kBAAmC,KACnC3L,KAAAwN,QAAmB,GACnBxN,KAAA8D,SAAmB,EACnB9D,KAAAkoC,aAAuB,EAEvBloC,KAAAyI,eAAiBA,KACjBzI,KAAA+lC,qBAA+B,EAC/B/lC,KAAAmoC,qBAA+B,EAC/BnoC,KAAA+nC,wBAAkC,EAClC/nC,KAAAooC,kBAA4B,EAqD5BpoC,KAAAqoC,cAA4B,CAC1B5lB,KAAK,EACLnB,MAAM,EACNG,WAAW,EACXC,WAAW,EACXC,UAAU,EAEVgB,SAAU,IAEVJ,WAAY,CACV,EAAG,CAAEnB,MAAO,GACZ,IAAK,CAAEA,MAAO,GACd,IAAM,CAAEA,MAAO,IA5DhB,CAEH7X,WACEvJ,KAAKoJ,cAAc9E,oBAAoBwD,UAAU,CAC/CP,KAAOkC,IAGDA,EACFzJ,KAAKioC,YAAcjoC,KAAKsoC,sBAAsB7+B,GAG9CzJ,KAAKqJ,OAAOM,MAAMF,EAAQ,EAG9BE,MAAQC,IACN5J,KAAKqJ,OAAOM,MAAMC,EAAID,MAAMlD,QAAO,GAGzC,CAGA8hC,kBAAkB73B,GACZA,QAAiC2B,IAAxB3B,EAAMwR,gBACjBliB,KAAKooC,kBAAoB13B,EAAMwR,cAGnC,CAEAsmB,WACExoC,KAAKoJ,cAAc9E,oBAAoBwD,UAAU,CAC/CP,KAAOkC,IACLzJ,KAAKioC,YAAcjoC,KAAKsoC,sBAAsB7+B,EAAQ,EAExDE,MAAQA,IACN3J,KAAKqJ,OAAOM,MAAM,4LAAqC,GAG7D,CAGQ2+B,sBAAsBz1B,GAC5B,MAAO,IAAIA,GAASpE,KAAK,CAACC,EAAGC,KAC3B,MAAM85B,EAAQ,IAAIt+B,KAAKuE,EAAExE,WAAWklB,UAEpC,OADc,IAAIjlB,KAAKwE,EAAEzE,WAAWklB,UACrBqZ,GAEnB,CAkBApD,UAAU1oC,GACRqD,KAAK8D,SAAWnH,EAChBqD,KAAKkoC,aAAc,EAGnB,MAAMx+B,EAAS1J,KAAKioC,YAAY74B,KAAM0D,GAAMA,EAAEnO,WAAahI,GACvD+M,GACF1J,KAAKuN,QAAU7D,EAAO6D,SAAW,GACjCvN,KAAKwN,QAAU9D,EAAO8D,SAAW,GACjCxN,KAAK6mC,2BAA6Bn9B,EAAOM,iBAEzChK,KAAKuN,QAAU,GACfvN,KAAKwN,QAAU,GACfxN,KAAK6mC,gCAA6Bx0B,EAEtC,CAEAk1B,aACEvnC,KAAKkoC,aAAc,EACnBloC,KAAK8D,SAAW,EAChB9D,KAAK2L,kBAAoB,KACzB3L,KAAKuN,QAAU,GACfvN,KAAKwN,QAAU,EACjB,CAEA3B,eAAeqD,EAAiBC,GAC9B,GAAID,EAAQvR,WAAawR,EAAQxR,SAC/B,MAAO,CAAEqO,OAAQ,MAAOrB,MAAO,iBAGjC,MAAMmD,EAAQ9N,KAAKwN,QAAQ4B,KACxBC,GACEA,EAAEC,cAAgBJ,EAAQtO,UACzByO,EAAEE,cAAgBJ,EAAQvO,UAC3ByO,EAAEC,cAAgBH,EAAQvO,UACzByO,EAAEE,cAAgBL,EAAQtO,UAGhC,IAAKkN,EACH,MAAO,CAAE9B,OAAQ,IAAKrB,MAAO,iBAG/B,MAAM6E,EACJ1B,EAAMwB,cAAgBJ,EAAQtO,SAAWkN,EAAMC,OAASD,EAAME,OAC1DyB,EACJ3B,EAAMyB,cAAgBJ,EAAQvO,SAAWkN,EAAME,OAASF,EAAMC,OAEhE,IAAI2B,EAAa,aACjB,OAAIF,EAAeC,EACjBC,EAAa,2BACJF,EAAeC,EACxBC,EAAa,yBACJF,IAAiBC,GAAiC,IAAjBD,IAC1CE,EAAa,6BAGR,CAAE1D,OAAQ,GAAGwD,OAAkBC,IAAgB9E,MAAO+E,EAC/D,CAEAxD,iBAAiBgD,EAAiBC,GAChC,GAAID,EAAQvR,WAAawR,EAAQxR,SAC/B,MAAO,CAAEqO,OAAQ,MAAOrB,MAAO,iBAEjC,MAAMmD,EAAQ9N,KAAKwN,QAAQ4B,KACxBC,GACEA,EAAEC,cAAgBJ,EAAQtO,UACzByO,EAAEE,cAAgBJ,EAAQvO,UAC3ByO,EAAEC,cAAgBH,EAAQvO,UACzByO,EAAEE,cAAgBL,EAAQtO,UAEhC,IAAKkN,EACH,MAAO,CAAE9B,OAAQ,IAAKrB,MAAO,iBAE/B,MAAM6E,EACJ1B,EAAMwB,cAAgBJ,EAAQtO,SAAWkN,EAAMC,OAASD,EAAME,OAC1DyB,EACJ3B,EAAMyB,cAAgBJ,EAAQvO,SAAWkN,EAAME,OAASF,EAAMC,OAChE,OAAIyB,EAAeC,EACV,CAAEzD,OAAQ,qBAAOrB,MAAO,4BACtB6E,EAAeC,EACjB,CAAEzD,OAAQ,iCAASrB,MAAO,0BACxB6E,IAAiBC,GAAiC,IAAjBD,EACnC,CAAExD,OAAQ,iCAASrB,MAAO,6BAE5B,CAAEqB,OAAQ,IAAKrB,MAAO,gBAC/B,CAEAc,gBAAgB9N,GACdqC,KAAK2L,kBACH3L,KAAK2L,oBAAsBhO,EAAW,KAAOA,CACjD,CAEA+qC,wBACE1oC,KAAK+lC,qBAAuB/lC,KAAK+lC,mBACnC,CAEAhB,kBAAkBpgC,GAChB3E,KAAK+nC,wBAA0BpjC,EAC/B3E,KAAKmoC,qBAAsB,CAC7B,CAEAN,qBACE7nC,KAAKmoC,qBAAsB,CAC7B,CAGA13B,eAAeC,GACb,MAAMC,EAAQC,SAASC,cAAc,SACjCF,IAAUA,EAAMG,SAASJ,EAAMK,SAAmB/Q,KAAKkoC,cACzDloC,KAAK2L,kBAAoB,KAE7B,CAGAg9B,2BAA2Bj/B,GACzB,OAAOA,GAAQM,cACjB,CAGAi7B,iBAAiBtgC,GACf,MAAM+E,EAAS1J,KAAKioC,YAAY74B,KAAM0D,GAAMA,EAAEnO,WAAaA,GAC3D,IAAK+E,EAAQ,MAAO,GAGpB,GAA0B,IAAtBA,EAAO06B,WACT,OAAO16B,EAAO8D,SAAW,GAI3B,MAAMo7B,EAAsB,GAC5B,OAAIl/B,EAAO8D,SACTo7B,EAAWt6B,QAAQ5E,EAAO8D,SAExB9D,EAAOqJ,iBACT61B,EAAWt6B,QAAQ5E,EAAOqJ,iBAErB61B,CACT,CAGAC,iBACE35B,EACAC,EACAnF,GAEA,OAAIA,IAAmBvB,KAAeE,QAC7B3I,KAAKkM,iBAAiBgD,EAASC,GAEjCnP,KAAK6L,eAAeqD,EAASC,EACtC,CAGAq1B,gBACExkC,KAAK8oC,aAAaloB,MACpB,CAEA6jB,YACEzkC,KAAK8oC,aAAavhC,MACpB,CAGAm9B,eACE,OAAgC,IAA5B1kC,KAAKioC,YAAYtoC,QACa,IAA3BK,KAAKooC,iBACd,CAGAzD,cACE,OAAgC,IAA5B3kC,KAAKioC,YAAYtoC,QACdK,KAAKooC,mBAAqBpoC,KAAKioC,YAAYtoC,OAAS,CAC7D,iDA5PWqoC,GAAmB1lC,MAAAC,KAAAD,MAAAE,MAAA,oCAAnBwlC,EAAmBp9B,UAAA,sBAAAm+B,UAAA,SAAA99B,EAAAC,MAAA,EAAAD,uIAAnBC,EAAAuF,eAAAQ,EAAsB,KAAA3O,osJDhBnCA,MAAA,UAAAA,CAAkB,UAC2CA,MAAA,iBAAWA,QAGtEA,MAAA,EAAA0mC,GAAA,aAiBA1mC,MAAA,wBAGEA,MAAA,mBAAA2O,GAAA,OAAW/F,EAAAq9B,kBAAAt3B,EAAyB,EAApC3O,CAAqC,gCAAA4I,EAAAk9B,kBACF,CAAC,EADpC9lC,CAAqC,mBAAA2O,GAAA,OAE1B/F,EAAAq9B,kBAAAt3B,EAAyB,GAGpC3O,MAAA,EAAA2mC,GAAA,sBAyLF3mC,UAIFA,MAAA,EAAA4mC,GAAA,cA4FA5mC,MAAA,EAAA6mC,GAAA,oBAlT+C7mC,MAAA,GAAAA,MAAA,OAAA4I,EAAA+8B,YAAAtoC,OAAA,GAkB3C2C,MAAA,GAAAA,MAAA,UAAA4I,EAAAm9B,eAOiC/lC,MAAA,GAAAA,MAAA,UAAA4I,EAAA+8B,aA8LlC3lC,MAAA,GAAAA,MAAA,OAAA4I,EAAAg9B,aA4FA5lC,MAAA,GAAAA,MAAA,OAAA4I,EAAAi9B,2kECvSUH,CAAmB,8CCgBxB1lC,MAAA,YACEA,MAAA,YACFA,QACAA,MAAA,WAAAA,CAAyB,UAIrBA,MAAA,mBAAAA,MAAA8mC,GAAA,MAAAC,EAAA/mC,QAAAiJ,UAAAC,EAAAlJ,QAAA,OAASA,MAAAkJ,EAAA65B,UAAAgE,GAAgB,GAC1B/mC,4CAPIA,MAAA,GAAAA,MAAA,MAAA+mC,EAAA/mC,+BAHXA,MAAA,GACEA,MAAA,EAAAgnC,GAAA,sBAYFhnC,kDAUIA,MAAA,YACEA,MAAA,YACFA,QACAA,MAAA,WAAAA,CAAyB,UAIrBA,MAAA,mBAAAA,MAAAinC,GAAA,MAAAC,EAAAlnC,QAAAiJ,UAAAy5B,EAAA1iC,QAAA,OAASA,MAAA0iC,EAAAK,UAAAmE,GAAe,GACzBlnC,4CAPIA,MAAA,GAAAA,MAAA,MAAAknC,EAAAlnC,+BAHXA,MAAA,GACEA,MAAA,EAAAmnC,GAAA,sBAYFnnC,kDAUIA,MAAA,YAGEA,MAAA,YACFA,QACAA,MAAA,WAAAA,CAAyB,UAIrBA,MAAA,mBAAAA,MAAAonC,GAAA,MAAAC,EAAArnC,QAAAiJ,UAAAq+B,EAAAtnC,QAAA,OAASA,MAAAsnC,EAAAvE,UAAAsE,GAAkB,GAC5BrnC,4CAPIA,MAAA,GAAAA,MAAA,MAAAqnC,EAAArnC,+BALXA,MAAA,GACEA,MAAA,EAAAunC,GAAA,sBAcFvnC,kDAIFA,MAAA,YAGEA,MAAA,mBAAAA,MAAAwnC,GAAA,MAAAC,EAAAznC,QAAA,OAASA,MAAAynC,EAAAxC,aAAY,GAErBjlC,MAAA,WAAAA,CAAsB,YAIlBA,MAAA,iBAAA2O,GAAA,OAASA,EAAA2yB,iBAAwB,GAHnCthC,oCACEA,MAAA,GAAAA,MAAA,MAAA0N,EAAAg6B,cAAA1nC,iDAONA,MAAA,YAGEA,MAAA,mBAAAA,MAAAmhC,GAAA,MAAAC,EAAAphC,QAAA,OAASA,MAAAohC,EAAA6D,aAAY,GAErBjlC,MAAA,WAAAA,CAAsB,YAIlBA,MAAA,iBAAA2O,GAAA,OAASA,EAAA2yB,iBAAwB,GAHnCthC,aCvGC,IAAM2nC,GAAuB,MAA9B,MAAOA,EALbpqC,cAMEG,KAAAkqC,WAAuB,CACrB,oCACA,oCACA,oCACA,oCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,qCACA,oCACA,oCACA,oCACA,qCACA,oCACA,oCACA,qCACA,qCACA,qCACA,sCAEFlqC,KAAAmqC,UAAsB,CACpB,oCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,mCACA,oCACA,oCACA,qCAEFnqC,KAAAoqC,SAAqB,CACnB,iCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,iCACA,iCACA,kCAGFpqC,KAAAgqC,cAA+B,KAC/BhqC,KAAAkoC,aAAc,EACdloC,KAAAqqC,gBAAiB,EAGjBrqC,KAAAqoC,cAA4B,CAC1B/mB,MAAM,EACNG,WAAW,EACXC,WAAW,EACXC,UAAU,EACVV,MAAM,EACN0B,SAAU,IACVD,QAAS,CAAC,GAAI,IACdH,WAAY,CACV,EAAG,CACDnB,MAAO,GAET,IAAK,CACHA,MAAO,GAET,IAAK,CACHA,MAAO,GAET,IAAK,CACHA,MAAO,KAGXqB,KAAK,GAxBPlZ,WAAkB,CA2BlB87B,UAAUiF,GACRtqC,KAAKgqC,cAAgBM,EACrBtqC,KAAKkoC,aAAc,CACrB,CACAqC,UACEvqC,KAAKqqC,gBAAiB,CACxB,CAEA9C,aACEvnC,KAAKkoC,aAAc,EACnBloC,KAAKqqC,gBAAiB,EACtBrqC,KAAKgqC,cAAgB,IACvB,iDAtGWC,EAAuB,oCAAvBA,EAAuBr/B,UAAA,0BAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,8nCAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IDRpC3I,MAAA,UAAAA,CAA+B,UAA/BA,CAA+B,UAGzBA,MAAA,oSACAA,MAAA,SAKEA,MAAA,mDACFA,QACAA,MAAA,oGACFA,QAEAA,MAAA,UACEA,MAAA,8MACAA,MAAA,YAEEA,MAAA,0BAAS4I,EAAAq/B,SAAS,GAElBjoC,MAAA,oDACFA,YAKJA,MAAA,WAAAA,CAAmC,WAC0BA,MAAA,kBAAWA,UAExEA,MAAA,uBACEA,MAAA,GAAAkoC,GAAA,sBAcFloC,QAGAA,MAAA,WAAAA,CAAmC,WAC2BA,MAAA,iBAAUA,UAExEA,MAAA,uBACEA,MAAA,GAAAmoC,GAAA,sBAcFnoC,QAGAA,MAAA,WAAAA,CAAmC,WAC2BA,MAAA,eAAQA,UAEtEA,MAAA,uBACEA,MAAA,GAAAooC,GAAA,sBAgBFpoC,QAGAA,MAAA,GAAAqoC,GAAA,cAcAroC,MAAA,GAAAsoC,GAAA,cAaFtoC,eAzFkBA,MAAA,IAAAA,MAAA,UAAA4I,EAAAm9B,eACkB/lC,MAAA,GAAAA,MAAA,UAAA4I,EAAAg/B,YAoBlB5nC,MAAA,GAAAA,MAAA,UAAA4I,EAAAm9B,eACiB/lC,MAAA,GAAAA,MAAA,UAAA4I,EAAAi/B,WAoBjB7nC,MAAA,GAAAA,MAAA,UAAA4I,EAAAm9B,eACoB/lC,MAAA,GAAAA,MAAA,UAAA4I,EAAAk/B,UAoBjC9nC,MAAA,GAAAA,MAAA,OAAA4I,EAAAg9B,aAcA5lC,MAAA,GAAAA,MAAA,OAAA4I,EAAAm/B,qMClGQJ,CAAuB,+FCsBhC3nC,MAAA,YAKEA,MAAA,YAGAA,MAAA,aAA8BA,MAAA,4EAAeA,qCAczCA,MAAA,WAAAA,CAA2D,WAA3DA,CAA2D,UAIpCA,MAAA,GAAqBA,QACxCA,MAAA,UACEA,MAAA,mBACFA,4CAHmBA,MAAA,GAAAA,MAAAuoC,EAAA/nC,SAEjBR,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAAuoC,EAAAC,OAAA,qDAKNxoC,MAAA,WAAAA,CAA4D,WAA5DA,CAA4D,UAIrCA,MAAA,GAAqBA,QACxCA,MAAA,UACEA,MAAA,mBACFA,4CAHmBA,MAAA,GAAAA,MAAAuoC,EAAA/nC,SAEjBR,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAAuoC,EAAAC,OAAA,qDAnBRxoC,MAAA,YAEEA,MAAA,EAAAyoC,GAAA,cAWAzoC,MAAA,EAAA0oC,GAAA,cAUF1oC,kCArBQA,MAAA,GAAAA,MAAA,QAAAuoC,EAAAnrC,aAWA4C,MAAA,GAAAA,MAAA,OAAAuoC,EAAAnrC,wCAdV4C,MAAA,SACEA,MAAA,EAAA2oC,GAAA,cAwBF3oC,+BAxB2BA,MAAA,GAAAA,MAAA,UAAA0N,EAAA1Q,qCAiCvBgD,MAAA,WAAAA,CAA2D,WAA3DA,CAA2D,UAIpCA,MAAA,GAAqBA,QACxCA,MAAA,UACEA,MAAA,mBACFA,4CAHmBA,MAAA,GAAAA,MAAA4oC,EAAApoC,SAEjBR,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAA4oC,EAAAJ,OAAA,qDAKNxoC,MAAA,WAAAA,CAA4D,WAA5DA,CAA4D,UAIrCA,MAAA,GAAqBA,QACxCA,MAAA,UACEA,MAAA,mBACFA,4CAHmBA,MAAA,GAAAA,MAAA4oC,EAAApoC,SAEjBR,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAA4oC,EAAAJ,OAAA,qDAtBRxoC,MAAA,YAKEA,MAAA,EAAA6oC,GAAA,cAWA7oC,MAAA,EAAA8oC,GAAA,cAUF9oC,kCArBQA,MAAA,GAAAA,MAAA,QAAA4oC,EAAAxrC,aAWA4C,MAAA,GAAAA,MAAA,OAAA4oC,EAAAxrC,wCAjBV4C,MAAA,SACEA,MAAA,EAAA+oC,GAAA,cA2BF/oC,+BA1BwBA,MAAA,GAAAA,MAAA,UAAAoJ,EAAA4/B,6CA6BxBhpC,MAAA,WAAAA,CAGC,YAEGA,MAAA,GACFA,QACAA,MAAA,YACEA,MAAA,oLACFA,iCAJEA,MAAA,GAAAA,MAAA,0CAAAuK,EAAA0+B,eAAA,+LAvENjpC,MAAA,eAOEA,MAAA,EAAAkpC,GAAA,cA4BAlpC,MAAA,EAAAmpC,GAAA,cA+BAnpC,MAAA,EAAAopC,GAAA,cAWFppC,8BAtEQA,MAAA,GAAAA,MAAA,QAAAyP,EAAAw5B,gBA4BAjpC,MAAA,GAAAA,MAAA,OAAAyP,EAAAw5B,gBAgCHjpC,MAAA,GAAAA,MAAA,WAAAyP,EAAA45B,gBAAAhsC,SAAAoS,EAAAkU,YC1FF,IAAM2lB,GAAoB,MAA3B,MAAOA,EAQX/rC,YACUgsC,EACAC,EACAziC,EACA0iC,GAHA/rC,KAAA6rC,iBACA7rC,KAAA8rC,yBACA9rC,KAAAqJ,SACArJ,KAAA+rC,MAXV/rC,KAAAV,SAAsB,GACtBU,KAAAsrC,iBAAyC,GACzCtrC,KAAAgsC,WAAqB,GACrBhsC,KAAAurC,gBAA0B,EAC1BvrC,KAAAimB,WAAqB,CAQlB,CAEH1c,WACEvJ,KAAKisC,cACP,CAEAC,qBACElsC,KAAK+rC,IAAII,gBACTnsC,KAAKosC,gBACP,CAEAH,eACEjsC,KAAKimB,WAAY,EAEbjmB,KAAKurC,eACPvrC,KAAKqsC,uBAELrsC,KAAKssC,sBAET,CAEQA,uBACNtsC,KAAK6rC,eAAe9oC,oBAAoB+E,UAAU,CAChDP,KAAOkC,IACLzJ,KAAKimB,WAAY,EACbxc,GAAYA,EAASnK,UACvBU,KAAKV,SAAWmK,EAASnK,SACtBC,OAAQkH,IAAaA,EAAQ8lC,WAC7B99B,KACC,CAACC,EAAGC,IACF,IAAIxE,KAAKuE,EAAEo8B,QAAQ1b,UAAY,IAAIjlB,KAAKwE,EAAEm8B,QAAQ1b,WAExDpvB,KAAK+rC,IAAII,iBAETnsC,KAAKqJ,OAAOmjC,KAAK,+HAA0B,EAG/C7iC,MAAQC,IACN5J,KAAKimB,WAAY,EACjBjmB,KAAKqJ,OAAOM,MAAM,gLAAmC,GAG3D,CAEQ0iC,uBACNrsC,KAAK8rC,uBAAuB/oC,kBAAkB,GAAG+E,UAAU,CACzDP,KAAOkC,IACLzJ,KAAKimB,WAAY,EACbxc,GAAYA,EAASnK,UACvBU,KAAKsrC,iBAAmB7hC,EAASnK,SAASmP,KACxC,CAACC,EAAGC,IACF,IAAIxE,KAAKuE,EAAEo8B,QAAQ1b,UAAY,IAAIjlB,KAAKwE,EAAEm8B,QAAQ1b,WAEtDpvB,KAAK+rC,IAAII,iBAETnsC,KAAKqJ,OAAOmjC,KAAK,yHAAyB,EAG9C7iC,MAAQC,IACN5J,KAAKimB,WAAY,EACjBjmB,KAAKqJ,OAAOM,MAAM,0KAAkC,GAG1D,CAEAnD,cACOxG,KAAKgsC,WAAWS,OAKjBzsC,KAAKurC,eACPvrC,KAAK0sC,sBAEL1sC,KAAK2sC,sBAPL3sC,KAAKqJ,OAAOujC,QAAQ,qGASxB,CAEQD,sBACN3sC,KAAK6rC,eAAerlC,YAAYxG,KAAKgsC,YAAYlkC,UAAU,CACzDP,KAAOkC,IACDA,EAASojC,SACX7sC,KAAKqJ,OAAOwjC,QAAQ,qIACpB7sC,KAAKgsC,WAAa,GAClBhsC,KAAKisC,eACLjsC,KAAK+rC,IAAII,iBAETnsC,KAAKqJ,OAAOM,MAAMF,EAAShD,SAAW,0IAA2B,EAGrEkD,MAAQC,IACN5J,KAAKqJ,OAAOM,MAAM,4LAAqC,GAG7D,CAEQ+iC,sBACN1sC,KAAK8rC,uBACFjpC,mBAAmB,EAAG7C,KAAKgsC,YAC3BlkC,UAAU,CACTP,KAAOkC,IACDA,EAASojC,SACX7sC,KAAKqJ,OAAOwjC,QAAQ,+HACpB7sC,KAAKgsC,WAAa,GAClBhsC,KAAKisC,eACLjsC,KAAK+rC,IAAII,iBAETnsC,KAAKqJ,OAAOM,MAAMF,EAAShD,SAAW,oIAA0B,EAGpEkD,MAAQC,IACN5J,KAAKqJ,OAAOM,MAAM,sLAAoC,GAG9D,CAEAmjC,oBACE9sC,KAAKurC,gBAAkBvrC,KAAKurC,eAC5BvrC,KAAKV,SAAW,GAChBU,KAAKsrC,iBAAmB,GACxBtrC,KAAKgsC,WAAa,GAClBhsC,KAAKisC,cACP,CAEA,mBAAIN,GACF,OAAO3rC,KAAKurC,eAAiBvrC,KAAKsrC,iBAAmBtrC,KAAKV,QAC5D,CAEA,oBAAIytC,GACF,OAAO/sC,KAAKurC,eAAiB,0DAAe,+DAC9C,CAEA,oBAAIyB,GACF,OAAOhtC,KAAKurC,eACR,mIACA,4HACN,CAEQa,iBACN,GAAIpsC,KAAKitC,kBAAmB,CAC1B,MAAMC,EAAYltC,KAAKitC,kBAAkBjP,cACzCkP,EAAUC,UAAYD,EAAUE,aAEpC,iDA5JWxB,GAAoBtpC,MAAAC,MAAAD,MAAAE,MAAAF,MAAAgE,MAAAhE,aAAA,oCAApBspC,EAAoBhhC,UAAA,uBAAAm+B,UAAA,SAAA99B,EAAAC,MAAA,EAAAD,irFDnBjC3I,MAAA,UAAAA,CAA4D,UAA5DA,CAA4D,UAA5DA,CAA4D,UAA5DA,CAA4D,UAA5DA,CAA4D,UAA5DA,CAA4D,YAA5DA,CAA4D,aAa5CA,MAAA,2BAAU4I,EAAA4hC,mBAAmB,GAH/BxqC,QAKAA,MAAA,YACFA,QACAA,MAAA,YAAoCA,MAAA,+BAAIA,YAG5CA,MAAA,gBACEA,MAAA,0BAAS4I,EAAA4hC,mBAAmB,GAG5BxqC,MAAA,IACFA,YAKJA,MAAA,GAAA+qC,GAAA,cAYA/qC,MAAA,GAAAgrC,GAAA,cAgFAhrC,MAAA,YAAAA,CAEC,cACOA,MAAA,6BAAY4I,EAAA1E,aAAa,GAC7BlE,MAAA,eAEEA,MAAA,yBAAA2O,GAAA,OAAA/F,EAAA8gC,WAAA/6B,CAAA,GAFF3O,QASAA,MAAA,gBAKEA,MAAA,uCACFA,uBAjIQA,MAAA,GAAAA,MAAA,UAAA4I,EAAAqgC,gBAYNjpC,MAAA,GAAAA,MAAA,IAAA4I,EAAA8hC,iBAAA,KAOH1qC,MAAA,GAAAA,MAAA,OAAA4I,EAAA+a,WAYA3jB,MAAA,GAAAA,MAAA,QAAA4I,EAAA+a,WAqFG3jB,MAAA,GAAAA,MAAA,UAAA4I,EAAA8gC,WAAA1pC,CAAwB,cAAA4I,EAAAqgC,eAAA,mLAUxBjpC,MAAA,GAAAA,MAAA,YAAA4I,EAAA8gC,WAAAS,m3DCvHGb,CAAoB,qDC8B3BtpC,MAAA,YACEA,MAAA,YACFA,mCAOEA,MAAA,WAAAA,CAGC,WAHDA,CAGC,WAIKA,MAAA,GACFA,QACAA,MAAA,WAAAA,CAAoC,UAYhCA,MAAA,GACFA,QACAA,MAAA,aAaFA,UAIFA,MAAA,WAAAA,CAA+C,YAE3CA,MAAA,IAEFA,QACAA,MAAA,YAAAA,CAAyC,cAEpCA,MAAA,IAAuBA,QAE1BA,MAAA,cACGA,MAAA,IAAyBA,QAE5BA,MAAA,cACGA,MAAA,IAAwBA,mDA9C3BA,MAAA,GAAAA,MAAA,IAAA8S,EAAAxU,SAAA,KAIE0B,MAAA,GAAAA,MAAA,iBAAA4S,EAAAq4B,yBAAAn4B,EAAAzX,UAAA,EAAA2E,CAEC,eAAA4S,EAAAq4B,yBAAAn4B,EAAAzX,UAAA,EAFD2E,CAEC,sBAAA4S,EAAAq4B,yBAAAn4B,EAAAzX,WAQD2E,MAAA,GAAAA,MAAA,IAAA4S,EAAAs4B,sBAAAp4B,EAAAzX,UAAA,KAGA2E,MAAA,GAAAA,MAAA,iBAAA4S,EAAAq4B,yBAAAn4B,EAAAzX,UAAA,EAAA2E,CAEC,eAAA4S,EAAAq4B,yBAAAn4B,EAAAzX,UAAA,EAFD2E,CAEC,sBAAA4S,EAAAq4B,yBAAAn4B,EAAAzX,WAgBH2E,MAAA,GAAAA,MAAA,IAAA8S,EAAAq4B,aAAA,mBAAAr4B,EAAAkC,QAAA2Q,QAAA,SAKG3lB,MAAA,GAAAA,MAAA,GAAA8S,EAAAs4B,UAAA,KAGAprC,MAAA,GAAAA,MAAA,GAAA8S,EAAAu4B,YAAA,KAGArrC,MAAA,GAAAA,MAAA,GAAA8S,EAAAw4B,WAAA,gCAzDXtrC,MAAA,YAIEA,MAAA,EAAAurC,GAAA,gBA0DFvrC,+BAzDuBA,MAAA,GAAAA,MAAA,UAAAoJ,EAAA6B,iCA4DvBjL,MAAA,WAAAA,CAGC,SAC0BA,MAAA,sBAAgBA,qCAnF7CA,MAAA,QAAAA,CAAqC,UAArCA,CAAqC,UAEiBA,MAAA,aAAOA,QACzDA,MAAA,SACEA,MAAA,sDACFA,UAIFA,MAAA,EAAAwrC,GAAA,cAKAxrC,MAAA,EAAAyrC,GAAA,cAiEAzrC,MAAA,EAAA0rC,GAAA,cAMF1rC,8BA5EQA,MAAA,GAAAA,MAAA,OAAA2G,EAAAglC,kBAMH3rC,MAAA,GAAAA,MAAA,QAAA2G,EAAAglC,kBAiEA3rC,MAAA,GAAAA,MAAA,QAAA2G,EAAAglC,kBAAA,IAAAhlC,EAAAsE,QAAA5N,mCAsCK2C,MAAA,eAIEA,MAAA,GACFA,kCAHEA,MAAA,UAAA4rC,EAAAvwC,UAEA2E,MAAA,GAAAA,MAAA,IAAA4rC,EAAAttC,SAAA,gCAcF0B,MAAA,eAIEA,MAAA,GACFA,kCAHEA,MAAA,UAAA6rC,EAAAxwC,UAEA2E,MAAA,GAAAA,MAAA,IAAA6rC,EAAAvtC,SAAA,6BAgBV0B,MAAA,YACEA,MAAA,YACFA,mCAsBMA,MAAA,UAAAA,CAGC,WAEGA,MAAA,mBACFA,QACAA,MAAA,WACEA,MAAA,GACFA,QACAA,MAAA,UAAAA,CAA4B,aAExBA,MAAA,GACFA,UAEFA,MAAA,WACEA,MAAA,IACFA,QACAA,MAAA,WAAAA,CAA4B,cASxBA,MAAA,IACFA,sCAvBAA,MAAA,GAAAA,MAAA,IAAAA,MAAA,KAAA8rC,EAAAC,SAAA,kBAGA/rC,MAAA,GAAAA,MAAA,IAAA8rC,EAAA9+B,YAAA,KAIEhN,MAAA,GAAAA,MAAA,IAAA8rC,EAAA5+B,aAAA,MAAA4+B,EAAA3+B,aAAA,KAIFnN,MAAA,GAAAA,MAAA,IAAA8rC,EAAA7+B,YAAA,KAIEjN,MAAA,GAAAA,MAAA,iBAAA8rC,EAAAE,SAAAF,EAAA9+B,aAAA8+B,EAAAE,SAAAF,EAAA7+B,YAAAjN,CAGC,2BAAA8rC,EAAAE,QAIDhsC,MAAA,GAAAA,MAAA,IAAA8rC,EAAAE,OAAA,gCA9CZhsC,MAAA,WAAAA,CAGC,aAHDA,CAGC,aAHDA,CAGC,UAHDA,CAGC,WAIuBA,MAAA,UAAIA,QACpBA,MAAA,WACEA,MAAA,GACFA,QACAA,MAAA,WAAgBA,MAAA,WAAKA,QACrBA,MAAA,YACEA,MAAA,IACFA,QACAA,MAAA,YAAgBA,MAAA,aAAMA,YAG1BA,MAAA,YACEA,MAAA,GAAAisC,GAAA,eA+BFjsC,mCAzCMA,MAAA,GAAAA,MAAA,IAAAoK,EAAA8hC,WAAArxC,UAAA,kCAIAmF,MAAA,GAAAA,MAAA,IAAAoK,EAAA8hC,WAAArxC,UAAA,2BAOgBmF,MAAA,GAAAA,MAAA,UAAAoK,EAAA+hC,iEAgDtBnsC,MAAA,YAAAA,CAGC,eAOGA,MAAA,yBAAAosC,EAAApsC,MAAAqsC,GAAA9/B,MAAA+/B,EAAAtsC,MAAA,UAASA,MAAAssC,EAAAC,WAAAH,EAAe,GAAE,GAE1BpsC,MAAA,GACFA,6CAPEA,MAAA,GAAAA,MAAA,cAAAsnC,EAAAkF,cAAAJ,EAAA,EAAApsC,CAA2C,cAAAsnC,EAAAkF,cAAAJ,EAAA,EAA3CpsC,CAA2C,oBAAAsnC,EAAAkF,cAAAJ,EAAA,EAA3CpsC,CAA2C,oBAAAsnC,EAAAkF,cAAAJ,EAAA,GAM3CpsC,MAAA,GAAAA,MAAA,IAAAosC,EAAA,+EAzBRpsC,MAAA,WAAAA,CAGC,WAHDA,CAGC,eAKKA,MAAA,mBAAAA,MAAAysC,GAAA,MAAAC,EAAA1sC,MAAA,UAASA,MAAA0sC,EAAAH,WAAAG,EAAAF,YAAyB,GAAE,GAEpCxsC,MAAA,gBACFA,QAEAA,MAAA,EAAA2sC,GAAA,eAgBA3sC,MAAA,eAGEA,MAAA,mBAAAA,MAAAysC,GAAA,MAAArL,EAAAphC,MAAA,UAASA,MAAAohC,EAAAmL,WAAAnL,EAAAoL,YAAyB,GAAE,GAEpCxsC,MAAA,YACFA,qCA5BEA,MAAA,GAAAA,MAAA,eAAA4sC,EAAAJ,aAOiBxsC,MAAA,GAAAA,MAAA,UAAAA,MAAA,EAAAmK,IAAA5M,YAAAqvC,EAAAC,aAiBjB7sC,MAAA,GAAAA,MAAA,WAAA4sC,EAAAJ,cAAAI,EAAAC,uCAQN7sC,MAAA,YAIEA,MAAA,GAGFA,+BAHEA,MAAA,GAAAA,MAAA,aAAA0iC,EAAA8J,YAAA,GAAA9J,EAAAoK,aAAA,QAAApK,EAAA5xB,KAAAiV,IAAA2c,EAAA8J,YAAA9J,EAAAoK,aAAApK,EAAAqK,oBAAA1vC,QAAA,OAAAqlC,EAAAqK,oBAAA1vC,OAAA,qCAUA2C,MAAA,SAAmDA,MAAA,sBAAgBA,gCACnEA,MAAA,UACEA,MAAA,wBACFA,mCAPFA,MAAA,YAIEA,MAAA,EAAAgtC,GAAA,YACAhtC,MAAA,EAAAitC,GAAA,YAGFjtC,+BAJMA,MAAA,GAAAA,MAAA,QAAA+J,EAAAmjC,kBACAltC,MAAA,GAAAA,MAAA,OAAA+J,EAAAmjC,kBAAAnjC,EAAAojC,0DAtLRntC,MAAA,QAAAA,CAAqC,WAArCA,CAAqC,WAArCA,CAAqC,QAArCA,CAAqC,cAM1BA,MAAA,gBAAUA,QAEbA,MAAA,eACEA,MAAA,yBAAA2O,GAAA3O,MAAAotC,GAAA,MAAA7L,EAAAvhC,QAAA,OAAaA,MAAAuhC,EAAA2K,WAAAmB,WAAA1+B,EACrB,EADQ3O,CAAmC,2BAAAA,MAAAotC,GAAA,MAAAtI,EAAA9kC,QAAA,OAClBA,MAAA8kC,EAAAwI,iBAAgB,GAGjCttC,MAAA,eAAuCA,MAAA,cAAQA,QAC/CA,MAAA,eAAqCA,MAAA,YAAKA,QAC1CA,MAAA,gBAAyCA,MAAA,kBAAWA,QACpDA,MAAA,gBAAwCA,MAAA,gBAASA,QACjDA,MAAA,gBAAyCA,MAAA,iBAAUA,YAGvDA,MAAA,SAAAA,CAAK,eAEAA,MAAA,aAAMA,QAETA,MAAA,gBACEA,MAAA,yBAAA2O,GAAA3O,MAAAotC,GAAA,MAAAG,EAAAvtC,QAAA,OAAaA,MAAAutC,EAAArB,WAAArxC,UAAA8T,EACrB,EADQ3O,CAAkC,2BAAAA,MAAAotC,GAAA,MAAAI,EAAAxtC,QAAA,OACjBA,MAAAwtC,EAAAF,iBAAgB,GAGjCttC,MAAA,gBAAsBA,MAAA,kBAAWA,QACjCA,MAAA,GAAAytC,GAAA,iBAMFztC,UAEFA,MAAA,SAAAA,CAAK,eAEAA,MAAA,eAAQA,QAEXA,MAAA,gBACEA,MAAA,yBAAA2O,GAAA3O,MAAAotC,GAAA,MAAAvJ,EAAA7jC,QAAA,OAAaA,MAAA6jC,EAAAqI,WAAApxC,UAAA6T,EACrB,EADQ3O,CAAkC,2BAAAA,MAAAotC,GAAA,MAAAM,EAAA1tC,QAAA,OACjBA,MAAA0tC,EAAAJ,iBAAgB,GAGjCttC,MAAA,gBAAsBA,MAAA,kBAAWA,QACjCA,MAAA,GAAA2tC,GAAA,iBAMF3tC,YAGJA,MAAA,YAAAA,CAAsC,gBAGlCA,MAAA,mBAAAA,MAAAotC,GAAA,MAAAQ,EAAA5tC,QAAA,OAASA,MAAA4tC,EAAAC,eAAc,GAEvB7tC,MAAA,sBACFA,YAKJA,MAAA,GAAA8tC,GAAA,cAKA9tC,MAAA,GAAA+tC,GAAA,eAuDA/tC,MAAA,GAAAguC,GAAA,cAuCAhuC,MAAA,GAAAiuC,GAAA,cAUAjuC,MAAA,GAAAkuC,GAAA,cASFluC,gCAjLUA,MAAA,GAAAA,MAAA,UAAAyP,EAAAy8B,WAAAmB,YAIQrtC,MAAA,GAAAA,MAAA,UAAAyP,EAAA7V,WAAAK,SACA+F,MAAA,GAAAA,MAAA,UAAAyP,EAAA7V,WAAAC,OACAmG,MAAA,GAAAA,MAAA,UAAAyP,EAAA7V,WAAAE,WACAkG,MAAA,GAAAA,MAAA,UAAAyP,EAAA7V,WAAAG,UACAiG,MAAA,GAAAA,MAAA,UAAAyP,EAAA7V,WAAAI,WAQRgG,MAAA,GAAAA,MAAA,UAAAyP,EAAAy8B,WAAArxC,WAIQmF,MAAA,GAAAA,MAAA,aAEaA,MAAA,GAAAA,MAAA,UAAAyP,EAAAxE,SAYrBjL,MAAA,GAAAA,MAAA,UAAAyP,EAAAy8B,WAAApxC,WAIQkF,MAAA,GAAAA,MAAA,aAEaA,MAAA,GAAAA,MAAA,UAAAyP,EAAAxE,SAmBvBjL,MAAA,GAAAA,MAAA,OAAAyP,EAAA0+B,kBAMHnuC,MAAA,GAAAA,MAAA,SAAAyP,EAAA0+B,kBAAA1+B,EAAAy9B,kBAAAz9B,EAAA09B,iBAuDAntC,MAAA,GAAAA,MAAA,OAAAyP,EAAAo9B,WAAA,KAAAp9B,EAAAy9B,mBAAAz9B,EAAA09B,iBAuCAntC,MAAA,GAAAA,MAAA,QAAAyP,EAAAy9B,mBAAAz9B,EAAA09B,gBAUAntC,MAAA,GAAAA,MAAA,QAAAyP,EAAA0+B,kBAAA,IAAA1+B,EAAA08B,sBAAA9uC,gCAkBH2C,MAAA,YACEA,MAAA,YACFA,mCAiBMA,MAAA,UAAAA,CAGC,WAEGA,MAAA,mBACFA,QACAA,MAAA,WACEA,MAAA,GACFA,QACAA,MAAA,UAAAA,CAA6B,aAExBA,MAAA,GAAoDA,UAGzDA,MAAA,WACEA,MAAA,IACFA,oCAZEA,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAAouC,EAAAC,WAAA,kBAGAruC,MAAA,GAAAA,MAAA,IAAAouC,EAAAE,WAAA,KAIGtuC,MAAA,GAAAA,MAAA,GAAAouC,EAAAG,YAAA,MAAAH,EAAAI,WAAA,IAIHxuC,MAAA,GAAAA,MAAA,IAAAouC,EAAAK,UAAA,gCA9BVzuC,MAAA,WAAAA,CAGC,aAHDA,CAGC,UAHDA,CAGC,UAHDA,CAGC,WAIwBA,MAAA,UAAIA,QACrBA,MAAA,WAAiBA,MAAA,YAAMA,QACvBA,MAAA,WAA6BA,MAAA,WAAKA,QAClCA,MAAA,YAAiBA,MAAA,YAAKA,YAG1BA,MAAA,YACEA,MAAA,GAAA0uC,GAAA,cAmBF1uC,mCAlBwBA,MAAA,IAAAA,MAAA,UAAA2kC,EAAAgK,8CA2B1B3uC,MAAA,SAAmDA,MAAA,uBAAiBA,gCACpEA,MAAA,UACEA,MAAA,yBACFA,mCAPFA,MAAA,YAIEA,MAAA,EAAA4uC,GAAA,YACA5uC,MAAA,EAAA6uC,GAAA,YAGF7uC,+BAJMA,MAAA,GAAAA,MAAA,QAAA8uC,EAAA5B,kBACAltC,MAAA,GAAAA,MAAA,OAAA8uC,EAAA5B,kBAAA4B,EAAAC,4CAvDR/uC,MAAA,QAAAA,CAAsC,UAAtCA,CAAsC,UAEgBA,MAAA,cAAQA,QAC1DA,MAAA,SAAyBA,MAAA,GAA8BA,UAIzDA,MAAA,EAAAgvC,GAAA,cAKAhvC,MAAA,EAAAivC,GAAA,eAsCAjvC,MAAA,EAAAkvC,GAAA,cASFlvC,8BAxD6BA,MAAA,GAAAA,MAAA4K,EAAAukC,0BAIrBnvC,MAAA,GAAAA,MAAA,OAAA4K,EAAAwkC,mBAMHpvC,MAAA,GAAAA,MAAA,SAAA4K,EAAAwkC,mBAAAxkC,EAAAsiC,kBAAAtiC,EAAAmkC,kBAsCA/uC,MAAA,GAAAA,MAAA,QAAA4K,EAAAwkC,mBAAA,IAAAxkC,EAAA+jC,qBAAAtxC,SCrWT,MAAMgyC,GAAiB,CACrB,CAAEC,KAAM,GAAIC,WAAY,UAAWC,UAAW,QAC9C,CAAEF,KAAM,eAAgBG,UAAWvhC,IACnC,CAAEohC,KAAM,UAAWG,UAAWn6B,IAC9B,CAAEg6B,KAAM,eAAgBG,UAAWv9B,IACnC,CAAEo9B,KAAM,uBAAwBG,UAAW1kC,IAC3C,CAAEukC,KAAM,aAAcG,UAAW/J,IACjC,CAAE4J,KAAM,YAAaG,UAAW9H,IAChC,CAAE2H,KAAM,QAASG,UAAWnG,IAC5B,CAAEgG,KAAM,aAAcG,UCNY,MAA9B,MAAOC,EAwCXnyC,YAAoBoyC,GAAAjyC,KAAAiyC,uBAtCpBjyC,KAAAkyC,UAAgD,UAGhDlyC,KAAAuN,QAA+B,GAC/BvN,KAAAwN,QAAqC,GACrCxN,KAAAmyC,SAA+B,GAG/BnyC,KAAAiuC,kBAA4B,EAC5BjuC,KAAAywC,kBAA4B,EAC5BzwC,KAAA0xC,mBAA6B,EAG7B1xC,KAAAoyC,gBAA6C,GAC7CpyC,KAAAqyC,iBAAuC,GAGvCryC,KAAAwvC,kBAA4B,EAC5BxvC,KAAAyvC,gBAA0B,EAC1BzvC,KAAAqxC,iBAA2B,EAG3BrxC,KAAAsyC,aAAkE,IAAIzhB,IAGtE7wB,KAAA8uC,YAAc,EACd9uC,KAAAovC,aAAe,GACfpvC,KAAAmvC,WAAa,EACbnvC,KAAAoT,KAAOA,KAGPpT,KAAAwuC,WAAa,CACXrxC,UAAW,EACXC,UAAW,EACXuyC,WAAYzzC,KAAWK,SAEzByD,KAAA9D,WAAaA,IAEoD,CAEjEqN,WACEvJ,KAAKuyC,iBACP,CAEAA,kBACEvyC,KAAK0N,cACL1N,KAAKwyC,iBACLxyC,KAAKyyC,iBACP,CAGAC,aAAaC,GACX3yC,KAAKkyC,UAAYS,GAGL,YAARA,GAA6B,aAARA,IACvB3yC,KAAK4yC,cAET,CAGAllC,cACE1N,KAAKiuC,kBAAmB,EACxBjuC,KAAKiyC,qBAAqB7xC,wBAAwB0H,UAAU,CAC1DP,KAAOgG,IACLvN,KAAKuN,QAAUA,EACfvN,KAAKiuC,kBAAmB,EAGxBjuC,KAAK4yC,cAAY,EAEnBjpC,MAAQA,IACN3J,KAAKiuC,kBAAmB,IAG9B,CAGAuE,iBACExyC,KAAKywC,kBAAmB,EACxBzwC,KAAKiyC,qBAAqB/wC,wBAAwB4G,UAAU,CAC1DP,KAAOiG,IACLxN,KAAKwN,QAAUA,EACfxN,KAAK6yC,sBAAsBrlC,GAC3BxN,KAAKywC,kBAAmB,GAE1B9mC,MAAQA,IACN3J,KAAKywC,kBAAmB,IAG9B,CAEAgC,kBACEzyC,KAAK0xC,mBAAoB,EACzB1xC,KAAKiyC,qBAAqBxwC,uBAAuBqG,UAAU,CACzDP,KAAO4qC,IACLnyC,KAAKmyC,SAAWA,EAChBnyC,KAAK0xC,mBAAoB,GAE3B/nC,MAAQA,IACN3J,KAAK0xC,mBAAoB,IAG/B,CAGAmB,sBAAsBrlC,GACpBxN,KAAKsyC,aAAatzB,QAElBxR,EAAQW,QAASL,IAEf,MAAMoB,EAAUlP,KAAKuN,QAAQ6B,KAC1B0jC,GAAMA,EAAElyC,WAAakN,EAAMwB,aAExBH,EAAUnP,KAAKuN,QAAQ6B,KAC1B0jC,GAAMA,EAAElyC,WAAakN,EAAMyB,aAG9B,GAAIL,EAAS,CACX,MAAM6jC,EAAe/yC,KAAKsyC,aAAahyC,IAAI4O,EAAQvR,WAAa,CAC9Dq1C,OAAQ,EACRC,SAAU,GAEZF,EAAaC,QAAUllC,EAAM0B,aAC7BujC,EAAaE,UAAYnlC,EAAM2B,aAC/BzP,KAAKsyC,aAAa1/B,IAAI1D,EAAQvR,SAAUo1C,GAG1C,GAAI5jC,EAAS,CACX,MAAM4jC,EAAe/yC,KAAKsyC,aAAahyC,IAAI6O,EAAQxR,WAAa,CAC9Dq1C,OAAQ,EACRC,SAAU,GAEZF,EAAaC,QAAUllC,EAAM2B,aAC7BsjC,EAAaE,UAAYnlC,EAAM0B,aAC/BxP,KAAKsyC,aAAa1/B,IAAIzD,EAAQxR,SAAUo1C,KAG9C,CAEAG,eAAev1C,GACb,OAAOqC,KAAKsyC,aAAahyC,IAAI3C,IAAa,CAAEq1C,OAAQ,EAAGC,SAAU,EACnE,CAEA1F,yBAAyB5vC,GACvB,MAAMw1C,EAAQnzC,KAAKkzC,eAAev1C,GAClC,OAAOw1C,EAAMH,OAASG,EAAMF,QAC9B,CAEAzF,sBAAsB7vC,GACpB,MAAMw1C,EAAQnzC,KAAKkzC,eAAev1C,GAC5By1C,EAAOpzC,KAAKutC,yBAAyB5vC,GAE3C,MAAO,GAAGw1C,EAAMH,gBAAgBG,EAAMF,oBADrBG,GAAQ,EAAI,IAAM,KACkCA,IACvE,CAGA/D,oBACE,OAAIrvC,KAAKwvC,kBAAoBxvC,KAAKyvC,eACzB,GAEFzvC,KAAKoyC,gBAAgBzyC,OAAS,EACjCK,KAAKoyC,gBACLpyC,KAAKwN,OACX,CAEAyjC,qBACE,OAAIjxC,KAAKwvC,kBAAoBxvC,KAAKqxC,gBACzB,GAEFrxC,KAAKqyC,iBAAiB1yC,OAAS,EAClCK,KAAKqyC,iBACLryC,KAAKmyC,QACX,CAEAkB,iBAAiBjlC,GACf,OAAO,CACT,CAEAqjC,yBACE,IAAI/mC,EAAO,cAEX,GAAI1K,KAAKwuC,WAAWrxC,WAAa6C,KAAKwuC,WAAWpxC,UAAW,CAC1D,MAAMk2C,EAAU,GAChB,GAAItzC,KAAKwuC,WAAWrxC,UAAW,CAC7B,MAAM+R,EAAUlP,KAAKuN,QAAQ6B,KAC1B0jC,GAAMA,EAAEn1C,WAAaqC,KAAKwuC,WAAWrxC,WAEpC+R,GAASokC,EAAQhlC,KAAKY,EAAQtO,UAEpC,GAAIZ,KAAKwuC,WAAWpxC,UAAW,CAC7B,MAAM+R,EAAUnP,KAAKuN,QAAQ6B,KAC1B0jC,GAAMA,EAAEn1C,WAAaqC,KAAKwuC,WAAWpxC,WAEpC+R,GAASmkC,EAAQhlC,KAAKa,EAAQvO,UAGb,IAAnB0yC,EAAQ3zC,OACV+K,EAAO,GAAG4oC,EAAQ,6CACU,IAAnBA,EAAQ3zC,SACjB+K,EAAO,GAAG4oC,EAAQ,SAASA,EAAQ,MASvC,OALItzC,KAAKwuC,WAAWmB,aAAezzC,KAAWK,UAE5CmO,GAAQ,KADS1K,KAAKuzC,kBAAkBvzC,KAAKwuC,WAAWmB,gBAInDjlC,CACT,CAEA6oC,kBAAkB5D,GAChB,OAAQA,GACN,KAAKzzC,KAAWC,MACd,MAAO,QACT,KAAKD,KAAWE,UACd,MAAO,cACT,KAAKF,KAAWG,SACd,MAAO,YACT,KAAKH,KAAWI,UACd,MAAO,aACT,QACE,MAAO,GAEb,CAGAszC,iBACE5vC,KAAK8uC,YAAc,EACnB9uC,KAAK4yC,cACP,CAEAzC,eACEnwC,KAAKwuC,WAAa,CAChBrxC,UAAW,EACXC,UAAW,EACXuyC,WAAYzzC,KAAWK,SAEzByD,KAAK8uC,YAAc,EACnB9uC,KAAKwvC,kBAAmB,EACxBxvC,KAAKyvC,gBAAiB,EACtBzvC,KAAKqxC,iBAAkB,EACvBrxC,KAAK4yC,cACP,CAEAA,eACE,IAAIY,EAAW,IAAIxzC,KAAKwN,SASxB,GANAxN,KAAKwvC,iBACHxvC,KAAKwuC,WAAWmB,aAAezzC,KAAWK,SACZ,IAA9ByD,KAAKwuC,WAAWrxC,WACc,IAA9B6C,KAAKwuC,WAAWpxC,UAGd4C,KAAKwuC,WAAWmB,aAAezzC,KAAWK,QAAS,CACrD,MAAMmf,EAAM,IAAIvR,KAChB,IAAIspC,EAEJ,OAAQzzC,KAAKwuC,WAAWmB,YACtB,KAAKzzC,KAAWC,MACds3C,EAAa,IAAItpC,KACfuR,EAAIg4B,cACJh4B,EAAIi4B,WACJj4B,EAAIk4B,WAEN,MACF,KAAK13C,KAAWE,UACdq3C,EAAa,IAAItpC,KAAKuR,EAAI0T,UAAY,QACtC,MACF,KAAKlzB,KAAWG,SACdo3C,EAAa,IAAItpC,KAAKuR,EAAI0T,UAAY,QACtC,MACF,KAAKlzB,KAAWI,UACdm3C,EAAa,IAAItpC,KAAKuR,EAAI0T,UAAY,QACtC,MACF,QACEqkB,EAAa,IAAItpC,KAAK,GAG1BqpC,EAAWA,EAASj0C,OACjBuO,GAAU,IAAI3D,KAAK2D,EAAMugC,WAAaoF,GAK3C,GAAIzzC,KAAKwuC,WAAWrxC,UAAW,CAC7B,MAAM+R,EAAUlP,KAAKuN,QAAQ6B,KAC1B0jC,GAAMA,EAAEn1C,WAAaqC,KAAKwuC,WAAWrxC,WAEpC+R,IACFskC,EAAWA,EAASj0C,OACjBuO,GACCA,EAAMwB,cAAgBJ,EAAQtO,UAC9BkN,EAAMyB,cAAgBL,EAAQtO,WAKtC,GAAIZ,KAAKwuC,WAAWpxC,UAAW,CAC7B,MAAM+R,EAAUnP,KAAKuN,QAAQ6B,KAC1B0jC,GAAMA,EAAEn1C,WAAaqC,KAAKwuC,WAAWpxC,WAEpC+R,IACFqkC,EAAWA,EAASj0C,OACjBuO,GACCA,EAAMwB,cAAgBH,EAAQvO,UAC9BkN,EAAMyB,cAAgBJ,EAAQvO,WAMtC4yC,EAAS/kC,KACP,CAACC,EAAGC,IAAM,IAAIxE,KAAKwE,EAAE0/B,UAAUjf,UAAY,IAAIjlB,KAAKuE,EAAE2/B,UAAUjf,WAGlEpvB,KAAKoyC,gBAAkBoB,EACvBxzC,KAAKyvC,eAAiBzvC,KAAKwvC,kBAAwC,IAApBgE,EAAS7zC,OACxDK,KAAKmvC,WAAa/7B,KAAKsV,KACrB1oB,KAAKqvC,oBAAoB1vC,OAASK,KAAKovC,cAIzC,IAAIiD,EAAmB,IAAIryC,KAAKmyC,UAGhC,GAAInyC,KAAKwuC,WAAWmB,aAAezzC,KAAWK,QAAS,CACrD,MAAMmf,EAAM,IAAIvR,KAChB,IAAIspC,EAEJ,OAAQzzC,KAAKwuC,WAAWmB,YACtB,KAAKzzC,KAAWC,MACds3C,EAAa,IAAItpC,KACfuR,EAAIg4B,cACJh4B,EAAIi4B,WACJj4B,EAAIk4B,WAEN,MACF,KAAK13C,KAAWE,UACdq3C,EAAa,IAAItpC,KAAKuR,EAAI0T,UAAY,QACtC,MACF,KAAKlzB,KAAWG,SACdo3C,EAAa,IAAItpC,KAAKuR,EAAI0T,UAAY,QACtC,MACF,KAAKlzB,KAAWI,UACdm3C,EAAa,IAAItpC,KAAKuR,EAAI0T,UAAY,QACtC,MACF,QACEqkB,EAAa,IAAItpC,KAAK,GAG1BkoC,EAAmBA,EAAiB9yC,OACjCs0C,GAAY,IAAI1pC,KAAK0pC,EAAQlD,aAAe8C,GAKjD,GAAIzzC,KAAKwuC,WAAWrxC,UAAW,CAC7B,MAAM+R,EAAUlP,KAAKuN,QAAQ6B,KAC1B0jC,GAAMA,EAAEn1C,WAAaqC,KAAKwuC,WAAWrxC,WAEpC+R,IACFmjC,EAAmBA,EAAiB9yC,OACjCs0C,GACCA,EAAQjD,aAAe1hC,EAAQtO,UAC/BizC,EAAQ9C,YAAc7hC,EAAQtO,WAKtC,GAAIZ,KAAKwuC,WAAWpxC,UAAW,CAC7B,MAAM+R,EAAUnP,KAAKuN,QAAQ6B,KAC1B0jC,GAAMA,EAAEn1C,WAAaqC,KAAKwuC,WAAWpxC,WAEpC+R,IACFkjC,EAAmBA,EAAiB9yC,OACjCs0C,GACCA,EAAQjD,aAAezhC,EAAQvO,UAC/BizC,EAAQ9C,YAAc5hC,EAAQvO,WAMtCyxC,EAAiB5jC,KACf,CAACC,EAAGC,IACF,IAAIxE,KAAKwE,EAAEgiC,YAAYvhB,UAAY,IAAIjlB,KAAKuE,EAAEiiC,YAAYvhB,WAG9DpvB,KAAKqyC,iBAAmBA,EACxBryC,KAAKqxC,gBACHrxC,KAAKwvC,kBAAgD,IAA5B6C,EAAiB1yC,MAC9C,CAEA8uC,sBACE,MAAMqF,GAAc9zC,KAAK8uC,YAAc,GAAK9uC,KAAKovC,aAC3C2E,EAAWD,EAAa9zC,KAAKovC,aAC7B5hC,EAAUxN,KAAKqvC,oBAAoBvf,MAAMgkB,EAAYC,GAG3D,OAAI/zC,KAAKwuC,WAAWrxC,UACXqQ,EAAQsB,IAAKhB,GAAU9N,KAAKg0C,8BAA8BlmC,IAG5DN,CACT,CAEAwmC,8BACElmC,GAEA,MAAMmmC,EAAiBj0C,KAAKuN,QAAQ6B,KACjC0jC,GAAMA,EAAEn1C,WAAaqC,KAAKwuC,WAAWrxC,WAGxC,OAAK82C,GAGDnmC,EAAMyB,cAAgB0kC,EAAerzC,SAChC,IACFkN,EACHwB,YAAaxB,EAAMyB,YACnBA,YAAazB,EAAMwB,YACnBE,aAAc1B,EAAM2B,aACpBA,aAAc3B,EAAM0B,cATI1B,CAe9B,CAEA+gC,WAAWpa,GACLA,GAAQ,GAAKA,GAAQz0B,KAAKmvC,aAC5BnvC,KAAK8uC,YAAcra,EAEvB,iDAvbWud,GAAuB1vC,MAAAC,MAAA,oCAAvByvC,EAAuBpnC,UAAA,0BAAAC,MAAA,GAAAC,KAAA,GAAAC,OAAA,utFAAAC,SAAA,SAAAC,EAAAC,GAAA,EAAAD,IFdpC3I,MAAA,UAAAA,CAAsC,UAAtCA,CAAsC,UAGaA,MAAA,0BAAaA,QAC5DA,MAAA,SAAyBA,MAAA,iDAA2CA,UAItEA,MAAA,UAAAA,CAAkB,UAAlBA,CAAkB,cAGZA,MAAA,0BAAS4I,EAAAwnC,aAAa,UAAU,GAKhCpwC,MAAA,yBACFA,QACAA,MAAA,eACEA,MAAA,0BAAS4I,EAAAwnC,aAAa,UAAU,GAKhCpwC,MAAA,uBACFA,QACAA,MAAA,eACEA,MAAA,0BAAS4I,EAAAwnC,aAAa,WAAW,GAKjCpwC,MAAA,2BACFA,YAKJA,MAAA,YAEEA,MAAA,GAAA4xC,GAAA,aAwFA5xC,MAAA,GAAA6xC,GAAA,eA6LA7xC,MAAA,GAAA8xC,GAAA,aA4DF9xC,iBA7WMA,MAAA,GAAAA,MAAA,0BAAA4I,EAAAgnC,UAAA5vC,CAA6C,0BAAA4I,EAAAgnC,WAQ7C5vC,MAAA,GAAAA,MAAA,0BAAA4I,EAAAgnC,UAAA5vC,CAA6C,0BAAA4I,EAAAgnC,WAQ7C5vC,MAAA,GAAAA,MAAA,2BAAA4I,EAAAgnC,UAAA5vC,CAA8C,2BAAA4I,EAAAgnC,WAY5C5vC,MAAA,GAAAA,MAAA,mBAAA4I,EAAAgnC,WAwFA5vC,MAAA,GAAAA,MAAA,mBAAA4I,EAAAgnC,WA6LA5vC,MAAA,GAAAA,MAAA,oBAAA4I,EAAAgnC,utGE/SGF,CAAuB,ODa7B,IAAMqC,GAAmB,MAA1B,MAAOA,oDAAmB,mCAAnBA,GAAmB,uCAHpBC,KAAaC,SAAS5C,IACtB2C,OAAY,SAEXD,CAAmB,+BEkBzB,IAAMG,GAAY,MAAnB,MAAOA,oDAAY,mCAAZA,GAAY,uCAVrB1gC,KACAugC,GACAI,MACAC,KACAtS,GACAuS,KACApiC,IAAoB,SAIXiiC,CAAY,6DCjClB,IAAMG,EAAY,MAAnB,MAAOA,oDAAY,mCAAZA,GAAY,uCALb7gC,OAAY,SAKX6gC,CAAY,sCCZlB,MAAMh5B,EAAwB,CACjCD,SACYC,EAAsBN,UAAYlR,MAAMuR,MAEpDL,cAAUhJ,mBCJd,SAAAuiC,EAAAC,EAAAj+B,EAAAk+B,EAAAC,EAAAC,EAAAjmC,EAAAkmC,GACA,IACA,IAAAzI,EAAAqI,EAAA9lC,GAAAkmC,GACAv6B,EAAA8xB,EAAA9xB,KACA,OAAI/Q,GAEJ,YADAmrC,EAAAnrC,EAEA,CACA6iC,EAAA0I,KACAt+B,EAAA8D,GAEA/D,QAAAC,QAAA8D,GAAAy6B,KAAAJ,EAAAC,EAEA,CACe,SAAA7+B,EAAAi/B,GACf,kBACA,IAAAC,EAAAr1C,KACAoa,EAAA6mB,UACA,WAAAtqB,QAAA,SAAAC,EAAAk+B,GACA,IAAAD,EAAAO,EAAAE,MAAAD,EAAAj7B,GACA,SAAA26B,EAAAr6B,GACAk6B,EAAAC,EAAAj+B,EAAAk+B,EAAAC,EAAAC,EAAA,OAAAt6B,EACA,CACA,SAAAs6B,EAAAprC,GACAgrC,EAAAC,EAAAj+B,EAAAk+B,EAAAC,EAAAC,EAAA,QAAAprC,EACA,CACAmrC,OAAA,EACA,EACA,CACA","names":["DateFilter","Today","Last3Days","LastWeek","LastMonth","AllTime","FRIENDLY_MATCH_ENDPOINTS","GET_ALL_PLAYERS","GET_PLAYER_BY_ID","id","ADD_PLAYER","DELETE_PLAYER","DEACTIVATE_PLAYER","GET_PLAYERS_RANKING","GET_PLAYER_STATS","GET_ALL_MATCHES","GET_MATCHES_BETWEEN_PLAYERS","player1Id","player2Id","RECORD_MATCH","DELETE_MATCH","UPDATE_MATCH","GET_OVERALL_SCORE","GET_FILTERED_MATCHES","GET_PLAYER_MATCHES","playerId","GET_PLAYER_VS_OPPONENTS","GET_ALL_SHUTOUTS","GET_SHUTOUTS_BY_PLAYER","GET_SHUTOUT_BY_MATCH","matchId","DELETE_SHUTOUT","shutoutId","GET_FILTERED_SHUTOUTS","GET_PLAYER_SHUTOUTS_FILTERED","GET_PLAYERS_SHUTOUTS_FILTERED","TEST","FRIENDLY_MESSAGE_ENDPOINTS","SEND_MESSAGE","GET_PLAYER_MESSAGES","GET_ALL_MESSAGES","GET_UNREAD_MESSAGES","GET_READ_MESSAGES","GET_PLAYER_CONVERSATION","SEND_ADMIN_REPLY","MARK_MESSAGE_READ","messageId","MARK_ALL_PLAYER_MESSAGES_READ","DELETE_MESSAGE","GET_UNREAD_COUNT","GET_PLAYER_UNREAD_COUNT","calculateUnreadCount","messages","filter","msg","isRead","isFromAdmin","length","FriendlyMatchService","constructor","http","cacheService","this","baseUrl","environment","apiUrl","getAllFriendlyPlayers","cachePlayerRequest","get","getFriendlyPlayersRanking","getFriendlyPlayerStats","url","getPlayersStatistics","addFriendlyPlayerAsync","fullName","post","deleteFriendlyPlayerAsync","delete","deactivateFriendlyPlayerAsync","put","getAllFriendlyMatches","getFriendlyMatchesBetweenPlayers","recordFriendlyMatchAsync","matchData","updateFriendlyMatchAsync","deleteFriendlyMatchAsync","getOverallScoreBetweenPlayers","getAllShutoutResults","getShutoutResultsByPlayer","getShutoutResultByMatch","getFilteredMatches","params","getPlayerMatches","getPlayerVsOpponentsMatches","opponentIds","testConnection","refreshFriendlyPlayers","remove","refreshFriendlyMatches","refreshFriendlyShutouts","i0","i1","i2","factory","ɵfac","providedIn","FriendlyMessageService","sendMessageToAdmin","content","getPlayerMessages","getAllMessages","getUnreadMessages","getReadMessages","getPlayerConversation","sendAdminReply","Error","markMessageAsRead","marked","markAllPlayerMessagesAsRead","deleteMessage","getUnreadMessagesCount","getPlayerUnreadMessagesCount","LeagueService","resetLeague","LeagueId","startLeague","dto","GetCurrentLeague","forceRefresh","request","shouldRefreshCurrentLeague","getAdminCurrentLeague","GetAllLeaguesRank","shouldRefreshRankings","cacheAllLeaguesRequest","getAdminAllLeagues","DeleteLeague","leagueId","createGroupsAndMatches","startKnockoutStage","startSemiFinals","startFinal","getLastLeaguesRankUpdateTime","getLastUpdateTime","getLastCurrentLeagueUpdateTime","isRankingsCacheExpired","isCacheExpired","isCurrentLeagueCacheExpired","getNextRankingsUpdateTime","getCacheExpiryTime","getNextCurrentLeagueUpdateTime","forceRefreshRankings","forceRefreshCurrentLeague","MatchService","playerService","getMatches","getAdminMatches","updateMatch","winnerId","pipe","tap","refreshPlayers","resetMatch","getLastMatchesUpdateTime","i3","MessageService","sendMessage","message","Content","getMessages","getAdminMessages","toggleMarkMessage","Marked","toggleDeleteMessage","PlayerService","rankingSubject","BehaviorSubject","ranking$","asObservable","getrank","data","next","getPlayers","getAdminPlayers","addPlayer","invalidatePattern","deletePlayer","refreshRanking","subscribe","getNextUpdateTime","getNextPlayerUpdateTime","getLastRankingUpdateTime","getLastPlayersUpdateTime","TournamentStage","League","GroupStage","QuarterFinals","SemiFinals","Final","SystemOfLeague","Points","Classic","LeagueType","Single","Multi","Groups","TournamentInfoComponent_div_0_div_2_Template","ctx_r0","isGroupsTournament","TournamentInfoComponent","leagueService","toastr","currentLeague","ngOnInit","loadCurrentLeague","response","league","error","err","getLeagueTypeText","typeOfLeague","getSystemOfLeagueText","systemOfLeague","getFormattedDate","createdOn","Date","toLocaleDateString","year","month","day","getTournamentStatus","isFinished","text","color","selectors","decls","vars","consts","template","rf","ctx","TournamentInfoComponent_div_0_Template","TournamentInfoComponent_div_1_Template","player_r6","_r8","$implicit","ctx_r7","highlightColumn","ctx_r4","highlightedColumn","ctx_r15","getMatchResult","player2_r12","player1_r9","result","ctx_r17","getClassicResult","GroupsMatchesTableComponent_div_2_div_2_tr_12_td_1_span_2_ng_container_1_Template","GroupsMatchesTableComponent_div_2_div_2_tr_12_td_1_span_2_ng_template_2_Template","ctx_r14","_r16","GroupsMatchesTableComponent_div_2_div_2_tr_12_td_1_span_1_Template","GroupsMatchesTableComponent_div_2_div_2_tr_12_td_1_span_2_Template","_c0","ctx_r11","GroupsMatchesTableComponent_div_2_div_2_tr_12_td_1_Template","i_r10","ctx_r5","getGroupedPlayers","groupNumber_r3","GroupsMatchesTableComponent_div_2_div_2_th_8_Template","GroupsMatchesTableComponent_div_2_div_2_tr_12_Template","ctx_r2","GroupsMatchesTableComponent_div_2_div_2_Template","getGroupNumbers","GroupsMatchesTableComponent","matchService","players","matches","started","loadPlayers","loadMatches","loadLeagueSystem","every","match","score1","score2","res","groupedPlayers","forEach","player","groupNumber","push","Object","keys","sort","a","b","points","index","map","key","parseInt","hasGroupedPlayers","player1","player2","find","m","player1Name","player2Name","player1Score","player2Score","colorClass","i4","GroupsMatchesTableComponent_div_2_Template","GroupsMatchesTableComponent_div_3_Template","player_r5","i_r6","ctx_r3","LeagueTableComponent_div_5_tr_8_td_1_span_2_ng_container_1_Template","LeagueTableComponent_div_5_tr_8_td_1_span_2_ng_template_2_Template","LeagueTableComponent_div_5_tr_8_td_1_span_1_Template","LeagueTableComponent_div_5_tr_8_td_1_span_2_Template","LeagueTableComponent_div_5_tr_8_td_1_Template","LeagueTableComponent_div_5_th_4_Template","LeagueTableComponent_div_5_tr_8_Template","LeagueTableComponent","onClickOutside","event","table","document","querySelector","contains","target","hostBindings","$event","LeagueTableComponent_div_3_Template","LeagueTableComponent_app_groups_matches_table_4_Template","LeagueTableComponent_div_5_Template","BracketTreeComponent_div_2_div_4_span_4_Template","BracketTreeComponent_div_2_div_4_span_10_Template","match_r4","isCompleted","BracketTreeComponent_div_2_div_4_Template","quarterFinals","BracketTreeComponent_div_4_div_4_span_4_Template","BracketTreeComponent_div_4_div_4_span_10_Template","match_r8","BracketTreeComponent_div_4_div_4_Template","ctx_r1","semiFinals","BracketTreeComponent_div_6_span_8_Template","BracketTreeComponent_div_6_span_14_Template","tmp_0_0","final","undefined","tmp_2_0","BracketTreeComponent","signal","loadKnockoutMatches","ngOnChanges","changes","set","leagues","l","knockoutMatches","processKnockoutMatches","shuffleMatches","stage","tournamentStage","Math","random","hasQuarterFinals","hasSemiFinals","inputs","standalone","features","BracketTreeComponent_div_2_Template","BracketTreeComponent_div_4_Template","BracketTreeComponent_div_6_Template","CommonModule","styles","changeDetection","rank","wins","draws","losses","matchesPlayed","GroupsTableComponent_div_2_div_2_tr_23_Template","GroupsTableComponent_div_2_div_2_Template","GroupsTableComponent","groupKey","GroupsTableComponent_div_2_Template","GroupsTableComponent_div_3_Template","i_r5","currentGroupIndex","isGroupCompleted","group_r4","isGroupAnimating","i_r8","ctx_r6","currentRevealedPlayer","player_r7","GroupDrawAnimationComponent_div_6_div_3_div_5_Template","getCurrentGroup","tmp_1_0","GroupDrawAnimationComponent_div_6_div_2_Template","GroupDrawAnimationComponent_div_6_div_3_Template","animationGroups","GroupDrawAnimationComponent","animationComplete","EventEmitter","showBalls","setupAnimation","startAnimation","animationState","_this","_asyncToGenerator","delay","i","animateGroup","emit","group","_this2","ms","Promise","resolve","setTimeout","g","outputs","GroupDrawAnimationComponent_div_6_Template","GroupDrawAnimationComponent_div_8_Template","_r5","onDrawAnimationComplete","RankingComponent_div_5_div_2_div_1_tr_22_i_2_Template","player_r10","winRate","RankingComponent_div_5_div_2_div_1_tr_22_Template","ctx_r8","RankingComponent_div_5_div_2_div_1_Template","RankingComponent_div_5_app_groups_table_1_Template","RankingComponent_div_5_div_2_Template","RankingComponent","last","showDrawAnimation","updateDrawAnimationState","hasGroups","some","noMatchesPlayed","RankingComponent_div_3_Template","RankingComponent_app_group_draw_animation_4_Template","RankingComponent_div_5_Template","RankingComponent_div_6_Template","nodeEventEmitterMethods","eventTargetMethods","jqueryMethods","fromEvent","eventName","options","resultSelector","isFunction","mapOneOrManyArgs","add","isEventTarget","addEventListener","removeEventListener","methodName","handler","isNodeStyleEventEmitter","addListener","removeListener","toCommonHandlerRegistry","isJQueryStyleEventEmitter","on","off","isArrayLike","mergeMap","subTarget","innerFrom","TypeError","Observable","subscriber","args","skip","count","_","arrReducer","arr","value","Action","Subscription","scheduler","work","super","schedule","state","intervalProvider","setInterval","timeout","delegate","clearInterval","handle","Scheduler","schedulerActionCtor","now","dateTimestampProvider","asyncScheduler","AsyncScheduler","SchedulerAction","actions","_active","flush","action","execute","shift","unsubscribe","AsyncAction","pending","_a","closed","recycleAsyncId","requestAsyncId","_id","bind","_scheduler","_execute","_delay","errorValue","errored","e","arrRemove","async","delayWhen","delayDurationSelector","subscriptionDelay","source","concat","take","ignoreElements","operate","createOperatorSubscriber","noop","mapTo","StageComponent_ng_container_2_2_ng_template_0_Template","a0","a1","StageComponent_ng_container_2_2_Template","slide_r1","i_r2","tplRef","preparePublicSlide","_c1","a2","a3","width","left","StageComponent_ng_container_2_Template","_r7","clear","classes","marginL","marginR","heightState","load","_c2","a4","transform","transition","_c3","isMouseDragable","isTouchDragable","CarouselComponent_div_2_Template","owlDOMData","stageData","slidesData","_c4","active","CarouselComponent_ng_container_3_div_5_Template","_r6","dot_r4","moveByDot","showInnerContent","innerContent","_c5","disabled","CarouselComponent_ng_container_3_Template","prev","ctx_r9","navData","htmlText","dotsData","dots","_c6","OwlCarouselOConfig","items","skip_validateItems","loop","center","rewind","mouseDrag","touchDrag","pullDrag","freeDrag","margin","stagePadding","merge","mergeFit","autoWidth","startPosition","rtl","smartSpeed","fluidSpeed","dragEndSpeed","responsive","responsiveRefreshRate","nav","navText","navSpeed","slideBy","dotsEach","dotsSpeed","autoplay","autoplayTimeout","autoplayHoverPause","autoplaySpeed","autoplayMouseleaveTimeout","lazyLoad","lazyLoadEager","slideTransition","animateOut","animateIn","autoHeight","URLhashListener","OwlOptionsMockedTypes","OwlLogger","errorHandler","log","rest","isDevMode","console","handleError","warn","static","t","token","Type","Event","State","Width","Default","Inner","Outer","CarouselService","logger","_viewSettingsShipper$","Subject","_initializedCarousel$","_changeSettingsCarousel$","_changedSettingsCarousel$","_translateCarousel$","_translatedCarousel$","_resizeCarousel$","_resizedCarousel$","_refreshCarousel$","_refreshedCarousel$","_dragCarousel$","_draggedCarousel$","settings","isResponsive","isRefreshed","isLoaded","isLoading","isGrab","paddingL","paddingR","_width","_items","_widths","_supress","_plugins","_current","_clones","_mergers","_speed","_coordinates","_breakpoint","clonedIdPrefix","_options","_invalidated","invalidated","_states","current","tags","initializing","animating","dragging","states","_pipe","run","cache","relative","css","slide","toFixed","grid","widths","iterator","min","clones","view","max","size","ceil","append","prepend","repeat","normalize","unshift","isActive","isCloned","coordinates","previous","padding","abs","findIndex","minimum","maximum","reset","animate","begin","end","inner","outer","n","element","_op","item","isCentered","getViewCurSettings","getInitializedState","getChangeState","getChangedState","getTranslateState","getTranslatedState","getResizeState","getResizedState","getRefreshState","getRefreshedState","getDragState","getDraggedState","setOptions","configOptions","checkedOptions","_validateOptions","mockedTypes","setRightOption","type","hasOwnProperty","_isNumeric","_validateItems","_isNumberOrBoolean","_isNumberOrString","_isStringOrBoolean","Array","isArray","isString","setCarouselWidth","setup","carouselWidth","slides","setItems","_defineSlidesData","setOptionsForViewport","_trigger","property","name","invalidate","viewport","overwrites","Number","mergers","dataMerge","initialize","enter","refresh","sendChanges","leave","_optionsLogic","update","filteredPipe","all","setCurSlideClasses","is","dimension","onResize","curWidth","prepareDragging","transformArr","replace","split","x","y","speed","enterDragging","defineNewCoordsDrag","dragData","pull","delta","difference","pointer","start","finishDragging","dragObj","clickAttacher","direction","currentSlideI","newCurrent","closest","getTime","time","coordinate","position","onTransitionEnd","part","_suppress","_release","reciprocalItemsWidth","elementWidth","slice","odd","even","v","multiplier","newPosition","_duration","from","to","factor","revert","distance","delayForLoop","_viewport","loadMap","Map","hashFragment","dataHash","currentClasses","cloned","animated","isAnimated","isDefAnimatedIn","isDefAnimatedOut","isCustomAnimatedIn","isCustomAnimatedOut","o","namespace","stateName","register","object","tag","indexOf","events","originalEvent","window","touches","changedTouches","pageX","pageY","clientX","clientY","number","isNaN","parseFloat","first","second","NavigationService","carouselService","navSubscription","_initialized","_pages","_navData","_dotsData","spyDataStreams","ngOnDestroy","initializedCarousel$","_updateNavPages","draw","changedSettings$","refreshedCarousel$","navMerge$","j","k","lower","upper","pages","floor","dotContent","startI","splice","_updateNavButtons","_updateDots","curActiveDotI","finalCurrent","page","pop","_getPosition","successor","standard","dotId","dot","toSlideById","WINDOW","InjectionToken","WindowRef","nativeWindow","WINDOW_PROVIDERS","provide","useClass","BrowserWindowRef","useFactory","windowFactory","browserWindowRef","platformId","isPlatformBrowser","func","clearTimeout","deps","PLATFORM_ID","DOCUMENT","DocumentRef","nativeDocument","DOCUMENT_PROVIDERS","BrowserDocumentRef","documentFactory","browserDocumentRef","hidden","visibilityState","AutoplayService","ngZone","autoplaySubscription","_timeout","_paused","_isArtificialAutoplayTimeout","_isAutoplayStopped","isAutoplayStopped","winRef","docRef","play","_handleChangeObservable","resized$","stop","autoplayMerge$","_setAutoPlayInterval","_getNextTimeout","runOutsideAngular","pause","_playAfterTranslated","of","switchMap","startPausing","startPlayingMouseLeave","startPlayingTouchEnd","LazyLoadService","lazyLoadSubscription","isLazyLoad","changeSettings$","resizedCarousel$","lazyLoadMerge$","_defineLazyLoadSlides","_load","AnimateService","animateSubscription","swapping","dragCarousel$","draggedCarousel$","translatedCarousel$","dragTranslatedMerge$","translateCarousel$","_swap","animateMerge$","incoming","outgoing","AutoHeightService","autoHeightSubscription","autoHeight$","HashService","route","router","hashSubscription","currentHashFragment","fragment","navigate","commands","extras","listenToRoute","newCurSlide","newCurFragment","relativeTo","hashFragment$","nextId","CarouselSlideDirective","_dataMerge","isNumeric","ResizeService","resizeObservable$","onResize$","StageComponent","zone","el","renderer","animateService","owlDraggable","listenerMouseMove","listenerTouchMove","listenerOneMouseMove","listenerOneTouchMove","listenerMouseUp","listenerTouchEnd","listenerOneClick","listenerATag","_drag","moving","_oneDragMove$","_oneMoveSubsription","newSlide","onMouseDown","_onDragStart","onTouchStart","targetTouches","onTouchCancel","_onDragEnd","onDragStart","onSelectStart","_sendChanges","bindOneMouseTouchMove","ev","_oneMouseTouchMove","bindOnDragMove","_onDragMove","bindOnDragEnd","which","_prepareDragging","_pointer","listen","_difference","_is","blockClickAnchorInDragging","preventDefault","_enterDragging","HTMLAnchorElement","parentElement","stageOrExit","_animate","setStyle","nativeElement","children","_finishDragging","_oneClickHandler","firstC","specificState","_enter","dependencies","encapsulation","animation","trigger","style","height","CarouselComponent","resizeService","navigationService","autoplayService","lazyLoadService","autoHeightService","hashService","changeDetectorRef","translated","change","changed","initialized","carouselWindowWidth","resizeSubscription","_allObservSubscription","_slidesChangesSubscription","slidesOutputData","carouselLoaded","prevOptions","_viewCurSettings$","_draggingCarousel$","_changeCarousel$","_changedCarousel$","_carouselMerge$","onVisibilityChange","clientWidth","toArray","ngAfterContentInit","_winResizeWatcher","markForCheck","gatherTranslatedData","changedPosition","reduce","accumulator","seed","scanInternals","arguments","anim","due","duration","timer","dueTime","intervalOrScheduler","intervalDuration","isScheduler","isValidDate","complete","activeSlides","startPlayML","startPlayTE","stopAutoplay","startAutoplay","contentQueries","dirIndex","_t","CarouselModule","providers","imports","LeagueGroupsPreviewComponent_div_0_div_4_tr_15_Template","openGroupMatches","LeagueGroupsPreviewComponent_div_0_div_4_Template","player_r11","ctx_r18","player2_r15","player1_r12","selectedGroupMatches","ctx_r20","LeagueGroupsPreviewComponent_div_1_tr_15_td_1_span_2_ng_container_1_Template","LeagueGroupsPreviewComponent_div_1_tr_15_td_1_span_2_ng_template_2_Template","_r19","LeagueGroupsPreviewComponent_div_1_tr_15_td_1_span_1_Template","LeagueGroupsPreviewComponent_div_1_tr_15_td_1_span_2_Template","LeagueGroupsPreviewComponent_div_1_tr_15_td_1_Template","i_r13","ctx_r10","selectedGroup","_r27","ctx_r26","closeMatchesModal","stopPropagation","ctx_r29","LeagueGroupsPreviewComponent_div_1_th_11_Template","LeagueGroupsPreviewComponent_div_1_tr_15_Template","LeagueGroupsPreviewComponent","groups","showMatchesModal","getGroupMatches","leagueType","groupMatches","LeagueGroupsPreviewComponent_div_0_Template","LeagueGroupsPreviewComponent_div_1_Template","previousSlide","nextSlide","isFirstSlide","isLastSlide","_r18","league_r8","ctx_r16","openKnockoutModal","ctx_r13","getLeagueMatches","AllLeaguesComponent_ng_container_6_ng_template_1_div_21_tr_23_i_2_Template","player_r22","ctx_r25","openModal","AllLeaguesComponent_ng_container_6_ng_template_1_div_21_tr_23_Template","AllLeaguesComponent_ng_container_6_ng_template_1_p_16_Template","AllLeaguesComponent_ng_container_6_ng_template_1_p_17_Template","AllLeaguesComponent_ng_container_6_ng_template_1_div_18_Template","AllLeaguesComponent_ng_container_6_ng_template_1_app_league_groups_preview_19_Template","AllLeaguesComponent_ng_container_6_ng_template_1_div_20_Template","AllLeaguesComponent_ng_container_6_ng_template_1_div_21_Template","leagueName","leagueDescription","showKnockoutMatches","AllLeaguesComponent_ng_container_6_ng_template_1_Template","player_r32","_r35","ctx_r34","i_r33","ctx_r30","ctx_r42","player2_r39","player1_r36","ctx_r44","AllLeaguesComponent_div_7_tr_15_td_1_span_2_ng_container_1_Template","AllLeaguesComponent_div_7_tr_15_td_1_span_2_ng_template_2_Template","ctx_r41","currentModalSystemOfLeague","_r43","AllLeaguesComponent_div_7_tr_15_td_1_span_1_Template","AllLeaguesComponent_div_7_tr_15_td_1_span_2_Template","ctx_r38","AllLeaguesComponent_div_7_tr_15_td_1_Template","i_r37","ctx_r31","_r51","ctx_r50","closeModal","ctx_r53","AllLeaguesComponent_div_7_th_11_Template","AllLeaguesComponent_div_7_tr_15_Template","_r55","ctx_r54","closeKnockoutModal","ctx_r57","currentKnockoutLeagueId","AllLeaguesComponent","leaguesRank","isModalOpen","isKnockoutModalOpen","currentSlideIndex","customOptions","sortLeaguesForDisplay","onCarouselChanged","loadData","dateA","toggleKnockoutMatches","getSystemOfLeagueForLeague","allMatches","getDisplayResult","owlCarousel","viewQuery","AllLeaguesComponent_div_3_Template","AllLeaguesComponent_ng_container_6_Template","AllLeaguesComponent_div_7_Template","AllLeaguesComponent_div_8_Template","_r9","spell_r5","ForbiddenCardsComponent_ng_container_15_ng_template_1_Template","_r15","trap_r11","ForbiddenCardsComponent_ng_container_20_ng_template_1_Template","_r21","monster_r17","ctx_r19","ForbiddenCardsComponent_ng_container_25_ng_template_1_Template","_r24","ctx_r23","selectedImage","ForbiddenCardsComponent","spellCards","trapCards","monsters","isModalOpenAll","image","openAll","ForbiddenCardsComponent_ng_container_15_Template","ForbiddenCardsComponent_ng_container_20_Template","ForbiddenCardsComponent_ng_container_25_Template","ForbiddenCardsComponent_div_26_Template","ForbiddenCardsComponent_div_27_Template","message_r7","sentAt","PlayerInboxComponent_div_14_div_2_div_1_div_1_Template","PlayerInboxComponent_div_14_div_2_div_1_div_2_Template","PlayerInboxComponent_div_14_div_2_div_1_Template","message_r13","PlayerInboxComponent_div_14_div_3_div_1_div_1_Template","PlayerInboxComponent_div_14_div_3_div_1_div_2_Template","PlayerInboxComponent_div_14_div_3_div_1_Template","friendlyMessages","isFriendlyMode","PlayerInboxComponent_div_14_div_2_Template","PlayerInboxComponent_div_14_div_3_Template","PlayerInboxComponent_div_14_div_4_Template","currentMessages","PlayerInboxComponent","messageService","friendlyMessageService","cdr","newMessage","loadMessages","ngAfterViewChecked","detectChanges","scrollToBottom","loadFriendlyMessages","loadOfficialMessages","isDeleted","info","trim","sendFriendlyMessage","sendOfficialMessage","warning","success","toggleMessageMode","messageTypeLabel","toggleButtonText","messagesContainer","container","scrollTop","scrollHeight","PlayerInboxComponent_div_13_Template","PlayerInboxComponent_div_14_Template","getPlayerScoreDifference","getPlayerScoreDisplay","totalMatches","totalWins","totalLosses","totalDraws","FriendliesViewComponent_div_15_div_7_div_1_Template","FriendliesViewComponent_div_15_div_6_Template","FriendliesViewComponent_div_15_div_7_Template","FriendliesViewComponent_div_15_div_8_Template","isLoadingPlayers","player_r15","player_r16","match_r18","playedOn","winner","FriendliesViewComponent_div_16_div_35_tr_15_Template","filterForm","getPaginatedMatches","i_r21","_r23","ctx_r22","changePage","currentPage","_r25","ctx_r24","FriendliesViewComponent_div_16_div_36_span_4_Template","ctx_r12","totalPages","itemsPerPage","getDisplayMatches","FriendliesViewComponent_div_16_div_38_p_1_Template","FriendliesViewComponent_div_16_div_38_p_2_Template","hasActiveFilters","noMatchesFound","_r30","dateFilter","onFilterChange","ctx_r32","ctx_r33","FriendliesViewComponent_div_16_option_23_Template","ctx_r35","FriendliesViewComponent_div_16_option_30_Template","ctx_r36","clearFilters","FriendliesViewComponent_div_16_div_34_Template","FriendliesViewComponent_div_16_div_35_Template","FriendliesViewComponent_div_16_div_36_Template","FriendliesViewComponent_div_16_div_37_Template","FriendliesViewComponent_div_16_div_38_Template","isLoadingMatches","shutout_r41","achievedOn","winnerName","winnerScore","loserScore","loserName","FriendliesViewComponent_div_17_div_7_tr_13_Template","getDisplayShutouts","FriendliesViewComponent_div_17_div_8_p_1_Template","FriendliesViewComponent_div_17_div_8_p_2_Template","ctx_r39","noShutoutsFound","FriendliesViewComponent_div_17_div_6_Template","FriendliesViewComponent_div_17_div_7_Template","FriendliesViewComponent_div_17_div_8_Template","getSelectedPlayersText","isLoadingShutouts","routes","path","redirectTo","pathMatch","component","FriendliesViewComponent","friendlyMatchService","activeTab","shutouts","filteredMatches","filteredShutouts","playerScores","loadInitialData","loadAllMatches","loadAllShutouts","setActiveTab","tab","applyFilters","calculatePlayerScores","p","currentScore","scored","conceded","getPlayerScore","score","diff","isPlayerSelected","filters","getDateFilterText","filtered","cutoffDate","getFullYear","getMonth","getDate","shutout","startIndex","endIndex","reorderMatchForSelectedPlayer","selectedPlayer","FriendliesViewComponent_div_15_Template","FriendliesViewComponent_div_16_Template","FriendliesViewComponent_div_17_Template","PlayerRoutingModule","RouterModule","forChild","PlayerModule","HttpClientModule","FormsModule","SharedModule","asyncGeneratorStep","gen","reject","_next","_throw","arg","done","then","fn","self","apply"],"sourceRoot":"webpack:///","sources":["./friendly-match-types.ts","./friendly-message-types.ts","./src/app/core/services/friendly-match.service.ts","./src/app/core/services/friendly-message.service.ts","./src/app/core/services/league.service.ts","./src/app/core/services/match.service.ts","./src/app/core/services/message.service.ts","./src/app/core/services/player.service.ts","./src/app/models/interfaces.ts","./src/app/player/tournament-info/tournament-info.component.html","./src/app/player/tournament-info/tournament-info.component.ts","./src/app/player/groups-matches-table/groups-matches-table.component.html","./src/app/player/groups-matches-table/groups-matches-table.component.ts","./src/app/player/league-table/league-table.component.html","./src/app/player/league-table/league-table.component.ts","./src/app/player/bracket-tree/bracket-tree.component.html","./src/app/player/bracket-tree/bracket-tree.component.ts","./src/app/player/groups-table/groups-table.component.html","./src/app/player/groups-table/groups-table.component.ts","./src/app/player/group-draw-animation/group-draw-animation.component.html","./src/app/player/group-draw-animation/group-draw-animation.component.ts","./src/app/player/ranking/ranking.component.html","./src/app/player/ranking/ranking.component.ts","./node_modules/rxjs/dist/esm/internal/observable/fromEvent.js","./node_modules/rxjs/dist/esm/internal/operators/skip.js","./node_modules/rxjs/dist/esm/internal/operators/toArray.js","./node_modules/rxjs/dist/esm/internal/scheduler/Action.js","./node_modules/rxjs/dist/esm/internal/scheduler/intervalProvider.js","./node_modules/rxjs/dist/esm/internal/Scheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/async.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncScheduler.js","./node_modules/rxjs/dist/esm/internal/scheduler/AsyncAction.js","./node_modules/rxjs/dist/esm/internal/operators/delayWhen.js","./node_modules/rxjs/dist/esm/internal/operators/ignoreElements.js","./node_modules/ngx-owl-carousel-o/fesm2022/ngx-owl-carousel-o.mjs","./node_modules/rxjs/dist/esm/internal/operators/reduce.js","./node_modules/rxjs/dist/esm/internal/operators/delay.js","./node_modules/rxjs/dist/esm/internal/observable/timer.js","./node_modules/rxjs/dist/esm/internal/util/isDate.js","./src/app/player/league-groups-preview/league-groups-preview.component.html","./src/app/player/league-groups-preview/league-groups-preview.component.ts","./src/app/player/all-leagues/all-leagues.component.html","./src/app/player/all-leagues/all-leagues.component.ts","./src/app/player/forbidden-cards/forbidden-cards.component.html","./src/app/player/forbidden-cards/forbidden-cards.component.ts","./src/app/player/player-inbox/player-inbox.component.html","./src/app/player/player-inbox/player-inbox.component.ts","./src/app/player/friendlies/friendlies-view.component.html","./src/app/player/player-routing.module.ts","./src/app/player/friendlies/friendlies-view.component.ts","./src/app/player/player.module.ts","./src/app/shared/shared.module.ts","./node_modules/rxjs/dist/esm/internal/scheduler/dateTimestampProvider.js","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// YuGi Tournament API - Friendly Match System - TypeScript Interfaces\r\n// يمكن نسخ هذا الملف إلى مشروع الفرونت إند\r\n\r\n// ========================================\r\n// DTOs\r\n// ========================================\r\n\r\nexport interface AddFriendlyPlayerDto {\r\n  fullName: string;\r\n}\r\n\r\nexport interface RecordFriendlyMatchDto {\r\n  player1Id: number;\r\n  player2Id: number;\r\n  player1Score: number;\r\n  player2Score: number;\r\n}\r\n\r\nexport interface FriendlyPlayerDto {\r\n  playerId: number;\r\n  fullName: string;\r\n  createdOn: string;\r\n  isActive: boolean;\r\n  totalMatches: number;\r\n  totalWins: number;\r\n  totalLosses: number;\r\n  totalDraws: number;\r\n  winRate: number;\r\n}\r\n\r\nexport interface FriendlyMatchHistoryDto {\r\n  matchId: number;\r\n  playedOn: string;\r\n  player1Score: number;\r\n  player2Score: number;\r\n  winner: string;\r\n  player1Name: string;\r\n  player2Name: string;\r\n}\r\n\r\nexport interface OverallScoreDto {\r\n  player1Name: string;\r\n  player2Name: string;\r\n  player1TotalScore: number;\r\n  player2TotalScore: number;\r\n  totalMatches: number;\r\n  leadingPlayer: string;\r\n  scoreDifference: number;\r\n\r\n  // Win/Loss Statistics\r\n  player1Wins: number;\r\n  player1Losses: number;\r\n  player1Draws: number;\r\n  player2Wins: number;\r\n  player2Losses: number;\r\n  player2Draws: number;\r\n\r\n  // Win Rates\r\n  player1WinRate: number;\r\n  player2WinRate: number;\r\n\r\n  // Match History\r\n  matchHistory: FriendlyMatchHistoryDto[];\r\n}\r\n\r\nexport interface ShutoutResultDto {\r\n  shutoutId: number;\r\n  matchId: number;\r\n  winnerName: string;\r\n  loserName: string;\r\n  achievedOn: string;\r\n  winnerScore: number;\r\n  loserScore: number;\r\n  matchDetails: string;\r\n}\r\n\r\n// Advanced Filtering and Pagination Types\r\nexport interface MatchFilterDto {\r\n  playerId?: number;\r\n  opponentIds?: number[];\r\n  dateFilter: DateFilter;\r\n  page: number;\r\n  pageSize: number;\r\n}\r\n\r\nexport enum DateFilter {\r\n  Today = 1,\r\n  Last3Days = 2,\r\n  LastWeek = 3,\r\n  LastMonth = 4,\r\n  AllTime = 5,\r\n}\r\n\r\nexport interface PaginatedMatchResultDto {\r\n  matches: FriendlyMatchHistoryDto[];\r\n  totalMatches: number;\r\n  currentPage: number;\r\n  pageSize: number;\r\n  totalPages: number;\r\n  hasPreviousPage: boolean;\r\n  hasNextPage: boolean;\r\n  filterSummary: string;\r\n}\r\n\r\n// Shutout Filtering Types\r\nexport interface ShutoutFilterDto {\r\n  playerId?: number;\r\n  playerIds?: number[];\r\n  playerRole?: ShutoutPlayerRole;\r\n  dateFilter: DateFilter;\r\n  page: number;\r\n  pageSize: number;\r\n}\r\n\r\nexport enum ShutoutPlayerRole {\r\n  Any = 1, // اللاعب سواء كسب أو خسر\r\n  Winner = 2, // اللاعب كان الفائز بس\r\n  Loser = 3, // اللاعب كان الخاسر بس\r\n}\r\n\r\nexport interface PaginatedShutoutResultDto {\r\n  shutouts: ShutoutResultDto[];\r\n  totalShutouts: number;\r\n  currentPage: number;\r\n  pageSize: number;\r\n  totalPages: number;\r\n  hasPreviousPage: boolean;\r\n  hasNextPage: boolean;\r\n  filterSummary: string;\r\n}\r\n\r\n// ========================================\r\n// API Response Types\r\n// ========================================\r\n\r\nexport interface ApiResponse<T = any> {\r\n  success: boolean;\r\n  message: string;\r\n  data?: T;\r\n}\r\n\r\n// ========================================\r\n// Service Interface\r\n// ========================================\r\n\r\nexport interface IFriendlyMatchApiService {\r\n  // Player Management\r\n  getAllFriendlyPlayers(): Promise<FriendlyPlayerDto[]>;\r\n  getFriendlyPlayerById(playerId: number): Promise<FriendlyPlayerDto | null>;\r\n  addFriendlyPlayer(player: AddFriendlyPlayerDto): Promise<ApiResponse>;\r\n  deleteFriendlyPlayer(playerId: number): Promise<ApiResponse>;\r\n  deactivateFriendlyPlayer(playerId: number): Promise<ApiResponse>;\r\n  getFriendlyPlayersRanking(): Promise<FriendlyPlayerDto[]>;\r\n  getFriendlyPlayerStats(playerId: number): Promise<FriendlyPlayerDto | null>;\r\n\r\n  // Match Management\r\n  getAllFriendlyMatches(): Promise<FriendlyMatchHistoryDto[]>;\r\n  getFriendlyMatchesBetweenPlayers(\r\n    player1Id: number,\r\n    player2Id: number\r\n  ): Promise<FriendlyMatchHistoryDto[]>;\r\n  recordFriendlyMatch(match: RecordFriendlyMatchDto): Promise<ApiResponse>;\r\n  deleteFriendlyMatch(matchId: number): Promise<ApiResponse>;\r\n  updateFriendlyMatch(\r\n    matchId: number,\r\n    match: RecordFriendlyMatchDto\r\n  ): Promise<ApiResponse>;\r\n\r\n  // Statistics and Analysis\r\n  getOverallScoreBetweenPlayers(\r\n    player1Id: number,\r\n    player2Id: number\r\n  ): Promise<OverallScoreDto | null>;\r\n\r\n  // Shutout Results (5-0 matches)\r\n  getAllShutoutResults(): Promise<ShutoutResultDto[]>;\r\n  getShutoutResultsByPlayer(playerId: number): Promise<ShutoutResultDto[]>;\r\n  getShutoutResultByMatch(matchId: number): Promise<ShutoutResultDto | null>;\r\n  deleteShutoutResult(shutoutId: number): Promise<ApiResponse>;\r\n}\r\n\r\n// ========================================\r\n// Utility Types\r\n// ========================================\r\n\r\nexport type MatchWinner = 'player1' | 'player2' | 'draw';\r\n\r\nexport interface MatchResult {\r\n  winner: MatchWinner;\r\n  player1Score: number;\r\n  player2Score: number;\r\n}\r\n\r\nexport interface PlayerStats {\r\n  playerId: number;\r\n  fullName: string;\r\n  totalMatches: number;\r\n  wins: number;\r\n  losses: number;\r\n  draws: number;\r\n  winRate: number;\r\n  averageScore: number;\r\n}\r\n\r\nexport interface HeadToHeadStats {\r\n  player1Id: number;\r\n  player2Id: number;\r\n  player1Name: string;\r\n  player2Name: string;\r\n  totalMatches: number;\r\n  player1Wins: number;\r\n  player2Wins: number;\r\n  draws: number;\r\n  player1TotalScore: number;\r\n  player2TotalScore: number;\r\n  leadingPlayer: string;\r\n  scoreDifference: number;\r\n}\r\n\r\n// ========================================\r\n// UI Component Types\r\n// ========================================\r\n\r\nexport interface PlayerSelectionOption {\r\n  value: number;\r\n  label: string;\r\n  isActive: boolean;\r\n}\r\n\r\nexport interface MatchFormData {\r\n  player1Id: number | null;\r\n  player2Id: number | null;\r\n  player1Score: number;\r\n  player2Score: number;\r\n}\r\n\r\nexport interface MatchFilterOptions {\r\n  player1Id?: number;\r\n  player2Id?: number;\r\n  dateFrom?: string;\r\n  dateTo?: string;\r\n  winner?: string;\r\n}\r\n\r\nexport interface PlayerFilterOptions {\r\n  isActive?: boolean;\r\n  hasMatches?: boolean;\r\n  minWinRate?: number;\r\n  maxWinRate?: number;\r\n}\r\n\r\n// ========================================\r\n// Constants\r\n// ========================================\r\n\r\nexport const FRIENDLY_MATCH_ENDPOINTS = {\r\n  // Player Management\r\n  GET_ALL_PLAYERS: '/FriendlyMatch/players',\r\n  GET_PLAYER_BY_ID: (id: number) => `/FriendlyMatch/players/${id}`,\r\n  ADD_PLAYER: '/FriendlyMatch/players',\r\n  DELETE_PLAYER: (id: number) => `/FriendlyMatch/players/${id}`,\r\n  DEACTIVATE_PLAYER: (id: number) => `/FriendlyMatch/players/${id}/deactivate`,\r\n  GET_PLAYERS_RANKING: '/FriendlyMatch/players/ranking',\r\n  GET_PLAYER_STATS: (id: number) => `/FriendlyMatch/players/${id}/stats`,\r\n\r\n  // Match Management\r\n  GET_ALL_MATCHES: '/FriendlyMatch/matches',\r\n  GET_MATCHES_BETWEEN_PLAYERS: (player1Id: number, player2Id: number) =>\r\n    `/FriendlyMatch/matches/${player1Id}/${player2Id}`,\r\n  RECORD_MATCH: '/FriendlyMatch/matches/record',\r\n  DELETE_MATCH: (id: number) => `/FriendlyMatch/matches/${id}`,\r\n  UPDATE_MATCH: (id: number) => `/FriendlyMatch/matches/${id}`,\r\n\r\n  // Statistics\r\n  GET_OVERALL_SCORE: (player1Id: number, player2Id: number) =>\r\n    `/FriendlyMatch/overall-score/${player1Id}/${player2Id}`,\r\n\r\n  // Advanced Match Filtering and Pagination\r\n  GET_FILTERED_MATCHES: '/FriendlyMatch/matches/filtered',\r\n  GET_PLAYER_MATCHES: (playerId: number) =>\r\n    `/FriendlyMatch/matches/player/${playerId}`,\r\n  GET_PLAYER_VS_OPPONENTS: (playerId: number) =>\r\n    `/FriendlyMatch/matches/player/${playerId}/vs-opponents`,\r\n\r\n  // Shutout Results (5-0 matches)\r\n  GET_ALL_SHUTOUTS: '/FriendlyMatch/shutouts',\r\n  GET_SHUTOUTS_BY_PLAYER: (playerId: number) =>\r\n    `/FriendlyMatch/shutouts/player/${playerId}`,\r\n  GET_SHUTOUT_BY_MATCH: (matchId: number) =>\r\n    `/FriendlyMatch/shutouts/match/${matchId}`,\r\n  DELETE_SHUTOUT: (shutoutId: number) => `/FriendlyMatch/shutouts/${shutoutId}`,\r\n\r\n  // Advanced Shutout Filtering and Pagination\r\n  GET_FILTERED_SHUTOUTS: '/FriendlyMatch/shutouts/filtered',\r\n  GET_PLAYER_SHUTOUTS_FILTERED: (playerId: number) =>\r\n    `/FriendlyMatch/shutouts/player/${playerId}/filtered`,\r\n  GET_PLAYERS_SHUTOUTS_FILTERED: '/FriendlyMatch/shutouts/players/filtered',\r\n\r\n  // Test\r\n  TEST: '/FriendlyMatch/test',\r\n} as const;\r\n\r\n// ========================================\r\n// Helper Functions\r\n// ========================================\r\n\r\nexport const calculateWinRate = (\r\n  wins: number,\r\n  totalMatches: number\r\n): number => {\r\n  return totalMatches > 0 ? (wins / totalMatches) * 100 : 0;\r\n};\r\n\r\nexport const getMatchWinner = (\r\n  player1Score: number,\r\n  player2Score: number\r\n): MatchWinner => {\r\n  if (player1Score > player2Score) return 'player1';\r\n  if (player2Score > player1Score) return 'player2';\r\n  return 'draw';\r\n};\r\n\r\nexport const formatDate = (dateString: string): string => {\r\n  return new Date(dateString).toLocaleDateString('ar-EG', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  });\r\n};\r\n\r\nexport const validateMatchData = (data: RecordFriendlyMatchDto): string[] => {\r\n  const errors: string[] = [];\r\n\r\n  if (data.player1Id === data.player2Id) {\r\n    errors.push('لا يمكن للاعب أن يلعب ضد نفسه');\r\n  }\r\n\r\n  if (data.player1Score < 0 || data.player2Score < 0) {\r\n    errors.push('النتيجة يجب أن تكون صفر أو أكثر');\r\n  }\r\n\r\n  if (!data.player1Id || !data.player2Id) {\r\n    errors.push('يجب اختيار اللاعبين');\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport const validatePlayerData = (data: AddFriendlyPlayerDto): string[] => {\r\n  const errors: string[] = [];\r\n\r\n  if (!data.fullName || data.fullName.trim().length === 0) {\r\n    errors.push('اسم اللاعب مطلوب');\r\n  }\r\n\r\n  if (data.fullName && data.fullName.trim().length < 2) {\r\n    errors.push('اسم اللاعب يجب أن يكون أكثر من حرفين');\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\n// ========================================\r\n// Default Values\r\n// ========================================\r\n\r\nexport const DEFAULT_MATCH_FORM: MatchFormData = {\r\n  player1Id: null,\r\n  player2Id: null,\r\n  player1Score: 0,\r\n  player2Score: 0,\r\n};\r\n\r\nexport const DEFAULT_PLAYER_FORM: AddFriendlyPlayerDto = {\r\n  fullName: '',\r\n};\r\n\r\nexport const DEFAULT_MATCH_FILTER: MatchFilterOptions = {\r\n  player1Id: undefined,\r\n  player2Id: undefined,\r\n  dateFrom: undefined,\r\n  dateTo: undefined,\r\n  winner: undefined,\r\n};\r\n\r\nexport const DEFAULT_PLAYER_FILTER: PlayerFilterOptions = {\r\n  isActive: true,\r\n  hasMatches: undefined,\r\n  minWinRate: undefined,\r\n  maxWinRate: undefined,\r\n};\r\n","// ========================================\r\n// Friendly Message System TypeScript Types\r\n// ========================================\r\n\r\n// DTOs\r\nexport interface SendFriendlyMessageDto {\r\n  content: string;\r\n}\r\n\r\nexport interface FriendlyMessageDto {\r\n  id: number;\r\n  playerId?: number; // قد لا يكون موجود\r\n  senderId?: string; // إضافة senderId للتوافق مع الـ backend\r\n  playerFullName?: string; // قد لا يكون موجود\r\n  senderFullName?: string; // إضافة senderFullName للتوافق مع الـ backend\r\n  senderPhoneNumber?: string; // إضافة رقم الهاتف\r\n  content: string;\r\n  isRead: boolean;\r\n  sentAt: string;\r\n  isFromAdmin: boolean;\r\n  messageType?: string; // قد لا يكون موجود\r\n}\r\n\r\n// API Response Types\r\nexport interface FriendlyMessageResponse {\r\n  success: boolean;\r\n  message: string;\r\n  messages?: FriendlyMessageDto[];\r\n}\r\n\r\nexport interface FriendlyMessageStatsResponse {\r\n  success: boolean;\r\n  unreadCount: number;\r\n  playerId?: number;\r\n}\r\n\r\n// API Service Interface\r\nexport interface IFriendlyMessageService {\r\n  // Player Actions\r\n  sendMessageToAdmin(\r\n    playerId: number,\r\n    content: string\r\n  ): Promise<FriendlyMessageResponse>;\r\n  getPlayerMessages(playerId: number): Promise<FriendlyMessageResponse>;\r\n\r\n  // Admin Actions\r\n  getAllMessages(): Promise<FriendlyMessageResponse>;\r\n  getUnreadMessages(): Promise<FriendlyMessageResponse>;\r\n  getReadMessages(): Promise<FriendlyMessageResponse>;\r\n  getPlayerConversation(playerId: number): Promise<FriendlyMessageResponse>;\r\n  sendAdminReply(\r\n    playerId: number,\r\n    content: string\r\n  ): Promise<FriendlyMessageResponse>;\r\n  markMessageAsRead(messageId: number): Promise<FriendlyMessageResponse>;\r\n  markAllPlayerMessagesAsRead(\r\n    playerId: number\r\n  ): Promise<FriendlyMessageResponse>;\r\n  deleteMessage(messageId: number): Promise<FriendlyMessageResponse>;\r\n\r\n  // Statistics\r\n  getUnreadMessagesCount(): Promise<FriendlyMessageStatsResponse>;\r\n  getPlayerUnreadMessagesCount(\r\n    playerId: number\r\n  ): Promise<FriendlyMessageStatsResponse>;\r\n}\r\n\r\n// Endpoint Constants\r\nexport const FRIENDLY_MESSAGE_ENDPOINTS = {\r\n  // Player Actions\r\n  SEND_MESSAGE: '/FriendlyMessage/send',\r\n  GET_PLAYER_MESSAGES: '/FriendlyMessage/my-messages',\r\n\r\n  // Admin Actions\r\n  GET_ALL_MESSAGES: '/FriendlyMessage/inbox',\r\n  GET_UNREAD_MESSAGES: '/FriendlyMessage/unread-messages',\r\n  GET_READ_MESSAGES: '/FriendlyMessage/read-messages',\r\n  GET_PLAYER_CONVERSATION: (playerId: number) =>\r\n    `/FriendlyMessage/conversation/${playerId}`,\r\n  SEND_ADMIN_REPLY: (playerId: string) => `/FriendlyMessage/reply/${playerId}`,\r\n  MARK_MESSAGE_READ: (messageId: number) =>\r\n    `/FriendlyMessage/mark/${messageId}`,\r\n  MARK_ALL_PLAYER_MESSAGES_READ: (playerId: number) =>\r\n    `/FriendlyMessage/mark-all-read/${playerId}`,\r\n  DELETE_MESSAGE: (messageId: number) => `/FriendlyMessage/delete/${messageId}`,\r\n\r\n  // Statistics\r\n  GET_UNREAD_COUNT: '/FriendlyMessage/stats/unread-count',\r\n  GET_PLAYER_UNREAD_COUNT: (playerId: number) =>\r\n    `/FriendlyMessage/stats/player/${playerId}/unread-count`,\r\n\r\n  // Test\r\n  TEST: '/FriendlyMessage/test',\r\n} as const;\r\n\r\n// Validation Functions\r\nexport const validateFriendlyMessageContent = (content: string): string[] => {\r\n  const errors: string[] = [];\r\n\r\n  if (!content || content.trim().length === 0) {\r\n    errors.push('محتوى الرسالة مطلوب');\r\n  }\r\n\r\n  if (content && content.length > 2000) {\r\n    errors.push('محتوى الرسالة يجب أن يكون أقل من 2000 حرف');\r\n  }\r\n\r\n  if (content && content.trim().length < 3) {\r\n    errors.push('محتوى الرسالة يجب أن يكون أكثر من 3 أحرف');\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\n// Utility Functions\r\nexport const formatMessageDate = (dateString: string): string => {\r\n  const date = new Date(dateString);\r\n  const now = new Date();\r\n  const diffInHours = (now.getTime() - date.getTime()) / (1000 * 60 * 60);\r\n\r\n  if (diffInHours < 1) {\r\n    const diffInMinutes = Math.floor(\r\n      (now.getTime() - date.getTime()) / (1000 * 60)\r\n    );\r\n    return `منذ ${diffInMinutes} دقيقة`;\r\n  } else if (diffInHours < 24) {\r\n    return `منذ ${Math.floor(diffInHours)} ساعة`;\r\n  } else if (diffInHours < 168) {\r\n    // 7 days\r\n    const diffInDays = Math.floor(diffInHours / 24);\r\n    return `منذ ${diffInDays} يوم`;\r\n  } else {\r\n    return date.toLocaleDateString('ar-EG', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n  }\r\n};\r\n\r\nexport const getMessageTypeLabel = (isFromAdmin: boolean): string => {\r\n  return isFromAdmin ? 'رد الإدارة' : 'رسالة اللاعب';\r\n};\r\n\r\nexport const getMessageStatusLabel = (\r\n  isRead: boolean,\r\n  isFromAdmin: boolean\r\n): string => {\r\n  if (isFromAdmin) {\r\n    return 'تم الإرسال';\r\n  }\r\n  return isRead ? 'تم القراءة' : 'غير مقروءة';\r\n};\r\n\r\n// Sorting and Filtering Functions\r\nexport const sortMessagesByDate = (\r\n  messages: FriendlyMessageDto[],\r\n  ascending: boolean = false\r\n): FriendlyMessageDto[] => {\r\n  return messages.sort((a, b) => {\r\n    const dateA = new Date(a.sentAt).getTime();\r\n    const dateB = new Date(b.sentAt).getTime();\r\n    return ascending ? dateA - dateB : dateB - dateA;\r\n  });\r\n};\r\n\r\nexport const filterMessagesByType = (\r\n  messages: FriendlyMessageDto[],\r\n  isFromAdmin?: boolean\r\n): FriendlyMessageDto[] => {\r\n  if (isFromAdmin === undefined) {\r\n    return messages;\r\n  }\r\n  return messages.filter((msg) => msg.isFromAdmin === isFromAdmin);\r\n};\r\n\r\nexport const filterMessagesByReadStatus = (\r\n  messages: FriendlyMessageDto[],\r\n  isRead?: boolean\r\n): FriendlyMessageDto[] => {\r\n  if (isRead === undefined) {\r\n    return messages;\r\n  }\r\n  return messages.filter((msg) => msg.isRead === isRead);\r\n};\r\n\r\n// Statistics Functions\r\nexport const calculateUnreadCount = (\r\n  messages: FriendlyMessageDto[]\r\n): number => {\r\n  return messages.filter((msg) => !msg.isRead && !msg.isFromAdmin).length;\r\n};\r\n\r\nexport const calculatePlayerUnreadCount = (\r\n  messages: FriendlyMessageDto[],\r\n  playerId: number\r\n): number => {\r\n  return messages.filter(\r\n    (msg) => msg.playerId === playerId && !msg.isRead && !msg.isFromAdmin\r\n  ).length;\r\n};\r\n\r\n// Conversation Functions\r\nexport const getConversationSummary = (messages: FriendlyMessageDto[]) => {\r\n  const unreadCount = calculateUnreadCount(messages);\r\n  const lastMessage = messages[messages.length - 1];\r\n\r\n  return {\r\n    totalMessages: messages.length,\r\n    unreadCount,\r\n    lastMessage: lastMessage?.content || '',\r\n    lastMessageDate: lastMessage?.sentAt || '',\r\n    hasUnread: unreadCount > 0,\r\n  };\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport { CacheService } from './cache.service';\r\nimport {\r\n  FriendlyPlayerDto,\r\n  FriendlyMatchHistoryDto,\r\n  OverallScoreDto,\r\n  ShutoutResultDto,\r\n  PlayerStats,\r\n  FRIENDLY_MATCH_ENDPOINTS,\r\n  RecordFriendlyMatchDto,\r\n  ApiResponse,\r\n} from 'friendly-match-types';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FriendlyMatchService {\r\n  private baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient, private cacheService: CacheService) {}\r\n\r\n  // Player Management (Public endpoints only)\r\n  getAllFriendlyPlayers(): Observable<FriendlyPlayerDto[]> {\r\n    return this.cacheService.cachePlayerRequest(\r\n      'friendly-players',\r\n      this.http.get<FriendlyPlayerDto[]>(\r\n        `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.GET_ALL_PLAYERS}`\r\n      )\r\n    );\r\n  }\r\n\r\n  getFriendlyPlayersRanking(): Observable<FriendlyPlayerDto[]> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.GET_PLAYERS_RANKING}`;\r\n    return this.http.get<FriendlyPlayerDto[]>(url);\r\n  }\r\n\r\n  getFriendlyPlayerStats(\r\n    playerId: number\r\n  ): Observable<FriendlyPlayerDto | null> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.GET_PLAYER_STATS(\r\n      playerId\r\n    )}`;\r\n    return this.http.get<FriendlyPlayerDto | null>(url);\r\n  }\r\n\r\n  getPlayersStatistics(): Observable<PlayerStats[]> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.GET_PLAYERS_RANKING}`;\r\n    return this.http.get<PlayerStats[]>(url);\r\n  }\r\n\r\n  // Admin-specific Player Management\r\n  addFriendlyPlayerAsync(fullName: string): Observable<ApiResponse> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.ADD_PLAYER}`;\r\n    return this.http.post<ApiResponse>(url, { fullName });\r\n  }\r\n\r\n  deleteFriendlyPlayerAsync(playerId: number): Observable<ApiResponse> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.DELETE_PLAYER(\r\n      playerId\r\n    )}`;\r\n    return this.http.delete<ApiResponse>(url);\r\n  }\r\n\r\n  deactivateFriendlyPlayerAsync(playerId: number): Observable<ApiResponse> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.DEACTIVATE_PLAYER(\r\n      playerId\r\n    )}`;\r\n    return this.http.put<ApiResponse>(url, {});\r\n  }\r\n\r\n  // Match Management (Public endpoints only)\r\n  getAllFriendlyMatches(): Observable<FriendlyMatchHistoryDto[]> {\r\n    return this.cacheService.cachePlayerRequest(\r\n      'friendly-matches',\r\n      this.http.get<FriendlyMatchHistoryDto[]>(\r\n        `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.GET_ALL_MATCHES}`\r\n      )\r\n    );\r\n  }\r\n\r\n  getFriendlyMatchesBetweenPlayers(\r\n    player1Id: number,\r\n    player2Id: number\r\n  ): Observable<FriendlyMatchHistoryDto[]> {\r\n    const url = `${\r\n      this.baseUrl\r\n    }${FRIENDLY_MATCH_ENDPOINTS.GET_MATCHES_BETWEEN_PLAYERS(\r\n      player1Id,\r\n      player2Id\r\n    )}`;\r\n    return this.http.get<FriendlyMatchHistoryDto[]>(url);\r\n  }\r\n\r\n  // Admin-specific Match Management\r\n  recordFriendlyMatchAsync(\r\n    matchData: RecordFriendlyMatchDto\r\n  ): Observable<ApiResponse> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.RECORD_MATCH}`;\r\n    return this.http.post<ApiResponse>(url, matchData);\r\n  }\r\n\r\n  updateFriendlyMatchAsync(\r\n    matchId: number,\r\n    matchData: RecordFriendlyMatchDto\r\n  ): Observable<ApiResponse> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.UPDATE_MATCH(\r\n      matchId\r\n    )}`;\r\n    return this.http.put<ApiResponse>(url, matchData);\r\n  }\r\n\r\n  deleteFriendlyMatchAsync(matchId: number): Observable<ApiResponse> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.DELETE_MATCH(\r\n      matchId\r\n    )}`;\r\n    return this.http.delete<ApiResponse>(url);\r\n  }\r\n\r\n  // Statistics and Analysis\r\n  getOverallScoreBetweenPlayers(\r\n    player1Id: number,\r\n    player2Id: number\r\n  ): Observable<OverallScoreDto | null> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.GET_OVERALL_SCORE(\r\n      player1Id,\r\n      player2Id\r\n    )}`;\r\n    return this.http.get<OverallScoreDto | null>(url);\r\n  }\r\n\r\n  // Shutout Results (Public endpoints only)\r\n  getAllShutoutResults(): Observable<ShutoutResultDto[]> {\r\n    return this.cacheService.cachePlayerRequest(\r\n      'friendly-shutouts',\r\n      this.http.get<ShutoutResultDto[]>(\r\n        `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.GET_ALL_SHUTOUTS}`\r\n      )\r\n    );\r\n  }\r\n\r\n  getShutoutResultsByPlayer(playerId: number): Observable<ShutoutResultDto[]> {\r\n    const url = `${\r\n      this.baseUrl\r\n    }${FRIENDLY_MATCH_ENDPOINTS.GET_SHUTOUTS_BY_PLAYER(playerId)}`;\r\n    return this.http.get<ShutoutResultDto[]>(url);\r\n  }\r\n\r\n  getShutoutResultByMatch(\r\n    matchId: number\r\n  ): Observable<ShutoutResultDto | null> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.GET_SHUTOUT_BY_MATCH(\r\n      matchId\r\n    )}`;\r\n    return this.http.get<ShutoutResultDto | null>(url);\r\n  }\r\n\r\n  // Advanced Filtering (Public endpoints only)\r\n  getFilteredMatches(filter: any): Observable<any> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.GET_FILTERED_MATCHES}`;\r\n    return this.http.get(url, { params: filter });\r\n  }\r\n\r\n  getPlayerMatches(playerId: number, filter: any): Observable<any> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.GET_PLAYER_MATCHES(\r\n      playerId\r\n    )}`;\r\n    return this.http.get(url, { params: filter });\r\n  }\r\n\r\n  getPlayerVsOpponentsMatches(\r\n    playerId: number,\r\n    opponentIds: number[],\r\n    filter: any\r\n  ): Observable<any> {\r\n    const url = `${\r\n      this.baseUrl\r\n    }${FRIENDLY_MATCH_ENDPOINTS.GET_PLAYER_VS_OPPONENTS(playerId)}`;\r\n    return this.http.post(url, opponentIds, { params: filter });\r\n  }\r\n\r\n  // Test endpoint\r\n  testConnection(): Observable<any> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MATCH_ENDPOINTS.TEST}`;\r\n    return this.http.get(url);\r\n  }\r\n\r\n  // Cache Management (for admin component compatibility)\r\n  refreshFriendlyPlayers(): void {\r\n    this.cacheService.remove('friendly-players');\r\n  }\r\n\r\n  refreshFriendlyMatches(): void {\r\n    this.cacheService.remove('friendly-matches');\r\n  }\r\n\r\n  refreshFriendlyShutouts(): void {\r\n    this.cacheService.remove('friendly-shutouts');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../environments/environment';\r\nimport {\r\n  FriendlyMessageResponse,\r\n  FriendlyMessageStatsResponse,\r\n  FRIENDLY_MESSAGE_ENDPOINTS,\r\n} from 'friendly-message-types';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FriendlyMessageService {\r\n  private baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  // Player Actions\r\n  sendMessageToAdmin(\r\n    playerId: number,\r\n    content: string\r\n  ): Observable<FriendlyMessageResponse> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MESSAGE_ENDPOINTS.SEND_MESSAGE}`;\r\n    return this.http.post<FriendlyMessageResponse>(url, { content });\r\n  }\r\n\r\n  getPlayerMessages(playerId: number): Observable<FriendlyMessageResponse> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MESSAGE_ENDPOINTS.GET_PLAYER_MESSAGES}`;\r\n    return this.http.get<FriendlyMessageResponse>(url);\r\n  }\r\n\r\n  // Admin Actions\r\n  getAllMessages(): Observable<FriendlyMessageResponse> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MESSAGE_ENDPOINTS.GET_ALL_MESSAGES}`;\r\n    return this.http.get<FriendlyMessageResponse>(url);\r\n  }\r\n\r\n  getUnreadMessages(): Observable<FriendlyMessageResponse> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MESSAGE_ENDPOINTS.GET_UNREAD_MESSAGES}`;\r\n    return this.http.get<FriendlyMessageResponse>(url);\r\n  }\r\n\r\n  getReadMessages(): Observable<FriendlyMessageResponse> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MESSAGE_ENDPOINTS.GET_READ_MESSAGES}`;\r\n    return this.http.get<FriendlyMessageResponse>(url);\r\n  }\r\n\r\n  getPlayerConversation(playerId: number): Observable<FriendlyMessageResponse> {\r\n    const url = `${\r\n      this.baseUrl\r\n    }${FRIENDLY_MESSAGE_ENDPOINTS.GET_PLAYER_CONVERSATION(playerId)}`;\r\n    return this.http.get<FriendlyMessageResponse>(url);\r\n  }\r\n\r\n  sendAdminReply(\r\n    playerId: string,\r\n    content: string\r\n  ): Observable<FriendlyMessageResponse> {\r\n    if (!playerId) {\r\n      throw new Error('معرف اللاعب غير صحيح');\r\n    }\r\n    \r\n    const url = `${this.baseUrl}${FRIENDLY_MESSAGE_ENDPOINTS.SEND_ADMIN_REPLY(\r\n      playerId\r\n    )}`;\r\n    return this.http.post<FriendlyMessageResponse>(url, { content });\r\n  }\r\n\r\n  markMessageAsRead(messageId: number): Observable<FriendlyMessageResponse> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MESSAGE_ENDPOINTS.MARK_MESSAGE_READ(\r\n      messageId\r\n    )}`;\r\n    return this.http.post<FriendlyMessageResponse>(url, { marked: true });\r\n  }\r\n\r\n  markAllPlayerMessagesAsRead(\r\n    playerId: number\r\n  ): Observable<FriendlyMessageResponse> {\r\n    const url = `${\r\n      this.baseUrl\r\n    }${FRIENDLY_MESSAGE_ENDPOINTS.MARK_ALL_PLAYER_MESSAGES_READ(playerId)}`;\r\n    return this.http.post<FriendlyMessageResponse>(url, { marked: true });\r\n  }\r\n\r\n  deleteMessage(messageId: number): Observable<FriendlyMessageResponse> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MESSAGE_ENDPOINTS.DELETE_MESSAGE(\r\n      messageId\r\n    )}`;\r\n    return this.http.post<FriendlyMessageResponse>(url, { marked: true });\r\n  }\r\n\r\n  // Statistics\r\n  getUnreadMessagesCount(): Observable<FriendlyMessageStatsResponse> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MESSAGE_ENDPOINTS.GET_UNREAD_COUNT}`;\r\n    return this.http.get<FriendlyMessageStatsResponse>(url);\r\n  }\r\n\r\n  getPlayerUnreadMessagesCount(\r\n    playerId: number\r\n  ): Observable<FriendlyMessageStatsResponse> {\r\n    const url = `${\r\n      this.baseUrl\r\n    }${FRIENDLY_MESSAGE_ENDPOINTS.GET_PLAYER_UNREAD_COUNT(playerId)}`;\r\n    return this.http.get<FriendlyMessageStatsResponse>(url);\r\n  }\r\n\r\n  // Test endpoint\r\n  testConnection(): Observable<any> {\r\n    const url = `${this.baseUrl}${FRIENDLY_MESSAGE_ENDPOINTS.TEST}`;\r\n    return this.http.get(url);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from './../../../environments/environment';\r\nimport {\r\n  AllLeagueRank,\r\n  CommonResponse,\r\n  LeagueResponse,\r\n  StartLeagueDto,\r\n} from 'src/app/models/interfaces';\r\nimport { CacheService } from './cache.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LeagueService {\r\n  private baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient, private cacheService: CacheService) {}\r\n\r\n  resetLeague(LeagueId: number): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(\r\n      `${this.baseUrl}/league/reset/${LeagueId}`,\r\n      {}\r\n    );\r\n  }\r\n\r\n  startLeague(dto: StartLeagueDto): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(`${this.baseUrl}/league/start`, dto);\r\n  }\r\n\r\n  GetCurrentLeague(forceRefresh: boolean = false): Observable<LeagueResponse> {\r\n    const request = this.http.get<LeagueResponse>(\r\n      `${this.baseUrl}/league/getCurrentLeague`\r\n    );\r\n\r\n    if (forceRefresh || this.cacheService.shouldRefreshCurrentLeague()) {\r\n      return this.cacheService.forceRefresh(\r\n        'current-league',\r\n        request,\r\n        30 * 60 * 1000\r\n      );\r\n    }\r\n\r\n    return this.cacheService.cachePlayerRequest('current-league', request);\r\n  }\r\n\r\n  // Admin-specific method for current league without cache\r\n  getAdminCurrentLeague(): Observable<LeagueResponse> {\r\n    return this.http.get<LeagueResponse>(\r\n      `${this.baseUrl}/league/getCurrentLeague`\r\n    );\r\n  }\r\n\r\n  GetAllLeaguesRank(\r\n    forceRefresh: boolean = false\r\n  ): Observable<AllLeagueRank[]> {\r\n    const request = this.http.get<AllLeagueRank[]>(\r\n      `${this.baseUrl}/player/players/all`\r\n    );\r\n\r\n    if (forceRefresh || this.cacheService.shouldRefreshRankings()) {\r\n      return this.cacheService.forceRefresh(\r\n        'all-leagues-rank',\r\n        request,\r\n        30 * 60 * 1000\r\n      );\r\n    }\r\n\r\n    return this.cacheService.cacheAllLeaguesRequest(\r\n      'all-leagues-rank',\r\n      request\r\n    );\r\n  }\r\n\r\n  // Admin-specific method with 30-minute cache\r\n  getAdminAllLeagues(): Observable<AllLeagueRank[]> {\r\n    return this.http.get<AllLeagueRank[]>(`${this.baseUrl}/player/players/all`);\r\n  }\r\n\r\n  DeleteLeague(leagueId: number): Observable<CommonResponse> {\r\n    return this.http.delete<CommonResponse>(\r\n      `${this.baseUrl}/league/delete/${leagueId}`\r\n    );\r\n  }\r\n\r\n  createGroupsAndMatches(leagueId: number): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(\r\n      `${this.baseUrl}/league/${leagueId}/create-groups`,\r\n      {}\r\n    );\r\n  }\r\n\r\n  startKnockoutStage(leagueId: number): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(\r\n      `${this.baseUrl}/league/${leagueId}/start-knockouts`,\r\n      {}\r\n    );\r\n  }\r\n\r\n  startSemiFinals(leagueId: number): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(\r\n      `${this.baseUrl}/league/${leagueId}/start-semifinals`,\r\n      {}\r\n    );\r\n  }\r\n\r\n  startFinal(leagueId: number): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(\r\n      `${this.baseUrl}/league/${leagueId}/start-final`,\r\n      {}\r\n    );\r\n  }\r\n\r\n  // Get last update time for leagues rank\r\n  getLastLeaguesRankUpdateTime(): Date | null {\r\n    return this.cacheService.getLastUpdateTime('all-leagues-rank');\r\n  }\r\n\r\n  // Get last update time for current league\r\n  getLastCurrentLeagueUpdateTime(): Date | null {\r\n    return this.cacheService.getLastUpdateTime('current-league');\r\n  }\r\n\r\n  // Check if rankings cache is expired\r\n  isRankingsCacheExpired(): boolean {\r\n    return this.cacheService.isCacheExpired('all-leagues-rank');\r\n  }\r\n\r\n  // Check if current league cache is expired\r\n  isCurrentLeagueCacheExpired(): boolean {\r\n    return this.cacheService.isCacheExpired('current-league');\r\n  }\r\n\r\n  // Get next rankings update time\r\n  getNextRankingsUpdateTime(): Date | null {\r\n    return this.cacheService.getCacheExpiryTime('all-leagues-rank');\r\n  }\r\n\r\n  // Get next current league update time\r\n  getNextCurrentLeagueUpdateTime(): Date | null {\r\n    return this.cacheService.getCacheExpiryTime('current-league');\r\n  }\r\n\r\n  // Force refresh rankings data\r\n  forceRefreshRankings(): Observable<AllLeagueRank[]> {\r\n    return this.GetAllLeaguesRank(true);\r\n  }\r\n\r\n  // Force refresh current league data\r\n  forceRefreshCurrentLeague(): Observable<LeagueResponse> {\r\n    return this.GetCurrentLeague(true);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, tap } from 'rxjs';\r\nimport { environment } from './../../../environments/environment';\r\nimport { Match, ResultResponse } from 'src/app/models/interfaces';\r\nimport { PlayerService } from './player.service';\r\nimport { CacheService } from './cache.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MatchService {\r\n  private baseUrl = environment.apiUrl;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private playerService: PlayerService,\r\n    private cacheService: CacheService\r\n  ) {}\r\n\r\n  getMatches(): Observable<Match[]> {\r\n    return this.cacheService.cachePlayerRequest(\r\n      'current-matches',\r\n      this.http.get<Match[]>(`${this.baseUrl}/match`)\r\n    );\r\n  }\r\n\r\n  // Admin-specific method - now same as regular method\r\n  getAdminMatches(): Observable<Match[]> {\r\n    return this.http.get<Match[]>(`${this.baseUrl}/match`);\r\n  }\r\n\r\n  updateMatch(\r\n    matchId: number,\r\n    winnerId: number | null\r\n  ): Observable<ResultResponse> {\r\n    return this.http\r\n      .post<ResultResponse>(`${this.baseUrl}/match/${matchId}/result`, {\r\n        winnerId,\r\n      })\r\n      .pipe(\r\n        tap(() => {\r\n          this.playerService.refreshPlayers();\r\n        })\r\n      );\r\n  }\r\n\r\n  resetMatch(matchId: number): Observable<ResultResponse> {\r\n    return this.http\r\n      .delete<ResultResponse>(`${this.baseUrl}/match/reset/${matchId}`)\r\n      .pipe(\r\n        tap(() => {\r\n          this.playerService.refreshPlayers();\r\n        })\r\n      );\r\n  }\r\n\r\n  // Get last update time for current matches\r\n  getLastMatchesUpdateTime(): Date | null {\r\n    return this.cacheService.getLastUpdateTime('current-matches');\r\n  }\r\n}\r\n","import { environment } from './../../../environments/environment';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CommonResponse, MessagesResponse } from 'src/app/models/interfaces';\r\nimport { CacheService } from './cache.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class MessageService {\r\n  private baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient, private cacheService: CacheService) {}\r\n\r\n  sendMessage(message: string): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(`${this.baseUrl}/Message/send`, {\r\n      Content: message,\r\n    });\r\n  }\r\n\r\n  getMessages(): Observable<MessagesResponse> {\r\n    return this.http.get<MessagesResponse>(`${this.baseUrl}/Message/inbox`);\r\n  }\r\n\r\n  // Admin-specific method - now loads fresh data immediately without caching\r\n  getAdminMessages(): Observable<MessagesResponse> {\r\n    return this.http.get<MessagesResponse>(`${this.baseUrl}/Message/inbox`);\r\n  }\r\n\r\n  toggleMarkMessage(\r\n    messageId: number,\r\n    marked: boolean\r\n  ): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(\r\n      `${this.baseUrl}/Message/mark/${messageId}`,\r\n      { Marked: marked }\r\n    );\r\n  }\r\n\r\n  toggleDeleteMessage(\r\n    messageId: number,\r\n    marked: boolean\r\n  ): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(\r\n      `${this.baseUrl}/Message/delete/${messageId}`,\r\n      { Marked: marked }\r\n    );\r\n  }\r\n\r\n  getPlayerMessages(): Observable<MessagesResponse> {\r\n    return this.http.get<MessagesResponse>(\r\n      `${this.baseUrl}/Message/my-messages`\r\n    );\r\n  }\r\n\r\n  sendAdminReply(\r\n    playerId: string,\r\n    message: string\r\n  ): Observable<CommonResponse> {\r\n    return this.http.post<CommonResponse>(\r\n      `${this.baseUrl}/Message/reply/${playerId}`,\r\n      { Content: message }\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\nimport { CommonResponse } from 'src/app/models/interfaces';\r\nimport { CacheService } from './cache.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PlayerService {\r\n  private baseUrl = environment.apiUrl;\r\n\r\n  private rankingSubject = new BehaviorSubject<[]>([]);\r\n  ranking$ = this.rankingSubject.asObservable();\r\n\r\n  constructor(private http: HttpClient, private cacheService: CacheService) {}\r\n\r\n  getrank(): Observable<[]> {\r\n    return this.cacheService.cachePlayerRequest(\r\n      'player-ranking',\r\n      this.http\r\n        .get<[]>(`${this.baseUrl}/player/ranking`)\r\n        .pipe(tap((data) => this.rankingSubject.next(data)))\r\n    );\r\n  }\r\n\r\n  getPlayers(): Observable<[]> {\r\n    return this.cacheService.cachePlayerRequest(\r\n      'players-list',\r\n      this.http\r\n        .get<[]>(`${this.baseUrl}/player`)\r\n        .pipe(tap((data) => this.rankingSubject.next(data)))\r\n    );\r\n  }\r\n\r\n  // Admin-specific method with 30-minute cache\r\n  getAdminPlayers(): Observable<[]> {\r\n    return this.http\r\n      .get<[]>(`${this.baseUrl}/player`)\r\n      .pipe(tap((data) => this.rankingSubject.next(data)));\r\n  }\r\n\r\n  addPlayer(fullName: string): Observable<CommonResponse> {\r\n    return this.http\r\n      .post<CommonResponse>(`${this.baseUrl}/player`, { fullName })\r\n      .pipe(\r\n        tap(() => {\r\n          this.cacheService.invalidatePattern('player');\r\n          this.refreshPlayers();\r\n        })\r\n      );\r\n  }\r\n\r\n  deletePlayer(playerId: number): Observable<CommonResponse> {\r\n    return this.http\r\n      .delete<CommonResponse>(`${this.baseUrl}/player/${playerId}`)\r\n      .pipe(\r\n        tap(() => {\r\n          this.cacheService.invalidatePattern('player');\r\n          this.refreshPlayers();\r\n        })\r\n      );\r\n  }\r\n\r\n  refreshRanking() {\r\n    this.cacheService.remove('player-ranking');\r\n    this.http.get<[]>(`${this.baseUrl}/player/ranking`).subscribe((data) => {\r\n      this.rankingSubject.next(data);\r\n    });\r\n  }\r\n\r\n  refreshPlayers() {\r\n    this.cacheService.remove('players-list');\r\n    this.http.get<[]>(`${this.baseUrl}/player`).subscribe((data) => {\r\n      this.rankingSubject.next(data);\r\n    });\r\n  }\r\n\r\n  // Get next update time\r\n  getNextUpdateTime(): Date {\r\n    return this.cacheService.getNextPlayerUpdateTime();\r\n  }\r\n\r\n  // Get last update time for ranking\r\n  getLastRankingUpdateTime(): Date | null {\r\n    return this.cacheService.getLastUpdateTime('player-ranking');\r\n  }\r\n\r\n  // Get last update time for players list\r\n  getLastPlayersUpdateTime(): Date | null {\r\n    return this.cacheService.getLastUpdateTime('players-list');\r\n  }\r\n}\r\n","export interface LoginResponse {\r\n  success: boolean;\r\n  message: string;\r\n  token: string;\r\n  userRole?: string;\r\n}\r\n\r\nexport interface ResultResponse {\r\n  success: boolean;\r\n  message: string;\r\n}\r\n\r\nexport interface Player {\r\n  playerId: number;\r\n  fullName: string;\r\n  wins: number;\r\n  losses: number;\r\n  draws: number;\r\n  points: number;\r\n  matchesPlayed: number;\r\n  rank: number;\r\n  winRate: number;\r\n  groupNumber?: number;\r\n}\r\n\r\nexport interface CommonResponse {\r\n  success: boolean;\r\n  message: string;\r\n}\r\n\r\nexport interface MessagesResponse {\r\n  success: boolean;\r\n  message: string;\r\n  messages: Message[];\r\n}\r\nexport interface NoteResponse {\r\n  success: boolean;\r\n  message: string;\r\n  notes: Note[];\r\n}\r\n\r\nexport interface Note {\r\n  id: number;\r\n  content: string;\r\n  isDeleted: boolean;\r\n  isHidden: boolean;\r\n}\r\nexport interface Message {\r\n  id: number;\r\n  senderId: string;\r\n  senderFullName: string;\r\n  senderPhoneNumber: string;\r\n  content: string;\r\n  isRead: boolean;\r\n  isDeleted: boolean;\r\n  sentAt: string;\r\n  isFromAdmin: boolean;\r\n}\r\n\r\nexport enum TournamentStage {\r\n  League = 0, // القيمة الافتراضية\r\n  GroupStage = 1, // 1\r\n  QuarterFinals = 2, // 2\r\n  SemiFinals = 3, // 3\r\n  Final = 4, // 4\r\n}\r\n\r\nexport interface Match {\r\n  matchId: number;\r\n  score1: number;\r\n  score2: number;\r\n  isCompleted: boolean;\r\n  player1Name: string;\r\n  player2Name: string;\r\n  player1Id: number;\r\n  player2Id: number;\r\n  winnerId?: number | null;\r\n  stage?: TournamentStage;\r\n  tournamentStage?: string;\r\n}\r\n\r\nexport enum SystemOfLeague {\r\n  Points = 0,\r\n  Classic = 1,\r\n}\r\n\r\nexport interface StartLeagueDto {\r\n  name: string;\r\n  description: string;\r\n  typeOfLeague: LeagueType;\r\n  systemOfLeague: SystemOfLeague;\r\n}\r\n\r\nexport enum LeagueType {\r\n  Single = 0,\r\n  Multi = 1,\r\n  Groups = 2,\r\n}\r\n\r\nexport interface League {\r\n  id: number;\r\n  name: string;\r\n  description: string;\r\n  createdOn: string;\r\n  typeOfLeague: LeagueType;\r\n  isFinished: boolean;\r\n  systemOfLeague?: SystemOfLeague;\r\n}\r\n\r\nexport interface LeagueResponse {\r\n  response: CommonResponse;\r\n  league: League;\r\n}\r\nexport interface AllLeagueMatches {\r\n  leagueId: number;\r\n  leagueName: string;\r\n  leagueDescription: string;\r\n  leagueType: number;\r\n  isFinished: boolean;\r\n  systemOfLeague: SystemOfLeague;\r\n  createdOn: string;\r\n  matches: Match[];\r\n}\r\n\r\nexport interface Group {\r\n  groupNumber: number;\r\n  players: Player[];\r\n  matches?: Match[];\r\n}\r\n\r\nexport interface AllLeagueRank {\r\n  leagueId: number;\r\n  leagueName: string;\r\n  leagueDescription: string;\r\n  leagueType: number;\r\n  systemOfLeague: SystemOfLeague;\r\n  isFinished: boolean;\r\n  createdOn: string;\r\n  players: Player[] | null;\r\n  groups: Group[] | null;\r\n  matches: Match[] | null;\r\n  knockoutMatches: Match[] | null;\r\n}\r\n","<div *ngIf=\"currentLeague\" class=\"mb-8\">\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm rounded-lg p-6 text-center\"\r\n  >\r\n    <!-- معلومات إضافية للبطولات من نوع المجموعات -->\r\n    <div *ngIf=\"isGroupsTournament()\" class=\"mt-6\">\r\n      <div class=\"bg-gradient-to-r from-blue-600 to-purple-600 rounded-lg p-4\">\r\n        <h4 class=\"text-lg font-bold text-white mb-2\">\r\n          Groups Tournament Info\r\n        </h4>\r\n        <div class=\"flex justify-center space-x-6 text-sm\">\r\n          <span class=\"text-blue-200\">\r\n            <i class=\"fas fa-users mr-1\"></i>\r\n            Groups: 4\r\n          </span>\r\n          <span class=\"text-green-200\">\r\n            <i class=\"fas fa-trophy mr-1\"></i>\r\n            Winners Advance\r\n          </span>\r\n          <span class=\"text-yellow-200\">\r\n            <i class=\"fas fa-calendar mr-1\"></i>\r\n            Knockout Stage\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- رسالة عندما لا تكون هناك بطولة نشطة -->\r\n<div *ngIf=\"!currentLeague\" class=\"mb-8\">\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm rounded-lg p-6 text-center\"\r\n  >\r\n    <h3 class=\"text-xl font-bold text-white mb-2\">No Active Tournament</h3>\r\n    <p class=\"text-gray-300\">There is currently no active tournament.</p>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { LeagueService } from '../../core/services/league.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { League, LeagueType, SystemOfLeague } from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-tournament-info',\r\n  templateUrl: './tournament-info.component.html',\r\n  styleUrls: ['./tournament-info.component.css'],\r\n})\r\nexport class TournamentInfoComponent implements OnInit {\r\n  currentLeague: League | null = null;\r\n  LeagueType = LeagueType;\r\n  SystemOfLeague = SystemOfLeague;\r\n\r\n  constructor(\r\n    private leagueService: LeagueService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadCurrentLeague();\r\n  }\r\n\r\n  private loadCurrentLeague(): void {\r\n    this.leagueService.GetCurrentLeague().subscribe({\r\n      next: (response: any) => {\r\n        this.currentLeague = response.league;\r\n      },\r\n      error: (err: any) => {\r\n\r\n        this.currentLeague = null;\r\n      },\r\n    });\r\n  }\r\n\r\n  // الحصول على نوع البطولة كنص\r\n  getLeagueTypeText(): string {\r\n    if (!this.currentLeague) return 'Unknown';\r\n\r\n    switch (this.currentLeague.typeOfLeague) {\r\n      case LeagueType.Single:\r\n        return 'Single League';\r\n      case LeagueType.Multi:\r\n        return 'Multi League';\r\n      case LeagueType.Groups:\r\n        return 'Groups Tournament';\r\n      default:\r\n        return 'Unknown';\r\n    }\r\n  }\r\n\r\n  // الحصول على نظام البطولة كنص\r\n  getSystemOfLeagueText(): string {\r\n    if (!this.currentLeague?.systemOfLeague) return 'Unknown';\r\n\r\n    const system = this.currentLeague.systemOfLeague as any;\r\n    return system === 0 ? 'Points System' : 'Classic System';\r\n  }\r\n\r\n  // التحقق من أن البطولة من نوع المجموعات\r\n  isGroupsTournament(): boolean {\r\n    return this.currentLeague?.typeOfLeague === LeagueType.Groups;\r\n  }\r\n\r\n  // الحصول على تاريخ البطولة\r\n  getFormattedDate(): string {\r\n    if (!this.currentLeague?.createdOn) return 'Unknown';\r\n    return new Date(this.currentLeague.createdOn).toLocaleDateString('ar-EG', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n    });\r\n  }\r\n\r\n  // الحصول على حالة البطولة\r\n  getTournamentStatus(): { text: string; color: string } {\r\n    if (!this.currentLeague) {\r\n      return { text: 'No Active Tournament', color: 'text-gray-400' };\r\n    }\r\n\r\n    if (this.currentLeague.isFinished) {\r\n      return { text: 'Finished', color: 'text-red-500' };\r\n    } else {\r\n      return { text: 'Live Now!', color: 'text-green-500' };\r\n    }\r\n  }\r\n}\r\n","<div class=\"sm:container mx-auto p-4\">\r\n  <!-- Tournament Info Component -->\r\n  <app-tournament-info></app-tournament-info>\r\n\r\n  <!-- عرض جداول مواجهات المجموعات -->\r\n  <div\r\n    *ngIf=\"currentLeague && isGroupsTournament() && hasGroupedPlayers() && !started\"\r\n    class=\"space-y-8\"\r\n  >\r\n    <!-- عرض المجموعات في شبكة -->\r\n    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n      <div\r\n        *ngFor=\"let groupNumber of getGroupNumbers()\"\r\n        class=\"bg-black bg-opacity-50 backdrop-blur-sm rounded-lg border border-gray-700\"\r\n      >\r\n        <div\r\n          class=\"bg-gradient-to-r from-blue-600 to-purple-600 p-4 rounded-t-lg\"\r\n        >\r\n          <h3 class=\"text-xl font-bold text-white text-center\">\r\n            Group {{ groupNumber }} Matches\r\n          </h3>\r\n        </div>\r\n\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"w-full text-sm text-left rtl:text-right text-gray-100\">\r\n            <thead\r\n              class=\"text-xs font-bold text-gray-100 uppercase bg-gray-800\"\r\n            >\r\n              <tr class=\"text-center\">\r\n                <th\r\n                  *ngFor=\"let player of getGroupedPlayers()[groupNumber]\"\r\n                  scope=\"col\"\r\n                  class=\"px-3 py-3 cursor-pointer hover:bg-gray-700 transition-all min-w-[70px]\"\r\n                  (click)=\"highlightColumn(player.playerId)\"\r\n                  [ngClass]=\"\r\n                    highlightedColumn == player.playerId\r\n                      ? 'text-white bg-gray-700'\r\n                      : 'text-white'\r\n                  \"\r\n                >\r\n                  {{ player.fullName }}\r\n                </th>\r\n                <th scope=\"col\" class=\"px-4 py-3 text-white sticky-column\">\r\n                  المباراة\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                *ngFor=\"\r\n                  let player1 of getGroupedPlayers()[groupNumber];\r\n                  let i = index\r\n                \"\r\n                class=\"text-center hover:bg-gray-600\"\r\n                [ngClass]=\"i % 2 === 0 ? 'bg-gray-900' : 'bg-gray-950'\"\r\n              >\r\n                <td\r\n                  *ngFor=\"let player2 of getGroupedPlayers()[groupNumber]\"\r\n                  class=\"transition-all\"\r\n                  [ngClass]=\"{\r\n                    'shadow-lg shadow-gray-100':\r\n                      highlightedColumn === player2.playerId\r\n                  }\"\r\n                >\r\n                  <span\r\n                    *ngIf=\"player1.playerId === player2.playerId\"\r\n                    class=\"font-bold text-white\"\r\n                  >\r\n                    N/A\r\n                  </span>\r\n                  <span *ngIf=\"player1.playerId !== player2.playerId\">\r\n                    <ng-container\r\n                      *ngIf=\"\r\n                        systemOfLeague === SystemOfLeague.Points;\r\n                        else classicResult\r\n                      \"\r\n                    >\r\n                      <span [ngClass]=\"getMatchResult(player2, player1).color\">\r\n                        {{ getMatchResult(player2, player1).result }}\r\n                      </span>\r\n                    </ng-container>\r\n                    <ng-template #classicResult>\r\n                      <span\r\n                        [ngClass]=\"getClassicResult(player2, player1).color\"\r\n                      >\r\n                        {{ getClassicResult(player2, player1).result }}\r\n                      </span>\r\n                    </ng-template>\r\n                  </span>\r\n                </td>\r\n                <td class=\"px-6 py-4 font-bold text-white sticky-column\">\r\n                  {{ player1.fullName }}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"started\" class=\"flex justify-center text-white\">\r\n    <div class=\"w-1/2 text-center mt-10\">\r\n      <h1\r\n        class=\"mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-5xl lg:text-6xl text-white\"\r\n      >\r\n        The League Will Start Soon !\r\n      </h1>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PlayerService } from '../../core/services/player.service';\r\nimport { MatchService } from '../../core/services/match.service';\r\nimport { LeagueService } from '../../core/services/league.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {\r\n  Player,\r\n  Match,\r\n  League,\r\n  LeagueType,\r\n  SystemOfLeague,\r\n} from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-groups-matches-table',\r\n  templateUrl: './groups-matches-table.component.html',\r\n  styleUrls: ['./groups-matches-table.component.css'],\r\n})\r\nexport class GroupsMatchesTableComponent implements OnInit {\r\n  players: Player[] = [];\r\n  matches: Match[] = [];\r\n  currentLeague: League | null = null;\r\n  started: boolean = true;\r\n  highlightedColumn: number | null = null;\r\n  systemOfLeague?: SystemOfLeague;\r\n  SystemOfLeague = SystemOfLeague;\r\n  LeagueType = LeagueType;\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private matchService: MatchService,\r\n    private leagueService: LeagueService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadCurrentLeague();\r\n    this.loadPlayers();\r\n    this.loadMatches();\r\n    this.loadLeagueSystem();\r\n  }\r\n\r\n  private loadCurrentLeague(): void {\r\n    this.leagueService.GetCurrentLeague().subscribe({\r\n      next: (response: any) => {\r\n        this.currentLeague = response.league;\r\n      },\r\n      error: (err: any) => {\r\n\r\n        this.currentLeague = null;\r\n      },\r\n    });\r\n  }\r\n\r\n  private loadPlayers(): void {\r\n    this.playerService.getrank().subscribe({\r\n      next: (response) => {\r\n        this.players = response;\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حدث خطأ أثناء جلب اللاعبين');\r\n\r\n      },\r\n    });\r\n  }\r\n\r\n  private loadMatches(): void {\r\n    this.matchService.getMatches().subscribe({\r\n      next: (response) => {\r\n        if (response) {\r\n          this.matches = response;\r\n          this.started = this.matches.every(\r\n            (match) => match.score1 == 0 && match.score2 == 0\r\n          );\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حصل خطأ أثناء جلب الماتشات');\r\n      },\r\n    });\r\n  }\r\n\r\n  private loadLeagueSystem(): void {\r\n    this.leagueService.GetCurrentLeague().subscribe({\r\n      next: (res) => {\r\n        this.systemOfLeague = res.league?.systemOfLeague;\r\n      },\r\n      error: () => {\r\n        this.toastr.error('حدث خطأ أثناء جلب نظام الدوري');\r\n      },\r\n    });\r\n  }\r\n\r\n  // تجميع اللاعبين حسب المجموعات\r\n  getGroupedPlayers(): { [groupNumber: number]: Player[] } {\r\n    const groupedPlayers: { [groupNumber: number]: Player[] } = {};\r\n\r\n    // تجميع اللاعبين حسب groupNumber من الخادم\r\n    this.players.forEach((player) => {\r\n      if (player.groupNumber) {\r\n        if (!groupedPlayers[player.groupNumber]) {\r\n          groupedPlayers[player.groupNumber] = [];\r\n        }\r\n        groupedPlayers[player.groupNumber].push(player);\r\n      }\r\n    });\r\n\r\n    // إذا لم يكن هناك groupNumber، استخدم التقسيم المحلي كاحتياطي\r\n    if (Object.keys(groupedPlayers).length === 0) {\r\n      const sortedPlayers = [...this.players].sort(\r\n        (a, b) => b.points - a.points\r\n      );\r\n      sortedPlayers.forEach((player, index) => {\r\n        const groupNumber = (index % 4) + 1;\r\n        if (!groupedPlayers[groupNumber]) {\r\n          groupedPlayers[groupNumber] = [];\r\n        }\r\n        groupedPlayers[groupNumber].push(player);\r\n      });\r\n    }\r\n\r\n    return groupedPlayers;\r\n  }\r\n\r\n  // الحصول على أرقام المجموعات مرتبة\r\n  getGroupNumbers(): number[] {\r\n    const groupedPlayers = this.getGroupedPlayers();\r\n    return Object.keys(groupedPlayers)\r\n      .map((key) => parseInt(key))\r\n      .sort((a, b) => a - b);\r\n  }\r\n\r\n  // التحقق من وجود لاعبين في المجموعات\r\n  hasGroupedPlayers(): boolean {\r\n    const groupedPlayers = this.getGroupedPlayers();\r\n    return Object.keys(groupedPlayers).length > 0;\r\n  }\r\n\r\n  // التحقق من أن البطولة من نوع المجموعات\r\n  isGroupsTournament(): boolean {\r\n    return this.currentLeague?.typeOfLeague === LeagueType.Groups;\r\n  }\r\n\r\n  // الحصول على نتيجة المباراة بين لاعبين\r\n  getMatchResult(player1: Player, player2: Player) {\r\n    if (player1.playerId === player2.playerId) {\r\n      return { result: 'N/A', color: 'text-gray-800' };\r\n    }\r\n\r\n    const match = this.matches.find(\r\n      (m) =>\r\n        (m.player1Name === player1.fullName &&\r\n          m.player2Name === player2.fullName) ||\r\n        (m.player1Name === player2.fullName &&\r\n          m.player2Name === player1.fullName)\r\n    );\r\n\r\n    if (!match) {\r\n      return { result: '-', color: 'text-gray-500' };\r\n    }\r\n\r\n    const player1Score =\r\n      match.player1Name === player1.fullName ? match.score1 : match.score2;\r\n    const player2Score =\r\n      match.player2Name === player2.fullName ? match.score2 : match.score1;\r\n\r\n    let colorClass = 'text-white ';\r\n    if (player1Score > player2Score) {\r\n      colorClass = 'text-green-600 font-bold';\r\n    } else if (player1Score < player2Score) {\r\n      colorClass = 'text-red-600 font-bold';\r\n    } else if (player1Score == player2Score && player1Score != 0) {\r\n      colorClass = 'text-gray-400 font-bold text-yellow-400';\r\n    }\r\n\r\n    return { result: `${player1Score} - ${player2Score}`, color: colorClass };\r\n  }\r\n\r\n  // الحصول على نتيجة المباراة بالعربية\r\n  getClassicResult(player1: Player, player2: Player) {\r\n    if (player1.playerId === player2.playerId) {\r\n      return { result: 'N/A', color: 'text-gray-800' };\r\n    }\r\n    const match = this.matches.find(\r\n      (m) =>\r\n        (m.player1Name === player1.fullName &&\r\n          m.player2Name === player2.fullName) ||\r\n        (m.player1Name === player2.fullName &&\r\n          m.player2Name === player1.fullName)\r\n    );\r\n    if (!match) {\r\n      return { result: '-', color: 'text-gray-500' };\r\n    }\r\n    const player1Score =\r\n      match.player1Name === player1.fullName ? match.score1 : match.score2;\r\n    const player2Score =\r\n      match.player2Name === player2.fullName ? match.score2 : match.score1;\r\n    if (player1Score > player2Score) {\r\n      return { result: 'فوز', color: 'text-green-600 font-bold' };\r\n    } else if (player1Score < player2Score) {\r\n      return { result: 'خسارة', color: 'text-red-600 font-bold' };\r\n    } else if (player1Score === player2Score && player1Score !== 0) {\r\n      return { result: 'تعادل', color: 'text-yellow-400 font-bold' };\r\n    }\r\n    return { result: '-', color: 'text-gray-500' };\r\n  }\r\n\r\n  // تمييز العمود\r\n  highlightColumn(playerId: number) {\r\n    this.highlightedColumn =\r\n      this.highlightedColumn === playerId ? null : playerId;\r\n  }\r\n}\r\n","<div class=\"p-4\">\r\n  <h2 class=\"text-3xl font-bold text-white text-center mb-6 fa-bold\">\r\n    Games Table\r\n  </h2>\r\n\r\n\r\n\r\n  <div *ngIf=\"!currentLeague\" class=\"flex justify-center text-gray-500\">\r\n    <div class=\"w-1/2 text-center mt-10\">\r\n      <h1\r\n        class=\"mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-5xl lg:text-6xl text-white\"\r\n      >\r\n        The League Will Start Soon !\r\n      </h1>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- عرض مكون مواجهات المجموعات للبطولات من نوع Groups -->\r\n  <app-groups-matches-table\r\n    *ngIf=\"currentLeague && currentLeague?.typeOfLeague === LeagueType.Groups\"\r\n  ></app-groups-matches-table>\r\n\r\n  <!-- عرض الجدول العادي للبطولات الأخرى -->\r\n  <div\r\n    *ngIf=\"currentLeague && currentLeague?.typeOfLeague !== LeagueType.Groups\"\r\n    class=\"table-container relative overflow-x-auto shadow-md sm:rounded-lg\"\r\n  >\r\n    <table class=\"w-full text-sm text-left rtl:text-right text-gray-400\">\r\n      <thead class=\"text-xs uppercase\">\r\n        <tr class=\"text-center\">\r\n          <th\r\n            *ngFor=\"let player of players; let i = index\"\r\n            scope=\"col\"\r\n            class=\"px-6 py-3 cursor-pointer hover:bg-gray-400 transition-all min-w-[70px] sticky-header\"\r\n            (click)=\"highlightColumn(player.playerId)\"\r\n            [ngClass]=\"\r\n              highlightedColumn == player.playerId\r\n                ? 'highlighted-header'\r\n                : 'text-white'\r\n            \"\r\n            [style.--cell-index]=\"i\"\r\n            [style.--total-cells]=\"players.length\"\r\n          >\r\n            {{ player.fullName }}\r\n          </th>\r\n          <th scope=\"col\" class=\"px-4 py-3 text-white sticky-corner\">\r\n            المباراة\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr\r\n          *ngFor=\"let player1 of players; let i = index\"\r\n          class=\"text-center hover:bg-gray-600\"\r\n          [ngClass]=\"i % 2 === 0 ? 'bg-gray-900 ' : ' bg-gray-950'\"\r\n        >\r\n          <td\r\n            *ngFor=\"let player2 of players\"\r\n            class=\"transition-all\"\r\n            [ngClass]=\"{\r\n              'highlighted-cell': highlightedColumn === player2.playerId\r\n            }\"\r\n          >\r\n            <span\r\n              *ngIf=\"player1.playerId === player2.playerId\"\r\n              class=\"font-bold text-white\"\r\n            >\r\n              N/A\r\n            </span>\r\n            <span *ngIf=\"player1.playerId !== player2.playerId\">\r\n              <ng-container\r\n                *ngIf=\"\r\n                  systemOfLeague === SystemOfLeague.Points;\r\n                  else classicResult\r\n                \"\r\n              >\r\n                <span [ngClass]=\"getMatchResult(player2, player1).color\">\r\n                  {{ getMatchResult(player2, player1).result }}\r\n                </span>\r\n              </ng-container>\r\n              <ng-template #classicResult>\r\n                <span [ngClass]=\"getClassicResult(player2, player1).color\">\r\n                  {{ getClassicResult(player2, player1).result }}\r\n                </span>\r\n              </ng-template>\r\n            </span>\r\n          </td>\r\n          <td class=\"px-6 py-4 font-bold text-white sticky-column\">\r\n            {{ player1.fullName }}\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n","import { Component, HostListener, OnInit } from '@angular/core';\r\nimport { PlayerService } from './../../core/services/player.service';\r\nimport { MatchService } from 'src/app/core/services/match.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {\r\n  Match,\r\n  Player,\r\n  SystemOfLeague,\r\n  League,\r\n  LeagueType,\r\n} from 'src/app/models/interfaces';\r\nimport { LeagueService } from 'src/app/core/services/league.service';\r\n\r\n@Component({\r\n  selector: 'app-league-table',\r\n  templateUrl: './league-table.component.html',\r\n  styleUrls: ['./league-table.component.css'],\r\n})\r\nexport class LeagueTableComponent implements OnInit {\r\n  players: Player[] = [];\r\n  matches: Match[] = [];\r\n  started: boolean = true;\r\n  highlightedColumn: number | null = null;\r\n  systemOfLeague?: SystemOfLeague;\r\n  currentLeague: League | null = null;\r\n  SystemOfLeague = SystemOfLeague; // لسهولة الاستخدام في الـ template\r\n  LeagueType = LeagueType;\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private matchService: MatchService,\r\n    private toastr: ToastrService,\r\n    private leagueService: LeagueService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadCurrentLeague();\r\n    this.loadPlayers();\r\n    this.loadMatches();\r\n    this.loadLeagueSystem();\r\n  }\r\n\r\n  loadPlayers(): void {\r\n    this.playerService.getPlayers().subscribe({\r\n      next: (response) => {\r\n        if (response) {\r\n          this.players = response;\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حصل خطأ أثناء جلب اللاعبين');\r\n      },\r\n    });\r\n  }\r\n\r\n  loadMatches(): void {\r\n    this.matchService.getMatches().subscribe({\r\n      next: (response) => {\r\n        if (response) {\r\n          this.matches = response;\r\n          this.started = this.matches.every(\r\n            (match) => match.score1 == 0 && match.score2 == 0\r\n          );\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حصل خطأ أثناء جلب الماتشات');\r\n      },\r\n    });\r\n  }\r\n\r\n  private loadCurrentLeague(): void {\r\n    this.leagueService.GetCurrentLeague().subscribe({\r\n      next: (response: any) => {\r\n        this.currentLeague = response.league;\r\n      },\r\n      error: (err: any) => {\r\n\r\n        this.currentLeague = null;\r\n      },\r\n    });\r\n  }\r\n\r\n  loadLeagueSystem(): void {\r\n    this.leagueService.GetCurrentLeague().subscribe({\r\n      next: (res) => {\r\n        this.systemOfLeague = res.league?.systemOfLeague;\r\n      },\r\n      error: () => {\r\n        this.toastr.error('حدث خطأ أثناء جلب نظام الدوري');\r\n      },\r\n    });\r\n  }\r\n\r\n  getMatchResult(player1: Player, player2: Player) {\r\n    if (player1.playerId === player2.playerId) {\r\n      return { result: 'N/A', color: 'text-gray-800' };\r\n    }\r\n\r\n    const match = this.matches.find(\r\n      (m) =>\r\n        (m.player1Name === player1.fullName &&\r\n          m.player2Name === player2.fullName) ||\r\n        (m.player1Name === player2.fullName &&\r\n          m.player2Name === player1.fullName)\r\n    );\r\n\r\n    if (!match) {\r\n      return { result: '-', color: 'text-gray-500' };\r\n    }\r\n\r\n    const player1Score =\r\n      match.player1Name === player1.fullName ? match.score1 : match.score2;\r\n    const player2Score =\r\n      match.player2Name === player2.fullName ? match.score2 : match.score1;\r\n\r\n    let colorClass = 'text-white ';\r\n    if (player1Score > player2Score) {\r\n      colorClass = 'text-green-600 font-bold';\r\n    } else if (player1Score < player2Score) {\r\n      colorClass = 'text-red-600 font-bold';\r\n    } else if (player1Score == player2Score && player1Score != 0) {\r\n      colorClass = 'text-gray-400 font-bold text-yellow-400';\r\n    }\r\n\r\n    return { result: `${player1Score} - ${player2Score}`, color: colorClass };\r\n  }\r\n\r\n  getClassicResult(player1: Player, player2: Player) {\r\n    if (player1.playerId === player2.playerId) {\r\n      return { result: 'N/A', color: 'text-gray-800' };\r\n    }\r\n    const match = this.matches.find(\r\n      (m) =>\r\n        (m.player1Name === player1.fullName &&\r\n          m.player2Name === player2.fullName) ||\r\n        (m.player1Name === player2.fullName &&\r\n          m.player2Name === player1.fullName)\r\n    );\r\n    if (!match) {\r\n      return { result: '-', color: 'text-gray-500' };\r\n    }\r\n    const player1Score =\r\n      match.player1Name === player1.fullName ? match.score1 : match.score2;\r\n    const player2Score =\r\n      match.player2Name === player2.fullName ? match.score2 : match.score1;\r\n    if (player1Score > player2Score) {\r\n      return { result: 'فوز', color: 'text-green-600 font-bold' };\r\n    } else if (player1Score < player2Score) {\r\n      return { result: 'خسارة', color: 'text-red-600 font-bold' };\r\n    } else if (player1Score === player2Score && player1Score !== 0) {\r\n      return { result: 'تعادل', color: 'text-yellow-400 font-bold' };\r\n    }\r\n    return { result: '-', color: 'text-gray-500' };\r\n  }\r\n\r\n  highlightColumn(playerId: number) {\r\n    this.highlightedColumn =\r\n      this.highlightedColumn === playerId ? null : playerId;\r\n  }\r\n  @HostListener('document:click', ['$event'])\r\n  onClickOutside(event: Event) {\r\n    const table = document.querySelector('table');\r\n    if (table && !table.contains(event.target as Node)) {\r\n      this.highlightedColumn = null;\r\n    }\r\n  }\r\n}\r\n","<div class=\"bracket-container\">\r\n  <div class=\"bracket-stage\">\r\n    <div class=\"stage-container\" *ngIf=\"hasQuarterFinals()\">\r\n      <h3>Quarter Finals</h3>\r\n      <div class=\"matches\">\r\n        <div *ngFor=\"let match of quarterFinals()\" class=\"match\">\r\n          <div class=\"player-container\">\r\n            <div class=\"player\">\r\n              {{ match.player1Name || \"---\" }}\r\n              <span\r\n                *ngIf=\"match.isCompleted && match.score1 > match.score2\"\r\n                class=\"winner-check\"\r\n                >✓</span\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"vs\">vs</div>\r\n          <div class=\"player-container\">\r\n            <div class=\"player\">\r\n              {{ match.player2Name || \"---\" }}\r\n              <span\r\n                *ngIf=\"match.isCompleted && match.score2 > match.score1\"\r\n                class=\"winner-check\"\r\n                >✓</span\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"bracket-stage\">\r\n    <div class=\"stage-container\" *ngIf=\"hasSemiFinals()\">\r\n      <h3>Semi Finals</h3>\r\n      <div class=\"matches\">\r\n        <div *ngFor=\"let match of semiFinals()\" class=\"match\">\r\n          <div class=\"player-container\">\r\n            <div class=\"player\">\r\n              {{ match.player1Name || \"---\" }}\r\n              <span\r\n                *ngIf=\"match.isCompleted && match.score1 > match.score2\"\r\n                class=\"winner-check\"\r\n                >✓</span\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"vs\">vs</div>\r\n          <div class=\"player-container\">\r\n            <div class=\"player\">\r\n              {{ match.player2Name || \"---\" }}\r\n              <span\r\n                *ngIf=\"match.isCompleted && match.score2 > match.score1\"\r\n                class=\"winner-check\"\r\n                >✓</span\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"bracket-stage\">\r\n    <div class=\"stage-container\" *ngIf=\"final()\">\r\n      <h3>Final</h3>\r\n      <div class=\"matches\">\r\n        <div class=\"match\">\r\n          <div class=\"player-container\">\r\n            <div class=\"player\">\r\n              {{ final()?.player1Name ?? \"---\" }}\r\n              <span\r\n                *ngIf=\"\r\n                  final()!.isCompleted && final()!.score1 > final()!.score2\r\n                \"\r\n                class=\"champion-check\"\r\n                >👑</span\r\n              >\r\n            </div>\r\n          </div>\r\n          <div class=\"vs\">vs</div>\r\n          <div class=\"player-container\">\r\n            <div class=\"player\">\r\n              {{ final()?.player2Name ?? \"---\" }}\r\n              <span\r\n                *ngIf=\"\r\n                  final()!.isCompleted && final()!.score2 > final()!.score1\r\n                \"\r\n                class=\"champion-check\"\r\n                >👑</span\r\n              >\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  signal,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Match, TournamentStage } from 'src/app/models/interfaces';\r\nimport { LeagueService } from 'src/app/core/services/league.service';\r\n\r\n@Component({\r\n  selector: 'app-bracket-tree',\r\n  templateUrl: './bracket-tree.component.html',\r\n  styleUrls: ['./bracket-tree.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [CommonModule],\r\n})\r\nexport class BracketTreeComponent implements OnInit, OnChanges {\r\n  @Input() leagueId?: number;\r\n\r\n  quarterFinals = signal<Match[]>([]);\r\n  semiFinals = signal<Match[]>([]);\r\n  final = signal<Match | null>(null);\r\n\r\n  constructor(private leagueService: LeagueService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadKnockoutMatches();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['leagueId']) {\r\n      this.loadKnockoutMatches();\r\n    }\r\n  }\r\n\r\n  private loadKnockoutMatches(): void {\r\n    if (!this.leagueId) {\r\n      this.quarterFinals.set([]);\r\n      this.semiFinals.set([]);\r\n      this.final.set(null);\r\n      return;\r\n    }\r\n\r\n    this.leagueService.GetAllLeaguesRank().subscribe({\r\n      next: (leagues) => {\r\n        const league = leagues.find((l) => l.leagueId === this.leagueId);\r\n        if (league && league.knockoutMatches) {\r\n          this.processKnockoutMatches(league.knockoutMatches);\r\n        } else {\r\n          this.quarterFinals.set([]);\r\n          this.semiFinals.set([]);\r\n          this.final.set(null);\r\n        }\r\n      },\r\n      error: (error) => {\r\n        this.quarterFinals.set([]);\r\n        this.semiFinals.set([]);\r\n        this.final.set(null);\r\n      },\r\n    });\r\n  }\r\n\r\n  private processKnockoutMatches(knockoutMatches: Match[]): void {\r\n    this.quarterFinals.set(\r\n      this.shuffleMatches(\r\n        knockoutMatches.filter((m) => {\r\n          const stage = m.tournamentStage\r\n            ? parseInt(m.tournamentStage)\r\n            : m.stage;\r\n          return m.stage === TournamentStage.QuarterFinals || stage === 2;\r\n        })\r\n      )\r\n    );\r\n    this.semiFinals.set(\r\n      this.shuffleMatches(\r\n        knockoutMatches.filter((m) => {\r\n          const stage = m.tournamentStage\r\n            ? parseInt(m.tournamentStage)\r\n            : m.stage;\r\n          return m.stage === TournamentStage.SemiFinals || stage === 3;\r\n        })\r\n      )\r\n    );\r\n    this.final.set(\r\n      knockoutMatches.find((m) => {\r\n        const stage = m.tournamentStage ? parseInt(m.tournamentStage) : m.stage;\r\n        return m.stage === TournamentStage.Final || stage === 4;\r\n      }) ?? null\r\n    );\r\n  }\r\n\r\n  private shuffleMatches(matches: Match[]): Match[] {\r\n    return matches.map((match) => {\r\n      // 50% chance to swap player positions\r\n      if (Math.random() > 0.5) {\r\n        return {\r\n          ...match,\r\n          player1Name: match.player2Name,\r\n          player2Name: match.player1Name,\r\n          player1Id: match.player2Id,\r\n          player2Id: match.player1Id,\r\n          score1: match.score2,\r\n          score2: match.score1,\r\n        };\r\n      }\r\n      return match;\r\n    });\r\n  }\r\n\r\n  hasQuarterFinals(): boolean {\r\n    return this.quarterFinals().length > 0;\r\n  }\r\n\r\n  hasSemiFinals(): boolean {\r\n    return this.semiFinals().length > 0;\r\n  }\r\n}\r\n","<div class=\"sm:container mx-auto p-4\">\r\n  <!-- Tournament Info Component -->\r\n  <app-tournament-info></app-tournament-info>\r\n\r\n  <!-- عرض جداول المجموعات -->\r\n  <div\r\n    *ngIf=\"currentLeague && isGroupsTournament() && hasGroupedPlayers() && !started\"\r\n    class=\"space-y-8\"\r\n  >\r\n    <!-- عرض المجموعات في شبكة -->\r\n    <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n      <div\r\n        *ngFor=\"let groupNumber of getGroupNumbers()\"\r\n        class=\"bg-black bg-opacity-50 backdrop-blur-sm rounded-lg border border-gray-700\"\r\n      >\r\n        <div\r\n          class=\"bg-gradient-to-r from-blue-600 to-purple-600 p-4 rounded-t-lg\"\r\n        >\r\n          <h3 class=\"text-xl font-bold text-white text-center\">\r\n            Group {{ groupNumber }}\r\n          </h3>\r\n        </div>\r\n\r\n        <div class=\"overflow-x-auto\">\r\n          <table class=\"w-full text-sm text-left rtl:text-right text-gray-100\">\r\n            <thead\r\n              class=\"text-xs font-bold text-gray-100 uppercase bg-gray-800\"\r\n            >\r\n              <tr class=\"text-center\">\r\n                <th scope=\"col\" class=\"px-3 py-3\">Rank</th>\r\n                <th scope=\"col\" class=\"px-3 py-3\">Name</th>\r\n                <th scope=\"col\" class=\"px-3 py-3\">Points</th>\r\n                <th scope=\"col\" class=\"px-3 py-3 hidden sm:table-cell\">Win</th>\r\n                <th scope=\"col\" class=\"px-3 py-3 hidden sm:table-cell\">Draw</th>\r\n                <th scope=\"col\" class=\"px-3 py-3 hidden sm:table-cell\">Loss</th>\r\n                <th scope=\"col\" class=\"px-3 py-3\">Games</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                *ngFor=\"\r\n                  let player of getGroupedPlayers()[groupNumber];\r\n                  let i = index\r\n                \"\r\n                class=\"border-b text-center border-gray-700 hover:bg-gray-600 font-bold text-sm md:text-[16px] transition-colors\"\r\n                [ngClass]=\"i % 2 === 0 ? 'bg-gray-900' : 'bg-gray-950'\"\r\n              >\r\n                <th\r\n                  scope=\"row\"\r\n                  class=\"px-3 py-4 font-medium text-white whitespace-nowrap relative\"\r\n                >\r\n                  {{ player.rank }}\r\n                </th>\r\n                <td class=\"px-3 py-4\">\r\n                  {{ player.fullName }}\r\n                </td>\r\n                <td class=\"px-3 py-4 text-center font-bold\">\r\n                  {{ player.points }}\r\n                </td>\r\n                <td\r\n                  class=\"px-3 py-4 text-center text-green-500 hidden sm:table-cell\"\r\n                >\r\n                  {{ player.wins }}\r\n                </td>\r\n                <td\r\n                  class=\"px-3 py-4 text-center text-yellow-400 hidden sm:table-cell\"\r\n                >\r\n                  {{ player.draws }}\r\n                </td>\r\n                <td\r\n                  class=\"px-3 py-4 text-center text-red-600 hidden sm:table-cell\"\r\n                >\r\n                  {{ player.losses }}\r\n                </td>\r\n                <td class=\"px-3 py-4 text-center\">\r\n                  {{ player.matchesPlayed }}\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div *ngIf=\"started\" class=\"flex justify-center text-white\">\r\n    <div class=\"w-1/2 text-center mt-10\">\r\n      <h1\r\n        class=\"mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-5xl lg:text-6xl text-white\"\r\n      >\r\n        The League Will Start Soon !\r\n      </h1>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { PlayerService } from '../../core/services/player.service';\r\nimport { LeagueService } from '../../core/services/league.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Player, League, LeagueType } from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-groups-table',\r\n  templateUrl: './groups-table.component.html',\r\n  styleUrls: ['./groups-table.component.css'],\r\n})\r\nexport class GroupsTableComponent implements OnInit {\r\n  players: Player[] = [];\r\n  currentLeague: League | null = null;\r\n  LeagueType = LeagueType;\r\n  started: boolean = true;\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private leagueService: LeagueService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadCurrentLeague();\r\n    this.loadPlayers();\r\n  }\r\n\r\n  private loadCurrentLeague(): void {\r\n    this.leagueService.GetCurrentLeague().subscribe({\r\n      next: (response: any) => {\r\n        this.currentLeague = response.league;\r\n      },\r\n      error: (err: any) => {\r\n\r\n        this.currentLeague = null;\r\n      },\r\n    });\r\n  }\r\n\r\n  private loadPlayers(): void {\r\n    this.playerService.getrank().subscribe({\r\n      next: (response) => {\r\n        this.players = response;\r\n        this.started = this.players.every(\r\n          (player) => player.matchesPlayed === 0\r\n        );\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حدث خطأ أثناء جلب اللاعبين');\r\n\r\n      },\r\n    });\r\n  }\r\n\r\n  // تجميع اللاعبين حسب المجموعات\r\n  getGroupedPlayers(): { [groupNumber: number]: Player[] } {\r\n    const groupedPlayers: { [groupNumber: number]: Player[] } = {};\r\n\r\n    // تجميع اللاعبين حسب groupNumber من الخادم\r\n    this.players.forEach((player) => {\r\n      if (player.groupNumber) {\r\n        if (!groupedPlayers[player.groupNumber]) {\r\n          groupedPlayers[player.groupNumber] = [];\r\n        }\r\n        groupedPlayers[player.groupNumber].push(player);\r\n      }\r\n    });\r\n\r\n    // إذا لم يكن هناك groupNumber، استخدم التقسيم المحلي كاحتياطي\r\n    if (Object.keys(groupedPlayers).length === 0) {\r\n      const sortedPlayers = [...this.players].sort(\r\n        (a, b) => b.points - a.points\r\n      );\r\n      sortedPlayers.forEach((player, index) => {\r\n        const groupNumber = (index % 4) + 1;\r\n        if (!groupedPlayers[groupNumber]) {\r\n          groupedPlayers[groupNumber] = [];\r\n        }\r\n        groupedPlayers[groupNumber].push(player);\r\n      });\r\n    }\r\n\r\n    // ترتيب اللاعبين في كل مجموعة حسب النقاط\r\n    Object.keys(groupedPlayers).forEach((groupKey) => {\r\n      const groupNumber = parseInt(groupKey);\r\n      groupedPlayers[groupNumber].sort((a, b) => b.points - a.points);\r\n    });\r\n\r\n    return groupedPlayers;\r\n  }\r\n\r\n  // الحصول على أرقام المجموعات مرتبة\r\n  getGroupNumbers(): number[] {\r\n    const groupedPlayers = this.getGroupedPlayers();\r\n    return Object.keys(groupedPlayers)\r\n      .map((key) => parseInt(key))\r\n      .sort((a, b) => a - b);\r\n  }\r\n\r\n  // التحقق من وجود لاعبين في المجموعات\r\n  hasGroupedPlayers(): boolean {\r\n    const groupedPlayers = this.getGroupedPlayers();\r\n    return Object.keys(groupedPlayers).length > 0;\r\n  }\r\n\r\n  // التحقق من أن البطولة من نوع المجموعات\r\n  isGroupsTournament(): boolean {\r\n    return this.currentLeague?.typeOfLeague === LeagueType.Groups;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"draw-animation-container\">\r\n  <!-- عنوان الأنيميشن -->\r\n  <div class=\"text-center mb-8\">\r\n    <h1 class=\"text-4xl md:text-6xl font-bold text-white mb-4 animate-pulse\">\r\n       Tournament Draw\r\n    </h1>\r\n    <p class=\"text-xl text-gray-300\">\r\n      Revealing Groups...\r\n    </p>\r\n  </div>\r\n\r\n  <!-- منطقة الكرات والأنيميشن -->\r\n  <div class=\"animation-area\" *ngIf=\"showBalls\">\r\n    <!-- كرات المجموعات -->\r\n    <div class=\"balls-container\">\r\n      <div\r\n        *ngFor=\"let group of animationGroups; let i = index\"\r\n        class=\"ball-wrapper\"\r\n        [class.current-group]=\"i === currentGroupIndex\"\r\n        [class.completed-group]=\"isGroupCompleted(group.groupNumber)\">\r\n\r\n        <!-- الكرة -->\r\n        <div class=\"ball\"\r\n             [class.opening]=\"isGroupAnimating(group.groupNumber)\"\r\n             [class.opened]=\"isGroupCompleted(group.groupNumber)\">\r\n          <div class=\"ball-shine\"></div>\r\n          <div class=\"group-number\">{{ group.groupNumber }}</div>\r\n        </div>\r\n\r\n        <!-- عنوان المجموعة -->\r\n        <div class=\"group-title\">\r\n          Group {{ group.groupNumber }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- منطقة عرض الأسماء -->\r\n    <div class=\"names-reveal-area\" *ngIf=\"getCurrentGroup()\">\r\n      <div class=\"current-group-header\">\r\n        <h2 class=\"text-3xl font-bold text-center mb-6\">\r\n          🏆 Group {{ getCurrentGroup()?.groupNumber }} Players 🏆\r\n        </h2>\r\n      </div>\r\n\r\n      <!-- أسماء اللاعبين -->\r\n      <div class=\"players-list\">\r\n        <div\r\n          *ngFor=\"let player of getCurrentGroup()?.players; let i = index\"\r\n          class=\"player-card\"\r\n          [class.revealed]=\"i <= currentRevealedPlayer\"\r\n          [style.animation-delay.ms]=\"i * 200\">\r\n\r\n          <div class=\"player-rank\">{{ i + 1 }}</div>\r\n          <div class=\"player-name\">{{ player.fullName }}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- خلفية الجزيئات -->\r\n  <div class=\"particles-bg\">\r\n    <div class=\"particle\" *ngFor=\"let p of [1,2,3,4,5,6,7,8,9,10]\"></div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { Player } from 'src/app/models/interfaces';\r\n\r\ninterface AnimationGroup {\r\n  groupNumber: number;\r\n  players: Player[];\r\n  animationState: 'pending' | 'animating' | 'completed';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-group-draw-animation',\r\n  templateUrl: './group-draw-animation.component.html',\r\n  styleUrls: ['./group-draw-animation.component.css'],\r\n})\r\nexport class GroupDrawAnimationComponent implements OnInit {\r\n  @Input() players: Player[] = [];\r\n  @Output() animationComplete = new EventEmitter<void>();\r\n\r\n  animationGroups: AnimationGroup[] = [];\r\n  currentGroupIndex = 0;\r\n  showBalls = false;\r\n  currentRevealedPlayer = -1; // نبدأ بـ -1 عشان مفيش أسماء تظهر في البداية\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.setupAnimation();\r\n    this.startAnimation();\r\n  }\r\n\r\n  private setupAnimation(): void {\r\n    // تجميع اللاعبين حسب المجموعات\r\n    const groupedPlayers = this.getGroupedPlayers();\r\n\r\n    // إنشاء مصفوفة الأنيميشن\r\n    Object.keys(groupedPlayers).forEach((groupKey) => {\r\n      const groupNumber = parseInt(groupKey);\r\n      this.animationGroups.push({\r\n        groupNumber,\r\n        players: groupedPlayers[groupNumber],\r\n        animationState: 'pending',\r\n      });\r\n    });\r\n\r\n    // ترتيب المجموعات حسب الرقم\r\n    this.animationGroups.sort((a, b) => a.groupNumber - b.groupNumber);\r\n  }\r\n\r\n  private getGroupedPlayers(): { [groupNumber: number]: Player[] } {\r\n    const groupedPlayers: { [groupNumber: number]: Player[] } = {};\r\n\r\n    this.players.forEach((player) => {\r\n      if (player.groupNumber) {\r\n        if (!groupedPlayers[player.groupNumber]) {\r\n          groupedPlayers[player.groupNumber] = [];\r\n        }\r\n        groupedPlayers[player.groupNumber].push(player);\r\n      }\r\n    });\r\n\r\n    // إذا لم يكن هناك groupNumber، استخدم التقسيم المحلي\r\n    if (Object.keys(groupedPlayers).length === 0) {\r\n      const sortedPlayers = [...this.players].sort(\r\n        (a, b) => b.points - a.points\r\n      );\r\n      sortedPlayers.forEach((player, index) => {\r\n        const groupNumber = (index % 4) + 1;\r\n        if (!groupedPlayers[groupNumber]) {\r\n          groupedPlayers[groupNumber] = [];\r\n        }\r\n        groupedPlayers[groupNumber].push(player);\r\n      });\r\n    }\r\n\r\n    // ترتيب اللاعبين في كل مجموعة حسب النقاط\r\n    Object.keys(groupedPlayers).forEach((groupKey) => {\r\n      const groupNumber = parseInt(groupKey);\r\n      groupedPlayers[groupNumber].sort((a, b) => b.points - a.points);\r\n    });\r\n\r\n    return groupedPlayers;\r\n  }\r\n\r\n  private async startAnimation(): Promise<void> {\r\n    // انتظار قبل بدء الأنيميشن\r\n    await this.delay(800);\r\n\r\n    // عرض الكرات\r\n    this.showBalls = true;\r\n    await this.delay(1500);\r\n\r\n    // بدء أنيميشن المجموعات\r\n    for (let i = 0; i < this.animationGroups.length; i++) {\r\n      this.currentGroupIndex = i;\r\n      this.currentRevealedPlayer = -1; // reset قبل بدء كل مجموعة\r\n      await this.animateGroup(this.animationGroups[i]);\r\n      \r\n      // إذا لم تكن المجموعة الأخيرة، اختفي الأسماء قبل الانتقال\r\n      if (i < this.animationGroups.length - 1) {\r\n        await this.delay(2500); // انتظار مع الأسماء ظاهرة\r\n        this.currentRevealedPlayer = -1; // إخفاء الأسماء\r\n        await this.delay(500); // نص ثانية قبل المجموعة الجديدة\r\n      } else {\r\n        // المجموعة الأخيرة - انتظار إضافي\r\n        await this.delay(3000);\r\n      }\r\n    }\r\n\r\n    // انتظار قبل إنهاء الأنيميشن\r\n    await this.delay(2500);\r\n    this.animationComplete.emit();\r\n  }\r\n\r\n    private async animateGroup(group: AnimationGroup): Promise<void> {\r\n    group.animationState = 'animating';\r\n    \r\n    // أنيميشن فتح الكرة (مع صوت تأثير)\r\n    await this.delay(1200);\r\n    \r\n    // كشف الأسماء واحد تلو الآخر (أبطأ)\r\n    for (let i = 0; i < group.players.length; i++) {\r\n      this.currentRevealedPlayer = i;\r\n      await this.delay(800); // وقت أكتر بين كل اسم\r\n    }\r\n    \r\n    group.animationState = 'completed';\r\n    // لا نخفي الأسماء هنا - سيتم التحكم فيها من startAnimation\r\n  }\r\n\r\n  private delay(ms: number): Promise<void> {\r\n    return new Promise((resolve) => setTimeout(resolve, ms));\r\n  }\r\n\r\n  getCurrentGroup(): AnimationGroup | null {\r\n    return this.animationGroups[this.currentGroupIndex] || null;\r\n  }\r\n\r\n  isGroupAnimating(groupNumber: number): boolean {\r\n    const group = this.animationGroups.find(\r\n      (g) => g.groupNumber === groupNumber\r\n    );\r\n    return group?.animationState === 'animating';\r\n  }\r\n\r\n  isGroupCompleted(groupNumber: number): boolean {\r\n    const group = this.animationGroups.find(\r\n      (g) => g.groupNumber === groupNumber\r\n    );\r\n    return group?.animationState === 'completed';\r\n  }\r\n}\r\n","<div class=\"md:container mx-auto p-4\">\r\n  <h2 class=\"text-3xl text-white text-center mb-6 font-bold\">Rank Table</h2>\r\n\r\n  <div *ngIf=\"!currentLeague\" class=\"flex justify-center text-white\">\r\n    <div class=\"w-1/2 text-center mt-10\">\r\n      <h1\r\n        class=\"mb-4 text-4xl font-extrabold leading-none tracking-tight md:text-5xl lg:text-6xl text-white\"\r\n      >\r\n        The League Will Start Soon !\r\n      </h1>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- عرض أنيميشن القرعة للبطولات من نوع Groups قبل بدء المباريات -->\r\n  <app-group-draw-animation\r\n    *ngIf=\"showDrawAnimation\"\r\n    [players]=\"players\"\r\n    (animationComplete)=\"onDrawAnimationComplete()\"\r\n  >\r\n  </app-group-draw-animation>\r\n\r\n  <!-- عرض الجداول حسب نوع البطولة -->\r\n  <div *ngIf=\"currentLeague && !showDrawAnimation\">\r\n    <!-- عرض مكون جداول المجموعات للبطولات من نوع Groups -->\r\n    <app-groups-table\r\n      *ngIf=\"currentLeague?.typeOfLeague === LeagueType.Groups\"\r\n    ></app-groups-table>\r\n\r\n    <!-- عرض الجدول العادي للبطولات الأخرى -->\r\n    <div\r\n      *ngIf=\"\r\n        !currentLeague || currentLeague?.typeOfLeague !== LeagueType.Groups\r\n      \"\r\n      class=\"overflow-x-auto\"\r\n    >\r\n      <!-- عرض الجدول العادي للبطولات الأخرى -->\r\n      <div\r\n        *ngIf=\"\r\n          !currentLeague || currentLeague?.typeOfLeague !== LeagueType.Groups\r\n        \"\r\n        class=\"overflow-x-auto\"\r\n      >\r\n        <div class=\"relative overflow-x-auto shadow-md sm:rounded-lg\">\r\n          <table class=\"w-full text-sm text-left rtl:text-right text-gray-100\">\r\n            <thead class=\"text-xs font-bold text-gray-100 uppercase bg-black\">\r\n              <tr class=\"text-center\">\r\n                <th scope=\"col\" class=\"px-2 py-3\">Rank</th>\r\n                <th scope=\"col\" class=\"px-2 py-3\">Name</th>\r\n                <th scope=\"col\" class=\"px-2 py-3\">points</th>\r\n                <th scope=\"col\" class=\"px-2 py-3 hidden sm:table-cell\">Win</th>\r\n                <th scope=\"col\" class=\"px-2 py-3 hidden sm:table-cell\">Draw</th>\r\n                <th scope=\"col\" class=\"px-2 py-3 hidden sm:table-cell\">Loss</th>\r\n                <th scope=\"col\" class=\"px-2 py-3\">Games</th>\r\n                <th scope=\"col\" class=\"px-2 py-3\">win Rate</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr\r\n                *ngFor=\"let player of players; let i = index\"\r\n                class=\"border-b text-center border-gray-700 hover:bg-gray-600 font-bold text-sm md:text-[16px]\"\r\n                [ngClass]=\"i % 2 === 0 ? 'bg-gray-900' : 'bg-gray-950'\"\r\n              >\r\n                <th\r\n                  scope=\"row\"\r\n                  class=\"px-2 py-4 font-medium text-white whitespace-nowrap relative\"\r\n                >\r\n                  <i\r\n                    class=\"fa-solid fa-crown absolute top-[50%] left-[10px] md:left-10 translate-y-[-50%]\"\r\n                    style=\"color: #ffd43b\"\r\n                    *ngIf=\"player.rank == 1\"\r\n                  ></i>\r\n                  {{ player.rank }}\r\n                </th>\r\n                <td class=\"px-2 py-4\">\r\n                  {{ player.fullName }}\r\n                </td>\r\n                <td class=\"px-2 py-4 text-center\">\r\n                  {{ player.points }}\r\n                </td>\r\n                <td\r\n                  class=\"px-2 py-4 text-center text-green-500 hidden sm:table-cell\"\r\n                >\r\n                  {{ player.wins }}\r\n                </td>\r\n                <td\r\n                  class=\"px-2 py-4 text-center text-yellow-400 hidden sm:table-cell\"\r\n                >\r\n                  {{ player.draws }}\r\n                </td>\r\n                <td\r\n                  class=\"px-2 py-4 text-center text-red-600 hidden sm:table-cell\"\r\n                >\r\n                  {{ player.losses }}\r\n                </td>\r\n                <td class=\"px-2 py-4 text-center\">\r\n                  {{ player.matchesPlayed }}\r\n                </td>\r\n                <td\r\n                  class=\"px-2 py-4 text-center\"\r\n                  [ngClass]=\"\r\n                    player.winRate < 35\r\n                      ? 'text-red-500'\r\n                      : player.winRate >= 30 && player.winRate <= 59\r\n                      ? 'text-yellow-400'\r\n                      : 'text-green-500'\r\n                  \"\r\n                >\r\n                  {{ player.winRate | number : \"1.2-2\" }} %\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"w-full\" *ngIf=\"currentLeague?.typeOfLeague === LeagueType.Groups\">\r\n    <app-bracket-tree [leagueId]=\"currentLeague?.id\"></app-bracket-tree>\r\n  </div>\r\n</div>\r\n","import { PlayerService } from './../../core/services/player.service';\r\nimport { LeagueService } from './../../core/services/league.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Player, League, LeagueType } from 'src/app/models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-ranking',\r\n  templateUrl: './ranking.component.html',\r\n  styleUrls: ['./ranking.component.css'],\r\n})\r\nexport class RankingComponent implements OnInit {\r\n  players: Player[] = [];\r\n  started: boolean = true;\r\n  last: number = 0;\r\n  currentLeague: League | null = null;\r\n  LeagueType = LeagueType; // لسهولة الاستخدام في الـ template\r\n  showDrawAnimation: boolean = false;\r\n\r\n  constructor(\r\n    private playerService: PlayerService,\r\n    private leagueService: LeagueService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadCurrentLeague();\r\n    this.loadPlayers();\r\n  }\r\n\r\n  private loadCurrentLeague(): void {\r\n    this.leagueService.GetCurrentLeague().subscribe({\r\n      next: (response: any) => {\r\n        this.currentLeague = response.league;\r\n        // تحديث حالة الأنيميشن عند تحميل البطولة\r\n        this.updateDrawAnimationState();\r\n      },\r\n      error: (err: any) => {\r\n        this.currentLeague = null;\r\n      },\r\n    });\r\n  }\r\n\r\n  private loadPlayers(): void {\r\n    this.playerService.getrank().subscribe({\r\n      next: (response) => {\r\n        this.players = response;\r\n        this.last = response.length - 1;\r\n        this.started = this.players.every((match) => match.matchesPlayed === 0);\r\n\r\n        // تحديد ما إذا كان يجب عرض أنيميشن القرعة\r\n        this.updateDrawAnimationState();\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error('حدث خطا اثناء جلب اللاعبين');\r\n      },\r\n    });\r\n  }\r\n\r\n  private updateDrawAnimationState(): void {\r\n    // التأكد من وجود البيانات المطلوبة\r\n    if (!this.currentLeague || !this.players || this.players.length === 0) {\r\n      this.showDrawAnimation = false;\r\n      return;\r\n    }\r\n\r\n    // شروط عرض أنيميشن القرعة:\r\n    // 1. البطولة من نوع Groups\r\n    // 2. توجد مجموعات (تم تنفيذ Start Group Stage)\r\n    // 3. كل اللاعبين لم يلعبوا أي مباريات\r\n    const isGroupsTournament =\r\n      this.currentLeague.typeOfLeague === LeagueType.Groups;\r\n    const hasGroups = this.players.some((player) => player.groupNumber);\r\n    const noMatchesPlayed = this.players.every(\r\n      (player) => player.matchesPlayed === 0\r\n    );\r\n\r\n    this.showDrawAnimation = isGroupsTournament && hasGroups && noMatchesPlayed;\r\n  }\r\n\r\n  onDrawAnimationComplete(): void {\r\n    this.showDrawAnimation = false;\r\n  }\r\n}\r\n","import { innerFrom } from '../observable/innerFrom';\nimport { Observable } from '../Observable';\nimport { mergeMap } from '../operators/mergeMap';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isFunction } from '../util/isFunction';\nimport { mapOneOrManyArgs } from '../util/mapOneOrManyArgs';\nconst nodeEventEmitterMethods = ['addListener', 'removeListener'];\nconst eventTargetMethods = ['addEventListener', 'removeEventListener'];\nconst jqueryMethods = ['on', 'off'];\nexport function fromEvent(target, eventName, options, resultSelector) {\n    if (isFunction(options)) {\n        resultSelector = options;\n        options = undefined;\n    }\n    if (resultSelector) {\n        return fromEvent(target, eventName, options).pipe(mapOneOrManyArgs(resultSelector));\n    }\n    const [add, remove] = isEventTarget(target)\n        ? eventTargetMethods.map((methodName) => (handler) => target[methodName](eventName, handler, options))\n        :\n            isNodeStyleEventEmitter(target)\n                ? nodeEventEmitterMethods.map(toCommonHandlerRegistry(target, eventName))\n                : isJQueryStyleEventEmitter(target)\n                    ? jqueryMethods.map(toCommonHandlerRegistry(target, eventName))\n                    : [];\n    if (!add) {\n        if (isArrayLike(target)) {\n            return mergeMap((subTarget) => fromEvent(subTarget, eventName, options))(innerFrom(target));\n        }\n    }\n    if (!add) {\n        throw new TypeError('Invalid event target');\n    }\n    return new Observable((subscriber) => {\n        const handler = (...args) => subscriber.next(1 < args.length ? args : args[0]);\n        add(handler);\n        return () => remove(handler);\n    });\n}\nfunction toCommonHandlerRegistry(target, eventName) {\n    return (methodName) => (handler) => target[methodName](eventName, handler);\n}\nfunction isNodeStyleEventEmitter(target) {\n    return isFunction(target.addListener) && isFunction(target.removeListener);\n}\nfunction isJQueryStyleEventEmitter(target) {\n    return isFunction(target.on) && isFunction(target.off);\n}\nfunction isEventTarget(target) {\n    return isFunction(target.addEventListener) && isFunction(target.removeEventListener);\n}\n","import { filter } from './filter';\nexport function skip(count) {\n    return filter((_, index) => count <= index);\n}\n","import { reduce } from './reduce';\nimport { operate } from '../util/lift';\nconst arrReducer = (arr, value) => (arr.push(value), arr);\nexport function toArray() {\n    return operate((source, subscriber) => {\n        reduce(arrReducer, [])(source).subscribe(subscriber);\n    });\n}\n","import { Subscription } from '../Subscription';\nexport class Action extends Subscription {\n    constructor(scheduler, work) {\n        super();\n    }\n    schedule(state, delay = 0) {\n        return this;\n    }\n}\n","export const intervalProvider = {\n    setInterval(handler, timeout, ...args) {\n        const { delegate } = intervalProvider;\n        if (delegate === null || delegate === void 0 ? void 0 : delegate.setInterval) {\n            return delegate.setInterval(handler, timeout, ...args);\n        }\n        return setInterval(handler, timeout, ...args);\n    },\n    clearInterval(handle) {\n        const { delegate } = intervalProvider;\n        return ((delegate === null || delegate === void 0 ? void 0 : delegate.clearInterval) || clearInterval)(handle);\n    },\n    delegate: undefined,\n};\n","import { dateTimestampProvider } from './scheduler/dateTimestampProvider';\nexport class Scheduler {\n    constructor(schedulerActionCtor, now = Scheduler.now) {\n        this.schedulerActionCtor = schedulerActionCtor;\n        this.now = now;\n    }\n    schedule(work, delay = 0, state) {\n        return new this.schedulerActionCtor(this, work).schedule(state, delay);\n    }\n}\nScheduler.now = dateTimestampProvider.now;\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","import { Scheduler } from '../Scheduler';\nexport class AsyncScheduler extends Scheduler {\n    constructor(SchedulerAction, now = Scheduler.now) {\n        super(SchedulerAction, now);\n        this.actions = [];\n        this._active = false;\n    }\n    flush(action) {\n        const { actions } = this;\n        if (this._active) {\n            actions.push(action);\n            return;\n        }\n        let error;\n        this._active = true;\n        do {\n            if ((error = action.execute(action.state, action.delay))) {\n                break;\n            }\n        } while ((action = actions.shift()));\n        this._active = false;\n        if (error) {\n            while ((action = actions.shift())) {\n                action.unsubscribe();\n            }\n            throw error;\n        }\n    }\n}\n","import { Action } from './Action';\nimport { intervalProvider } from './intervalProvider';\nimport { arrRemove } from '../util/arrRemove';\nexport class AsyncAction extends Action {\n    constructor(scheduler, work) {\n        super(scheduler, work);\n        this.scheduler = scheduler;\n        this.work = work;\n        this.pending = false;\n    }\n    schedule(state, delay = 0) {\n        var _a;\n        if (this.closed) {\n            return this;\n        }\n        this.state = state;\n        const id = this.id;\n        const scheduler = this.scheduler;\n        if (id != null) {\n            this.id = this.recycleAsyncId(scheduler, id, delay);\n        }\n        this.pending = true;\n        this.delay = delay;\n        this.id = (_a = this.id) !== null && _a !== void 0 ? _a : this.requestAsyncId(scheduler, this.id, delay);\n        return this;\n    }\n    requestAsyncId(scheduler, _id, delay = 0) {\n        return intervalProvider.setInterval(scheduler.flush.bind(scheduler, this), delay);\n    }\n    recycleAsyncId(_scheduler, id, delay = 0) {\n        if (delay != null && this.delay === delay && this.pending === false) {\n            return id;\n        }\n        if (id != null) {\n            intervalProvider.clearInterval(id);\n        }\n        return undefined;\n    }\n    execute(state, delay) {\n        if (this.closed) {\n            return new Error('executing a cancelled action');\n        }\n        this.pending = false;\n        const error = this._execute(state, delay);\n        if (error) {\n            return error;\n        }\n        else if (this.pending === false && this.id != null) {\n            this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n        }\n    }\n    _execute(state, _delay) {\n        let errored = false;\n        let errorValue;\n        try {\n            this.work(state);\n        }\n        catch (e) {\n            errored = true;\n            errorValue = e ? e : new Error('Scheduled action threw falsy error');\n        }\n        if (errored) {\n            this.unsubscribe();\n            return errorValue;\n        }\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            const { id, scheduler } = this;\n            const { actions } = scheduler;\n            this.work = this.state = this.scheduler = null;\n            this.pending = false;\n            arrRemove(actions, this);\n            if (id != null) {\n                this.id = this.recycleAsyncId(scheduler, id, null);\n            }\n            this.delay = null;\n            super.unsubscribe();\n        }\n    }\n}\n","import { concat } from '../observable/concat';\nimport { take } from './take';\nimport { ignoreElements } from './ignoreElements';\nimport { mapTo } from './mapTo';\nimport { mergeMap } from './mergeMap';\nimport { innerFrom } from '../observable/innerFrom';\nexport function delayWhen(delayDurationSelector, subscriptionDelay) {\n    if (subscriptionDelay) {\n        return (source) => concat(subscriptionDelay.pipe(take(1), ignoreElements()), source.pipe(delayWhen(delayDurationSelector)));\n    }\n    return mergeMap((value, index) => innerFrom(delayDurationSelector(value, index)).pipe(take(1), mapTo(value)));\n}\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { noop } from '../util/noop';\nexport function ignoreElements() {\n    return operate((source, subscriber) => {\n        source.subscribe(createOperatorSubscriber(subscriber, noop));\n    });\n}\n","import * as i0 from '@angular/core';\nimport { isDevMode, Injectable, InjectionToken, PLATFORM_ID, Inject, Optional, Directive, Input, Component, HostListener, EventEmitter, ChangeDetectionStrategy, ContentChildren, Output, Attribute, HostBinding, NgModule } from '@angular/core';\nimport * as i3 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { Subject, merge, of, fromEvent, from } from 'rxjs';\nimport { tap, filter, switchMap, first, take, skip, map, toArray, delay } from 'rxjs/operators';\nimport * as i1 from '@angular/router';\nimport { NavigationEnd } from '@angular/router';\nimport { style, state, animate, transition, trigger } from '@angular/animations';\n\n/**\n * Defaults value of options\n */\nclass OwlCarouselOConfig {\n    items = 3;\n    skip_validateItems = false;\n    loop = false;\n    center = false;\n    rewind = false;\n    mouseDrag = true;\n    touchDrag = true;\n    pullDrag = true;\n    freeDrag = false;\n    margin = 0;\n    stagePadding = 0;\n    merge = false;\n    mergeFit = true;\n    autoWidth = false;\n    startPosition = 0;\n    rtl = false;\n    smartSpeed = 250;\n    fluidSpeed = false;\n    dragEndSpeed = false;\n    responsive = {};\n    responsiveRefreshRate = 200;\n    // defaults to Navigation\n    nav = false;\n    navText = ['prev', 'next'];\n    navSpeed = false;\n    slideBy = 1; // stage moves on 1 width of slide; if slideBy = 2, stage moves on 2 widths of slide\n    dots = true;\n    dotsEach = false;\n    dotsData = false;\n    dotsSpeed = false;\n    // defaults to Autoplay\n    autoplay = false;\n    autoplayTimeout = 5000;\n    autoplayHoverPause = false;\n    autoplaySpeed = false;\n    autoplayMouseleaveTimeout = 1;\n    // defaults to LazyLoading\n    lazyLoad = false;\n    lazyLoadEager = 0;\n    // defaults to Animate\n    slideTransition = '';\n    animateOut = false;\n    animateIn = false;\n    // defaults to AutoHeight\n    autoHeight = false;\n    // defaults to Hash\n    URLhashListener = false;\n    constructor() { }\n}\n/**\n * we can't read types from OwlOptions in javascript because of props have undefined value and types of those props are used for validating inputs\n * class below is copy of OwlOptions but its all props have string value showing certain type;\n * this is class is being used just in method _validateOptions() of CarouselService;\n */\nclass OwlOptionsMockedTypes {\n    items = 'number';\n    skip_validateItems = 'boolean';\n    loop = 'boolean';\n    center = 'boolean';\n    rewind = 'boolean';\n    mouseDrag = 'boolean';\n    touchDrag = 'boolean';\n    pullDrag = 'boolean';\n    freeDrag = 'boolean';\n    margin = 'number';\n    stagePadding = 'number';\n    merge = 'boolean';\n    mergeFit = 'boolean';\n    autoWidth = 'boolean';\n    startPosition = 'number|string';\n    rtl = 'boolean';\n    smartSpeed = 'number';\n    fluidSpeed = 'boolean';\n    dragEndSpeed = 'number|boolean';\n    responsive = {};\n    responsiveRefreshRate = 'number';\n    // defaults to Navigation\n    nav = 'boolean';\n    navText = 'string[]';\n    navSpeed = 'number|boolean';\n    slideBy = 'number|string'; // stage moves on 1 width of slide; if slideBy = 2, stage moves on 2 widths of slide\n    dots = 'boolean';\n    dotsEach = 'number|boolean';\n    dotsData = 'boolean';\n    dotsSpeed = 'number|boolean';\n    // defaults to Autoplay\n    autoplay = 'boolean';\n    autoplayTimeout = 'number';\n    autoplayHoverPause = 'boolean';\n    autoplaySpeed = 'number|boolean';\n    autoplayMouseleaveTimeout = 'number';\n    // defaults to LazyLoading\n    lazyLoad = 'boolean';\n    lazyLoadEager = 'number';\n    // defaults to Animate\n    slideTransition = 'string';\n    animateOut = 'string|boolean';\n    animateIn = 'string|boolean';\n    // defaults to AutoHeight\n    autoHeight = 'boolean';\n    // defaults to Hash\n    URLhashListener = \"boolean\";\n    constructor() { }\n}\n\nclass OwlLogger {\n    errorHandler;\n    constructor(errorHandler) {\n        this.errorHandler = errorHandler;\n    }\n    log(value, ...rest) {\n        if (isDevMode()) {\n            console.log(value, ...rest);\n        }\n    }\n    error(error) {\n        this.errorHandler.handleError(error);\n    }\n    warn(value, ...rest) {\n        console.warn(value, ...rest);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: OwlLogger, deps: [{ token: i0.ErrorHandler }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: OwlLogger });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: OwlLogger, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i0.ErrorHandler }] });\n\n/**\n * Current state information and their tags.\n */\nclass States {\n    current;\n    tags;\n}\n/**\n * Enumeration for types.\n * @enum {String}\n */\nvar Type;\n(function (Type) {\n    Type[\"Event\"] = \"event\";\n    Type[\"State\"] = \"state\";\n})(Type || (Type = {}));\n;\n/**\n * Enumeration for width.\n * @enum {String}\n */\nvar Width;\n(function (Width) {\n    Width[\"Default\"] = \"default\";\n    Width[\"Inner\"] = \"inner\";\n    Width[\"Outer\"] = \"outer\";\n})(Width || (Width = {}));\n;\n/**\n * Model for coords of .owl-stage\n */\nclass Coords {\n    x;\n    y;\n}\n/**\n * Model for all current data of carousel\n */\nclass CarouselCurrentData {\n    owlDOMData;\n    stageData;\n    slidesData;\n    navData;\n    dotsData;\n}\nclass CarouselService {\n    logger;\n    /**\n     * Subject for passing data needed for managing View\n     */\n    _viewSettingsShipper$ = new Subject();\n    /**\n     * Subject for notification when the carousel got initializes\n     */\n    _initializedCarousel$ = new Subject();\n    /**\n     * Subject for notification when the carousel's settings start changinf\n     */\n    _changeSettingsCarousel$ = new Subject();\n    /**\n     * Subject for notification when the carousel's settings have changed\n     */\n    _changedSettingsCarousel$ = new Subject();\n    /**\n     * Subject for notification when the carousel starts translating or moving\n     */\n    _translateCarousel$ = new Subject();\n    /**\n     * Subject for notification when the carousel stopped translating or moving\n     */\n    _translatedCarousel$ = new Subject();\n    /**\n     * Subject for notification when the carousel's rebuilding caused by 'resize' event starts\n     */\n    _resizeCarousel$ = new Subject();\n    /**\n     * Subject for notification  when the carousel's rebuilding caused by 'resize' event is ended\n     */\n    _resizedCarousel$ = new Subject();\n    /**\n     * Subject for notification when the refresh of carousel starts\n     */\n    _refreshCarousel$ = new Subject();\n    /**\n     * Subject for notification when the refresh of carousel is ended\n     */\n    _refreshedCarousel$ = new Subject();\n    /**\n     * Subject for notification when the dragging of carousel starts\n     */\n    _dragCarousel$ = new Subject();\n    /**\n     * Subject for notification when the dragging of carousel is ended\n     */\n    _draggedCarousel$ = new Subject();\n    /**\n     * Current settings for the carousel.\n     */\n    settings = {\n        items: 0\n    };\n    /**\n     * Initial data for setting classes to element .owl-carousel\n     */\n    owlDOMData = {\n        rtl: false,\n        isResponsive: false,\n        isRefreshed: false,\n        isLoaded: false,\n        isLoading: false,\n        isMouseDragable: false,\n        isGrab: false,\n        isTouchDragable: false\n    };\n    /**\n     * Initial data of .owl-stage\n     */\n    stageData = {\n        transform: 'translate3d(0px,0px,0px)',\n        transition: '0s',\n        width: 0,\n        paddingL: 0,\n        paddingR: 0\n    };\n    /**\n     *  Data of every slide\n     */\n    slidesData;\n    /**\n     * Data of navigation block\n     */\n    navData;\n    /**\n     * Data of dots block\n     */\n    dotsData;\n    /**\n     * Carousel width\n     */\n    _width;\n    /**\n     * All real items.\n     */\n    _items = []; // is equal to this.slides\n    /**\n     * Array with width of every slide.\n     */\n    _widths = [];\n    /**\n     * Currently suppressed events to prevent them from beeing retriggered.\n     */\n    _supress = {};\n    /**\n     * References to the running plugins of this carousel.\n     */\n    _plugins = {};\n    /**\n     * Absolute current position.\n     */\n    _current = null;\n    /**\n     * All cloned items.\n     */\n    _clones = [];\n    /**\n     * Merge values of all items.\n     * @todo Maybe this could be part of a plugin.\n     */\n    _mergers = [];\n    /**\n     * Animation speed in milliseconds.\n     */\n    _speed = null;\n    /**\n     * Coordinates of all items in pixel.\n     * @todo The name of this member is missleading.\n     */\n    _coordinates = [];\n    /**\n     * Current breakpoint.\n     * @todo Real media queries would be nice.\n     */\n    _breakpoint = null;\n    /**\n     * Prefix for id of cloned slides\n     */\n    clonedIdPrefix = 'cloned-';\n    /**\n     * Current options set by the caller including defaults.\n     */\n    _options = {};\n    /**\n     * Invalidated parts within the update process.\n     */\n    _invalidated = {};\n    // Is needed for tests\n    get invalidated() {\n        return this._invalidated;\n    }\n    /**\n     * Current state information and their tags.\n     */\n    _states = {\n        current: {},\n        tags: {\n            initializing: ['busy'],\n            animating: ['busy'],\n            dragging: ['interacting']\n        }\n    };\n    // is needed for tests\n    get states() {\n        return this._states;\n    }\n    /**\n         * Ordered list of workers for the update process.\n     */\n    _pipe = [\n        // {\n        //   filter: ['width', 'settings'],\n        //   run: () => {\n        //     this._width = this.carouselWindowWidth;\n        //   }\n        // },\n        {\n            filter: ['width', 'items', 'settings'],\n            run: cache => {\n                cache.current = this._items && this._items[this.relative(this._current)]?.id;\n            }\n        },\n        // {\n        //   filter: ['items', 'settings'],\n        //   run: function() {\n        //     // this.$stage.children('.cloned').remove();\n        //   }\n        // },\n        {\n            filter: ['width', 'items', 'settings'],\n            run: (cache) => {\n                const margin = this.settings.margin || '', grid = !this.settings.autoWidth, rtl = this.settings.rtl, css = {\n                    'margin-left': rtl ? margin : '',\n                    'margin-right': rtl ? '' : margin\n                };\n                if (!grid) {\n                    this.slidesData.forEach(slide => {\n                        slide.marginL = css['margin-left'];\n                        slide.marginR = css['margin-right'];\n                    });\n                }\n                cache.css = css;\n            }\n        }, {\n            filter: ['width', 'items', 'settings'],\n            run: (cache) => {\n                const width = +(this.width() / this.settings.items).toFixed(3) - this.settings.margin, grid = !this.settings.autoWidth, widths = [];\n                let merge = null, iterator = this._items.length;\n                cache.items = {\n                    merge: false,\n                    width: width\n                };\n                while (iterator-- > 0) {\n                    merge = this._mergers[iterator];\n                    merge = this.settings.mergeFit && Math.min(merge, this.settings.items) || merge;\n                    cache.items.merge = merge > 1 || cache.items.merge;\n                    widths[iterator] = !grid ? this._items[iterator].width ? this._items[iterator].width : width : width * merge;\n                }\n                this._widths = widths;\n                this.slidesData.forEach((slide, i) => {\n                    slide.width = this._widths[i];\n                    slide.marginR = cache.css['margin-right'];\n                    slide.marginL = cache.css['margin-left'];\n                });\n            }\n        }, {\n            filter: ['items', 'settings'],\n            run: () => {\n                const clones = [], items = this._items, settings = this.settings, \n                // TODO: Should be computed from number of min width items in stage\n                view = Math.max(settings.items * 2, 4), size = Math.ceil(items.length / 2) * 2;\n                let append = [], prepend = [], repeat = settings.loop && items.length ? settings.rewind ? view : Math.max(view, size) : 0;\n                repeat /= 2;\n                while (repeat-- > 0) {\n                    // Switch to only using appended clones\n                    clones.push(this.normalize(clones.length / 2, true));\n                    append.push({ ...this.slidesData[clones[clones.length - 1]] });\n                    clones.push(this.normalize(items.length - 1 - (clones.length - 1) / 2, true));\n                    prepend.unshift({ ...this.slidesData[clones[clones.length - 1]] });\n                }\n                this._clones = clones;\n                append = append.map(slide => {\n                    slide.id = `${this.clonedIdPrefix}${slide.id}`;\n                    slide.isActive = false;\n                    slide.isCloned = true;\n                    return slide;\n                });\n                prepend = prepend.map(slide => {\n                    slide.id = `${this.clonedIdPrefix}${slide.id}`;\n                    slide.isActive = false;\n                    slide.isCloned = true;\n                    return slide;\n                });\n                this.slidesData = prepend.concat(this.slidesData).concat(append);\n            }\n        }, {\n            filter: ['width', 'items', 'settings'],\n            run: () => {\n                const rtl = this.settings.rtl ? 1 : -1, size = this._clones.length + this._items.length, coordinates = [];\n                let iterator = -1, previous = 0, current = 0;\n                while (++iterator < size) {\n                    previous = coordinates[iterator - 1] || 0;\n                    current = this._widths[this.relative(iterator)] + this.settings.margin;\n                    coordinates.push(previous + current * rtl);\n                }\n                this._coordinates = coordinates;\n            }\n        }, {\n            filter: ['width', 'items', 'settings'],\n            run: () => {\n                const padding = this.settings.stagePadding, coordinates = this._coordinates, css = {\n                    'width': Math.ceil(Math.abs(coordinates[coordinates.length - 1])) + padding * 2,\n                    'padding-left': padding || '',\n                    'padding-right': padding || ''\n                };\n                this.stageData.width = css.width; // use this property in *ngIf directive for .owl-stage element\n                this.stageData.paddingL = css['padding-left'];\n                this.stageData.paddingR = css['padding-right'];\n            }\n        }, {\n            //   filter: [ 'width', 'items', 'settings' ],\n            //   run: cache => {\n            // \t\t// this method sets the width for every slide, but I set it in different way earlier\n            // \t\tconst grid = !this.settings.autoWidth,\n            // \t\titems = this.$stage.children(); // use this.slidesData\n            //     let iterator = this._coordinates.length;\n            //     if (grid && cache.items.merge) {\n            //       while (iterator--) {\n            //         cache.css.width = this._widths[this.relative(iterator)];\n            //         items.eq(iterator).css(cache.css);\n            //       }\n            //     } else if (grid) {\n            //       cache.css.width = cache.items.width;\n            //       items.css(cache.css);\n            //     }\n            //   }\n            // }, {\n            //   filter: [ 'items' ],\n            //   run: function() {\n            //     this._coordinates.length < 1 && this.$stage.removeAttr('style');\n            //   }\n            // }, {\n            filter: ['width', 'items', 'settings'],\n            run: cache => {\n                let current = cache.current ? this.slidesData.findIndex(slide => slide.id === cache.current) : 0;\n                current = Math.max(this.minimum(), Math.min(this.maximum(), current));\n                this.reset(current);\n            }\n        }, {\n            filter: ['position'],\n            run: () => {\n                this.animate(this.coordinates(this._current));\n            }\n        }, {\n            filter: ['width', 'position', 'items', 'settings'],\n            run: () => {\n                const rtl = this.settings.rtl ? 1 : -1, padding = this.settings.stagePadding * 2, matches = [];\n                let begin, end, inner, outer, i, n;\n                begin = this.coordinates(this.current());\n                if (typeof begin === 'number') {\n                    begin += padding;\n                }\n                else {\n                    begin = 0;\n                }\n                end = begin + this.width() * rtl;\n                if (rtl === -1 && this.settings.center) {\n                    const result = this._coordinates.filter(element => {\n                        return this.settings.items % 2 === 1 ? element >= begin : element > begin;\n                    });\n                    begin = result.length ? result[result.length - 1] : begin;\n                }\n                for (i = 0, n = this._coordinates.length; i < n; i++) {\n                    inner = Math.ceil(this._coordinates[i - 1] || 0);\n                    outer = Math.ceil(Math.abs(this._coordinates[i]) + padding * rtl);\n                    if ((this._op(inner, '<=', begin) && (this._op(inner, '>', end)))\n                        || (this._op(outer, '<', begin) && this._op(outer, '>', end))) {\n                        matches.push(i);\n                    }\n                }\n                this.slidesData.forEach(slide => {\n                    slide.isActive = false;\n                    return slide;\n                });\n                matches.forEach(item => {\n                    this.slidesData[item].isActive = true;\n                });\n                if (this.settings.center) {\n                    this.slidesData.forEach(slide => {\n                        slide.isCentered = false;\n                        return slide;\n                    });\n                    this.slidesData[this.current()].isCentered = true;\n                }\n            }\n        }\n    ];\n    constructor(logger) {\n        this.logger = logger;\n    }\n    /**\n     * Makes _viewSettingsShipper$ Subject become Observable\n     * @returns Observable of _viewSettingsShipper$ Subject\n     */\n    getViewCurSettings() {\n        return this._viewSettingsShipper$.asObservable();\n    }\n    /**\n     * Makes _initializedCarousel$ Subject become Observable\n     * @returns Observable of _initializedCarousel$ Subject\n     */\n    getInitializedState() {\n        return this._initializedCarousel$.asObservable();\n    }\n    /**\n     * Makes _changeSettingsCarousel$ Subject become Observable\n     * @returns Observable of _changeSettingsCarousel$ Subject\n     */\n    getChangeState() {\n        return this._changeSettingsCarousel$.asObservable();\n    }\n    /**\n     * Makes _changedSettingsCarousel$ Subject become Observable\n     * @returns Observable of _changedSettingsCarousel$ Subject\n     */\n    getChangedState() {\n        return this._changedSettingsCarousel$.asObservable();\n    }\n    /**\n     * Makes _translateCarousel$ Subject become Observable\n     * @returns Observable of _translateCarousel$ Subject\n     */\n    getTranslateState() {\n        return this._translateCarousel$.asObservable();\n    }\n    /**\n     * Makes _translatedCarousel$ Subject become Observable\n     * @returns Observable of _translatedCarousel$ Subject\n     */\n    getTranslatedState() {\n        return this._translatedCarousel$.asObservable();\n    }\n    /**\n     * Makes _resizeCarousel$ Subject become Observable\n     * @returns Observable of _resizeCarousel$ Subject\n     */\n    getResizeState() {\n        return this._resizeCarousel$.asObservable();\n    }\n    /**\n     * Makes _resizedCarousel$ Subject become Observable\n     * @returns Observable of _resizedCarousel$ Subject\n     */\n    getResizedState() {\n        return this._resizedCarousel$.asObservable();\n    }\n    /**\n     * Makes _refreshCarousel$ Subject become Observable\n     * @returns Observable of _refreshCarousel$ Subject\n     */\n    getRefreshState() {\n        return this._refreshCarousel$.asObservable();\n    }\n    /**\n     * Makes _refreshedCarousel$ Subject become Observable\n     * @returns Observable of _refreshedCarousel$ Subject\n     */\n    getRefreshedState() {\n        return this._refreshedCarousel$.asObservable();\n    }\n    /**\n     * Makes _dragCarousel$ Subject become Observable\n     * @returns Observable of _dragCarousel$ Subject\n     */\n    getDragState() {\n        return this._dragCarousel$.asObservable();\n    }\n    /**\n     * Makes _draggedCarousel$ Subject become Observable\n     * @returns Observable of _draggedCarousel$ Subject\n     */\n    getDraggedState() {\n        return this._draggedCarousel$.asObservable();\n    }\n    /**\n     * Setups custom options expanding default options\n     * @param options custom options\n     */\n    setOptions(options) {\n        const configOptions = new OwlCarouselOConfig();\n        const checkedOptions = this._validateOptions(options, configOptions);\n        this._options = { ...configOptions, ...checkedOptions };\n    }\n    /**\n     * Checks whether user's option are set properly. Cheking is based on typings;\n     * @param options options set by user\n     * @param configOptions default options\n     * @returns checked and modified (if it's needed) user's options\n     *\n     * Notes:\n     * \t- if user set option with wrong type, it'll be written in console\n     */\n    _validateOptions(options, configOptions) {\n        const checkedOptions = { ...options };\n        const mockedTypes = new OwlOptionsMockedTypes();\n        const setRightOption = (type, key) => {\n            this.logger.log(`options.${key} must be type of ${type}; ${key}=${options[key]} skipped to defaults: ${key}=${configOptions[key]}`);\n            return configOptions[key];\n        };\n        for (const key in checkedOptions) {\n            if (checkedOptions.hasOwnProperty(key)) {\n                // condition could be shortened but it gets harder for understanding\n                if (mockedTypes[key] === 'number') {\n                    if (this._isNumeric(checkedOptions[key])) {\n                        checkedOptions[key] = +checkedOptions[key];\n                        checkedOptions[key] = key === 'items' ? this._validateItems(checkedOptions[key], checkedOptions.skip_validateItems) : checkedOptions[key];\n                    }\n                    else {\n                        checkedOptions[key] = setRightOption(mockedTypes[key], key);\n                    }\n                }\n                else if (mockedTypes[key] === 'boolean' && typeof checkedOptions[key] !== 'boolean') {\n                    checkedOptions[key] = setRightOption(mockedTypes[key], key);\n                }\n                else if (mockedTypes[key] === 'number|boolean' && !this._isNumberOrBoolean(checkedOptions[key])) {\n                    checkedOptions[key] = setRightOption(mockedTypes[key], key);\n                }\n                else if (mockedTypes[key] === 'number|string' && !this._isNumberOrString(checkedOptions[key])) {\n                    checkedOptions[key] = setRightOption(mockedTypes[key], key);\n                }\n                else if (mockedTypes[key] === 'string|boolean' && !this._isStringOrBoolean(checkedOptions[key])) {\n                    checkedOptions[key] = setRightOption(mockedTypes[key], key);\n                }\n                else if (mockedTypes[key] === 'string[]') {\n                    if (Array.isArray(checkedOptions[key])) {\n                        let isString = false;\n                        checkedOptions[key].forEach(element => {\n                            isString = typeof element === 'string' ? true : false;\n                        });\n                        if (!isString) {\n                            checkedOptions[key] = setRightOption(mockedTypes[key], key);\n                        }\n                        ;\n                    }\n                    else {\n                        checkedOptions[key] = setRightOption(mockedTypes[key], key);\n                    }\n                }\n            }\n        }\n        return checkedOptions;\n    }\n    /**\n     * Checks the option `items` set by user and if it bigger than number of slides, the function returns number of slides\n     * @param items option items set by user\n     * @param skip_validateItems option `skip_validateItems` set by user\n     * @returns right number of items\n     */\n    _validateItems(items, skip_validateItems) {\n        let result = items;\n        if (items > this._items.length) {\n            if (skip_validateItems) {\n                this.logger.log('The option \\'items\\' in your options is bigger than the number of slides. The navigation got disabled');\n            }\n            else {\n                result = this._items.length;\n                this.logger.log('The option \\'items\\' in your options is bigger than the number of slides. This option is updated to the current number of slides and the navigation got disabled');\n            }\n        }\n        else {\n            if (items === this._items.length && (this.settings.dots || this.settings.nav)) {\n                this.logger.log('Option \\'items\\' in your options is equal to the number of slides. So the navigation got disabled');\n            }\n        }\n        return result;\n    }\n    /**\n     * Set current width of carousel\n     * @param width width of carousel Window\n     */\n    setCarouselWidth(width) {\n        this._width = width;\n    }\n    /**\n     * Setups the current settings.\n     * @todo Remove responsive classes. Why should adaptive designs be brought into IE8?\n     * @todo Support for media queries by using `matchMedia` would be nice.\n     * @param carouselWidth width of carousel\n     * @param slides array of slides\n     * @param options options set by user\n     */\n    setup(carouselWidth, slides, options) {\n        this.setCarouselWidth(carouselWidth);\n        this.setItems(slides);\n        this._defineSlidesData();\n        this.setOptions(options);\n        this.settings = { ...this._options };\n        this.setOptionsForViewport();\n        this._trigger('change', { property: { name: 'settings', value: this.settings } });\n        this.invalidate('settings'); // must be call of this function;\n        this._trigger('changed', { property: { name: 'settings', value: this.settings } });\n    }\n    /**\n     * Set options for current viewport\n     */\n    setOptionsForViewport() {\n        const viewport = this._width, overwrites = this._options.responsive;\n        let match = -1;\n        if (!Object.keys(overwrites).length) {\n            return;\n        }\n        if (!viewport) {\n            this.settings.items = 1;\n            return;\n        }\n        for (const key in overwrites) {\n            if (overwrites.hasOwnProperty(key)) {\n                if (+key <= viewport && +key > match) {\n                    match = Number(key);\n                }\n            }\n        }\n        this.settings = { ...this._options, ...overwrites[match], items: (overwrites[match] && overwrites[match].items) ? this._validateItems(overwrites[match].items, this._options.skip_validateItems) : this._options.items };\n        // if (typeof this.settings.stagePadding === 'function') {\n        // \tthis.settings.stagePadding = this.settings.stagePadding();\n        // }\n        delete this.settings.responsive;\n        this.owlDOMData.isResponsive = true;\n        this.owlDOMData.isMouseDragable = this.settings.mouseDrag;\n        this.owlDOMData.isTouchDragable = this.settings.touchDrag;\n        const mergers = [];\n        this._items.forEach(item => {\n            const mergeN = this.settings.merge ? item.dataMerge : 1;\n            mergers.push(mergeN);\n        });\n        this._mergers = mergers;\n        this._breakpoint = match;\n        this.invalidate('settings');\n    }\n    /**\n     * Initializes the carousel.\n     * @param slides array of CarouselSlideDirective\n     */\n    initialize(slides) {\n        this.enter('initializing');\n        // this.trigger('initialize');\n        this.owlDOMData.rtl = this.settings.rtl;\n        if (this._mergers.length) {\n            this._mergers = [];\n        }\n        slides.forEach(item => {\n            const mergeN = this.settings.merge ? item.dataMerge : 1;\n            this._mergers.push(mergeN);\n        });\n        this._clones = [];\n        this.reset(this._isNumeric(this.settings.startPosition) ? +this.settings.startPosition : 0);\n        this.invalidate('items');\n        this.refresh();\n        this.owlDOMData.isLoaded = true;\n        this.owlDOMData.isMouseDragable = this.settings.mouseDrag;\n        this.owlDOMData.isTouchDragable = this.settings.touchDrag;\n        this.sendChanges();\n        this.leave('initializing');\n        this._trigger('initialized');\n    }\n    ;\n    /**\n     * Sends all data needed for View\n     */\n    sendChanges() {\n        this._viewSettingsShipper$.next({\n            owlDOMData: this.owlDOMData,\n            stageData: this.stageData,\n            slidesData: this.slidesData,\n            navData: this.navData,\n            dotsData: this.dotsData\n        });\n    }\n    /**\n     * Updates option logic if necessery\n     */\n    _optionsLogic() {\n        if (this.settings.autoWidth) {\n            this.settings.stagePadding = 0;\n            this.settings.merge = false;\n        }\n    }\n    /**\n     * Updates the view\n     */\n    update() {\n        let i = 0;\n        const n = this._pipe.length, filter = item => this._invalidated[item], cache = {};\n        while (i < n) {\n            const filteredPipe = this._pipe[i].filter.filter(filter);\n            if (this._invalidated.all || filteredPipe.length > 0) {\n                this._pipe[i].run(cache);\n            }\n            i++;\n        }\n        this.slidesData.forEach(slide => slide.classes = this.setCurSlideClasses(slide));\n        this.sendChanges();\n        this._invalidated = {};\n        if (!this.is('valid')) {\n            this.enter('valid');\n        }\n    }\n    /**\n     * Gets the width of the view.\n     * @param [dimension=Width.Default] The dimension to return\n     * @returns The width of the view in pixel.\n     */\n    width(dimension) {\n        dimension = dimension || Width.Default;\n        switch (dimension) {\n            case Width.Inner:\n            case Width.Outer:\n                return this._width;\n            default:\n                return this._width - this.settings.stagePadding * 2 + this.settings.margin;\n        }\n    }\n    /**\n     * Refreshes the carousel primarily for adaptive purposes.\n     */\n    refresh() {\n        this.enter('refreshing');\n        this._trigger('refresh');\n        this._defineSlidesData();\n        this.setOptionsForViewport();\n        this._optionsLogic();\n        // this.$element.addClass(this.options.refreshClass);\n        this.update();\n        // this.$element.removeClass(this.options.refreshClass);\n        this.leave('refreshing');\n        this._trigger('refreshed');\n    }\n    /**\n     * Checks window `resize` event.\n     * @param curWidth width of .owl-carousel\n     */\n    onResize(curWidth) {\n        if (!this._items.length) {\n            return false;\n        }\n        this.setCarouselWidth(curWidth);\n        this.enter('resizing');\n        // if (this.trigger('resize').isDefaultPrevented()) {\n        // \tthis.leave('resizing');\n        // \treturn false;\n        // }\n        this._trigger('resize');\n        this.invalidate('width');\n        this.refresh();\n        this.leave('resizing');\n        this._trigger('resized');\n    }\n    /**\n     * Prepares data for dragging carousel. It starts after firing `touchstart` and `mousedown` events.\n     * @todo Horizontal swipe threshold as option\n     * @todo #261\n     * @param event - The event arguments.\n     * @returns stage - object with 'x' and 'y' coordinates of .owl-stage\n     */\n    prepareDragging(event) {\n        let stage = null, transformArr;\n        // could be 5 commented lines below; However there's stage transform in stageData and in updates after each move of stage\n        // stage = getComputedStyle(this.el.nativeElement).transform.replace(/.*\\(|\\)| /g, '').split(',');\n        // stage = {\n        //   x: stage[stage.length === 16 ? 12 : 4],\n        //   y: stage[stage.length === 16 ? 13 : 5]\n        // };\n        transformArr = this.stageData.transform.replace(/.*\\(|\\)| |[^,-\\d]\\w|\\)/g, '').split(',');\n        stage = {\n            x: +transformArr[0],\n            y: +transformArr[1]\n        };\n        if (this.is('animating')) {\n            this.invalidate('position');\n        }\n        if (event.type === 'mousedown') {\n            this.owlDOMData.isGrab = true;\n        }\n        this.speed(0);\n        return stage;\n    }\n    /**\n     * Enters into a 'dragging' state\n     */\n    enterDragging() {\n        this.enter('dragging');\n        this._trigger('drag');\n    }\n    /**\n     * Defines new coords for .owl-stage while dragging it\n     * @todo #261\n     * @param event the event arguments.\n     * @param dragData initial data got after starting dragging\n     * @returns coords or false\n     */\n    defineNewCoordsDrag(event, dragData) {\n        let minimum = null, maximum = null, pull = null;\n        const delta = this.difference(dragData.pointer, this.pointer(event)), stage = this.difference(dragData.stage.start, delta);\n        if (!this.is('dragging')) {\n            return false;\n        }\n        if (this.settings.loop) {\n            minimum = this.coordinates(this.minimum());\n            maximum = +this.coordinates(this.maximum() + 1) - minimum;\n            stage.x = (((stage.x - minimum) % maximum + maximum) % maximum) + minimum;\n        }\n        else {\n            minimum = this.settings.rtl ? this.coordinates(this.maximum()) : this.coordinates(this.minimum());\n            maximum = this.settings.rtl ? this.coordinates(this.minimum()) : this.coordinates(this.maximum());\n            pull = this.settings.pullDrag ? -1 * delta.x / 5 : 0;\n            stage.x = Math.max(Math.min(stage.x, minimum + pull), maximum + pull);\n        }\n        return stage;\n    }\n    /**\n     * Finishes dragging of carousel when `touchend` and `mouseup` events fire.\n     * @todo #261\n     * @todo Threshold for click event\n     * @param event the event arguments.\n     * @param dragObj the object with dragging settings and states\n     * @param clickAttacher function which attaches click handler to slide or its children elements in order to prevent event bubling\n     */\n    finishDragging(event, dragObj, clickAttacher) {\n        const directions = ['right', 'left'], delta = this.difference(dragObj.pointer, this.pointer(event)), stage = dragObj.stage.current, direction = directions[+(this.settings.rtl ? delta.x < +this.settings.rtl : delta.x > +this.settings.rtl)];\n        let currentSlideI, current, newCurrent;\n        if (delta.x !== 0 && this.is('dragging') || !this.is('valid')) {\n            this.speed(+this.settings.dragEndSpeed || this.settings.smartSpeed);\n            currentSlideI = this.closest(stage.x, delta.x !== 0 ? direction : dragObj.direction);\n            current = this.current();\n            newCurrent = this.current(currentSlideI === -1 ? undefined : currentSlideI);\n            if (current !== newCurrent) {\n                this.invalidate('position');\n                this.update();\n            }\n            dragObj.direction = direction;\n            if (Math.abs(delta.x) > 3 || new Date().getTime() - dragObj.time > 300) {\n                clickAttacher();\n            }\n        }\n        if (!this.is('dragging')) {\n            return;\n        }\n        this.leave('dragging');\n        this._trigger('dragged');\n    }\n    /**\n     * Gets absolute position of the closest item for a coordinate.\n     * @todo Setting `freeDrag` makes `closest` not reusable. See #165.\n     * @param coordinate The coordinate in pixel.\n     * @param direction The direction to check for the closest item. Ether `left` or `right`.\n     * @returns The absolute position of the closest item.\n     */\n    closest(coordinate, direction) {\n        const pull = 30, width = this.width();\n        let coordinates = this.coordinates(), position = -1;\n        if (this.settings.center) {\n            coordinates = coordinates.map(item => {\n                if (item === 0) {\n                    item += 0.000001;\n                }\n                return item;\n            });\n        }\n        // option 'freeDrag' doesn't have realization and using it here creates problem:\n        // variable 'position' stays unchanged (it equals -1 at the begging) and thus method returns -1\n        // Returning value is consumed by method current(), which taking -1 as argument calculates the index of new current slide\n        // In case of having 5 slides ans 'loop=false; calling 'current(-1)' sets props '_current' as 4. Just last slide remains visible instead of 3 last slides.\n        // if (!this.settings.freeDrag) {\n        // check closest item\n        for (let i = 0; i < coordinates.length; i++) {\n            if (direction === 'left' && coordinate > coordinates[i] - pull && coordinate < coordinates[i] + pull) {\n                position = i;\n                // on a right pull, check on previous index\n                // to do so, subtract width from value and set position = index + 1\n            }\n            else if (direction === 'right' && coordinate > coordinates[i] - width - pull && coordinate < coordinates[i] - width + pull) {\n                position = i + 1;\n            }\n            else if (this._op(coordinate, '<', coordinates[i])\n                && this._op(coordinate, '>', coordinates[i + 1] || coordinates[i] - width)) {\n                position = direction === 'left' ? i + 1 : i;\n            }\n            else if (direction === null && coordinate > coordinates[i] - pull && coordinate < coordinates[i] + pull) {\n                position = i;\n            }\n            if (position !== -1) {\n                break;\n            }\n            ;\n        }\n        // }\n        if (!this.settings.loop) {\n            // non loop boundries\n            if (this._op(coordinate, '>', coordinates[this.minimum()])) {\n                position = coordinate = this.minimum();\n            }\n            else if (this._op(coordinate, '<', coordinates[this.maximum()])) {\n                position = coordinate = this.maximum();\n            }\n        }\n        return position;\n    }\n    /**\n     * Animates the stage.\n     * @todo #270\n     * @param coordinate The coordinate in pixels.\n     */\n    animate(coordinate) {\n        const animate = this.speed() > 0;\n        if (this.is('animating')) {\n            this.onTransitionEnd();\n        }\n        if (animate) {\n            this.enter('animating');\n            this._trigger('translate');\n        }\n        this.stageData.transform = 'translate3d(' + coordinate + 'px,0px,0px)';\n        this.stageData.transition = (this.speed() / 1000) + 's' + (this.settings.slideTransition ? ' ' + this.settings.slideTransition : '');\n        // also there was transition by means of JQuery.animate or css-changing property left\n    }\n    /**\n     * Checks whether the carousel is in a specific state or not.\n     * @param state The state to check.\n     * @returns The flag which indicates if the carousel is busy.\n     */\n    is(state) {\n        return this._states.current[state] && this._states.current[state] > 0;\n    }\n    ;\n    /**\n     * Sets the absolute position of the current item.\n     * @param position The new absolute position or nothing to leave it unchanged.\n     * @returns The absolute position of the current item.\n     */\n    current(position) {\n        if (position === undefined) {\n            return this._current;\n        }\n        if (this._items.length === 0) {\n            return undefined;\n        }\n        position = this.normalize(position);\n        if (this._current !== position) {\n            const event = this._trigger('change', { property: { name: 'position', value: position } });\n            // if (event.data !== undefined) {\n            // \tposition = this.normalize(event.data);\n            // }\n            this._current = position;\n            this.invalidate('position');\n            this._trigger('changed', { property: { name: 'position', value: this._current } });\n        }\n        return this._current;\n    }\n    /**\n     * Invalidates the given part of the update routine.\n     * @param part The part to invalidate.\n     * @returns The invalidated parts.\n     */\n    invalidate(part) {\n        if (typeof part === 'string') {\n            this._invalidated[part] = true;\n            if (this.is('valid')) {\n                this.leave('valid');\n            }\n        }\n        return Object.keys(this._invalidated);\n    }\n    ;\n    /**\n     * Resets the absolute position of the current item.\n     * @param position the absolute position of the new item.\n     */\n    reset(position) {\n        position = this.normalize(position);\n        if (position === undefined) {\n            return;\n        }\n        this._speed = 0;\n        this._current = position;\n        this._suppress(['translate', 'translated']);\n        this.animate(this.coordinates(position));\n        this._release(['translate', 'translated']);\n    }\n    /**\n     * Normalizes an absolute or a relative position of an item.\n     * @param position The absolute or relative position to normalize.\n     * @param relative Whether the given position is relative or not.\n     * @returns The normalized position.\n     */\n    normalize(position, relative) {\n        const n = this._items.length, m = relative ? 0 : this._clones.length;\n        if (!this._isNumeric(position) || n < 1) {\n            position = undefined;\n        }\n        else if (position < 0 || position >= n + m) {\n            position = ((position - m / 2) % n + n) % n + m / 2;\n        }\n        return position;\n    }\n    /**\n     * Converts an absolute position of an item into a relative one.\n     * @param position The absolute position to convert.\n     * @returns The converted position.\n     */\n    relative(position) {\n        position -= this._clones.length / 2;\n        return this.normalize(position, true);\n    }\n    /**\n     * Gets the maximum position for the current item.\n     * @param relative Whether to return an absolute position or a relative position.\n     * @returns number of maximum position\n     */\n    maximum(relative = false) {\n        const settings = this.settings;\n        let maximum = this._coordinates.length, iterator, reciprocalItemsWidth, elementWidth;\n        if (settings.loop) {\n            maximum = this._clones.length / 2 + this._items.length - 1;\n        }\n        else if (settings.autoWidth || settings.merge) {\n            iterator = this._items.length;\n            reciprocalItemsWidth = this.slidesData[--iterator].width;\n            elementWidth = this._width;\n            while (iterator-- > 0) {\n                // it could be use this._items instead of this.slidesData;\n                reciprocalItemsWidth += +this.slidesData[iterator].width + this.settings.margin;\n                if (reciprocalItemsWidth > elementWidth) {\n                    break;\n                }\n            }\n            maximum = iterator + 1;\n        }\n        else if (settings.center) {\n            maximum = this._items.length - 1;\n        }\n        else {\n            maximum = this._items.length - settings.items;\n        }\n        if (relative) {\n            maximum -= this._clones.length / 2;\n        }\n        return Math.max(maximum, 0);\n    }\n    /**\n     * Gets the minimum position for the current item.\n     * @param relative Whether to return an absolute position or a relative position.\n     * @returns number of minimum position\n     */\n    minimum(relative = false) {\n        return relative ? 0 : this._clones.length / 2;\n    }\n    /**\n     * Gets an item at the specified relative position.\n     * @param position The relative position of the item.\n     * @returns The item at the given position or all items if no position was given.\n     */\n    items(position) {\n        if (position === undefined) {\n            return this._items.slice();\n        }\n        position = this.normalize(position, true);\n        return [this._items[position]];\n    }\n    /**\n     * Gets an item at the specified relative position.\n     * @param position The relative position of the item.\n     * @returns The item at the given position or all items if no position was given.\n     */\n    mergers(position) {\n        if (position === undefined) {\n            return this._mergers.slice();\n        }\n        position = this.normalize(position, true);\n        return this._mergers[position];\n    }\n    /**\n     * Gets the absolute positions of clones for an item.\n     * @param position The relative position of the item.\n     * @returns The absolute positions of clones for the item or all if no position was given.\n     */\n    clones(position) {\n        const odd = this._clones.length / 2, even = odd + this._items.length, map = index => index % 2 === 0 ? even + index / 2 : odd - (index + 1) / 2;\n        if (position === undefined) {\n            return this._clones.map((v, i) => map(i));\n        }\n        return this._clones.map((v, i) => v === position ? map(i) : null).filter(item => item);\n    }\n    /**\n     * Sets the current animation speed.\n     * @param speed The animation speed in milliseconds or nothing to leave it unchanged.\n     * @returns The current animation speed in milliseconds.\n     */\n    speed(speed) {\n        if (speed !== undefined) {\n            this._speed = speed;\n        }\n        return this._speed;\n    }\n    /**\n     * Gets the coordinate of an item.\n     * @todo The name of this method is missleanding.\n     * @param position The absolute position of the item within `minimum()` and `maximum()`.\n     * @returns The coordinate of the item in pixel or all coordinates.\n     */\n    coordinates(position) {\n        let multiplier = 1, newPosition = position - 1, coordinate, result;\n        if (position === undefined) {\n            result = this._coordinates.map((item, index) => {\n                return this.coordinates(index);\n            });\n            return result;\n        }\n        if (this.settings.center) {\n            if (this.settings.rtl) {\n                multiplier = -1;\n                newPosition = position + 1;\n            }\n            coordinate = this._coordinates[position];\n            coordinate += (this.width() - coordinate + (this._coordinates[newPosition] || 0)) / 2 * multiplier;\n        }\n        else {\n            coordinate = this._coordinates[newPosition] || 0;\n        }\n        coordinate = Math.ceil(coordinate);\n        return coordinate;\n    }\n    /**\n     * Calculates the speed for a translation.\n     * @param from The absolute position of the start item.\n     * @param to The absolute position of the target item.\n     * @param factor [factor=undefined] - The time factor in milliseconds.\n     * @returns The time in milliseconds for the translation.\n     */\n    _duration(from, to, factor) {\n        if (factor === 0) {\n            return 0;\n        }\n        return Math.min(Math.max(Math.abs(to - from), 1), 6) * Math.abs((+factor || this.settings.smartSpeed));\n    }\n    /**\n     * Slides to the specified item.\n     * @param position The position of the item.\n     * @param speed The time in milliseconds for the transition.\n     */\n    to(position, speed) {\n        let current = this.current(), revert = null, distance = position - this.relative(current), maximum = this.maximum(), delayForLoop = 0;\n        const direction = +(distance > 0) - +(distance < 0), items = this._items.length, minimum = this.minimum();\n        if (this.settings.loop) {\n            if (!this.settings.rewind && Math.abs(distance) > items / 2) {\n                distance += direction * -1 * items;\n            }\n            position = current + distance;\n            revert = ((position - minimum) % items + items) % items + minimum;\n            if (revert !== position && revert - distance <= maximum && revert - distance > 0) {\n                current = revert - distance;\n                position = revert;\n                delayForLoop = 30;\n                this.reset(current);\n                this.sendChanges();\n            }\n        }\n        else if (this.settings.rewind) {\n            maximum += 1;\n            position = (position % maximum + maximum) % maximum;\n        }\n        else {\n            position = Math.max(minimum, Math.min(maximum, position));\n        }\n        setTimeout(() => {\n            this.speed(this._duration(current, position, speed));\n            this.current(position);\n            this.update();\n        }, delayForLoop);\n    }\n    /**\n     * Slides to the next item.\n     * @param speed The time in milliseconds for the transition.\n     */\n    next(speed) {\n        speed = speed || false;\n        this.to(this.relative(this.current()) + 1, speed);\n    }\n    /**\n     * Slides to the previous item.\n     * @param speed The time in milliseconds for the transition.\n     */\n    prev(speed) {\n        speed = speed || false;\n        this.to(this.relative(this.current()) - 1, speed);\n    }\n    /**\n     * Handles the end of an animation.\n     * @param event - The event arguments.\n     */\n    onTransitionEnd(event) {\n        // if css2 animation then event object is undefined\n        if (event !== undefined) {\n            // event.stopPropagation();\n            // // Catch only owl-stage transitionEnd event\n            // if ((event.target || event.srcElement || event.originalTarget) !== this.$stage.get(0)\t) {\n            // \treturn false;\n            // }\n            return false;\n        }\n        this.leave('animating');\n        this._trigger('translated');\n    }\n    /**\n     * Gets viewport width.\n     * @returns - The width in pixel.\n     */\n    _viewport() {\n        let width;\n        if (this._width) {\n            width = this._width;\n        }\n        else {\n            this.logger.log('Can not detect viewport width.');\n        }\n        return width;\n    }\n    /**\n     * Sets _items\n     * @param content The list of slides put into CarouselSlideDirectives.\n     */\n    setItems(content) {\n        this._items = content;\n    }\n    /**\n     * Sets slidesData using this._items\n     */\n    _defineSlidesData() {\n        // Maybe creating and using loadMap would be better in LazyLoadService.\n        // Hovewer in that case when 'resize' event fires, prop 'load' of all slides will get 'false' and such state of prop will be seen by View during its updating. Accordingly the code will remove slides's content from DOM even if it was loaded before.\n        // Thus it would be needed to add that content into DOM again.\n        // In order to avoid additional removing/adding loaded slides's content we use loadMap here and set restore state of prop 'load' before the View will get it.\n        let loadMap;\n        if (this.slidesData && this.slidesData.length) {\n            loadMap = new Map();\n            this.slidesData.forEach(item => {\n                if (item.load) {\n                    loadMap.set(item.id, item.load);\n                }\n            });\n        }\n        this.slidesData = this._items.map(slide => {\n            return {\n                id: `${slide.id}`,\n                isActive: false,\n                tplRef: slide.tplRef,\n                dataMerge: slide.dataMerge,\n                width: 0,\n                isCloned: false,\n                load: loadMap ? loadMap.get(slide.id) : false,\n                hashFragment: slide.dataHash\n            };\n        });\n    }\n    /**\n     * Sets current classes for slide\n     * @param slide Slide of carousel\n     * @returns object with names of css-classes which are keys and true/false values\n     */\n    setCurSlideClasses(slide) {\n        // CSS classes: added/removed per current state of component properties\n        const currentClasses = {\n            'active': slide.isActive,\n            'center': slide.isCentered,\n            'cloned': slide.isCloned,\n            'animated': slide.isAnimated,\n            'owl-animated-in': slide.isDefAnimatedIn,\n            'owl-animated-out': slide.isDefAnimatedOut\n        };\n        if (this.settings.animateIn) {\n            currentClasses[this.settings.animateIn] = slide.isCustomAnimatedIn;\n        }\n        if (this.settings.animateOut) {\n            currentClasses[this.settings.animateOut] = slide.isCustomAnimatedOut;\n        }\n        return currentClasses;\n    }\n    /**\n     * Operators to calculate right-to-left and left-to-right.\n     * @param a - The left side operand.\n     * @param o - The operator.\n     * @param b - The right side operand.\n     * @returns true/false meaning right-to-left or left-to-right\n     */\n    _op(a, o, b) {\n        const rtl = this.settings.rtl;\n        switch (o) {\n            case '<':\n                return rtl ? a > b : a < b;\n            case '>':\n                return rtl ? a < b : a > b;\n            case '>=':\n                return rtl ? a <= b : a >= b;\n            case '<=':\n                return rtl ? a >= b : a <= b;\n            default:\n                break;\n        }\n    }\n    /**\n     * Triggers a public event.\n     * @todo Remove `status`, `relatedTarget` should be used instead.\n     * @param name The event name.\n     * @param data The event data.\n     * @param namespace The event namespace.\n     * @param state The state which is associated with the event.\n     * @param enter Indicates if the call enters the specified state or not.\n     */\n    _trigger(name, data, namespace, state, enter) {\n        switch (name) {\n            case 'initialized':\n                this._initializedCarousel$.next(name);\n                break;\n            case 'change':\n                this._changeSettingsCarousel$.next(data);\n                break;\n            case 'changed':\n                this._changedSettingsCarousel$.next(data);\n                break;\n            case 'drag':\n                this._dragCarousel$.next(name);\n                break;\n            case 'dragged':\n                this._draggedCarousel$.next(name);\n                break;\n            case 'resize':\n                this._resizeCarousel$.next(name);\n                break;\n            case 'resized':\n                this._resizedCarousel$.next(name);\n                break;\n            case 'refresh':\n                this._refreshCarousel$.next(name);\n                break;\n            case 'refreshed':\n                this._refreshedCarousel$.next(name);\n                break;\n            case 'translate':\n                this._translateCarousel$.next(name);\n                break;\n            case 'translated':\n                this._translatedCarousel$.next(name);\n                break;\n            default:\n                break;\n        }\n    }\n    /**\n     * Enters a state.\n     * @param name - The state name.\n     */\n    enter(name) {\n        [name].concat(this._states.tags[name] || []).forEach((stateName) => {\n            if (this._states.current[stateName] === undefined) {\n                this._states.current[stateName] = 0;\n            }\n            this._states.current[stateName]++;\n        });\n    }\n    ;\n    /**\n     * Leaves a state.\n     * @param name - The state name.\n     */\n    leave(name) {\n        [name].concat(this._states.tags[name] || []).forEach((stateName) => {\n            if (this._states.current[stateName] === 0 || !!this._states.current[stateName]) {\n                this._states.current[stateName]--;\n            }\n        });\n    }\n    ;\n    /**\n     * Registers an event or state.\n     * @param object - The event or state to register.\n     */\n    register(object) {\n        if (object.type === Type.State) {\n            if (!this._states.tags[object.name]) {\n                this._states.tags[object.name] = object.tags;\n            }\n            else {\n                this._states.tags[object.name] = this._states.tags[object.name].concat(object.tags);\n            }\n            this._states.tags[object.name] = this._states.tags[object.name].filter((tag, i) => {\n                return this._states.tags[object.name].indexOf(tag) === i;\n            });\n        }\n    }\n    /**\n     * Suppresses events.\n     * @param events The events to suppress.\n     */\n    _suppress(events) {\n        events.forEach(event => {\n            this._supress[event] = true;\n        });\n    }\n    /**\n     * Releases suppressed events.\n     * @param events The events to release.\n     */\n    _release(events) {\n        events.forEach(event => {\n            delete this._supress[event];\n        });\n    }\n    /**\n     * Gets unified pointer coordinates from event.\n     * @todo #261\n     * @param event The `mousedown` or `touchstart` event.\n     * @returns Object Coords which contains `x` and `y` coordinates of current pointer position.\n     */\n    pointer(event) {\n        const result = { x: null, y: null };\n        event = event.originalEvent || event || window.event;\n        event = event.touches && event.touches.length ?\n            event.touches[0] : event.changedTouches && event.changedTouches.length ?\n            event.changedTouches[0] : event;\n        if (event.pageX) {\n            result.x = event.pageX;\n            result.y = event.pageY;\n        }\n        else {\n            result.x = event.clientX;\n            result.y = event.clientY;\n        }\n        return result;\n    }\n    /**\n     * Determines if the input is a Number or something that can be coerced to a Number\n     * @param number The input to be tested\n     * @returns An indication if the input is a Number or can be coerced to a Number\n     */\n    _isNumeric(number) {\n        return !isNaN(parseFloat(number));\n    }\n    /**\n     * Determines whether value is number or boolean type\n     * @param value The input to be tested\n     * @returns An indication if the input is a Number or can be coerced to a Number, or Boolean\n     */\n    _isNumberOrBoolean(value) {\n        return this._isNumeric(value) || typeof value === 'boolean';\n    }\n    /**\n     * Determines whether value is number or string type\n     * @param value The input to be tested\n     * @returns An indication if the input is a Number or can be coerced to a Number, or String\n     */\n    _isNumberOrString(value) {\n        return this._isNumeric(value) || typeof value === 'string';\n    }\n    /**\n     * Determines whether value is number or string type\n     * @param value The input to be tested\n     * @returns An indication if the input is a Number or can be coerced to a Number, or String\n     */\n    _isStringOrBoolean(value) {\n        return typeof value === 'string' || typeof value === 'boolean';\n    }\n    /**\n     * Gets the difference of two vectors.\n     * @todo #261\n     * @param first The first vector.\n     * @param second The second vector.\n     * @returns The difference.\n     */\n    difference(first, second) {\n        if (null === first || null === second) {\n            return {\n                x: 0,\n                y: 0,\n            };\n        }\n        return {\n            x: first.x - second.x,\n            y: first.y - second.y\n        };\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: CarouselService, deps: [{ token: OwlLogger }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: CarouselService });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: CarouselService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: OwlLogger }] });\n\nclass NavigationService {\n    carouselService;\n    /**\n     * Subscrioption to merge Observable  from CarouselService\n     */\n    navSubscription;\n    /**\n     * Indicates whether the plugin is initialized or not.\n     */\n    _initialized = false;\n    /**\n     * The current paging indexes.\n     */\n    _pages = [];\n    /**\n     * Data for navigation elements of the user interface.\n     */\n    _navData = {\n        disabled: false,\n        prev: {\n            disabled: false,\n            htmlText: ''\n        },\n        next: {\n            disabled: false,\n            htmlText: ''\n        },\n    };\n    /**\n     * Data for dot elements of the user interface.\n     */\n    _dotsData = {\n        disabled: false,\n        dots: []\n    };\n    constructor(carouselService) {\n        this.carouselService = carouselService;\n        this.spyDataStreams();\n    }\n    ngOnDestroy() {\n        this.navSubscription.unsubscribe();\n    }\n    /**\n     * Defines Observables which service must observe\n     */\n    spyDataStreams() {\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(state => {\n            this.initialize();\n            this._updateNavPages();\n            this.draw();\n            this.update();\n            this.carouselService.sendChanges();\n        }));\n        // mostly changes in carouselService and carousel at all causes carouselService.to(). It moves stage right-left by its code and calling needed functions\n        // Thus this method by calling carouselService.current(position) notifies about changes\n        const changedSettings$ = this.carouselService.getChangedState().pipe(filter(data => data.property.name === 'position'), tap(data => {\n            this.update();\n            // should be the call of the function written at the end of comment\n            // but the method carouselServive.to() has setTimeout(f, 0) which contains carouselServive.update() which calls sendChanges() method.\n            // carouselService.navData and carouselService.dotsData update earlier than carouselServive.update() gets called\n            // updates of carouselService.navData and carouselService.dotsData are being happening withing carouselService.current(position) method which calls next() of _changedSettingsCarousel$\n            // carouselService.current(position) is being calling earlier than carouselServive.update();\n            // this.carouselService.sendChanges();\n        }));\n        const refreshedCarousel$ = this.carouselService.getRefreshedState().pipe(tap(() => {\n            this._updateNavPages();\n            this.draw();\n            this.update();\n            this.carouselService.sendChanges();\n        }));\n        const navMerge$ = merge(initializedCarousel$, changedSettings$, refreshedCarousel$);\n        this.navSubscription = navMerge$.subscribe(() => { });\n    }\n    /**\n       * Initializes the layout of the plugin and extends the carousel.\n       */\n    initialize() {\n        this._navData.disabled = true;\n        this._navData.prev.htmlText = this.carouselService.settings.navText[0];\n        this._navData.next.htmlText = this.carouselService.settings.navText[1];\n        this._dotsData.disabled = true;\n        this.carouselService.navData = this._navData;\n        this.carouselService.dotsData = this._dotsData;\n    }\n    /**\n     * Calculates internal states and updates prop _pages\n     */\n    _updateNavPages() {\n        let i, j, k;\n        const lower = this.carouselService.clones().length / 2, upper = lower + this.carouselService.items().length, maximum = this.carouselService.maximum(true), pages = [], settings = this.carouselService.settings;\n        let size = settings.center || settings.autoWidth || settings.dotsData\n            ? 1 : Math.floor(Number(settings.dotsEach)) || Math.floor(settings.items);\n        size = +size;\n        if (settings.slideBy !== 'page') {\n            settings.slideBy = Math.min(+settings.slideBy, settings.items);\n        }\n        if (settings.dots || settings.slideBy === 'page') {\n            for (i = lower, j = 0, k = 0; i < upper; i++) {\n                if (j >= size || j === 0) {\n                    pages.push({\n                        start: Math.min(maximum, i - lower),\n                        end: i - lower + size - 1\n                    });\n                    if (Math.min(maximum, i - lower) === maximum) {\n                        break;\n                    }\n                    j = 0, ++k;\n                }\n                j += this.carouselService.mergers(this.carouselService.relative(i));\n            }\n        }\n        this._pages = pages;\n    }\n    /**\n       * Draws the user interface.\n       * @todo The option `dotsData` wont work.\n       */\n    draw() {\n        let difference;\n        const settings = this.carouselService.settings, items = this.carouselService.items(), disabled = items.length <= settings.items;\n        this._navData.disabled = !settings.nav || disabled;\n        this._dotsData.disabled = !settings.dots || disabled;\n        if (settings.dots) {\n            difference = this._pages.length - this._dotsData.dots.length;\n            if (settings.dotsData && difference !== 0) {\n                this._dotsData.dots = [];\n                items.forEach(item => {\n                    this._dotsData.dots.push({\n                        active: false,\n                        id: `dot-${item.id}`,\n                        innerContent: item.dotContent,\n                        showInnerContent: true\n                    });\n                });\n            }\n            else if (difference > 0) {\n                const startI = this._dotsData.dots.length > 0 ? this._dotsData.dots.length : 0;\n                for (let i = 0; i < difference; i++) {\n                    this._dotsData.dots.push({\n                        active: false,\n                        id: `dot-${i + startI}`,\n                        innerContent: '',\n                        showInnerContent: false\n                    });\n                }\n            }\n            else if (difference < 0) {\n                this._dotsData.dots.splice(difference, Math.abs(difference));\n            }\n        }\n        this.carouselService.navData = this._navData;\n        this.carouselService.dotsData = this._dotsData;\n    }\n    ;\n    /**\n     * Updates navigation buttons's and dots's states\n     */\n    update() {\n        this._updateNavButtons();\n        this._updateDots();\n    }\n    /**\n     * Changes state of nav buttons (disabled, enabled)\n     */\n    _updateNavButtons() {\n        const settings = this.carouselService.settings, loop = settings.loop || settings.rewind, index = this.carouselService.relative(this.carouselService.current());\n        if (settings.nav) {\n            this._navData.prev.disabled = !loop && index <= this.carouselService.minimum(true);\n            this._navData.next.disabled = !loop && index >= this.carouselService.maximum(true);\n        }\n        this.carouselService.navData = this._navData;\n    }\n    /**\n     * Changes active dot if page becomes changed\n     */\n    _updateDots() {\n        let curActiveDotI;\n        if (!this.carouselService.settings.dots) {\n            return;\n        }\n        this._dotsData.dots.forEach(item => {\n            if (item.active === true) {\n                item.active = false;\n            }\n        });\n        curActiveDotI = this._current();\n        if (this._dotsData.dots.length) {\n            this._dotsData.dots[curActiveDotI].active = true;\n        }\n        this.carouselService.dotsData = this._dotsData;\n    }\n    /**\n       * Gets the current page position of the carousel.\n       * @returns the current page position of the carousel\n       */\n    _current() {\n        const current = this.carouselService.relative(this.carouselService.current());\n        let finalCurrent;\n        const pages = this._pages.filter((page, index) => {\n            return page.start <= current && page.end >= current;\n        }).pop();\n        finalCurrent = this._pages.findIndex(page => {\n            return page.start === pages.start && page.end === pages.end;\n        });\n        return finalCurrent;\n    }\n    ;\n    /**\n       * Gets the current succesor/predecessor position.\n     * @param sussessor position of slide\n       * @returns the current succesor/predecessor position\n       */\n    _getPosition(successor) {\n        let position, length;\n        const settings = this.carouselService.settings;\n        if (settings.slideBy === 'page') {\n            position = this._current();\n            length = this._pages.length;\n            successor ? ++position : --position;\n            position = this._pages[((position % length) + length) % length].start;\n        }\n        else {\n            position = this.carouselService.relative(this.carouselService.current());\n            length = this.carouselService.items().length;\n            successor ? position += +settings.slideBy : position -= +settings.slideBy;\n        }\n        return position;\n    }\n    ;\n    /**\n       * Slides to the next item or page.\n       * @param speed The time in milliseconds for the transition.\n       */\n    next(speed) {\n        this.carouselService.to(this._getPosition(true), speed);\n    }\n    ;\n    /**\n     * Slides to the previous item or page.\n     * @param speed The time in milliseconds for the transition.\n     */\n    prev(speed) {\n        this.carouselService.to(this._getPosition(false), speed);\n    }\n    ;\n    /**\n     * Slides to the specified item or page.\n     * @param position - The position of the item or page.\n     * @param speed - The time in milliseconds for the transition.\n     * @param standard - Whether to use the standard behaviour or not. Default meaning false\n     */\n    to(position, speed, standard) {\n        let length;\n        if (!standard && this._pages.length) {\n            length = this._pages.length;\n            this.carouselService.to(this._pages[((position % length) + length) % length].start, speed);\n        }\n        else {\n            this.carouselService.to(position, speed);\n        }\n    }\n    ;\n    /**\n     * Moves carousel after user's clicking on any dots\n     */\n    moveByDot(dotId) {\n        const index = this._dotsData.dots.findIndex(dot => dotId === dot.id);\n        this.to(index, this.carouselService.settings.dotsSpeed);\n    }\n    /**\n     * rewinds carousel to slide with needed id\n     * @param id id of slide\n     */\n    toSlideById(id) {\n        const position = this.carouselService.slidesData.findIndex(slide => slide.id === id && slide.isCloned === false);\n        if (position === -1 || position === this.carouselService.current()) {\n            return;\n        }\n        this.carouselService.to(this.carouselService.relative(position), false);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: NavigationService, deps: [{ token: CarouselService }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: NavigationService });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: NavigationService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: CarouselService }] });\n\n// import { Injectable } from '@angular/core';\n// function _window(): any {\n//    // return the global native browser window object\n//    return window;\n// }\n// @Injectable()\n// export class WindowRefService {\n//    get nativeWindow(): any {\n//       return _window();\n//    }\n// }\n/**\n * Create a new injection token for injecting the window into a component.\n */\nconst WINDOW = new InjectionToken('WindowToken');\n/**\n * Define abstract class for obtaining reference to the global window object.\n */\nclass WindowRef {\n    get nativeWindow() {\n        throw new Error('Not implemented.');\n    }\n}\n/**\n * Define class that implements the abstract class and returns the native window object.\n */\nclass BrowserWindowRef extends WindowRef {\n    constructor() {\n        super();\n    }\n    /**\n     * @returns window object\n     */\n    get nativeWindow() {\n        return window;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: BrowserWindowRef, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: BrowserWindowRef });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: BrowserWindowRef, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [] });\n/**\n * Create an factory function that returns the native window object.\n * @param browserWindowRef Native window object\n * @param platformId id of platform\n * @returns type of platform of empty object\n */\nfunction windowFactory(browserWindowRef, platformId) {\n    if (isPlatformBrowser(platformId)) {\n        return browserWindowRef.nativeWindow;\n    }\n    const obj = {\n        setTimeout: (func, time) => { },\n        clearTimeout: (a) => { }\n    };\n    return obj;\n}\n/**\n * Create a injectable provider for the WindowRef token that uses the BrowserWindowRef class.\n */\nconst browserWindowProvider = {\n    provide: WindowRef,\n    useClass: BrowserWindowRef\n};\n/**\n * Create an injectable provider that uses the windowFactory function for returning the native window object.\n */\nconst windowProvider = {\n    provide: WINDOW,\n    useFactory: windowFactory,\n    deps: [WindowRef, PLATFORM_ID]\n};\n/**\n * Create an array of providers.\n */\nconst WINDOW_PROVIDERS = [browserWindowProvider, windowProvider];\n\n/**\n * Create a new injection token for injecting the Document into a component.\n */\nconst DOCUMENT = new InjectionToken('DocumentToken');\n/**\n * Define abstract class for obtaining reference to the global Document object.\n */\nclass DocumentRef {\n    get nativeDocument() {\n        throw new Error('Not implemented.');\n    }\n}\n/**\n * Define class that implements the abstract class and returns the native Document object.\n */\nclass BrowserDocumentRef extends DocumentRef {\n    constructor() {\n        super();\n    }\n    /**\n     * @returns Document object\n     */\n    get nativeDocument() {\n        return document;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: BrowserDocumentRef, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: BrowserDocumentRef });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: BrowserDocumentRef, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [] });\n/**\n * Create an factory function that returns the native Document object.\n * @param browserDocumentRef Native Document object\n * @param platformId id of platform\n * @returns type of platform of empty object\n */\nfunction documentFactory(browserDocumentRef, platformId) {\n    if (isPlatformBrowser(platformId)) {\n        return browserDocumentRef.nativeDocument;\n    }\n    const doc = {\n        hidden: false,\n        visibilityState: 'visible'\n    };\n    return doc;\n}\n/**\n * Create a injectable provider for the DocumentRef token that uses the BrowserDocumentRef class.\n */\nconst browserDocumentProvider = {\n    provide: DocumentRef,\n    useClass: BrowserDocumentRef\n};\n/**\n * Create an injectable provider that uses the DocumentFactory function for returning the native Document object.\n */\nconst documentProvider = {\n    provide: DOCUMENT,\n    useFactory: documentFactory,\n    deps: [DocumentRef, PLATFORM_ID]\n};\n/**\n * Create an array of providers.\n */\nconst DOCUMENT_PROVIDERS = [browserDocumentProvider, documentProvider];\n\nclass AutoplayService {\n    carouselService;\n    ngZone;\n    /**\n     * Subscrioption to merge Observables from CarouselService\n     */\n    autoplaySubscription;\n    /**\n     * The autoplay timeout.\n     */\n    _timeout = null;\n    /**\n     * Indicates whenever the autoplay is paused.\n     */\n    _paused = false;\n    /**\n     * Shows whether the code (the plugin) changed the option 'AutoplayTimeout' for own needs\n     */\n    _isArtificialAutoplayTimeout;\n    /**\n     * Shows whether the autoplay is paused for unlimited time by the developer.\n     * Use to prevent autoplaying in case of firing `mouseleave` by adding layers to `<body>` like `mat-menu` does\n     */\n    _isAutoplayStopped = false;\n    get isAutoplayStopped() {\n        return this._isAutoplayStopped;\n    }\n    set isAutoplayStopped(value) {\n        this._isAutoplayStopped = value;\n    }\n    winRef;\n    docRef;\n    constructor(carouselService, winRef, docRef, ngZone) {\n        this.carouselService = carouselService;\n        this.ngZone = ngZone;\n        this.winRef = winRef;\n        this.docRef = docRef;\n        this.spyDataStreams();\n    }\n    ngOnDestroy() {\n        this.autoplaySubscription.unsubscribe();\n    }\n    /**\n     * Defines Observables which service must observe\n     */\n    spyDataStreams() {\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => {\n            if (this.carouselService.settings.autoplay) {\n                this.play();\n            }\n        }));\n        const changedSettings$ = this.carouselService.getChangedState().pipe(tap(data => {\n            this._handleChangeObservable(data);\n        }));\n        const resized$ = this.carouselService.getResizedState().pipe(tap(() => {\n            if (this.carouselService.settings.autoplay && !this._isAutoplayStopped) {\n                this.play();\n            }\n            else {\n                this.stop();\n            }\n        }));\n        // original Autoplay Plugin has listeners on play.owl.core and stop.owl.core events.\n        // They are triggered by Video Plugin\n        const autoplayMerge$ = merge(initializedCarousel$, changedSettings$, resized$);\n        this.autoplaySubscription = autoplayMerge$.subscribe(() => { });\n    }\n    /**\n       * Starts the autoplay.\n       * @param timeout The interval before the next animation starts.\n       * @param speed The animation speed for the animations.\n       */\n    play(timeout, speed) {\n        if (this._paused) {\n            this._paused = false;\n            this._setAutoPlayInterval(this.carouselService.settings.autoplayMouseleaveTimeout);\n        }\n        if (this.carouselService.is('rotating')) {\n            return;\n        }\n        this.carouselService.enter('rotating');\n        this._setAutoPlayInterval();\n    }\n    ;\n    /**\n       * Gets a new timeout\n       * @param timeout - The interval before the next animation starts.\n       * @param speed - The animation speed for the animations.\n       * @return\n       */\n    _getNextTimeout(timeout, speed) {\n        if (this._timeout) {\n            this.winRef.clearTimeout(this._timeout);\n        }\n        this._isArtificialAutoplayTimeout = timeout ? true : false;\n        return this.ngZone.runOutsideAngular(() => {\n            return this.winRef.setTimeout(() => {\n                this.ngZone.run(() => {\n                    if (this._paused || this.carouselService.is('busy') || this.carouselService.is('interacting') || this.docRef.hidden) {\n                        return;\n                    }\n                    this.carouselService.next(speed || this.carouselService.settings.autoplaySpeed);\n                });\n            }, timeout || this.carouselService.settings.autoplayTimeout);\n        });\n    }\n    ;\n    /**\n       * Sets autoplay in motion.\n       */\n    _setAutoPlayInterval(timeout) {\n        this._timeout = this._getNextTimeout(timeout);\n    }\n    ;\n    /**\n     * Stops the autoplay.\n     */\n    stop() {\n        if (!this.carouselService.is('rotating')) {\n            return;\n        }\n        this._paused = true;\n        this.winRef.clearTimeout(this._timeout);\n        this.carouselService.leave('rotating');\n    }\n    ;\n    /**\n       * Stops the autoplay.\n       */\n    pause() {\n        if (!this.carouselService.is('rotating')) {\n            return;\n        }\n        this._paused = true;\n    }\n    ;\n    /**\n     * Manages by autoplaying according to data passed by _changedSettingsCarousel$ Obsarvable\n     * @param data object with current position of carousel and type of change\n     */\n    _handleChangeObservable(data) {\n        if (data.property.name === 'settings') {\n            if (this.carouselService.settings.autoplay) {\n                this.play();\n            }\n            else {\n                this.stop();\n            }\n        }\n        else if (data.property.name === 'position') {\n            //console.log('play?', e);\n            if (this.carouselService.settings.autoplay) {\n                this._setAutoPlayInterval();\n            }\n        }\n    }\n    /**\n     * Starts autoplaying of the carousel in the case when user leaves the carousel before it starts translateing (moving)\n     */\n    _playAfterTranslated() {\n        of('translated').pipe(switchMap(data => this.carouselService.getTranslatedState()), first(), filter(() => this._isArtificialAutoplayTimeout), tap(() => this._setAutoPlayInterval())).subscribe(() => { });\n    }\n    /**\n     * Starts pausing\n     */\n    startPausing() {\n        if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\n            this.pause();\n        }\n    }\n    /**\n     * Starts playing after mouse leaves carousel\n     */\n    startPlayingMouseLeave() {\n        if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\n            this.play();\n            this._playAfterTranslated();\n        }\n    }\n    /**\n     * Starts playing after touch ends\n     */\n    startPlayingTouchEnd() {\n        if (this.carouselService.settings.autoplayHoverPause && this.carouselService.is('rotating')) {\n            this.play();\n            this._playAfterTranslated();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: AutoplayService, deps: [{ token: CarouselService }, { token: WINDOW }, { token: DOCUMENT }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: AutoplayService });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: AutoplayService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: CarouselService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [WINDOW]\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i0.NgZone }] });\n\nclass LazyLoadService {\n    carouselService;\n    /**\n     * Subscrioption to merge Observable  from CarouselService\n     */\n    lazyLoadSubscription;\n    constructor(carouselService) {\n        this.carouselService = carouselService;\n        this.spyDataStreams();\n    }\n    ngOnDestroy() {\n        this.lazyLoadSubscription.unsubscribe();\n    }\n    /**\n     * Defines Observables which service must observe\n     */\n    spyDataStreams() {\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => {\n            const isLazyLoad = this.carouselService.settings && !this.carouselService.settings.lazyLoad;\n            this.carouselService.slidesData.forEach(item => item.load = isLazyLoad ? true : false);\n        }));\n        const changeSettings$ = this.carouselService.getChangeState();\n        const resizedCarousel$ = this.carouselService.getResizedState();\n        const lazyLoadMerge$ = merge(initializedCarousel$, changeSettings$, resizedCarousel$).pipe(tap(data => this._defineLazyLoadSlides(data)));\n        this.lazyLoadSubscription = lazyLoadMerge$.subscribe(() => { });\n    }\n    _defineLazyLoadSlides(data) {\n        if (!this.carouselService.settings || !this.carouselService.settings.lazyLoad) {\n            return;\n        }\n        if ((data.property && data.property.name === 'position') || data === 'initialized' || data === \"resized\") {\n            const settings = this.carouselService.settings, clones = this.carouselService.clones().length;\n            let n = (settings.center && Math.ceil(settings.items / 2) || settings.items), i = ((settings.center && n * -1) || 0), position = (data.property && data.property.value !== undefined ? data.property.value : this.carouselService.current()) + i;\n            // load = $.proxy(function(i, v) { this.load(v) }, this);\n            //TODO: Need documentation for this new option\n            if (settings.lazyLoadEager > 0) {\n                n += settings.lazyLoadEager;\n                // If the carousel is looping also preload images that are to the \"left\"\n                if (settings.loop) {\n                    position -= settings.lazyLoadEager;\n                    n++;\n                }\n            }\n            while (i++ < n) {\n                this._load(clones / 2 + this.carouselService.relative(position));\n                if (clones) {\n                    this.carouselService.clones(this.carouselService.relative(position)).forEach(value => this._load(value));\n                }\n                position++;\n            }\n        }\n    }\n    /**\n       * Loads all resources of an item at the specified position.\n       * @param position - The absolute position of the item.\n       */\n    _load(position) {\n        if (this.carouselService.slidesData[position].load) {\n            return;\n        }\n        this.carouselService.slidesData[position].load = true;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: LazyLoadService, deps: [{ token: CarouselService }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: LazyLoadService });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: LazyLoadService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: CarouselService }] });\n\nclass AnimateService {\n    carouselService;\n    /**\n     * Subscrioption to merge Observable  from CarouselService\n     */\n    animateSubscription;\n    /**\n     * s\n     */\n    swapping = true;\n    /**\n     * active slide before translating\n     */\n    previous = undefined;\n    /**\n     * new active slide after translating\n     */\n    next = undefined;\n    constructor(carouselService) {\n        this.carouselService = carouselService;\n        this.spyDataStreams();\n    }\n    ngOnDestroy() {\n        this.animateSubscription.unsubscribe();\n    }\n    /**\n     * Defines Observables which service must observe\n     */\n    spyDataStreams() {\n        const changeSettings$ = this.carouselService.getChangeState().pipe(tap(data => {\n            if (data.property.name === 'position') {\n                this.previous = this.carouselService.current();\n                this.next = data.property.value;\n            }\n        }));\n        const dragCarousel$ = this.carouselService.getDragState();\n        const draggedCarousel$ = this.carouselService.getDraggedState();\n        const translatedCarousel$ = this.carouselService.getTranslatedState();\n        const dragTranslatedMerge$ = merge(dragCarousel$, draggedCarousel$, translatedCarousel$).pipe(tap(data => this.swapping = data === 'translated'));\n        const translateCarousel$ = this.carouselService.getTranslateState().pipe(tap(data => {\n            if (this.swapping && (this.carouselService._options.animateOut || this.carouselService._options.animateIn)) {\n                this._swap();\n            }\n        }));\n        const animateMerge$ = merge(changeSettings$, translateCarousel$, dragTranslatedMerge$).pipe();\n        this.animateSubscription = animateMerge$.subscribe(() => { });\n    }\n    /**\n       * Toggles the animation classes whenever an translations starts.\n       * @returns\n       */\n    _swap() {\n        if (this.carouselService.settings.items !== 1) {\n            return;\n        }\n        // if (!$.support.animation || !$.support.transition) {\n        // \treturn;\n        // }\n        this.carouselService.speed(0);\n        let left;\n        const previous = this.carouselService.slidesData[this.previous], next = this.carouselService.slidesData[this.next], incoming = this.carouselService.settings.animateIn, outgoing = this.carouselService.settings.animateOut;\n        if (this.carouselService.current() === this.previous) {\n            return;\n        }\n        if (outgoing) {\n            left = +this.carouselService.coordinates(this.previous) - +this.carouselService.coordinates(this.next);\n            this.carouselService.slidesData.forEach(slide => {\n                if (slide.id === previous.id) {\n                    slide.left = `${left}px`;\n                    slide.isAnimated = true;\n                    slide.isDefAnimatedOut = true;\n                    slide.isCustomAnimatedOut = true;\n                }\n            });\n        }\n        if (incoming) {\n            this.carouselService.slidesData.forEach(slide => {\n                if (slide.id === next.id) {\n                    slide.isAnimated = true;\n                    slide.isDefAnimatedIn = true;\n                    slide.isCustomAnimatedIn = true;\n                }\n            });\n        }\n    }\n    ;\n    /**\n     * Handles the end of 'animationend' event\n     * @param id Id of slides\n     */\n    clear(id) {\n        this.carouselService.slidesData.forEach(slide => {\n            if (slide.id === id) {\n                slide.left = '';\n                slide.isAnimated = false;\n                slide.isDefAnimatedOut = false;\n                slide.isCustomAnimatedOut = false;\n                slide.isDefAnimatedIn = false;\n                slide.isCustomAnimatedIn = false;\n                slide.classes = this.carouselService.setCurSlideClasses(slide);\n            }\n        });\n        this.carouselService.onTransitionEnd();\n    }\n    ;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: AnimateService, deps: [{ token: CarouselService }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: AnimateService });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: AnimateService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: CarouselService }] });\n\nclass AutoHeightService {\n    carouselService;\n    /**\n     * Subscrioption to merge Observable  from CarouselService\n     */\n    autoHeightSubscription;\n    constructor(carouselService) {\n        this.carouselService = carouselService;\n        this.spyDataStreams();\n    }\n    ngOnDestroy() {\n        this.autoHeightSubscription.unsubscribe();\n    }\n    /**\n     * Defines Observables which service must observe\n     */\n    spyDataStreams() {\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(data => {\n            if (this.carouselService.settings.autoHeight) {\n                this.update();\n            }\n            else {\n                this.carouselService.slidesData.forEach(slide => slide.heightState = 'full');\n            }\n        }));\n        const changedSettings$ = this.carouselService.getChangedState().pipe(tap(data => {\n            if (this.carouselService.settings.autoHeight && data.property.name === 'position') {\n                this.update();\n            }\n        }));\n        const refreshedCarousel$ = this.carouselService.getRefreshedState().pipe(tap(data => {\n            if (this.carouselService.settings.autoHeight) {\n                this.update();\n            }\n        }));\n        const autoHeight$ = merge(initializedCarousel$, changedSettings$, refreshedCarousel$);\n        this.autoHeightSubscription = autoHeight$.subscribe(() => { });\n    }\n    /**\n     * Updates the prop 'heightState' of slides\n     */\n    update() {\n        const items = this.carouselService.settings.items;\n        let start = this.carouselService.current(), end = start + items;\n        if (this.carouselService.settings.center) {\n            start = items % 2 === 1 ? start - (items - 1) / 2 : start - items / 2;\n            end = items % 2 === 1 ? start + items : start + items + 1;\n        }\n        this.carouselService.slidesData.forEach((slide, i) => {\n            slide.heightState = (i >= start && i < end) ? 'full' : 'nulled';\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: AutoHeightService, deps: [{ token: CarouselService }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: AutoHeightService });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: AutoHeightService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: CarouselService }] });\n\nclass HashService {\n    carouselService;\n    route;\n    router;\n    /**\n     * Subscription to merge Observable from CarouselService\n     */\n    hashSubscription;\n    /**\n     * Current url fragment (hash)\n     */\n    currentHashFragment;\n    constructor(carouselService, route, router) {\n        this.carouselService = carouselService;\n        this.route = route;\n        this.router = router;\n        this.spyDataStreams();\n        if (!this.route) {\n            this.route = {\n                fragment: of('no route').pipe(take(1))\n            };\n        }\n        ;\n        if (!this.router) {\n            this.router = {\n                navigate: (commands, extras) => { return; }\n            };\n        }\n    }\n    ngOnDestroy() {\n        this.hashSubscription.unsubscribe();\n    }\n    /**\n     * Defines Observables which service must observe\n     */\n    spyDataStreams() {\n        const initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => this.listenToRoute()));\n        const changedSettings$ = this.carouselService.getChangedState().pipe(tap(data => {\n            if (this.carouselService.settings.URLhashListener && data.property.name === 'position') {\n                const newCurSlide = this.carouselService.current();\n                const newCurFragment = this.carouselService.slidesData[newCurSlide].hashFragment;\n                if (!newCurFragment || newCurFragment === this.currentHashFragment) {\n                    return;\n                }\n                this.router.navigate(['./'], { fragment: newCurFragment, relativeTo: this.route });\n            }\n        }));\n        const hashFragment$ = merge(initializedCarousel$, changedSettings$);\n        this.hashSubscription = hashFragment$.subscribe(() => { });\n    }\n    /**\n     * rewinds carousel to slide which has the same hashFragment as fragment of current url\n     * @param fragment fragment of url\n     */\n    rewind(fragment) {\n        const position = this.carouselService.slidesData.findIndex(slide => slide.hashFragment === fragment && slide.isCloned === false);\n        if (position === -1 || position === this.carouselService.current()) {\n            return;\n        }\n        this.carouselService.to(this.carouselService.relative(position), false);\n    }\n    /**\n     * Initiate listening to ActivatedRoute.fragment\n     */\n    listenToRoute() {\n        const count = this.carouselService.settings.startPosition === 'URLHash' ? 0 : 2;\n        this.route.fragment.pipe(skip(count))\n            .subscribe(fragment => {\n            this.currentHashFragment = fragment;\n            this.rewind(fragment);\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: HashService, deps: [{ token: CarouselService }, { token: i1.ActivatedRoute, optional: true }, { token: i1.Router, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: HashService });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: HashService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: CarouselService }, { type: i1.ActivatedRoute, decorators: [{\n                    type: Optional\n                }] }, { type: i1.Router, decorators: [{\n                    type: Optional\n                }] }] });\n\nlet nextId = 0;\nclass CarouselSlideDirective {\n    tplRef;\n    /**\n     * Unique slide identifier. Must be unique for the entire document for proper accessibility support.\n     * Will be auto-generated if not provided.\n     */\n    id = `owl-slide-${nextId++}`;\n    /**\n     * Defines how much widths of common slide will current slide have\n     * e.g. if _mergeData=2, the slide will twice wider then slides with _mergeData=1\n     */\n    _dataMerge = 1;\n    set dataMerge(data) {\n        this._dataMerge = this.isNumeric(data) ? data : 1;\n    }\n    ;\n    get dataMerge() { return this._dataMerge; }\n    /**\n     * Width of slide\n     */\n    width = 0;\n    /**\n     * Inner content of dot for certain slide; can be html-markup\n     */\n    dotContent = '';\n    /**\n     * Hash (fragment) of url which corresponds to certain slide\n     */\n    dataHash = '';\n    constructor(tplRef) {\n        this.tplRef = tplRef;\n    }\n    /**\n       * Determines if the input is a Number or something that can be coerced to a Number\n       * @param - The input to be tested\n       * @returns - An indication if the input is a Number or can be coerced to a Number\n       */\n    isNumeric(number) {\n        return !isNaN(parseFloat(number));\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: CarouselSlideDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.2\", type: CarouselSlideDirective, selector: \"ng-template[carouselSlide]\", inputs: { id: \"id\", dataMerge: \"dataMerge\", width: \"width\", dotContent: \"dotContent\", dataHash: \"dataHash\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: CarouselSlideDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'ng-template[carouselSlide]' }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }], propDecorators: { id: [{\n                type: Input\n            }], dataMerge: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], dotContent: [{\n                type: Input\n            }], dataHash: [{\n                type: Input\n            }] } });\n\nclass ResizeService {\n    resizeObservable$;\n    /**\n     * Makes resizeSubject become Observable\n     * @returns Observable of resizeSubject\n     */\n    get onResize$() {\n        return this.resizeObservable$;\n    }\n    constructor(winRef, platformId) {\n        this.resizeObservable$ = isPlatformBrowser(platformId) ? fromEvent(winRef, 'resize') : (new Subject()).asObservable();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: ResizeService, deps: [{ token: WINDOW }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\n    static ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: ResizeService });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: ResizeService, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [WINDOW]\n                }] }, { type: Object, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }] });\n\nclass StageComponent {\n    zone;\n    el;\n    renderer;\n    carouselService;\n    animateService;\n    /**\n     * Object with settings which make carousel draggable by touch or mouse\n     */\n    owlDraggable;\n    /**\n     * Data of owl-stage\n     */\n    stageData;\n    /**\n     *  Data of every slide\n     */\n    slidesData;\n    /**\n     * Function wich will be returned after attaching listener to 'mousemove' event\n     */\n    listenerMouseMove;\n    /**\n     * Function wich will be returned after attaching listener to 'touchmove' event\n     */\n    listenerTouchMove;\n    /**\n     * Function wich will be returned after attaching listener to 'mousemove' event\n     */\n    listenerOneMouseMove;\n    /**\n     * Function wich will be returned after attaching listener to 'touchmove' event\n     */\n    listenerOneTouchMove;\n    /**\n     * Function wich will be returned after attaching listener to 'mouseup' event\n     */\n    listenerMouseUp;\n    /**\n     * Function wich will be returned after attaching listener to 'touchend' event\n     */\n    listenerTouchEnd;\n    /**\n     * Function wich will be returned after attaching listener to 'click' event\n     */\n    listenerOneClick;\n    listenerATag;\n    /**\n     * Object with data needed for dragging\n     */\n    _drag = {\n        time: null,\n        target: null,\n        pointer: null,\n        stage: {\n            start: null,\n            current: null\n        },\n        direction: null,\n        active: false,\n        moving: false\n    };\n    /**\n     * Subject for notification when the carousel's rebuilding caused by resize event starts\n     */\n    _oneDragMove$ = new Subject();\n    /**\n     * Subsctiption to _oneDragMove$ Subject\n     */\n    _oneMoveSubsription;\n    preparePublicSlide = (slide) => {\n        const newSlide = { ...slide };\n        delete newSlide.tplRef;\n        return newSlide;\n    };\n    constructor(zone, el, renderer, carouselService, animateService) {\n        this.zone = zone;\n        this.el = el;\n        this.renderer = renderer;\n        this.carouselService = carouselService;\n        this.animateService = animateService;\n    }\n    onMouseDown(event) {\n        if (this.owlDraggable.isMouseDragable) {\n            this._onDragStart(event);\n        }\n    }\n    onTouchStart(event) {\n        if (event.targetTouches.length >= 2) {\n            return false;\n        }\n        if (this.owlDraggable.isTouchDragable) {\n            this._onDragStart(event);\n        }\n    }\n    onTouchCancel(event) {\n        this._onDragEnd(event);\n    }\n    onDragStart() {\n        if (this.owlDraggable.isMouseDragable) {\n            return false;\n        }\n    }\n    onSelectStart() {\n        if (this.owlDraggable.isMouseDragable) {\n            return false;\n        }\n    }\n    ngOnInit() {\n        this._oneMoveSubsription = this._oneDragMove$\n            .pipe(first())\n            .subscribe(() => {\n            this._sendChanges();\n        });\n    }\n    ngOnDestroy() {\n        this._oneMoveSubsription.unsubscribe();\n    }\n    /**\n     * Passes this to _oneMouseTouchMove();\n     */\n    bindOneMouseTouchMove = (ev) => {\n        this._oneMouseTouchMove(ev);\n    };\n    /**\n     * Passes this to _onDragMove();\n     */\n    bindOnDragMove = (ev) => {\n        this._onDragMove(ev);\n    };\n    /**\n     * Passes this to _onDragMove();\n     */\n    bindOnDragEnd = (ev) => {\n        // this.zone.run(() => {\n        this._onDragEnd(ev);\n        // });\n    };\n    /**\n       * Handles `touchstart` and `mousedown` events.\n       * @todo Horizontal swipe threshold as option\n       * @todo #261\n       * @param event - The event arguments.\n       */\n    _onDragStart(event) {\n        let stage = null;\n        if (event.which === 3) {\n            return;\n        }\n        stage = this._prepareDragging(event);\n        this._drag.time = new Date().getTime();\n        this._drag.target = event.target;\n        this._drag.stage.start = stage;\n        this._drag.stage.current = stage;\n        this._drag.pointer = this._pointer(event);\n        this.listenerMouseUp = this.renderer.listen(document, 'mouseup', this.bindOnDragEnd);\n        this.listenerTouchEnd = this.renderer.listen(document, 'touchend', this.bindOnDragEnd);\n        this.zone.runOutsideAngular(() => {\n            this.listenerOneMouseMove = this.renderer.listen(document, 'mousemove', this.bindOneMouseTouchMove);\n            this.listenerOneTouchMove = this.renderer.listen(document, 'touchmove', this.bindOneMouseTouchMove);\n        });\n    }\n    /**\n     * Attaches listeners to `touchmove` and `mousemove` events; initiates updating carousel after starting dragging\n     * @param event event objech of mouse or touch event\n     */\n    _oneMouseTouchMove(event) {\n        const delta = this._difference(this._drag.pointer, this._pointer(event));\n        if (this.listenerATag) {\n            this.listenerATag();\n        }\n        if (Math.abs(delta.x) < 3 && Math.abs(delta.y) < 3 && this._is('valid')) {\n            return;\n        }\n        if ((Math.abs(delta.x) < 3 && Math.abs(delta.x) < Math.abs(delta.y)) && this._is('valid')) {\n            return;\n        }\n        this.listenerOneMouseMove();\n        this.listenerOneTouchMove();\n        this._drag.moving = true;\n        this.blockClickAnchorInDragging(event);\n        this.listenerMouseMove = this.renderer.listen(document, 'mousemove', this.bindOnDragMove);\n        this.listenerTouchMove = this.renderer.listen(document, 'touchmove', this.bindOnDragMove);\n        event.preventDefault();\n        this._enterDragging();\n        this._oneDragMove$.next(event);\n        // this._sendChanges();\n    }\n    /**\n     * Attaches handler to HTMLAnchorElement for preventing click while carousel is being dragged\n     * @param event event object\n     */\n    blockClickAnchorInDragging(event) {\n        let target = event.target;\n        while (target && !(target instanceof HTMLAnchorElement)) {\n            target = target.parentElement;\n        }\n        if (target instanceof HTMLAnchorElement) {\n            this.listenerATag = this.renderer.listen(target, 'click', () => false);\n        }\n    }\n    /**\n     * Handles the `touchmove` and `mousemove` events.\n     * @todo #261\n     * @param event - The event arguments.\n     */\n    _onDragMove(event) {\n        let stage;\n        const stageOrExit = this.carouselService.defineNewCoordsDrag(event, this._drag);\n        if (stageOrExit === false) {\n            return;\n        }\n        stage = stageOrExit;\n        event.preventDefault();\n        this._drag.stage.current = stage;\n        this._animate(stage.x - this._drag.stage.start.x);\n    }\n    ;\n    /**\n     * Moves .owl-stage left-right\n     * @param coordinate coordinate to be set to .owl-stage\n     */\n    _animate(coordinate) {\n        this.renderer.setStyle(this.el.nativeElement.children[0], 'transform', `translate3d(${coordinate}px,0px,0px`);\n        this.renderer.setStyle(this.el.nativeElement.children[0], 'transition', '0s');\n    }\n    /**\n       * Handles the `touchend` and `mouseup` events.\n       * @todo #261\n       * @todo Threshold for click event\n       * @param event - The event arguments.\n       */\n    _onDragEnd(event) {\n        this.carouselService.owlDOMData.isGrab = false;\n        this.listenerOneMouseMove();\n        this.listenerOneTouchMove();\n        if (this._drag.moving) {\n            this.renderer.setStyle(this.el.nativeElement.children[0], 'transform', ``);\n            this.renderer.setStyle(this.el.nativeElement.children[0], 'transition', this.carouselService.speed(+this.carouselService.settings.dragEndSpeed || this.carouselService.settings.smartSpeed) / 1000 + 's');\n            this._finishDragging(event);\n            this.listenerMouseMove();\n            this.listenerTouchMove();\n        }\n        this._drag = {\n            time: null,\n            target: null,\n            pointer: null,\n            stage: {\n                start: null,\n                current: null\n            },\n            direction: null,\n            active: false,\n            moving: false\n        };\n        // this.carouselService.trigger('dragged');\n        this.listenerMouseUp();\n        this.listenerTouchEnd();\n    }\n    ;\n    /**\n       * Prepares data for dragging carousel. It starts after firing `touchstart` and `mousedown` events.\n       * @param event - The event arguments.\n       * @returns stage - object with 'x' and 'y' coordinates of .owl-stage\n       */\n    _prepareDragging(event) {\n        return this.carouselService.prepareDragging(event);\n    }\n    /**\n     * Attaches handler for 'click' event on any element in .owl-stage in order to prevent dragging when moving of cursor is less than 3px\n     */\n    _oneClickHandler = () => {\n        this.listenerOneClick = this.renderer.listen(this._drag.target, 'click', () => false);\n        this.listenerOneClick();\n    };\n    /**\n     * Finishes dragging\n     * @param event object event of 'mouseUp' of 'touchend' events\n     */\n    _finishDragging(event) {\n        this.carouselService.finishDragging(event, this._drag, this._oneClickHandler);\n    }\n    /**\n       * Gets unified pointer coordinates from event.\n       * @param event The `mousedown` or `touchstart` event.\n       * @returns Contains `x` and `y` coordinates of current pointer position.\n       */\n    _pointer(event) {\n        return this.carouselService.pointer(event);\n    }\n    /**\n       * Gets the difference of two vectors.\n       * @param first The first vector.\n       * @param second The second vector.\n       * @returns The difference.\n       */\n    _difference(firstC, second) {\n        return this.carouselService.difference(firstC, second);\n    }\n    /**\n       * Checks whether the carousel is in a specific state or not.\n       * @param specificState The state to check.\n       * @returns The flag which indicates if the carousel is busy.\n       */\n    _is(specificState) {\n        return this.carouselService.is(specificState);\n    }\n    /**\n    * Enters a state.\n    * @param name The state name.\n    */\n    _enter(name) {\n        this.carouselService.enter(name);\n    }\n    /**\n       * Sends all data needed for View.\n       */\n    _sendChanges() {\n        this.carouselService.sendChanges();\n    }\n    /**\n     * Handler for transitioend event\n     */\n    onTransitionEnd() {\n        this.carouselService.onTransitionEnd();\n    }\n    /**\n       * Enters into a 'dragging' state\n       */\n    _enterDragging() {\n        this.carouselService.enterDragging();\n    }\n    /**\n     * Handles the end of 'animationend' event\n     * @param id Id of slides\n     */\n    clear(id) {\n        this.animateService.clear(id);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: StageComponent, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.Renderer2 }, { token: CarouselService }, { token: AnimateService }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.2\", type: StageComponent, selector: \"owl-stage\", inputs: { owlDraggable: \"owlDraggable\", stageData: \"stageData\", slidesData: \"slidesData\" }, host: { listeners: { \"mousedown\": \"onMouseDown($event)\", \"touchstart\": \"onTouchStart($event)\", \"touchcancel\": \"onTouchCancel($event)\", \"dragstart\": \"onDragStart()\", \"selectstart\": \"onSelectStart()\" } }, ngImport: i0, template: `\n    <div>\n      <div class=\"owl-stage\" [ngStyle]=\"{'width': stageData.width + 'px',\n                                        'transform': stageData.transform,\n                                        'transition': stageData.transition,\n                                        'padding-left': stageData.paddingL ? stageData.paddingL + 'px' : '',\n                                        'padding-right': stageData.paddingR ? stageData.paddingR + 'px' : '' }\"\n          (transitionend)=\"onTransitionEnd()\">\n        <ng-container *ngFor=\"let slide of slidesData; let i = index\">\n          <div class=\"owl-item\" [ngClass]=\"slide.classes\"\n                                [ngStyle]=\"{'width': slide.width + 'px',\n                                            'margin-left': slide.marginL ? slide.marginL + 'px' : '',\n                                            'margin-right': slide.marginR ? slide.marginR + 'px' : '',\n                                            'left': slide.left}\"\n                                (animationend)=\"clear(slide.id)\"\n                                [@autoHeight]=\"slide.heightState\">\n            <ng-template *ngIf=\"slide.load\" [ngTemplateOutlet]=\"slide.tplRef\" [ngTemplateOutletContext]=\"{ $implicit: preparePublicSlide(slide), index: i }\"></ng-template>\n          </div><!-- /.owl-item -->\n        </ng-container>\n      </div><!-- /.owl-stage -->\n    </div>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"directive\", type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }], animations: [\n            trigger('autoHeight', [\n                state('nulled', style({ height: 0 })),\n                state('full', style({ height: '*' })),\n                transition('full => nulled', [\n                    // style({height: '*'}),\n                    animate('700ms 350ms')\n                ]),\n                transition('nulled => full', [\n                    // style({height: 0}),\n                    animate(350)\n                ]),\n            ])\n        ] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: StageComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'owl-stage',\n                    template: `\n    <div>\n      <div class=\"owl-stage\" [ngStyle]=\"{'width': stageData.width + 'px',\n                                        'transform': stageData.transform,\n                                        'transition': stageData.transition,\n                                        'padding-left': stageData.paddingL ? stageData.paddingL + 'px' : '',\n                                        'padding-right': stageData.paddingR ? stageData.paddingR + 'px' : '' }\"\n          (transitionend)=\"onTransitionEnd()\">\n        <ng-container *ngFor=\"let slide of slidesData; let i = index\">\n          <div class=\"owl-item\" [ngClass]=\"slide.classes\"\n                                [ngStyle]=\"{'width': slide.width + 'px',\n                                            'margin-left': slide.marginL ? slide.marginL + 'px' : '',\n                                            'margin-right': slide.marginR ? slide.marginR + 'px' : '',\n                                            'left': slide.left}\"\n                                (animationend)=\"clear(slide.id)\"\n                                [@autoHeight]=\"slide.heightState\">\n            <ng-template *ngIf=\"slide.load\" [ngTemplateOutlet]=\"slide.tplRef\" [ngTemplateOutletContext]=\"{ $implicit: preparePublicSlide(slide), index: i }\"></ng-template>\n          </div><!-- /.owl-item -->\n        </ng-container>\n      </div><!-- /.owl-stage -->\n    </div>\n  `,\n                    animations: [\n                        trigger('autoHeight', [\n                            state('nulled', style({ height: 0 })),\n                            state('full', style({ height: '*' })),\n                            transition('full => nulled', [\n                                // style({height: '*'}),\n                                animate('700ms 350ms')\n                            ]),\n                            transition('nulled => full', [\n                                // style({height: 0}),\n                                animate(350)\n                            ]),\n                        ])\n                    ]\n                }]\n        }], ctorParameters: () => [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.Renderer2 }, { type: CarouselService }, { type: AnimateService }], propDecorators: { owlDraggable: [{\n                type: Input\n            }], stageData: [{\n                type: Input\n            }], slidesData: [{\n                type: Input\n            }], onMouseDown: [{\n                type: HostListener,\n                args: ['mousedown', ['$event']]\n            }], onTouchStart: [{\n                type: HostListener,\n                args: ['touchstart', ['$event']]\n            }], onTouchCancel: [{\n                type: HostListener,\n                args: ['touchcancel', ['$event']]\n            }], onDragStart: [{\n                type: HostListener,\n                args: ['dragstart']\n            }], onSelectStart: [{\n                type: HostListener,\n                args: ['selectstart']\n            }] } });\n\nclass CarouselComponent {\n    el;\n    resizeService;\n    carouselService;\n    navigationService;\n    autoplayService;\n    lazyLoadService;\n    animateService;\n    autoHeightService;\n    hashService;\n    logger;\n    changeDetectorRef;\n    slides;\n    translated = new EventEmitter();\n    dragging = new EventEmitter();\n    change = new EventEmitter();\n    changed = new EventEmitter();\n    initialized = new EventEmitter();\n    /**\n     * Width of carousel window (tag with class .owl-carousel), in wich we can see moving sliders\n     */\n    carouselWindowWidth;\n    /**\n     * Subscription to 'resize' event\n     */\n    resizeSubscription;\n    /**\n     * Subscription merge Observable, which merges all Observables in the component except 'resize' Observable and this.slides.changes()\n     */\n    _allObservSubscription;\n    /**\n     * Subscription to `this.slides.changes().\n     * It could be included in 'this._allObservSubscription', but that subcription get created during the initializing of component\n     * and 'this.slides' are undefined at that moment. So it's needed to wait for initialization of content.\n     */\n    _slidesChangesSubscription;\n    /**\n     * Current settings for the carousel.\n     */\n    owlDOMData;\n    /**\n     * Data of owl-stage\n     */\n    stageData;\n    /**\n     *  Data of every slide\n     */\n    slidesData = [];\n    /**\n     * Data of navigation block\n     */\n    navData;\n    /**\n     * Data of dots block\n     */\n    dotsData;\n    /**\n     * Data, wich are passed out of carousel after ending of transioning of carousel\n     */\n    slidesOutputData;\n    /**\n     * Shows whether carousel is loaded of not.\n     */\n    carouselLoaded = false;\n    /**\n     * User's options\n     */\n    options;\n    prevOptions;\n    /**\n     * Observable for getting current View Settings\n     */\n    _viewCurSettings$;\n    /**\n     * Observable for catching the end of transition of carousel\n     */\n    _translatedCarousel$;\n    /**\n     * Observable for catching the start of dragging of the carousel\n     */\n    _draggingCarousel$;\n    /**\n     * Observable for catching the start of changing of the carousel\n     */\n    _changeCarousel$;\n    /**\n     * Observable for catching the moment when the data about slides changed, more exactly when the position changed.\n     */\n    _changedCarousel$;\n    /**\n     * Observable for catching the initialization of changing the carousel\n     */\n    _initializedCarousel$;\n    /**\n     * Observable for merging all Observables and creating one subscription\n     */\n    _carouselMerge$;\n    docRef;\n    constructor(el, resizeService, carouselService, navigationService, autoplayService, lazyLoadService, animateService, autoHeightService, hashService, logger, changeDetectorRef, docRef) {\n        this.el = el;\n        this.resizeService = resizeService;\n        this.carouselService = carouselService;\n        this.navigationService = navigationService;\n        this.autoplayService = autoplayService;\n        this.lazyLoadService = lazyLoadService;\n        this.animateService = animateService;\n        this.autoHeightService = autoHeightService;\n        this.hashService = hashService;\n        this.logger = logger;\n        this.changeDetectorRef = changeDetectorRef;\n        this.docRef = docRef;\n    }\n    onVisibilityChange(ev) {\n        if (!this.carouselService.settings.autoplay)\n            return;\n        switch (this.docRef.visibilityState) {\n            case 'visible':\n                !this.autoplayService.isAutoplayStopped && this.autoplayService.play();\n                break;\n            case 'hidden':\n                this.autoplayService.pause();\n                break;\n            default:\n                break;\n        }\n    }\n    ;\n    ngOnInit() {\n        this.spyDataStreams();\n        this.carouselWindowWidth = this.el.nativeElement.querySelector('.owl-carousel').clientWidth;\n    }\n    ngOnChanges() {\n        if (this.prevOptions !== this.options) {\n            if (this.prevOptions && this.slides?.toArray().length) {\n                this.carouselService.setup(this.carouselWindowWidth, this.slides.toArray(), this.options);\n                this.carouselService.initialize(this.slides.toArray());\n            }\n            else if (this.prevOptions && !this.slides?.toArray().length) {\n                this.carouselLoaded = false;\n                this.logger.log(`There are no slides to show. So the carousel won't be re-rendered`);\n            }\n            else {\n                this.carouselLoaded = false;\n            }\n            this.prevOptions = this.options;\n        }\n    }\n    ngAfterContentInit() {\n        if (this.slides.toArray().length) {\n            this.carouselService.setup(this.carouselWindowWidth, this.slides.toArray(), this.options);\n            this.carouselService.initialize(this.slides.toArray());\n            this._winResizeWatcher();\n        }\n        else {\n            this.logger.log(`There are no slides to show. So the carousel won't be rendered`);\n        }\n        this._slidesChangesSubscription = this.slides.changes.pipe(tap((slides) => {\n            this.carouselService.setup(this.carouselWindowWidth, slides.toArray(), this.options);\n            this.carouselService.initialize(slides.toArray());\n            if (!slides.toArray().length) {\n                this.carouselLoaded = false;\n            }\n            if (slides.toArray().length && !this.resizeSubscription) {\n                this._winResizeWatcher();\n            }\n        })).subscribe(() => { });\n    }\n    ngOnDestroy() {\n        if (this.resizeSubscription) {\n            this.resizeSubscription.unsubscribe();\n        }\n        if (this._slidesChangesSubscription) {\n            this._slidesChangesSubscription.unsubscribe();\n        }\n        if (this._allObservSubscription) {\n            this._allObservSubscription.unsubscribe();\n        }\n    }\n    /**\n     * Joins the observable login in one place: sets values to some observables, merges this observables and\n     * subcribes to merge func\n     */\n    spyDataStreams() {\n        this._viewCurSettings$ = this.carouselService.getViewCurSettings().pipe(tap(data => {\n            this.owlDOMData = data.owlDOMData;\n            this.stageData = data.stageData;\n            this.slidesData = data.slidesData;\n            if (!this.carouselLoaded) {\n                this.carouselLoaded = true;\n            }\n            this.navData = data.navData;\n            this.dotsData = data.dotsData;\n            this.changeDetectorRef.markForCheck();\n        }));\n        this._initializedCarousel$ = this.carouselService.getInitializedState().pipe(tap(() => {\n            this.gatherTranslatedData();\n            this.initialized.emit(this.slidesOutputData);\n            // this.slidesOutputData = {};\n        }));\n        this._translatedCarousel$ = this.carouselService.getTranslatedState().pipe(tap(() => {\n            this.gatherTranslatedData();\n            this.translated.emit(this.slidesOutputData);\n            // this.slidesOutputData = {};\n        }));\n        this._changeCarousel$ = this.carouselService.getChangeState().pipe(tap(() => {\n            this.gatherTranslatedData();\n            this.change.emit(this.slidesOutputData);\n            // this.slidesOutputData = {};\n        }));\n        this._changedCarousel$ = this.carouselService.getChangeState().pipe(switchMap(value => {\n            const changedPosition = of(value).pipe(filter(() => value.property.name === 'position'), switchMap(() => from(this.slidesData)), skip(value.property.value), take(this.carouselService.settings.items), map(slide => {\n                const clonedIdPrefix = this.carouselService.clonedIdPrefix;\n                const id = slide.id.indexOf(clonedIdPrefix) >= 0 ? slide.id.slice(clonedIdPrefix.length) : slide.id;\n                return { ...slide, id: id, isActive: true };\n            }), toArray(), map(slides => {\n                return {\n                    slides: slides,\n                    startPosition: this.carouselService.relative(value.property.value)\n                };\n            }));\n            // const changedSetting: Observable<SlidesOutputData> = of(value).pipe(\n            //   filter(() => value.property.name === 'settings'),\n            //   map(() => {\n            //     return {\n            //       slides: [],\n            //       startPosition: this.carouselService.relative(value.property.value)\n            //     }\n            //   })\n            // )\n            return merge(changedPosition);\n        }), tap(slidesData => {\n            this.gatherTranslatedData();\n            this.changed.emit(slidesData.slides.length ? slidesData : this.slidesOutputData);\n            // console.log(this.slidesOutputData);\n            // this.slidesOutputData = {};\n        }));\n        this._draggingCarousel$ = this.carouselService.getDragState().pipe(tap(() => {\n            this.gatherTranslatedData();\n            this.dragging.emit({ dragging: true, data: this.slidesOutputData });\n        }), switchMap(() => this.carouselService.getDraggedState().pipe(map(() => !!this.carouselService.is('animating')))), switchMap(anim => {\n            if (anim) {\n                return this.carouselService.getTranslatedState().pipe(first());\n            }\n            else {\n                return of('not animating');\n            }\n        }), tap(() => {\n            this.dragging.emit({ dragging: false, data: this.slidesOutputData });\n        }));\n        this._carouselMerge$ = merge(this._viewCurSettings$, this._translatedCarousel$, this._draggingCarousel$, this._changeCarousel$, this._changedCarousel$, this._initializedCarousel$);\n        this._allObservSubscription = this._carouselMerge$.subscribe(() => { });\n    }\n    /**\n     * Init subscription to resize event and attaches handler for this event\n     */\n    _winResizeWatcher() {\n        if (Object.keys(this.carouselService._options.responsive).length) {\n            this.resizeSubscription = this.resizeService.onResize$\n                .pipe(filter(() => this.carouselWindowWidth !== this.el.nativeElement.querySelector('.owl-carousel').clientWidth), delay(this.carouselService.settings.responsiveRefreshRate))\n                .subscribe(() => {\n                this.carouselService.onResize(this.el.nativeElement.querySelector('.owl-carousel').clientWidth);\n                this.carouselWindowWidth = this.el.nativeElement.querySelector('.owl-carousel').clientWidth;\n            });\n        }\n    }\n    /**\n     * Handler for transitioend event\n     */\n    onTransitionEnd() {\n        this.carouselService.onTransitionEnd();\n    }\n    /**\n     * Handler for click event, attached to next button\n     */\n    next() {\n        if (!this.carouselLoaded)\n            return;\n        this.navigationService.next(this.carouselService.settings.navSpeed);\n    }\n    /**\n     * Handler for click event, attached to prev button\n     */\n    prev() {\n        if (!this.carouselLoaded)\n            return;\n        this.navigationService.prev(this.carouselService.settings.navSpeed);\n    }\n    /**\n     * Handler for click event, attached to dots\n     */\n    moveByDot(dotId) {\n        if (!this.carouselLoaded)\n            return;\n        this.navigationService.moveByDot(dotId);\n    }\n    /**\n     * rewinds carousel to slide with needed id\n     * @param id fragment of url\n     */\n    to(id) {\n        // if (!this.carouselLoaded || ((this.navData && this.navData.disabled) && (this.dotsData && this.dotsData.disabled))) return;\n        if (!this.carouselLoaded)\n            return;\n        this.navigationService.toSlideById(id);\n    }\n    /**\n     * Gathers and prepares data intended for passing to the user by means of firing event translatedCarousel\n     */\n    gatherTranslatedData() {\n        let startPosition;\n        const clonedIdPrefix = this.carouselService.clonedIdPrefix;\n        const activeSlides = this.slidesData\n            .filter(slide => slide.isActive === true)\n            .map(slide => {\n            const id = slide.id.indexOf(clonedIdPrefix) >= 0 ? slide.id.slice(clonedIdPrefix.length) : slide.id;\n            return {\n                id: id,\n                width: slide.width,\n                marginL: slide.marginL,\n                marginR: slide.marginR,\n                center: slide.isCentered\n            };\n        });\n        startPosition = this.carouselService.relative(this.carouselService.current());\n        this.slidesOutputData = {\n            startPosition: startPosition,\n            slides: activeSlides\n        };\n    }\n    /**\n     * Starts pausing\n     */\n    startPausing() {\n        this.autoplayService.startPausing();\n    }\n    /**\n     * Starts playing after mouse leaves carousel\n     */\n    startPlayML() {\n        this.autoplayService.startPlayingMouseLeave();\n    }\n    /**\n     * Starts playing after touch ends\n     */\n    startPlayTE() {\n        this.autoplayService.startPlayingTouchEnd();\n    }\n    stopAutoplay() {\n        this.autoplayService.isAutoplayStopped = true;\n        this.autoplayService.stop();\n    }\n    startAutoplay() {\n        this.autoplayService.isAutoplayStopped = false;\n        this.autoplayService.play();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: CarouselComponent, deps: [{ token: i0.ElementRef }, { token: ResizeService }, { token: CarouselService }, { token: NavigationService }, { token: AutoplayService }, { token: LazyLoadService }, { token: AnimateService }, { token: AutoHeightService }, { token: HashService }, { token: OwlLogger }, { token: i0.ChangeDetectorRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.2\", type: CarouselComponent, selector: \"owl-carousel-o\", inputs: { options: \"options\" }, outputs: { translated: \"translated\", dragging: \"dragging\", change: \"change\", changed: \"changed\", initialized: \"initialized\" }, host: { listeners: { \"document:visibilitychange\": \"onVisibilityChange($event)\" } }, providers: [\n            NavigationService,\n            AutoplayService,\n            CarouselService,\n            LazyLoadService,\n            AnimateService,\n            AutoHeightService,\n            HashService\n        ], queries: [{ propertyName: \"slides\", predicate: CarouselSlideDirective }], usesOnChanges: true, ngImport: i0, template: `\n    <div class=\"owl-carousel owl-theme\" #owlCarousel\n      [ngClass]=\"{'owl-rtl': owlDOMData?.rtl,\n                  'owl-loaded': owlDOMData?.isLoaded,\n                  'owl-responsive': owlDOMData?.isResponsive,\n                  'owl-drag': owlDOMData?.isMouseDragable,\n                  'owl-grab': owlDOMData?.isGrab}\"\n      (mouseover)=\"startPausing()\"\n      (mouseleave)=\"startPlayML()\"\n      (touchstart)=\"startPausing()\"\n      (touchend)=\"startPlayTE()\">\n\n      <div *ngIf=\"carouselLoaded\" class=\"owl-stage-outer\">\n        <owl-stage [owlDraggable]=\"{'isMouseDragable': owlDOMData?.isMouseDragable, 'isTouchDragable': owlDOMData?.isTouchDragable}\"\n                    [stageData]=\"stageData\"\n                    [slidesData]=\"slidesData\"></owl-stage>\n      </div> <!-- /.owl-stage-outer -->\n      <ng-container *ngIf=\"slides.toArray().length\">\n        <div class=\"owl-nav\" [ngClass]=\"{'disabled': navData?.disabled}\">\n          <div class=\"owl-prev\" [ngClass]=\"{'disabled': navData?.prev?.disabled}\" (click)=\"prev()\" [innerHTML]=\"navData?.prev?.htmlText\"></div>\n          <div class=\"owl-next\" [ngClass]=\"{'disabled': navData?.next?.disabled}\" (click)=\"next()\" [innerHTML]=\"navData?.next?.htmlText\"></div>\n        </div> <!-- /.owl-nav -->\n        <div class=\"owl-dots\" [ngClass]=\"{'disabled': dotsData?.disabled}\">\n          <div *ngFor=\"let dot of dotsData?.dots\" class=\"owl-dot\" [ngClass]=\"{'active': dot.active, 'owl-dot-text': dot.showInnerContent}\" (click)=\"moveByDot(dot.id)\">\n            <span [innerHTML]=\"dot.innerContent\"></span>\n          </div>\n        </div> <!-- /.owl-dots -->\n      </ng-container>\n    </div> <!-- /.owl-carousel owl-loaded -->\n  `, isInline: true, styles: [\".owl-theme{display:block}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: StageComponent, selector: \"owl-stage\", inputs: [\"owlDraggable\", \"stageData\", \"slidesData\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: CarouselComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'owl-carousel-o', template: `\n    <div class=\"owl-carousel owl-theme\" #owlCarousel\n      [ngClass]=\"{'owl-rtl': owlDOMData?.rtl,\n                  'owl-loaded': owlDOMData?.isLoaded,\n                  'owl-responsive': owlDOMData?.isResponsive,\n                  'owl-drag': owlDOMData?.isMouseDragable,\n                  'owl-grab': owlDOMData?.isGrab}\"\n      (mouseover)=\"startPausing()\"\n      (mouseleave)=\"startPlayML()\"\n      (touchstart)=\"startPausing()\"\n      (touchend)=\"startPlayTE()\">\n\n      <div *ngIf=\"carouselLoaded\" class=\"owl-stage-outer\">\n        <owl-stage [owlDraggable]=\"{'isMouseDragable': owlDOMData?.isMouseDragable, 'isTouchDragable': owlDOMData?.isTouchDragable}\"\n                    [stageData]=\"stageData\"\n                    [slidesData]=\"slidesData\"></owl-stage>\n      </div> <!-- /.owl-stage-outer -->\n      <ng-container *ngIf=\"slides.toArray().length\">\n        <div class=\"owl-nav\" [ngClass]=\"{'disabled': navData?.disabled}\">\n          <div class=\"owl-prev\" [ngClass]=\"{'disabled': navData?.prev?.disabled}\" (click)=\"prev()\" [innerHTML]=\"navData?.prev?.htmlText\"></div>\n          <div class=\"owl-next\" [ngClass]=\"{'disabled': navData?.next?.disabled}\" (click)=\"next()\" [innerHTML]=\"navData?.next?.htmlText\"></div>\n        </div> <!-- /.owl-nav -->\n        <div class=\"owl-dots\" [ngClass]=\"{'disabled': dotsData?.disabled}\">\n          <div *ngFor=\"let dot of dotsData?.dots\" class=\"owl-dot\" [ngClass]=\"{'active': dot.active, 'owl-dot-text': dot.showInnerContent}\" (click)=\"moveByDot(dot.id)\">\n            <span [innerHTML]=\"dot.innerContent\"></span>\n          </div>\n        </div> <!-- /.owl-dots -->\n      </ng-container>\n    </div> <!-- /.owl-carousel owl-loaded -->\n  `, providers: [\n                        NavigationService,\n                        AutoplayService,\n                        CarouselService,\n                        LazyLoadService,\n                        AnimateService,\n                        AutoHeightService,\n                        HashService\n                    ], changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".owl-theme{display:block}\\n\"] }]\n        }], ctorParameters: () => [{ type: i0.ElementRef }, { type: ResizeService }, { type: CarouselService }, { type: NavigationService }, { type: AutoplayService }, { type: LazyLoadService }, { type: AnimateService }, { type: AutoHeightService }, { type: HashService }, { type: OwlLogger }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }], propDecorators: { slides: [{\n                type: ContentChildren,\n                args: [CarouselSlideDirective]\n            }], translated: [{\n                type: Output\n            }], dragging: [{\n                type: Output\n            }], change: [{\n                type: Output\n            }], changed: [{\n                type: Output\n            }], initialized: [{\n                type: Output\n            }], options: [{\n                type: Input\n            }], onVisibilityChange: [{\n                type: HostListener,\n                args: ['document:visibilitychange', ['$event']]\n            }] } });\n\nclass OwlRouterLinkDirective {\n    router;\n    route;\n    // TODO(issue/24571): remove '!'.\n    queryParams;\n    // TODO(issue/24571): remove '!'.\n    fragment;\n    // TODO(issue/24571): remove '!'.\n    queryParamsHandling;\n    // TODO(issue/24571): remove '!'.\n    preserveFragment;\n    // TODO(issue/24571): remove '!'.\n    skipLocationChange;\n    // TODO(issue/24571): remove '!'.\n    replaceUrl;\n    stopLink = false;\n    commands = [];\n    // TODO(issue/24571): remove '!'.\n    preserve;\n    constructor(router, route, tabIndex, renderer, el) {\n        this.router = router;\n        this.route = route;\n        if (tabIndex == null) {\n            renderer.setAttribute(el.nativeElement, 'tabindex', '0');\n        }\n    }\n    set owlRouterLink(commands) {\n        if (commands != null) {\n            this.commands = Array.isArray(commands) ? commands : [commands];\n        }\n        else {\n            this.commands = [];\n        }\n    }\n    /**\n     * @deprecated 4.0.0 use `queryParamsHandling` instead.\n     */\n    set preserveQueryParams(value) {\n        if (isDevMode() && console && console.warn) {\n            console.warn('preserveQueryParams is deprecated!, use queryParamsHandling instead.');\n        }\n        this.preserve = value;\n    }\n    onClick() {\n        const extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        if (this.stopLink) {\n            return false;\n        }\n        this.router.navigateByUrl(this.urlTree, extras);\n        return true;\n    }\n    get urlTree() {\n        return this.router.createUrlTree(this.commands, {\n            relativeTo: this.route,\n            queryParams: this.queryParams,\n            fragment: this.fragment,\n            queryParamsHandling: this.queryParamsHandling,\n            preserveFragment: attrBoolValue(this.preserveFragment)\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: OwlRouterLinkDirective, deps: [{ token: i1.Router }, { token: i1.ActivatedRoute }, { token: 'tabindex', attribute: true }, { token: i0.Renderer2 }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.2\", type: OwlRouterLinkDirective, selector: \":not(a)[owlRouterLink]\", inputs: { queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", preserveFragment: \"preserveFragment\", skipLocationChange: \"skipLocationChange\", replaceUrl: \"replaceUrl\", stopLink: \"stopLink\", owlRouterLink: \"owlRouterLink\", preserveQueryParams: \"preserveQueryParams\" }, host: { listeners: { \"click\": \"onClick()\" } }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: OwlRouterLinkDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: ':not(a)[owlRouterLink]' }]\n        }], ctorParameters: () => [{ type: i1.Router }, { type: i1.ActivatedRoute }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['tabindex']\n                }] }, { type: i0.Renderer2 }, { type: i0.ElementRef }], propDecorators: { queryParams: [{\n                type: Input\n            }], fragment: [{\n                type: Input\n            }], queryParamsHandling: [{\n                type: Input\n            }], preserveFragment: [{\n                type: Input\n            }], skipLocationChange: [{\n                type: Input\n            }], replaceUrl: [{\n                type: Input\n            }], stopLink: [{\n                type: Input\n            }], owlRouterLink: [{\n                type: Input\n            }], preserveQueryParams: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click']\n            }] } });\n/**\n * @description\n *\n * Lets you link to specific routes in your app.\n *\n * See `RouterLink` for more information.\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nclass OwlRouterLinkWithHrefDirective {\n    router;\n    route;\n    locationStrategy;\n    // TODO(issue/24571): remove '!'.\n    target;\n    // TODO(issue/24571): remove '!'.\n    queryParams;\n    // TODO(issue/24571): remove '!'.\n    fragment;\n    // TODO(issue/24571): remove '!'.\n    queryParamsHandling;\n    // TODO(issue/24571): remove '!'.\n    preserveFragment;\n    // TODO(issue/24571): remove '!'.\n    skipLocationChange;\n    // TODO(issue/24571): remove '!'.\n    replaceUrl;\n    stopLink = false;\n    commands = [];\n    subscription;\n    // TODO(issue/24571): remove '!'.\n    preserve;\n    // the url displayed on the anchor element.\n    // TODO(issue/24571): remove '!'.\n    href;\n    constructor(router, route, locationStrategy) {\n        this.router = router;\n        this.route = route;\n        this.locationStrategy = locationStrategy;\n        this.subscription = router.events.subscribe((s) => {\n            if (s instanceof NavigationEnd) {\n                this.updateTargetUrlAndHref();\n            }\n        });\n    }\n    set owlRouterLink(commands) {\n        if (commands != null) {\n            this.commands = Array.isArray(commands) ? commands : [commands];\n        }\n        else {\n            this.commands = [];\n        }\n    }\n    set preserveQueryParams(value) {\n        if (isDevMode() && console && console.warn) {\n            console.warn('preserveQueryParams is deprecated, use queryParamsHandling instead.');\n        }\n        this.preserve = value;\n    }\n    ngOnChanges(changes) { this.updateTargetUrlAndHref(); }\n    ngOnDestroy() { this.subscription.unsubscribe(); }\n    onClick(button, ctrlKey, metaKey, shiftKey) {\n        if (button !== 0 || ctrlKey || metaKey || shiftKey) {\n            return true;\n        }\n        if (typeof this.target === 'string' && this.target !== '_self') {\n            return true;\n        }\n        if (this.stopLink) {\n            return false;\n        }\n        const extras = {\n            skipLocationChange: attrBoolValue(this.skipLocationChange),\n            replaceUrl: attrBoolValue(this.replaceUrl),\n        };\n        this.router.navigateByUrl(this.urlTree, extras);\n        return false;\n    }\n    updateTargetUrlAndHref() {\n        this.href = this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));\n    }\n    get urlTree() {\n        return this.router.createUrlTree(this.commands, {\n            relativeTo: this.route,\n            queryParams: this.queryParams,\n            fragment: this.fragment,\n            queryParamsHandling: this.queryParamsHandling,\n            preserveFragment: attrBoolValue(this.preserveFragment)\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: OwlRouterLinkWithHrefDirective, deps: [{ token: i1.Router }, { token: i1.ActivatedRoute }, { token: i3.LocationStrategy }], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.2\", type: OwlRouterLinkWithHrefDirective, selector: \"a[owlRouterLink]\", inputs: { target: \"target\", queryParams: \"queryParams\", fragment: \"fragment\", queryParamsHandling: \"queryParamsHandling\", preserveFragment: \"preserveFragment\", skipLocationChange: \"skipLocationChange\", replaceUrl: \"replaceUrl\", stopLink: \"stopLink\", owlRouterLink: \"owlRouterLink\", preserveQueryParams: \"preserveQueryParams\" }, host: { listeners: { \"click\": \"onClick($event.button,$event.ctrlKey,$event.metaKey,$event.shiftKey)\" }, properties: { \"attr.target\": \"this.target\", \"href\": \"this.href\" } }, usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: OwlRouterLinkWithHrefDirective, decorators: [{\n            type: Directive,\n            args: [{ selector: 'a[owlRouterLink]' }]\n        }], ctorParameters: () => [{ type: i1.Router }, { type: i1.ActivatedRoute }, { type: i3.LocationStrategy }], propDecorators: { target: [{\n                type: HostBinding,\n                args: ['attr.target']\n            }, {\n                type: Input\n            }], queryParams: [{\n                type: Input\n            }], fragment: [{\n                type: Input\n            }], queryParamsHandling: [{\n                type: Input\n            }], preserveFragment: [{\n                type: Input\n            }], skipLocationChange: [{\n                type: Input\n            }], replaceUrl: [{\n                type: Input\n            }], stopLink: [{\n                type: Input\n            }], href: [{\n                type: HostBinding\n            }], owlRouterLink: [{\n                type: Input\n            }], preserveQueryParams: [{\n                type: Input\n            }], onClick: [{\n                type: HostListener,\n                args: ['click', ['$event.button', '$event.ctrlKey', '$event.metaKey', '$event.shiftKey']]\n            }] } });\nfunction attrBoolValue(s) {\n    return s === '' || !!s;\n}\n\n/**\n * Data which will be passed out after ending of transition of carousel\n */\nclass SlidesOutputData {\n    startPosition;\n    slides;\n}\n;\n\nconst routes = [];\nclass CarouselModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: CarouselModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.2\", ngImport: i0, type: CarouselModule, declarations: [CarouselComponent, CarouselSlideDirective, StageComponent, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective], imports: [CommonModule], exports: [CarouselComponent, CarouselSlideDirective, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: CarouselModule, providers: [WINDOW_PROVIDERS, ResizeService, DOCUMENT_PROVIDERS, OwlLogger], imports: [CommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.2\", ngImport: i0, type: CarouselModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        // BrowserAnimationsModule, // there's an issue with this import while using lazy loading of module consuming this library. I don't remove it because it could be needed during future enhancement of this lib.\n                        // RouterModule.forChild(routes)\n                    ],\n                    declarations: [CarouselComponent, CarouselSlideDirective, StageComponent, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective],\n                    exports: [CarouselComponent, CarouselSlideDirective, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective],\n                    providers: [WINDOW_PROVIDERS, ResizeService, DOCUMENT_PROVIDERS, OwlLogger]\n                }]\n        }] });\n\nclass SlideModel {\n    /**\n     * Id of slide\n     */\n    id;\n    /**\n     * Active state of slide. If true slide gets css-class .active\n     */\n    isActive;\n    /**\n     * TemplateRef of slide. In other words its html-markup\n     */\n    tplRef;\n    /**\n     * Number of grid parts to be used\n     */\n    dataMerge;\n    /**\n     * Width of slide\n     */\n    width;\n    /**\n     * Css-rule 'margin-left'\n     */\n    marginL;\n    /**\n     * Css-rule 'margin-right'\n     */\n    marginR;\n    /**\n     * Make slide to be on center of the carousel\n     */\n    isCentered;\n    /**\n     * Mark slide to be on center of the carousel (has .center)\n     */\n    center;\n    /**\n     * Cloned slide. It's being used when 'loop'=true\n     */\n    isCloned;\n    /**\n     * Indicates whether slide should be lazy loaded\n     */\n    load;\n    /**\n     * Css-rule 'left'\n     */\n    left;\n    /**\n     * Changeable classes of slide\n     */\n    classes;\n    /**\n     * Shows whether slide could be animated and could have css-class '.animated'\n     */\n    isAnimated;\n    /**\n     * Shows whether slide could be animated-in and could have css-class '.owl-animated-in'\n     */\n    isDefAnimatedIn;\n    /**\n     * Shows whether slide could be animated-out and could have css-class '.owl-animated-out'\n     */\n    isDefAnimatedOut;\n    /**\n     * Shows whether slide could be animated-in and could have animation css-class defined by user\n     */\n    isCustomAnimatedIn;\n    /**\n     * Shows whether slide could be animated-out and could have animation css-class defined by user\n     */\n    isCustomAnimatedOut;\n    /**\n     * State for defining the height of slide.It's values could be 'full' and 'nulled'. 'Full' sets css-height to 'auto', 'nulled' sets height to '0'.\n     */\n    heightState;\n    /**\n     * Hash (fragment) of url which corresponds to slide\n     */\n    hashFragment;\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CarouselComponent, CarouselModule, CarouselSlideDirective, OwlRouterLinkDirective, OwlRouterLinkWithHrefDirective, SlideModel, SlidesOutputData };\n","import { scanInternals } from './scanInternals';\nimport { operate } from '../util/lift';\nexport function reduce(accumulator, seed) {\n    return operate(scanInternals(accumulator, seed, arguments.length >= 2, false, true));\n}\n","import { asyncScheduler } from '../scheduler/async';\nimport { delayWhen } from './delayWhen';\nimport { timer } from '../observable/timer';\nexport function delay(due, scheduler = asyncScheduler) {\n    const duration = timer(due, scheduler);\n    return delayWhen(() => duration);\n}\n","import { Observable } from '../Observable';\nimport { async as asyncScheduler } from '../scheduler/async';\nimport { isScheduler } from '../util/isScheduler';\nimport { isValidDate } from '../util/isDate';\nexport function timer(dueTime = 0, intervalOrScheduler, scheduler = asyncScheduler) {\n    let intervalDuration = -1;\n    if (intervalOrScheduler != null) {\n        if (isScheduler(intervalOrScheduler)) {\n            scheduler = intervalOrScheduler;\n        }\n        else {\n            intervalDuration = intervalOrScheduler;\n        }\n    }\n    return new Observable((subscriber) => {\n        let due = isValidDate(dueTime) ? +dueTime - scheduler.now() : dueTime;\n        if (due < 0) {\n            due = 0;\n        }\n        let n = 0;\n        return scheduler.schedule(function () {\n            if (!subscriber.closed) {\n                subscriber.next(n++);\n                if (0 <= intervalDuration) {\n                    this.schedule(undefined, intervalDuration);\n                }\n                else {\n                    subscriber.complete();\n                }\n            }\n        }, due);\n    });\n}\n","export function isValidDate(value) {\n    return value instanceof Date && !isNaN(value);\n}\n","<div *ngIf=\"isGroupsTournament() && hasGroupedPlayers()\" class=\"mt-6\">\r\n  <h4 class=\"text-lg font-bold text-white mb-4 text-center\">Groups Preview</h4>\r\n\r\n  <!-- عرض المجموعات في شبكة -->\r\n  <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-4\">\r\n    <div\r\n      *ngFor=\"let groupNumber of getGroupNumbers()\"\r\n      class=\"bg-black bg-opacity-50 backdrop-blur-sm rounded-lg border border-gray-700\"\r\n    >\r\n      <div\r\n        class=\"bg-gradient-to-r from-blue-600 to-purple-600 p-3 rounded-t-lg\"\r\n      >\r\n        <h5 class=\"text-sm font-bold text-white text-center\">\r\n          Group {{ groupNumber }}\r\n        </h5>\r\n      </div>\r\n\r\n      <div class=\"p-3\">\r\n        <table class=\"w-full text-xs text-gray-100\">\r\n          <thead class=\"text-xs font-bold text-gray-100 uppercase bg-gray-800\">\r\n            <tr class=\"text-center\">\r\n              <th scope=\"col\" class=\"px-1 py-2\">Rank</th>\r\n              <th scope=\"col\" class=\"px-1 py-2\">Name</th>\r\n              <th scope=\"col\" class=\"px-1 py-2\">Points</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr\r\n              *ngFor=\"\r\n                let player of getGroupedPlayers()[groupNumber];\r\n                let i = index\r\n              \"\r\n              class=\"border-b text-center border-gray-700 hover:bg-gray-600 font-bold text-xs\"\r\n              [ngClass]=\"i % 2 === 0 ? 'bg-gray-900' : 'bg-gray-950'\"\r\n            >\r\n              <th\r\n                scope=\"row\"\r\n                class=\"px-1 py-2 font-medium text-white whitespace-nowrap\"\r\n              >\r\n                {{ player.rank }}\r\n              </th>\r\n              <td class=\"px-1 py-2 text-white\">\r\n                {{ player.fullName }}\r\n              </td>\r\n              <td class=\"px-1 py-2 text-center font-bold text-blue-400\">\r\n                {{ player.points }}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <button\r\n          (click)=\"openGroupMatches(groupNumber)\"\r\n          class=\"w-full mt-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white text-xs font-bold py-2 px-3 rounded hover:from-blue-700 hover:to-purple-700 transition-all\"\r\n        >\r\n          Show Group {{ groupNumber }} Matches\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- مودال مباريات المجموعة -->\r\n<div\r\n  *ngIf=\"showMatchesModal\"\r\n  class=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\r\n  (click)=\"closeMatchesModal()\"\r\n>\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg shadow-lg w-full max-w-4xl mx-4 max-h-[80vh] overflow-y-auto\"\r\n    (click)=\"$event.stopPropagation()\"\r\n  >\r\n    <div class=\"flex justify-between items-center mb-4\">\r\n      <h2 class=\"text-xl font-bold text-white\">\r\n        Group {{ selectedGroup }} Matches\r\n      </h2>\r\n      <button\r\n        class=\"text-white hover:text-gray-300\"\r\n        (click)=\"closeMatchesModal()\"\r\n      >\r\n        <i class=\"fa-solid fa-times text-2xl\"></i>\r\n      </button>\r\n    </div>\r\n\r\n    <div class=\"overflow-x-auto\">\r\n      <table class=\"w-full text-sm text-left rtl:text-right text-gray-100\">\r\n        <thead class=\"text-xs font-bold text-gray-100 uppercase bg-gray-800\">\r\n          <tr class=\"text-center\">\r\n            <th\r\n              *ngFor=\"let player of getGroupedPlayers()[selectedGroup!]\"\r\n              scope=\"col\"\r\n              class=\"px-3 py-3 cursor-pointer hover:bg-gray-700 transition-all min-w-[70px]\"\r\n            >\r\n              {{ player.fullName }}\r\n            </th>\r\n            <th scope=\"col\" class=\"px-4 py-3 text-white sticky-column\">\r\n              المباراة\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"\r\n              let player1 of getGroupedPlayers()[selectedGroup!];\r\n              let i = index\r\n            \"\r\n            class=\"text-center hover:bg-gray-600\"\r\n            [ngClass]=\"i % 2 === 0 ? 'bg-gray-900' : 'bg-gray-950'\"\r\n          >\r\n            <td\r\n              *ngFor=\"let player2 of getGroupedPlayers()[selectedGroup!]\"\r\n              class=\"px-2 py-4 transition-all\"\r\n            >\r\n              <span\r\n                *ngIf=\"player1.playerId === player2.playerId\"\r\n                class=\"font-bold text-white\"\r\n              >\r\n                N/A\r\n              </span>\r\n              <span *ngIf=\"player1.playerId !== player2.playerId\">\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    systemOfLeague === SystemOfLeague.Points;\r\n                    else classicResult\r\n                  \"\r\n                >\r\n                  <span\r\n                    [ngClass]=\"\r\n                      getMatchResult(player2, player1, selectedGroupMatches)\r\n                        .color\r\n                    \"\r\n                  >\r\n                    {{\r\n                      getMatchResult(player2, player1, selectedGroupMatches)\r\n                        .result\r\n                    }}\r\n                  </span>\r\n                </ng-container>\r\n                <ng-template #classicResult>\r\n                  <span\r\n                    [ngClass]=\"\r\n                      getClassicResult(player2, player1, selectedGroupMatches)\r\n                        .color\r\n                    \"\r\n                  >\r\n                    {{\r\n                      getClassicResult(player2, player1, selectedGroupMatches)\r\n                        .result\r\n                    }}\r\n                  </span>\r\n                </ng-template>\r\n              </span>\r\n            </td>\r\n            <td class=\"px-6 py-4 font-bold text-white sticky-column\">\r\n              {{ player1.fullName }}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport {\r\n  Player,\r\n  Match,\r\n  SystemOfLeague,\r\n  LeagueType,\r\n  Group,\r\n} from '../../models/interfaces';\r\n\r\n@Component({\r\n  selector: 'app-league-groups-preview',\r\n  templateUrl: './league-groups-preview.component.html',\r\n  styleUrls: ['./league-groups-preview.component.css'],\r\n})\r\nexport class LeagueGroupsPreviewComponent implements OnInit {\r\n  @Input() groups: Group[] = [];\r\n  @Input() matches: Match[] = [];\r\n  @Input() systemOfLeague?: SystemOfLeague;\r\n  @Input() leagueType?: number;\r\n\r\n  SystemOfLeague = SystemOfLeague;\r\n  LeagueType = LeagueType;\r\n  selectedGroup: number | null = null;\r\n  showMatchesModal = false;\r\n  selectedGroupMatches: Match[] = [];\r\n\r\n  ngOnInit(): void {}\r\n\r\n  // تجميع اللاعبين حسب المجموعات من الـ groups مباشرة\r\n  getGroupedPlayers(): { [groupNumber: number]: Player[] } {\r\n    const groupedPlayers: { [groupNumber: number]: Player[] } = {};\r\n    this.groups.forEach((group) => {\r\n      groupedPlayers[group.groupNumber] = group.players;\r\n    });\r\n    return groupedPlayers;\r\n  }\r\n\r\n  // الحصول على مباريات مجموعة معينة\r\n  getGroupMatches(groupNumber: number): Match[] {\r\n    const group = this.groups.find((g) => g.groupNumber === groupNumber);\r\n    return group?.matches || [];\r\n  }\r\n\r\n  // الحصول على أرقام المجموعات مرتبة\r\n  getGroupNumbers(): number[] {\r\n    return this.groups.map((g) => g.groupNumber).sort((a, b) => a - b);\r\n  }\r\n\r\n  // التحقق من وجود مجموعات\r\n  hasGroupedPlayers(): boolean {\r\n    return this.groups && this.groups.length > 0;\r\n  }\r\n\r\n  // التحقق من أن البطولة من نوع المجموعات\r\n  isGroupsTournament(): boolean {\r\n    return this.leagueType === LeagueType.Groups;\r\n  }\r\n\r\n  // الحصول على نتيجة المباراة بين لاعبين\r\n  getMatchResult(player1: Player, player2: Player, groupMatches: Match[]) {\r\n    if (player1.playerId === player2.playerId) {\r\n      return { result: 'N/A', color: 'text-gray-800' };\r\n    }\r\n\r\n    const match = groupMatches.find(\r\n      (m) =>\r\n        (m.player1Name === player1.fullName &&\r\n          m.player2Name === player2.fullName) ||\r\n        (m.player1Name === player2.fullName &&\r\n          m.player2Name === player1.fullName)\r\n    );\r\n\r\n    if (!match) {\r\n      return { result: '-', color: 'text-gray-500' };\r\n    }\r\n\r\n    const player1Score =\r\n      match.player1Name === player1.fullName ? match.score1 : match.score2;\r\n    const player2Score =\r\n      match.player2Name === player2.fullName ? match.score2 : match.score1;\r\n\r\n    let colorClass = 'text-white ';\r\n    if (player1Score > player2Score) {\r\n      colorClass = 'text-green-600 font-bold';\r\n    } else if (player1Score < player2Score) {\r\n      colorClass = 'text-red-600 font-bold';\r\n    } else if (player1Score == player2Score && player1Score != 0) {\r\n      colorClass = 'text-gray-400 font-bold text-yellow-400';\r\n    }\r\n\r\n    return { result: `${player1Score} - ${player2Score}`, color: colorClass };\r\n  }\r\n\r\n  // الحصول على نتيجة المباراة بالعربية\r\n  getClassicResult(player1: Player, player2: Player, groupMatches: Match[]) {\r\n    if (player1.playerId === player2.playerId) {\r\n      return { result: 'N/A', color: 'text-gray-800' };\r\n    }\r\n    const match = groupMatches.find(\r\n      (m) =>\r\n        (m.player1Name === player1.fullName &&\r\n          m.player2Name === player2.fullName) ||\r\n        (m.player1Name === player2.fullName &&\r\n          m.player2Name === player1.fullName)\r\n    );\r\n    if (!match) {\r\n      return { result: '-', color: 'text-gray-500' };\r\n    }\r\n    const player1Score =\r\n      match.player1Name === player1.fullName ? match.score1 : match.score2;\r\n    const player2Score =\r\n      match.player2Name === player2.fullName ? match.score2 : match.score1;\r\n    if (player1Score > player2Score) {\r\n      return { result: 'فوز', color: 'text-green-600 font-bold' };\r\n    } else if (player1Score < player2Score) {\r\n      return { result: 'خسارة', color: 'text-red-600 font-bold' };\r\n    } else if (player1Score === player2Score && player1Score !== 0) {\r\n      return { result: 'تعادل', color: 'text-yellow-400 font-bold' };\r\n    }\r\n    return { result: '-', color: 'text-gray-500' };\r\n  }\r\n\r\n  // فتح مودال مباريات المجموعة\r\n  openGroupMatches(groupNumber: number) {\r\n    this.selectedGroup = groupNumber;\r\n    this.selectedGroupMatches = this.getGroupMatches(groupNumber);\r\n    this.showMatchesModal = true;\r\n  }\r\n\r\n  // إغلاق مودال المباريات\r\n  closeMatchesModal() {\r\n    this.showMatchesModal = false;\r\n    this.selectedGroup = null;\r\n    this.selectedGroupMatches = [];\r\n  }\r\n}\r\n","<div class=\"my-8\">\r\n  <h2 class=\"text-2xl font-bold text-center mb-4 text-white\">All Leagues</h2>\r\n\r\n  <!-- Custom Navigation Buttons -->\r\n  <div class=\"flex justify-center gap-4 mb-4\" *ngIf=\"leaguesRank.length > 0\">\r\n    <button\r\n      class=\"px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-all disabled:bg-gray-500 disabled:cursor-not-allowed disabled:opacity-50\"\r\n      (click)=\"previousSlide()\"\r\n      [disabled]=\"isFirstSlide()\"\r\n    >\r\n      <i class=\"fa-solid fa-chevron-left mr-2\"></i>Prev\r\n    </button>\r\n    <button\r\n      class=\"px-4 py-2 bg-gray-700 hover:bg-gray-600 text-white rounded-lg transition-all disabled:bg-gray-500 disabled:cursor-not-allowed disabled:opacity-50\"\r\n      (click)=\"nextSlide()\"\r\n      [disabled]=\"isLastSlide()\"\r\n    >\r\n      Next<i class=\"fa-solid fa-chevron-right ml-2\"></i>\r\n    </button>\r\n  </div>\r\n\r\n  <owl-carousel-o\r\n    [options]=\"customOptions\"\r\n    #owlCarousel\r\n    (changed)=\"onCarouselChanged($event)\"\r\n    (initialized)=\"currentSlideIndex = 0\"\r\n    (dragged)=\"onCarouselChanged($event)\"\r\n  \r\n  >\r\n    <ng-container *ngFor=\"let league of leaguesRank\">\r\n      <ng-template carouselSlide>\r\n        <div\r\n          class=\"border rounded-lg p-4 shadow-md mx-auto text-center bg-black bg-opacity-50 backdrop-blur-sm container\"\r\n        >\r\n          <h3 class=\"text-xl font-bold text-center text-white pt-2\">\r\n            {{ league.leagueName }}\r\n          </h3>\r\n          <p class=\"text-gray-300 text-center\">\r\n            {{ league.leagueDescription }}\r\n          </p>\r\n          <p class=\"text-center text-gray-300 font-bold\">\r\n            Date Of League : {{ league.createdOn | date : \"dd - MM - yyyy\" }}\r\n          </p>\r\n          <p class=\"text-center text-gray-300\">\r\n            System Of League :\r\n            <span\r\n              class=\"font-bold\"\r\n              [ngClass]=\"\r\n                league.systemOfLeague === SystemOfLeague.Points\r\n                  ? 'text-blue-400'\r\n                  : 'text-blue-400'\r\n              \"\r\n            >\r\n              {{\r\n                league.systemOfLeague === SystemOfLeague.Points\r\n                  ? \"Points \"\r\n                  : \"Classic \"\r\n              }}\r\n            </span>\r\n          </p>\r\n          <p class=\"text-center text-gray-300\">\r\n            Type Of League :\r\n            <span\r\n              class=\"font-bold\"\r\n              [ngClass]=\"\r\n                league.leagueType === 0\r\n                  ? 'text-blue-400'\r\n                  : league.leagueType === 1\r\n                  ? 'text-blue-400'\r\n                  : 'text-blue-400'\r\n              \"\r\n            >\r\n              {{\r\n                league.leagueType === 0\r\n                  ? \"League \"\r\n                  : league.leagueType === 1\r\n                  ? \"Multi \"\r\n                  : \"Groups \"\r\n              }}\r\n            </span>\r\n          </p>\r\n          <p\r\n            class=\"text-gray-300 text-center font-bold\"\r\n            *ngIf=\"league.isFinished == false\"\r\n          >\r\n            <span class=\"font-bold text-green-500\">Live Now!!</span>\r\n          </p>\r\n          <p\r\n            class=\"text-gray-300 font-bold text-center\"\r\n            *ngIf=\"league.isFinished == true\"\r\n          >\r\n            <span class=\"font-bold text-red-500\">Finished</span>\r\n          </p>\r\n\r\n          <!-- زر عرض المباريات الإقصائية للبطولات من نوع Groups -->\r\n          <div *ngIf=\"league.leagueType === 2\" class=\"mt-4 text-center\">\r\n            <button\r\n              class=\"px-4 py-2 bg-purple-600 hover:bg-purple-700 transition-all text-white rounded-lg font-semibold\"\r\n              (click)=\"openKnockoutModal(league.leagueId)\"\r\n            >\r\n              Show Knockout Matches\r\n            </button>\r\n          </div>\r\n\r\n          <!-- عرض معاينة المجموعات للبطولات من نوع Groups -->\r\n          <app-league-groups-preview\r\n            *ngIf=\"league.leagueType === 2\"\r\n            [groups]=\"league.groups || []\"\r\n            [matches]=\"getLeagueMatches(league.leagueId)\"\r\n            [systemOfLeague]=\"league.systemOfLeague\"\r\n            [leagueType]=\"league.leagueType\"\r\n          >\r\n          </app-league-groups-preview>\r\n\r\n          <!-- عرض شجرة البطولة الإقصائية -->\r\n          <div\r\n            *ngIf=\"league.leagueType === 2 && showKnockoutMatches\"\r\n            class=\"mt-4\"\r\n          >\r\n            <app-bracket-tree [leagueId]=\"league.leagueId\"></app-bracket-tree>\r\n          </div>\r\n\r\n          <div\r\n            *ngIf=\"league.leagueType !== 2\"\r\n            class=\"relative overflow-x-auto shadow-md sm:rounded-lg\"\r\n          >\r\n            <button\r\n              class=\"my-4 px-2 bg-gray-600 hover:bg-gray-700 transition-all text-white py-2 rounded\"\r\n              (click)=\"openModal(league.leagueId)\"\r\n            >\r\n              Show Games With League\r\n            </button>\r\n\r\n            <table\r\n              class=\"w-full text-sm text-left rtl:text-right text-gray-400\"\r\n            >\r\n              <thead\r\n                class=\"text-xs uppercase bg-black bg-opacity-50 backdrop-blur-sm text-white\"\r\n              >\r\n                <tr class=\"text-center\">\r\n                  <th scope=\"col\" class=\"px-2 py-3\">Rank</th>\r\n                  <th scope=\"col\" class=\"px-2 py-3\">Name</th>\r\n                  <th scope=\"col\" class=\"px-2 py-3\">Points</th>\r\n                  <th scope=\"col\" class=\"px-2 py-3 hidden sm:table-cell\">\r\n                    Win\r\n                  </th>\r\n                  <th scope=\"col\" class=\"px-2 py-3 hidden sm:table-cell\">\r\n                    Draw\r\n                  </th>\r\n                  <th scope=\"col\" class=\"px-2 py-3 hidden sm:table-cell\">\r\n                    Loss\r\n                  </th>\r\n                  <th scope=\"col\" class=\"px-2 py-3\">Games</th>\r\n                  <th scope=\"col\" class=\"px-2 py-3\">Win Rate</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr\r\n                  *ngFor=\"let player of league.players; let i = index\"\r\n                  class=\"border-b text-center border-gray-700 hover:bg-gray-600 font-bold text-sm md:text-[16px]\"\r\n                  [ngClass]=\"i % 2 === 0 ? 'bg-gray-900' : 'bg-gray-950'\"\r\n                >\r\n                  <th\r\n                    scope=\"row\"\r\n                    class=\"px-2 py-4 font-medium whitespace-nowrap text-white relative\"\r\n                  >\r\n                    <i\r\n                      class=\"fa-solid fa-crown absolute top-[50%] left-[10px] md:left-10 translate-y-[-50%]\"\r\n                      style=\"color: #ffd43b\"\r\n                      *ngIf=\"player.rank == 1\"\r\n                    ></i>\r\n                    {{ player.rank }}\r\n                  </th>\r\n                  <td class=\"px-2 py-4 text-white\">{{ player.fullName }}</td>\r\n                  <td class=\"px-2 py-4 text-center text-white\">\r\n                    {{ player.points }}\r\n                  </td>\r\n                  <td\r\n                    class=\"px-2 py-4 text-center text-green-500 hidden sm:table-cell\"\r\n                  >\r\n                    {{ player.wins }}\r\n                  </td>\r\n                  <td\r\n                    class=\"px-2 py-4 text-center text-yellow-400 hidden sm:table-cell\"\r\n                  >\r\n                    {{ player.draws }}\r\n                  </td>\r\n                  <td\r\n                    class=\"px-2 py-4 text-center text-red-500 hidden sm:table-cell\"\r\n                  >\r\n                    {{ player.losses }}\r\n                  </td>\r\n                  <td class=\"px-2 py-4 text-center text-white\">\r\n                    {{ player.matchesPlayed }}\r\n                  </td>\r\n                  <td\r\n                    class=\"px-2 py-4 text-center\"\r\n                    [ngClass]=\"\r\n                      player.winRate < 35\r\n                        ? 'text-red-500'\r\n                        : player.winRate >= 35 && player.winRate <= 69\r\n                        ? 'text-yellow-400'\r\n                        : 'text-green-500'\r\n                    \"\r\n                  >\r\n                    {{ player.winRate | number : \"1.2-2\" }} %\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </ng-template>\r\n    </ng-container>\r\n  </owl-carousel-o>\r\n</div>\r\n\r\n<!-- Modal for League Games -->\r\n<div\r\n  *ngIf=\"isModalOpen\"\r\n  class=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\r\n  (click)=\"closeModal()\"\r\n>\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm p-6 rounded-lg shadow-lg w-full max-w-4xl mx-4 max-h-[80vh] overflow-y-auto\"\r\n    (click)=\"$event.stopPropagation()\"\r\n  >\r\n    <div class=\"flex justify-between items-center mb-4\">\r\n      <h2 class=\"text-xl font-bold text-white\">League Games</h2>\r\n      <button class=\"text-white hover:text-gray-300\" (click)=\"closeModal()\">\r\n        <i class=\"fa-solid fa-times text-2xl\"></i>\r\n      </button>\r\n    </div>\r\n    <div\r\n      class=\"table-container relative overflow-x-auto shadow-md sm:rounded-lg\"\r\n    >\r\n      <table class=\"w-full text-sm text-left rtl:text-right text-gray-400\">\r\n        <thead class=\"text-xs uppercase\">\r\n          <tr>\r\n            <th\r\n              *ngFor=\"let player of players; let i = index\"\r\n              scope=\"col\"\r\n              class=\"px-2 py-3 text-center text-white cursor-pointer hover:bg-gray-400 transition-all min-w-[70px] sticky-header\"\r\n              (click)=\"highlightColumn(player.playerId)\"\r\n              [ngClass]=\"\r\n                highlightedColumn == player.playerId\r\n                  ? 'highlighted-header'\r\n                  : 'text-white'\r\n              \"\r\n              [style.--cell-index]=\"i\"\r\n              [style.--total-cells]=\"players.length\"\r\n            >\r\n              {{ player.fullName }}\r\n            </th>\r\n            <th\r\n              scope=\"col\"\r\n              class=\"px-2 py-3 text-center text-white sticky-corner\"\r\n            >\r\n              المباراة\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr\r\n            *ngFor=\"let player1 of players; let i = index\"\r\n            class=\"border-b text-center border-gray-700 hover:bg-gray-600\"\r\n            [ngClass]=\"i % 2 === 0 ? 'bg-gray-900' : 'bg-gray-950'\"\r\n          >\r\n            <td\r\n              *ngFor=\"let player2 of players\"\r\n              class=\"px-2 py-4 transition-all\"\r\n              [ngClass]=\"{\r\n                'highlighted-cell': highlightedColumn === player2.playerId\r\n              }\"\r\n            >\r\n              <span\r\n                *ngIf=\"player1.playerId === player2.playerId\"\r\n                class=\"font-bold text-white\"\r\n              >\r\n                N/A\r\n              </span>\r\n              <span *ngIf=\"player1.playerId !== player2.playerId\">\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    currentModalSystemOfLeague === SystemOfLeague.Points;\r\n                    else classicResult\r\n                  \"\r\n                >\r\n                  <span [ngClass]=\"getMatchResult(player2, player1).color\">\r\n                    {{ getMatchResult(player2, player1).result }}\r\n                  </span>\r\n                </ng-container>\r\n                <ng-template #classicResult>\r\n                  <span [ngClass]=\"getClassicResult(player2, player1).color\">\r\n                    {{ getClassicResult(player2, player1).result }}\r\n                  </span>\r\n                </ng-template>\r\n              </span>\r\n            </td>\r\n            <td class=\"px-2 py-4 font-bold text-white sticky-column\">\r\n              {{ player1.fullName }}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Knockout Matches Modal -->\r\n<div\r\n  *ngIf=\"isKnockoutModalOpen\"\r\n  class=\"fixed inset-0 bg-black bg-opacity-75 flex items-center justify-center z-50\"\r\n  (click)=\"closeKnockoutModal()\"\r\n>\r\n  <div\r\n    class=\"bg-black bg-opacity-50 backdrop-blur-sm rounded-lg shadow-lg w-full max-w-6xl max-h-[80vh] overflow-y-auto md:overflow-hidden\"\r\n    (click)=\"$event.stopPropagation()\"\r\n  >\r\n    <div class=\"flex justify-between items-center mb-4 px-4 pt-2\">\r\n      <h2 class=\"text-xl font-bold text-white\">Knockout Matches</h2>\r\n      <button\r\n        class=\"text-white hover:text-gray-300\"\r\n        (click)=\"closeKnockoutModal()\"\r\n      >\r\n        <i class=\"fa-solid fa-times text-2xl\"></i>\r\n      </button>\r\n    </div>\r\n    <div class=\"w-full\">\r\n      <app-bracket-tree [leagueId]=\"currentKnockoutLeagueId\"></app-bracket-tree>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, HostListener, OnInit, ViewChild } from '@angular/core';\r\nimport { LeagueService } from './../../core/services/league.service';\r\nimport {\r\n  AllLeagueRank,\r\n  Player,\r\n  Match,\r\n  SystemOfLeague,\r\n} from './../../models/interfaces';\r\nimport { OwlOptions, CarouselComponent } from 'ngx-owl-carousel-o';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-all-leagues',\r\n  templateUrl: './all-leagues.component.html',\r\n  styleUrls: ['./all-leagues.component.css'],\r\n})\r\nexport class AllLeaguesComponent implements OnInit {\r\n  @ViewChild('owlCarousel') owlCarousel!: CarouselComponent;\r\n  leaguesRank: AllLeagueRank[] = [];\r\n  players: Player[] = [];\r\n  highlightedColumn: number | null = null;\r\n  matches: Match[] = [];\r\n  LeagueId: number = 0;\r\n  isModalOpen: boolean = false;\r\n  currentModalSystemOfLeague?: SystemOfLeague;\r\n  SystemOfLeague = SystemOfLeague;\r\n  showKnockoutMatches: boolean = false;\r\n  isKnockoutModalOpen: boolean = false;\r\n  currentKnockoutLeagueId: number = 0;\r\n  currentSlideIndex: number = 0;\r\n\r\n  constructor(\r\n    private leagueService: LeagueService,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.leagueService.GetAllLeaguesRank().subscribe({\r\n      next: (response) => {\r\n        // console.log(response);\r\n\r\n        if (response) {\r\n          this.leaguesRank = this.sortLeaguesForDisplay(response);\r\n          // console.log('All leagues data loaded from cache or server');\r\n        } else {\r\n          this.toastr.error(response);\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.toastr.error(err.error.message);\r\n      },\r\n    });\r\n  }\r\n\r\n  // Method to handle carousel changes\r\n  onCarouselChanged(event: any): void {\r\n    if (event && event.startPosition !== undefined) {\r\n      this.currentSlideIndex = event.startPosition;\r\n      \r\n    }\r\n  }\r\n\r\n  loadData() {\r\n    this.leagueService.GetAllLeaguesRank().subscribe({\r\n      next: (response) => {\r\n        this.leaguesRank = this.sortLeaguesForDisplay(response);\r\n      },\r\n      error: (error) => {\r\n        this.toastr.error('حدث خطأ أثناء تحميل بيانات الدوريات');\r\n      },\r\n    });\r\n  }\r\n\r\n  // Sort leagues for display (newest first for carousel)\r\n  private sortLeaguesForDisplay(leagues: AllLeagueRank[]): AllLeagueRank[] {\r\n    return [...leagues].sort((a, b) => {\r\n      const dateA = new Date(a.createdOn).getTime();\r\n      const dateB = new Date(b.createdOn).getTime();\r\n      return dateB - dateA; // Descending order (newest first)\r\n    });\r\n  }\r\n\r\n  customOptions: OwlOptions = {\r\n    nav: false,\r\n    loop: false,\r\n    mouseDrag: true,\r\n    touchDrag: true,\r\n    pullDrag: true,\r\n    // dots: false,\r\n    navSpeed: 700,\r\n    // navText: ['Previous', 'Next'],\r\n    responsive: {\r\n      0: { items: 1 },\r\n      600: { items: 1 },\r\n      1000: { items: 1 },\r\n    },\r\n  };\r\n\r\n  openModal(id: number): void {\r\n    this.LeagueId = id;\r\n    this.isModalOpen = true;\r\n\r\n    // Use existing data from leaguesRank instead of making a separate request\r\n    const league = this.leaguesRank.find((l) => l.leagueId === id);\r\n    if (league) {\r\n      this.players = league.players || [];\r\n      this.matches = league.matches || [];\r\n      this.currentModalSystemOfLeague = league.systemOfLeague;\r\n    } else {\r\n      this.players = [];\r\n      this.matches = [];\r\n      this.currentModalSystemOfLeague = undefined;\r\n    }\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.isModalOpen = false;\r\n    this.LeagueId = 0;\r\n    this.highlightedColumn = null;\r\n    this.players = [];\r\n    this.matches = [];\r\n  }\r\n\r\n  getMatchResult(player1: Player, player2: Player) {\r\n    if (player1.playerId === player2.playerId) {\r\n      return { result: 'N/A', color: 'text-gray-400' };\r\n    }\r\n\r\n    const match = this.matches.find(\r\n      (m) =>\r\n        (m.player1Name === player1.fullName &&\r\n          m.player2Name === player2.fullName) ||\r\n        (m.player1Name === player2.fullName &&\r\n          m.player2Name === player1.fullName)\r\n    );\r\n\r\n    if (!match) {\r\n      return { result: '-', color: 'text-gray-500' };\r\n    }\r\n\r\n    const player1Score =\r\n      match.player1Name === player1.fullName ? match.score1 : match.score2;\r\n    const player2Score =\r\n      match.player2Name === player2.fullName ? match.score2 : match.score1;\r\n\r\n    let colorClass = 'text-white';\r\n    if (player1Score > player2Score) {\r\n      colorClass = 'text-green-600 font-bold';\r\n    } else if (player1Score < player2Score) {\r\n      colorClass = 'text-red-600 font-bold';\r\n    } else if (player1Score === player2Score && player1Score !== 0) {\r\n      colorClass = 'text-yellow-400 font-bold';\r\n    }\r\n\r\n    return { result: `${player1Score} - ${player2Score}`, color: colorClass };\r\n  }\r\n\r\n  getClassicResult(player1: Player, player2: Player) {\r\n    if (player1.playerId === player2.playerId) {\r\n      return { result: 'N/A', color: 'text-gray-400' };\r\n    }\r\n    const match = this.matches.find(\r\n      (m) =>\r\n        (m.player1Name === player1.fullName &&\r\n          m.player2Name === player2.fullName) ||\r\n        (m.player1Name === player2.fullName &&\r\n          m.player2Name === player1.fullName)\r\n    );\r\n    if (!match) {\r\n      return { result: '-', color: 'text-gray-500' };\r\n    }\r\n    const player1Score =\r\n      match.player1Name === player1.fullName ? match.score1 : match.score2;\r\n    const player2Score =\r\n      match.player2Name === player2.fullName ? match.score2 : match.score1;\r\n    if (player1Score > player2Score) {\r\n      return { result: 'فوز', color: 'text-green-600 font-bold' };\r\n    } else if (player1Score < player2Score) {\r\n      return { result: 'خسارة', color: 'text-red-600 font-bold' };\r\n    } else if (player1Score === player2Score && player1Score !== 0) {\r\n      return { result: 'تعادل', color: 'text-yellow-400 font-bold' };\r\n    }\r\n    return { result: '-', color: 'text-gray-500' };\r\n  }\r\n\r\n  highlightColumn(playerId: number) {\r\n    this.highlightedColumn =\r\n      this.highlightedColumn === playerId ? null : playerId;\r\n  }\r\n\r\n  toggleKnockoutMatches(): void {\r\n    this.showKnockoutMatches = !this.showKnockoutMatches;\r\n  }\r\n\r\n  openKnockoutModal(leagueId: number): void {\r\n    this.currentKnockoutLeagueId = leagueId;\r\n    this.isKnockoutModalOpen = true;\r\n  }\r\n\r\n  closeKnockoutModal(): void {\r\n    this.isKnockoutModalOpen = false;\r\n  }\r\n\r\n  @HostListener('document:click', ['$event'])\r\n  onClickOutside(event: Event) {\r\n    const table = document.querySelector('table');\r\n    if (table && !table.contains(event.target as Node) && this.isModalOpen) {\r\n      this.highlightedColumn = null;\r\n    }\r\n  }\r\n\r\n  // دالة مساعدة لإرجاع systemOfLeague لدوري معين\r\n  getSystemOfLeagueForLeague(league: any): SystemOfLeague | undefined {\r\n    return league?.systemOfLeague;\r\n  }\r\n\r\n  // دالة للحصول على مباريات دوري معين\r\n  getLeagueMatches(leagueId: number): Match[] {\r\n    const league = this.leaguesRank.find((l) => l.leagueId === leagueId);\r\n    if (!league) return [];\r\n\r\n    // للدوريات العادية، نرجع matches\r\n    if (league.leagueType !== 2) {\r\n      return league.matches || [];\r\n    }\r\n\r\n    // لدوريات المجموعات، نجمع matches و knockoutMatches\r\n    const allMatches: Match[] = [];\r\n    if (league.matches) {\r\n      allMatches.push(...league.matches);\r\n    }\r\n    if (league.knockoutMatches) {\r\n      allMatches.push(...league.knockoutMatches);\r\n    }\r\n    return allMatches;\r\n  }\r\n\r\n  // تعديل دوال النتائج لتأخذ systemOfLeague كـ parameter\r\n  getDisplayResult(\r\n    player1: Player,\r\n    player2: Player,\r\n    systemOfLeague: SystemOfLeague | undefined\r\n  ) {\r\n    if (systemOfLeague === SystemOfLeague.Classic) {\r\n      return this.getClassicResult(player1, player2);\r\n    }\r\n    return this.getMatchResult(player1, player2);\r\n  }\r\n\r\n  // Navigation methods\r\n  previousSlide(): void {\r\n    this.owlCarousel?.prev();\r\n  }\r\n\r\n  nextSlide(): void {\r\n    this.owlCarousel?.next();\r\n  }\r\n\r\n  // Check if we're at the first slide\r\n  isFirstSlide(): boolean {\r\n    if (this.leaguesRank.length === 0) return true;\r\n    return this.currentSlideIndex === 0;\r\n  }\r\n\r\n  // Check if we're at the last slide\r\n  isLastSlide(): boolean {\r\n    if (this.leaguesRank.length === 0) return true;\r\n    return this.currentSlideIndex >= this.leaguesRank.length - 1;\r\n  }\r\n}\r\n","<div class=\"container mx-auto\">\r\n  <div class=\"text-center my-[30px]\">\r\n    <h2 class=\"font-bold fa-1 text-white\">\r\n      هذه الكروت الممنوعة من الموقع الرسمي للعبة يوغي للتأكد\r\n      <a\r\n        href=\"https://www.db.yugioh-card.com/yugiohdb/forbidden_limited.action\"\r\n        target=\"_blank\"\r\n        class=\"text-blue-600 hover:text-blue-800\"\r\n      >\r\n        اضغط هنا\r\n      </a>\r\n      للذهاب الي الموقع\r\n    </h2>\r\n\r\n    <h2 class=\"font-bold fa-1 text-white\">\r\n      لعرض الورق الممنوع الخاص بنسخة جوي فقط\r\n      <span\r\n        class=\"text-blue-600 hover:text-blue-800 cursor-pointer\"\r\n        (click)=\"openAll()\"\r\n      >\r\n        اضغط هنا\r\n      </span>\r\n    </h2>\r\n  </div>\r\n\r\n  <!-- Spell Cards Section -->\r\n  <div class=\"text-center my-[30px]\">\r\n    <h2 class=\"font-bold fa-2xl text-green-500 custom-outline\">Spell Cards</h2>\r\n  </div>\r\n  <owl-carousel-o [options]=\"customOptions\">\r\n    <ng-container *ngFor=\"let spell of spellCards\">\r\n      <ng-template carouselSlide>\r\n        <div class=\"p-2 relative transition max-w-[150px] cursor-pointer\">\r\n          <img [src]=\"spell\" class=\"w-fit min-h-[190px]\" />\r\n        </div>\r\n        <div class=\"text-center\">\r\n          <i\r\n            class=\"fa-solid fa-eye cursor-pointer\"\r\n            style=\"color: #fff\"\r\n            (click)=\"openModal(spell)\"\r\n          ></i>\r\n        </div>\r\n      </ng-template>\r\n    </ng-container>\r\n  </owl-carousel-o>\r\n\r\n  <!-- Trap Cards Section -->\r\n  <div class=\"text-center my-[30px]\">\r\n    <h2 class=\"font-bold text-3xl text-rose-500 custom-outline\">Trap Cards</h2>\r\n  </div>\r\n  <owl-carousel-o [options]=\"customOptions\">\r\n    <ng-container *ngFor=\"let trap of trapCards\">\r\n      <ng-template carouselSlide>\r\n        <div class=\"p-2 relative transition max-w-[150px] cursor-pointer\">\r\n          <img [src]=\"trap\" class=\"w-fit min-h-[190px]\" />\r\n        </div>\r\n        <div class=\"text-center\">\r\n          <i\r\n            class=\"fa-solid fa-eye cursor-pointer\"\r\n            style=\"color: #fff\"\r\n            (click)=\"openModal(trap)\"\r\n          ></i>\r\n        </div>\r\n      </ng-template>\r\n    </ng-container>\r\n  </owl-carousel-o>\r\n\r\n  <!-- Monsters Section -->\r\n  <div class=\"text-center my-[30px]\">\r\n    <h2 class=\"font-bold fa-2xl text-yellow-500 custom-outline\">Monsters</h2>\r\n  </div>\r\n  <owl-carousel-o [options]=\"customOptions\">\r\n    <ng-container *ngFor=\"let monster of monsters\">\r\n      <ng-template carouselSlide>\r\n        <div\r\n          class=\"p-2 relative transition max-w-[150px] cursor-pointer\"\r\n        >\r\n          <img [src]=\"monster\" class=\"w-fit min-h-[190px]\" />\r\n        </div>\r\n        <div class=\"text-center\">\r\n          <i\r\n            class=\"fa-solid fa-eye cursor-pointer\"\r\n            style=\"color: #fff\"\r\n            (click)=\"openModal(monster)\"\r\n          ></i>\r\n        </div>\r\n      </ng-template>\r\n    </ng-container>\r\n  </owl-carousel-o>\r\n\r\n  <!-- Modal for the Selected Image -->\r\n  <div\r\n    *ngIf=\"isModalOpen\"\r\n    class=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\"\r\n    (click)=\"closeModal()\"\r\n  >\r\n    <div class=\"relative\">\r\n      <img\r\n        [src]=\"selectedImage\"\r\n        class=\"max-w-[90vw] max-h-[90vh] object-contain w-[400px]\"\r\n        (click)=\"$event.stopPropagation()\"\r\n      />\r\n    </div>\r\n  </div>\r\n  <!-- Modal for All-->\r\n  <div\r\n    *ngIf=\"isModalOpenAll\"\r\n    class=\"fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center z-50\"\r\n    (click)=\"closeModal()\"\r\n  >\r\n    <div class=\"relative\">\r\n      <img\r\n        src=\"./assets/images/all2.png\"\r\n        class=\"max-w-[250vw] max-h-[250vh] object-contain w-[400px] sm:w-[700px]\"\r\n        (click)=\"$event.stopPropagation()\"\r\n      />\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { OwlOptions } from 'ngx-owl-carousel-o';\r\n\r\n@Component({\r\n  selector: 'app-forbidden-cards',\r\n  templateUrl: './forbidden-cards.component.html',\r\n  styleUrls: ['./forbidden-cards.component.css'],\r\n})\r\nexport class ForbiddenCardsComponent implements OnInit {\r\n  spellCards: string[] = [\r\n    './assets/images/Spell Cards/1.jpg',\r\n    './assets/images/Spell Cards/4.jpg',\r\n    './assets/images/Spell Cards/5.jpg',\r\n    './assets/images/Spell Cards/6.jpg',\r\n    './assets/images/Spell Cards/12.jpg',\r\n    './assets/images/Spell Cards/14.jpg',\r\n    './assets/images/Spell Cards/15.jpg',\r\n    './assets/images/Spell Cards/16.jpg',\r\n    './assets/images/Spell Cards/18.jpg',\r\n    './assets/images/Spell Cards/19.jpg',\r\n    './assets/images/Spell Cards/20.jpg',\r\n    './assets/images/Spell Cards/21.jpg',\r\n    './assets/images/Spell Cards/24.jpg',\r\n    './assets/images/Spell Cards/25.jpg',\r\n    './assets/images/Spell Cards/26.jpg',\r\n    './assets/images/Spell Cards/13.jpg',\r\n    './assets/images/Spell Cards/2.jpg',\r\n    './assets/images/Spell Cards/3.jpg',\r\n    './assets/images/Spell Cards/7.jpg',\r\n    './assets/images/Spell Cards/17.jpg',\r\n    './assets/images/Spell Cards/8.jpg',\r\n    './assets/images/Spell Cards/9.jpg',\r\n    './assets/images/Spell Cards/10.jpg',\r\n    './assets/images/Spell Cards/11.jpg',\r\n    './assets/images/Spell Cards/22.jpg',\r\n    './assets/images/Spell Cards/23.jpg',\r\n  ];\r\n  trapCards: string[] = [\r\n    './assets/images/Trap Cards/11.jpg',\r\n    './assets/images/Trap Cards/2.jpg',\r\n    './assets/images/Trap Cards/1.jpg',\r\n    './assets/images/Trap Cards/3.jpg',\r\n    './assets/images/Trap Cards/4.jpg',\r\n    './assets/images/Trap Cards/5.jpg',\r\n    './assets/images/Trap Cards/6.jpg',\r\n    './assets/images/Trap Cards/7.jpg',\r\n    './assets/images/Trap Cards/8.jpg',\r\n    './assets/images/Trap Cards/9.jpg',\r\n    './assets/images/Trap Cards/10.jpg',\r\n    './assets/images/Trap Cards/12.jpg',\r\n    './assets/images/Trap Cards/13.jpg',\r\n  ];\r\n  monsters: string[] = [\r\n    './assets/images/Monster/13.jpg',\r\n    './assets/images/Monster/3.jpg',\r\n    './assets/images/Monster/4.jpg',\r\n    './assets/images/Monster/2.jpg',\r\n    './assets/images/Monster/1.jpg',\r\n    './assets/images/Monster/5.jpg',\r\n    './assets/images/Monster/6.jpg',\r\n    './assets/images/Monster/7.jpg',\r\n    './assets/images/Monster/8.jpg',\r\n    './assets/images/Monster/9.jpg',\r\n    './assets/images/Monster/10.jpg',\r\n    './assets/images/Monster/11.jpg',\r\n    './assets/images/Monster/12.jpg',\r\n  ];\r\n\r\n  selectedImage: string | null = null;\r\n  isModalOpen = false;\r\n  isModalOpenAll = false;\r\n  ngOnInit(): void {}\r\n\r\n  customOptions: OwlOptions = {\r\n    loop: false,\r\n    mouseDrag: true,\r\n    touchDrag: true,\r\n    pullDrag: true,\r\n    dots: false,\r\n    navSpeed: 700,\r\n    navText: ['', ''],\r\n    responsive: {\r\n      0: {\r\n        items: 3,\r\n      },\r\n      400: {\r\n        items: 3,\r\n      },\r\n      740: {\r\n        items: 3,\r\n      },\r\n      940: {\r\n        items: 10,\r\n      },\r\n    },\r\n    nav: true,\r\n  };\r\n\r\n  openModal(image: string): void {\r\n    this.selectedImage = image;\r\n    this.isModalOpen = true;\r\n  }\r\n  openAll(): void {\r\n    this.isModalOpenAll = true;\r\n  }\r\n\r\n  closeModal(): void {\r\n    this.isModalOpen = false;\r\n    this.isModalOpenAll = false;\r\n    this.selectedImage = null;\r\n  }\r\n}\r\n","<div class=\"container mx-auto p-4 overflow-hidden h-screen\">\n  <div class=\"flex flex-col h-full bg-transparent\">\n    <!-- Fixed Header with Toggle Switch -->\n    <div\n      class=\"fixed top-[70px] left-0 right-0 z-40 p-4 bg-black bg-opacity-90 backdrop-blur-sm border-b border-gray-600 header-container\"\n    >\n      <div class=\"flex items-center justify-between\">\n        <div class=\"flex items-center space-x-3\">\n          <div class=\"flex items-center space-x-2 toggle-container\">\n            <label class=\"toggle-switch\">\n              <input\n                type=\"checkbox\"\n                [checked]=\"isFriendlyMode\"\n                (change)=\"toggleMessageMode()\"\n              />\n              <span class=\"slider\"></span>\n            </label>\n            <span class=\"text-sm text-gray-300\">ودية</span>\n          </div>\n        </div>\n        <button\n          (click)=\"toggleMessageMode()\"\n          class=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm\"\n        >\n          {{ toggleButtonText }}\n        </button>\n      </div>\n    </div>\n\n    <!-- Loading Indicator -->\n    <div\n      *ngIf=\"isLoading\"\n      class=\"flex justify-center items-center p-8\"\n      style=\"margin-top: 80px\"\n    >\n      <div\n        class=\"loading-spinner rounded-full h-8 w-8 border-b-2 border-white\"\n      ></div>\n      <span class=\"ml-2 text-white\">جاري التحميل...</span>\n    </div>\n\n    <!-- Messages Container - Scrollable Area with padding for fixed header and footer -->\n    <div\n      *ngIf=\"!isLoading\"\n      #messagesContainer\n      class=\"flex-1 p-4 overflow-y-auto messages-container\"\n      style=\"margin-top: 80px; margin-bottom: 80px\"\n    >\n      <!-- Official Messages -->\n      <div *ngIf=\"!isFriendlyMode\">\n        <div *ngFor=\"let message of messages\" class=\"mb-4 message-container\">\n          <!-- Player Messages (Right) -->\n          <div *ngIf=\"!message.isFromAdmin\" class=\"flex justify-end\">\n            <div\n              class=\"max-w-xs bg-green-500 bg-opacity-50 text-white rounded-lg p-3 shadow-md backdrop-blur-sm message-bubble\"\n            >\n              <p class=\"text-sm\">{{ message.content }}</p>\n              <p class=\"text-xs mt-1 text-gray-300\">\n                {{ message.sentAt | date : \"MMM d, y, hh:mm a\" }}\n              </p>\n            </div>\n          </div>\n          <!-- Admin Messages (Left) -->\n          <div *ngIf=\"message.isFromAdmin\" class=\"flex justify-start\">\n            <div\n              class=\"max-w-xs bg-gray-300 bg-opacity-50 text-white rounded-lg p-3 shadow-md backdrop-blur-sm message-bubble\"\n            >\n              <p class=\"text-sm\">{{ message.content }}</p>\n              <p class=\"text-xs mt-1 text-gray-300\">\n                {{ message.sentAt | date : \"MMM d, y, hh:mm a\" }}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Friendly Messages -->\n      <div *ngIf=\"isFriendlyMode\">\n        <div\n          *ngFor=\"let message of friendlyMessages\"\n          class=\"mb-4 message-container\"\n        >\n          <!-- Player Messages (Right) -->\n          <div *ngIf=\"!message.isFromAdmin\" class=\"flex justify-end\">\n            <div\n              class=\"max-w-xs bg-blue-500 bg-opacity-50 text-white rounded-lg p-3 shadow-md backdrop-blur-sm message-bubble\"\n            >\n              <p class=\"text-sm\">{{ message.content }}</p>\n              <p class=\"text-xs mt-1 text-gray-300\">\n                {{ message.sentAt | date : \"MMM d, y, hh:mm a\" }}\n              </p>\n            </div>\n          </div>\n          <!-- Admin Messages (Left) -->\n          <div *ngIf=\"message.isFromAdmin\" class=\"flex justify-start\">\n            <div\n              class=\"max-w-xs bg-purple-300 bg-opacity-50 text-white rounded-lg p-3 shadow-md backdrop-blur-sm message-bubble\"\n            >\n              <p class=\"text-sm\">{{ message.content }}</p>\n              <p class=\"text-xs mt-1 text-gray-300\">\n                {{ message.sentAt | date : \"MMM d, y, hh:mm a\" }}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Empty State -->\n      <div\n        *ngIf=\"currentMessages.length === 0 && !isLoading\"\n        class=\"text-center py-8\"\n      >\n        <div class=\"text-gray-400 text-lg\">\n          لا توجد {{ isFriendlyMode ? \"رسائل ودية\" : \"رسائل رسمية\" }} حالياً\n        </div>\n        <div class=\"text-gray-500 text-sm mt-2\">\n          ابدأ المحادثة بإرسال رسالة جديدة\n        </div>\n      </div>\n    </div>\n\n    <!-- Fixed Message Input -->\n    <div\n      class=\"fixed bottom-0 left-0 right-0 z-50 p-4 bg-black bg-opacity-90 backdrop-blur-sm border-t border-gray-600\"\n    >\n      <form (ngSubmit)=\"sendMessage()\" class=\"flex items-center gap-2\">\n        <input\n          type=\"text\"\n          [(ngModel)]=\"newMessage\"\n          name=\"newMessage\"\n          [placeholder]=\"\n            isFriendlyMode ? 'اكتب رسالة ودية...' : 'اكتب رسالة رسمية...'\n          \"\n          class=\"flex-1 p-2 bg-black bg-opacity-50 text-white border border-gray-700 rounded-lg focus:outline-none focus:ring-2 focus:ring-gray-300 placeholder-gray-400\"\n        />\n        <button\n          type=\"submit\"\n          class=\"bg-gray-800 text-white p-2 rounded-lg hover:bg-gray-700 disabled:bg-gray-600 transition-colors\"\n          [disabled]=\"!newMessage.trim()\"\n        >\n          إرسال\n        </button>\n      </form>\n    </div>\n  </div>\n</div>\n","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ElementRef,\n  AfterViewChecked,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { MessageService } from 'src/app/core/services/message.service';\nimport { FriendlyMessageService } from 'src/app/core/services/friendly-message.service';\nimport { Message } from 'src/app/models/interfaces';\nimport { FriendlyMessageDto } from 'friendly-message-types';\n\n@Component({\n  selector: 'app-player-inbox',\n  templateUrl: './player-inbox.component.html',\n  styleUrls: ['./player-inbox.component.css'],\n})\nexport class PlayerInboxComponent implements OnInit, AfterViewChecked {\n  messages: Message[] = [];\n  friendlyMessages: FriendlyMessageDto[] = [];\n  newMessage: string = '';\n  isFriendlyMode: boolean = false; // Default to official messages\n  isLoading: boolean = false;\n  @ViewChild('messagesContainer') messagesContainer!: ElementRef;\n\n  constructor(\n    private messageService: MessageService,\n    private friendlyMessageService: FriendlyMessageService,\n    private toastr: ToastrService,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    this.loadMessages();\n  }\n\n  ngAfterViewChecked(): void {\n    this.cdr.detectChanges();\n    this.scrollToBottom();\n  }\n\n  loadMessages(): void {\n    this.isLoading = true;\n\n    if (this.isFriendlyMode) {\n      this.loadFriendlyMessages();\n    } else {\n      this.loadOfficialMessages();\n    }\n  }\n\n  private loadOfficialMessages(): void {\n    this.messageService.getPlayerMessages().subscribe({\n      next: (response) => {\n        this.isLoading = false;\n        if (response && response.messages) {\n          this.messages = response.messages\n            .filter((message) => !message.isDeleted)\n            .sort(\n              (a, b) =>\n                new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\n            );\n          this.cdr.detectChanges();\n        } else {\n          this.toastr.info('لا يوجد رسائل رسمية الآن');\n        }\n      },\n      error: (err) => {\n        this.isLoading = false;\n        this.toastr.error('حصل خطأ أثناء جلب الرسائل الرسمية');\n      },\n    });\n  }\n\n  private loadFriendlyMessages(): void {\n    this.friendlyMessageService.getPlayerMessages(0).subscribe({\n      next: (response) => {\n        this.isLoading = false;\n        if (response && response.messages) {\n          this.friendlyMessages = response.messages.sort(\n            (a, b) =>\n              new Date(a.sentAt).getTime() - new Date(b.sentAt).getTime()\n          );\n          this.cdr.detectChanges();\n        } else {\n          this.toastr.info('لا يوجد رسائل ودية الآن');\n        }\n      },\n      error: (err) => {\n        this.isLoading = false;\n        this.toastr.error('حصل خطأ أثناء جلب الرسائل الودية');\n      },\n    });\n  }\n\n  sendMessage(): void {\n    if (!this.newMessage.trim()) {\n      this.toastr.warning('الرجاء كتابة رسالة');\n      return;\n    }\n\n    if (this.isFriendlyMode) {\n      this.sendFriendlyMessage();\n    } else {\n      this.sendOfficialMessage();\n    }\n  }\n\n  private sendOfficialMessage(): void {\n    this.messageService.sendMessage(this.newMessage).subscribe({\n      next: (response) => {\n        if (response.success) {\n          this.toastr.success('تم إرسال الرسالة الرسمية');\n          this.newMessage = '';\n          this.loadMessages();\n          this.cdr.detectChanges();\n        } else {\n          this.toastr.error(response.message || 'فشل إرسال الرسالة الرسمية');\n        }\n      },\n      error: (err) => {\n        this.toastr.error('حصل خطأ أثناء إرسال الرسالة الرسمية');\n      },\n    });\n  }\n\n  private sendFriendlyMessage(): void {\n    this.friendlyMessageService\n      .sendMessageToAdmin(0, this.newMessage)\n      .subscribe({\n        next: (response) => {\n          if (response.success) {\n            this.toastr.success('تم إرسال الرسالة الودية');\n            this.newMessage = '';\n            this.loadMessages();\n            this.cdr.detectChanges();\n          } else {\n            this.toastr.error(response.message || 'فشل إرسال الرسالة الودية');\n          }\n        },\n        error: (err) => {\n          this.toastr.error('حصل خطأ أثناء إرسال الرسالة الودية');\n        },\n      });\n  }\n\n  toggleMessageMode(): void {\n    this.isFriendlyMode = !this.isFriendlyMode;\n    this.messages = [];\n    this.friendlyMessages = [];\n    this.newMessage = '';\n    this.loadMessages();\n  }\n\n  get currentMessages(): any[] {\n    return this.isFriendlyMode ? this.friendlyMessages : this.messages;\n  }\n\n  get messageTypeLabel(): string {\n    return this.isFriendlyMode ? 'رسائل ودية' : 'رسائل رسمية';\n  }\n\n  get toggleButtonText(): string {\n    return this.isFriendlyMode\n      ? 'التبديل للرسائل الرسمية'\n      : 'التبديل للرسائل الودية';\n  }\n\n  private scrollToBottom(): void {\n    if (this.messagesContainer) {\n      const container = this.messagesContainer.nativeElement;\n      container.scrollTop = container.scrollHeight;\n    }\n  }\n}\n","<div class=\"md:container mx-auto p-4\">\n  <!-- Header -->\n  <div class=\"mb-6\">\n    <h1 class=\"text-3xl font-bold text-white mb-2\">🎮 Friendlies</h1>\n    <p class=\"text-gray-400\">View friendly matches and player statistics</p>\n  </div>\n\n  <!-- Navigation Tabs -->\n  <div class=\"mb-6\">\n    <div class=\"flex gap-3\">\n      <button\n        (click)=\"setActiveTab('players')\"\n        [class.bg-blue-600]=\"activeTab === 'players'\"\n        [class.bg-gray-600]=\"activeTab !== 'players'\"\n        class=\"px-4 py-2 rounded-lg text-white font-semibold\"\n      >\n        👥 Players\n      </button>\n      <button\n        (click)=\"setActiveTab('matches')\"\n        [class.bg-blue-600]=\"activeTab === 'matches'\"\n        [class.bg-gray-600]=\"activeTab !== 'matches'\"\n        class=\"px-4 py-2 rounded-lg text-white font-semibold\"\n      >\n        ⚽ Matches\n      </button>\n      <button\n        (click)=\"setActiveTab('shutouts')\"\n        [class.bg-blue-600]=\"activeTab === 'shutouts'\"\n        [class.bg-gray-600]=\"activeTab !== 'shutouts'\"\n        class=\"px-4 py-2 rounded-lg text-white font-semibold\"\n      >\n        🏆 Shutouts\n      </button>\n    </div>\n  </div>\n\n  <!-- Content Area -->\n  <div class=\"bg-gray-800 rounded-lg p-3\">\n    <!-- Players Tab -->\n    <div *ngIf=\"activeTab === 'players'\">\n      <div class=\"mb-4\">\n        <h2 class=\"text-xl font-semibold text-white mb-2\">Players</h2>\n        <p class=\"text-gray-400\">\n          View all friendly players and their statistics\n        </p>\n      </div>\n\n      <!-- Loading State -->\n      <div *ngIf=\"isLoadingPlayers\" class=\"flex justify-center py-8\">\n        <div class=\"rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n\n      <!-- Players Grid -->\n      <div\n        *ngIf=\"!isLoadingPlayers\"\n        class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-3\"\n      >\n        <div\n          *ngFor=\"let player of players\"\n          class=\"p-3 rounded-lg bg-gray-700 hover:bg-gray-600\"\n        >\n          <!-- First Row: Name and Total/Difference -->\n          <div class=\"flex items-center justify-between\">\n            <h3 class=\"text-white font-bold text-base\">\n              {{ player.fullName }}\n            </h3>\n            <div class=\"text-sm font-bold mb-3\">\n              <span\n                [class.text-green-400]=\"\n                  getPlayerScoreDifference(player.playerId) > 0\n                \"\n                [class.text-red-400]=\"\n                  getPlayerScoreDifference(player.playerId) < 0\n                \"\n                [class.text-yellow-400]=\"\n                  getPlayerScoreDifference(player.playerId) === 0\n                \"\n              >\n                {{ getPlayerScoreDisplay(player.playerId) }}\n              </span>\n              <span\n                [class.text-green-400]=\"\n                  getPlayerScoreDifference(player.playerId) > 0\n                \"\n                [class.text-red-400]=\"\n                  getPlayerScoreDifference(player.playerId) < 0\n                \"\n                [class.text-yellow-400]=\"\n                  getPlayerScoreDifference(player.playerId) === 0\n                \"\n                class=\"ml-1\"\n              >\n              </span>\n            </div>\n          </div>\n\n          <!-- Second Row: Matches/Stats and W/L/D -->\n          <div class=\"flex items-center justify-between\">\n            <div class=\"text-gray-400 text-sm font-semibold\">\n              {{ player.totalMatches }} matches •\n              {{ player.winRate.toFixed(1) }}%\n            </div>\n            <div class=\"flex items-center space-x-1\">\n              <span class=\"text-green-400 font-bold text-sm\"\n                >{{ player.totalWins }}W</span\n              >\n              <span class=\"text-red-400 font-bold text-sm px-3\"\n                >{{ player.totalLosses }}L</span\n              >\n              <span class=\"text-yellow-400 font-bold text-sm\"\n                >{{ player.totalDraws }}D</span\n              >\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- No Players -->\n      <div\n        *ngIf=\"!isLoadingPlayers && players.length === 0\"\n        class=\"text-center py-8\"\n      >\n        <p class=\"text-gray-400\">No players found</p>\n      </div>\n    </div>\n\n    <!-- Matches Tab -->\n    <div *ngIf=\"activeTab === 'matches'\">\n      <!-- Filters Section -->\n      <div class=\"mb-6 p-4 bg-gray-700 rounded-lg\">\n        <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n          <div>\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n              >Date Range</label\n            >\n            <select\n              [(ngModel)]=\"filterForm.dateFilter\"\n              (ngModelChange)=\"onFilterChange()\"\n              class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\n            >\n              <option [ngValue]=\"DateFilter.AllTime\">All Time</option>\n              <option [ngValue]=\"DateFilter.Today\">Today</option>\n              <option [ngValue]=\"DateFilter.Last3Days\">Last 3 Days</option>\n              <option [ngValue]=\"DateFilter.LastWeek\">Last Week</option>\n              <option [ngValue]=\"DateFilter.LastMonth\">Last Month</option>\n            </select>\n          </div>\n          <div>\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n              >Player</label\n            >\n            <select\n              [(ngModel)]=\"filterForm.player1Id\"\n              (ngModelChange)=\"onFilterChange()\"\n              class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\n            >\n              <option [ngValue]=\"0\">All Players</option>\n              <option\n                *ngFor=\"let player of players\"\n                [ngValue]=\"player.playerId\"\n              >\n                {{ player.fullName }}\n              </option>\n            </select>\n          </div>\n          <div>\n            <label class=\"block text-sm font-medium mb-1 text-gray-300\"\n              >Opponent</label\n            >\n            <select\n              [(ngModel)]=\"filterForm.player2Id\"\n              (ngModelChange)=\"onFilterChange()\"\n              class=\"border border-gray-600 p-2 w-full rounded bg-gray-800 text-white\"\n            >\n              <option [ngValue]=\"0\">All Players</option>\n              <option\n                *ngFor=\"let player of players\"\n                [ngValue]=\"player.playerId\"\n              >\n                {{ player.fullName }}\n              </option>\n            </select>\n          </div>\n        </div>\n        <div class=\"flex justify-center mt-4\">\n          <button\n            class=\"bg-gray-600 px-4 py-2 text-white rounded hover:bg-gray-700 transition\"\n            (click)=\"clearFilters()\"\n          >\n            Clear Filters\n          </button>\n        </div>\n      </div>\n\n      <!-- Loading State -->\n      <div *ngIf=\"isLoadingMatches\" class=\"flex justify-center py-8\">\n        <div class=\"rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n\n      <!-- Matches Table -->\n      <div\n        *ngIf=\"!isLoadingMatches && (!hasActiveFilters || !noMatchesFound)\"\n        class=\"overflow-x-auto\"\n      >\n        <table class=\"w-full text-white\">\n          <thead class=\"text-center\">\n            <tr class=\"border-b border-gray-600\">\n              <th class=\"p-3\">Date</th>\n              <th class=\"p-3\">\n                {{ filterForm.player1Id ? \"Selected Player\" : \"Player 1\" }}\n              </th>\n              <th class=\"p-3\">Score</th>\n              <th class=\"p-3\">\n                {{ filterForm.player1Id ? \"Opponent\" : \"Player 2\" }}\n              </th>\n              <th class=\"p-3\">Winner</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              *ngFor=\"let match of getPaginatedMatches()\"\n              class=\"border-b border-gray-700 hover:bg-gray-800\"\n            >\n              <td class=\"p-3\">\n                {{ match.playedOn | date : \"shortDate\" }}\n              </td>\n              <td class=\"p-3\">\n                {{ match.player1Name }}\n              </td>\n              <td class=\"p-3 text-center\">\n                <span class=\"font-bold text-lg\">\n                  {{ match.player1Score }} - {{ match.player2Score }}\n                </span>\n              </td>\n              <td class=\"p-3\">\n                {{ match.player2Name }}\n              </td>\n              <td class=\"p-3 text-center\">\n                <span\n                  [class.text-green-400]=\"\n                    match.winner === match.player1Name ||\n                    match.winner === match.player2Name\n                  \"\n                  [class.text-yellow-400]=\"match.winner === 'Draw'\"\n                  class=\"font-semibold\"\n                >\n                  {{ match.winner }}\n                </span>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <!-- Pagination -->\n      <div\n        *ngIf=\"totalPages > 1 && (!hasActiveFilters || !noMatchesFound)\"\n        class=\"flex justify-center mt-6\"\n      >\n        <div class=\"flex space-x-2\">\n          <button\n            class=\"bg-gray-600 px-3 py-2 text-white rounded hover:bg-gray-700 transition\"\n            [disabled]=\"currentPage === 1\"\n            (click)=\"changePage(currentPage - 1)\"\n          >\n            Previous\n          </button>\n\n          <span\n            *ngFor=\"let page of [].constructor(totalPages); let i = index\"\n            class=\"flex\"\n          >\n            <button\n              class=\"px-3 py-2 text-white rounded transition\"\n              [class.bg-blue-600]=\"currentPage === i + 1\"\n              [class.bg-gray-600]=\"currentPage !== i + 1\"\n              [class.hover:bg-blue-700]=\"currentPage === i + 1\"\n              [class.hover:bg-gray-700]=\"currentPage !== i + 1\"\n              (click)=\"changePage(i + 1)\"\n            >\n              {{ i + 1 }}\n            </button>\n          </span>\n\n          <button\n            class=\"bg-gray-600 px-3 py-2 text-white rounded hover:bg-gray-700 transition\"\n            [disabled]=\"currentPage === totalPages\"\n            (click)=\"changePage(currentPage + 1)\"\n          >\n            Next\n          </button>\n        </div>\n      </div>\n\n      <div\n        *ngIf=\"!hasActiveFilters || !noMatchesFound\"\n        class=\"text-center mt-4 text-gray-300\"\n      >\n        Showing {{ (currentPage - 1) * itemsPerPage + 1 }} -\n        {{ Math.min(currentPage * itemsPerPage, getDisplayMatches().length) }}\n        of {{ getDisplayMatches().length }} matches\n      </div>\n\n      <!-- No Matches -->\n      <div\n        *ngIf=\"!isLoadingMatches && getPaginatedMatches().length === 0\"\n        class=\"text-center py-8\"\n      >\n        <p *ngIf=\"!hasActiveFilters\" class=\"text-gray-400\">No matches found</p>\n        <p *ngIf=\"hasActiveFilters && noMatchesFound\" class=\"text-red-400\">\n          No matches found\n        </p>\n      </div>\n    </div>\n\n    <!-- Shutouts Tab -->\n    <div *ngIf=\"activeTab === 'shutouts'\">\n      <div class=\"mb-4\">\n        <h2 class=\"text-xl font-semibold text-white mb-2\">Shutouts</h2>\n        <p class=\"text-gray-400\">{{ getSelectedPlayersText() }}</p>\n      </div>\n\n      <!-- Loading State -->\n      <div *ngIf=\"isLoadingShutouts\" class=\"flex justify-center py-8\">\n        <div class=\"rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n\n      <!-- Shutouts Table -->\n      <div\n        *ngIf=\"!isLoadingShutouts && (!hasActiveFilters || !noShutoutsFound)\"\n        class=\"overflow-x-auto\"\n      >\n        <table class=\"w-full text-white\">\n          <thead>\n            <tr class=\"border-b text-center border-gray-600\">\n              <th class=\"py-2\">Date</th>\n              <th class=\"py-2\">Winner</th>\n              <th class=\"text-center py-2\">Score</th>\n              <th class=\"py-2\">Loser</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              *ngFor=\"let shutout of getDisplayShutouts()\"\n              class=\"border-b border-gray-700 hover:bg-gray-700\"\n            >\n              <td class=\"py-2\">\n                {{ shutout.achievedOn | date : \"dd/M/yyyy\" }}\n              </td>\n              <td class=\"py-2 text-green-400 font-semibold\">\n                {{ shutout.winnerName }}\n              </td>\n              <td class=\"py-2 text-center\">\n                <span class=\"font-bold\"\n                  >{{ shutout.winnerScore }} - {{ shutout.loserScore }}</span\n                >\n              </td>\n              <td class=\"py-2 text-red-400 font-semibold\">\n                {{ shutout.loserName }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <!-- No Shutouts -->\n      <div\n        *ngIf=\"!isLoadingShutouts && getDisplayShutouts().length === 0\"\n        class=\"text-center py-8\"\n      >\n        <p *ngIf=\"!hasActiveFilters\" class=\"text-gray-400\">No shutouts found</p>\n        <p *ngIf=\"hasActiveFilters && noShutoutsFound\" class=\"text-red-400\">\n          No shutouts found\n        </p>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LeagueTableComponent } from './league-table/league-table.component';\r\nimport { RankingComponent } from './ranking/ranking.component';\r\nimport { GroupsTableComponent } from './groups-table/groups-table.component';\r\nimport { GroupsMatchesTableComponent } from './groups-matches-table/groups-matches-table.component';\r\nimport { AllLeaguesComponent } from './all-leagues/all-leagues.component';\r\nimport { ForbiddenCardsComponent } from './forbidden-cards/forbidden-cards.component';\r\nimport { PlayerInboxComponent } from './player-inbox/player-inbox.component';\r\nimport { FriendliesViewComponent } from './friendlies/friendlies-view.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'ranking', pathMatch: 'full' },\r\n  { path: 'league-table', component: LeagueTableComponent },\r\n  { path: 'ranking', component: RankingComponent },\r\n  { path: 'groups-table', component: GroupsTableComponent },\r\n  { path: 'groups-matches-table', component: GroupsMatchesTableComponent },\r\n  { path: 'allLeagues', component: AllLeaguesComponent },\r\n  { path: 'forbidden', component: ForbiddenCardsComponent },\r\n  { path: 'inbox', component: PlayerInboxComponent },\r\n  { path: 'friendlies', component: FriendliesViewComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PlayerRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FriendlyMatchService } from '../../core/services/friendly-match.service';\r\nimport {\r\n  FriendlyPlayerDto,\r\n  FriendlyMatchHistoryDto,\r\n  ShutoutResultDto,\r\n  DateFilter,\r\n} from 'friendly-match-types';\r\n\r\n@Component({\r\n  selector: 'app-friendlies-view',\r\n  templateUrl: './friendlies-view.component.html',\r\n  styleUrls: ['./friendlies-view.component.css'],\r\n})\r\nexport class FriendliesViewComponent implements OnInit {\r\n  // Tab management\r\n  activeTab: 'players' | 'matches' | 'shutouts' = 'matches';\r\n\r\n  // Data\r\n  players: FriendlyPlayerDto[] = [];\r\n  matches: FriendlyMatchHistoryDto[] = [];\r\n  shutouts: ShutoutResultDto[] = [];\r\n\r\n  // Loading states\r\n  isLoadingPlayers: boolean = false;\r\n  isLoadingMatches: boolean = false;\r\n  isLoadingShutouts: boolean = false;\r\n\r\n  // Filtered data\r\n  filteredMatches: FriendlyMatchHistoryDto[] = [];\r\n  filteredShutouts: ShutoutResultDto[] = [];\r\n\r\n  // Filter state tracking\r\n  hasActiveFilters: boolean = false;\r\n  noMatchesFound: boolean = false;\r\n  noShutoutsFound: boolean = false;\r\n\r\n  // Player scores cache\r\n  playerScores: Map<number, { scored: number; conceded: number }> = new Map();\r\n\r\n  // Pagination\r\n  currentPage = 1;\r\n  itemsPerPage = 10;\r\n  totalPages = 0;\r\n  Math = Math; // Make Math available in template\r\n\r\n  // Filter options\r\n  filterForm = {\r\n    player1Id: 0,\r\n    player2Id: 0,\r\n    dateFilter: DateFilter.AllTime,\r\n  };\r\n  DateFilter = DateFilter; // Make enum available in template\r\n\r\n  constructor(private friendlyMatchService: FriendlyMatchService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.loadInitialData();\r\n  }\r\n\r\n  loadInitialData(): void {\r\n    this.loadPlayers();\r\n    this.loadAllMatches();\r\n    this.loadAllShutouts();\r\n  }\r\n\r\n  // Tab management\r\n  setActiveTab(tab: 'players' | 'matches' | 'shutouts'): void {\r\n    this.activeTab = tab;\r\n\r\n    // Apply filters when switching to matches/shutouts tabs\r\n    if (tab === 'matches' || tab === 'shutouts') {\r\n      this.applyFilters();\r\n    }\r\n  }\r\n\r\n  // Player management\r\n  loadPlayers(): void {\r\n    this.isLoadingPlayers = true;\r\n    this.friendlyMatchService.getAllFriendlyPlayers().subscribe({\r\n      next: (players) => {\r\n        this.players = players;\r\n        this.isLoadingPlayers = false;\r\n\r\n        // Apply filters after all data is loaded\r\n        this.applyFilters();\r\n      },\r\n      error: (error) => {\r\n        this.isLoadingPlayers = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  // Match management\r\n  loadAllMatches(): void {\r\n    this.isLoadingMatches = true;\r\n    this.friendlyMatchService.getAllFriendlyMatches().subscribe({\r\n      next: (matches) => {\r\n        this.matches = matches;\r\n        this.calculatePlayerScores(matches);\r\n        this.isLoadingMatches = false;\r\n      },\r\n      error: (error) => {\r\n        this.isLoadingMatches = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  loadAllShutouts(): void {\r\n    this.isLoadingShutouts = true;\r\n    this.friendlyMatchService.getAllShutoutResults().subscribe({\r\n      next: (shutouts) => {\r\n        this.shutouts = shutouts;\r\n        this.isLoadingShutouts = false;\r\n      },\r\n      error: (error) => {\r\n        this.isLoadingShutouts = false;\r\n      },\r\n    });\r\n  }\r\n\r\n  // Score calculation methods\r\n  calculatePlayerScores(matches: FriendlyMatchHistoryDto[]): void {\r\n    this.playerScores.clear();\r\n\r\n    matches.forEach((match) => {\r\n      // Find player IDs by names\r\n      const player1 = this.players.find(\r\n        (p) => p.fullName === match.player1Name\r\n      );\r\n      const player2 = this.players.find(\r\n        (p) => p.fullName === match.player2Name\r\n      );\r\n\r\n      if (player1) {\r\n        const currentScore = this.playerScores.get(player1.playerId) || {\r\n          scored: 0,\r\n          conceded: 0,\r\n        };\r\n        currentScore.scored += match.player1Score;\r\n        currentScore.conceded += match.player2Score;\r\n        this.playerScores.set(player1.playerId, currentScore);\r\n      }\r\n\r\n      if (player2) {\r\n        const currentScore = this.playerScores.get(player2.playerId) || {\r\n          scored: 0,\r\n          conceded: 0,\r\n        };\r\n        currentScore.scored += match.player2Score;\r\n        currentScore.conceded += match.player1Score;\r\n        this.playerScores.set(player2.playerId, currentScore);\r\n      }\r\n    });\r\n  }\r\n\r\n  getPlayerScore(playerId: number): { scored: number; conceded: number } {\r\n    return this.playerScores.get(playerId) || { scored: 0, conceded: 0 };\r\n  }\r\n\r\n  getPlayerScoreDifference(playerId: number): number {\r\n    const score = this.getPlayerScore(playerId);\r\n    return score.scored - score.conceded;\r\n  }\r\n\r\n  getPlayerScoreDisplay(playerId: number): string {\r\n    const score = this.getPlayerScore(playerId);\r\n    const diff = this.getPlayerScoreDifference(playerId);\r\n    const diffSign = diff >= 0 ? '+' : '';\r\n    return `${score.scored} wins, ${score.conceded} losses (${diffSign}${diff})`;\r\n  }\r\n\r\n  // Utility methods\r\n  getDisplayMatches(): FriendlyMatchHistoryDto[] {\r\n    if (this.hasActiveFilters && this.noMatchesFound) {\r\n      return [];\r\n    }\r\n    return this.filteredMatches.length > 0\r\n      ? this.filteredMatches\r\n      : this.matches;\r\n  }\r\n\r\n  getDisplayShutouts(): ShutoutResultDto[] {\r\n    if (this.hasActiveFilters && this.noShutoutsFound) {\r\n      return [];\r\n    }\r\n    return this.filteredShutouts.length > 0\r\n      ? this.filteredShutouts\r\n      : this.shutouts;\r\n  }\r\n\r\n  isPlayerSelected(player: FriendlyPlayerDto): boolean {\r\n    return false; // No player selection, so no player is \"selected\"\r\n  }\r\n\r\n  getSelectedPlayersText(): string {\r\n    let text = 'All matches';\r\n\r\n    if (this.filterForm.player1Id || this.filterForm.player2Id) {\r\n      const filters = [];\r\n      if (this.filterForm.player1Id) {\r\n        const player1 = this.players.find(\r\n          (p) => p.playerId === this.filterForm.player1Id\r\n        );\r\n        if (player1) filters.push(player1.fullName);\r\n      }\r\n      if (this.filterForm.player2Id) {\r\n        const player2 = this.players.find(\r\n          (p) => p.playerId === this.filterForm.player2Id\r\n        );\r\n        if (player2) filters.push(player2.fullName);\r\n      }\r\n\r\n      if (filters.length === 1) {\r\n        text = `${filters[0]} matches (selected player shown on left)`;\r\n      } else if (filters.length === 2) {\r\n        text = `${filters[0]} vs ${filters[1]}`;\r\n      }\r\n    }\r\n\r\n    if (this.filterForm.dateFilter !== DateFilter.AllTime) {\r\n      const dateText = this.getDateFilterText(this.filterForm.dateFilter);\r\n      text += ` (${dateText})`;\r\n    }\r\n\r\n    return text;\r\n  }\r\n\r\n  getDateFilterText(dateFilter: DateFilter): string {\r\n    switch (dateFilter) {\r\n      case DateFilter.Today:\r\n        return 'Today';\r\n      case DateFilter.Last3Days:\r\n        return 'Last 3 Days';\r\n      case DateFilter.LastWeek:\r\n        return 'Last Week';\r\n      case DateFilter.LastMonth:\r\n        return 'Last Month';\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  // Filter and pagination methods\r\n  onFilterChange(): void {\r\n    this.currentPage = 1;\r\n    this.applyFilters();\r\n  }\r\n\r\n  clearFilters(): void {\r\n    this.filterForm = {\r\n      player1Id: 0,\r\n      player2Id: 0,\r\n      dateFilter: DateFilter.AllTime,\r\n    };\r\n    this.currentPage = 1;\r\n    this.hasActiveFilters = false;\r\n    this.noMatchesFound = false;\r\n    this.noShutoutsFound = false;\r\n    this.applyFilters();\r\n  }\r\n\r\n  applyFilters(): void {\r\n    let filtered = [...this.matches];\r\n\r\n    // Check if there are active filters\r\n    this.hasActiveFilters =\r\n      this.filterForm.dateFilter !== DateFilter.AllTime ||\r\n      this.filterForm.player1Id !== 0 ||\r\n      this.filterForm.player2Id !== 0;\r\n\r\n    // Apply date filter\r\n    if (this.filterForm.dateFilter !== DateFilter.AllTime) {\r\n      const now = new Date();\r\n      let cutoffDate: Date;\r\n\r\n      switch (this.filterForm.dateFilter) {\r\n        case DateFilter.Today:\r\n          cutoffDate = new Date(\r\n            now.getFullYear(),\r\n            now.getMonth(),\r\n            now.getDate()\r\n          );\r\n          break;\r\n        case DateFilter.Last3Days:\r\n          cutoffDate = new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000);\r\n          break;\r\n        case DateFilter.LastWeek:\r\n          cutoffDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n          break;\r\n        case DateFilter.LastMonth:\r\n          cutoffDate = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\r\n          break;\r\n        default:\r\n          cutoffDate = new Date(0);\r\n      }\r\n\r\n      filtered = filtered.filter(\r\n        (match) => new Date(match.playedOn) >= cutoffDate\r\n      );\r\n    }\r\n\r\n    // Apply player filters\r\n    if (this.filterForm.player1Id) {\r\n      const player1 = this.players.find(\r\n        (p) => p.playerId === this.filterForm.player1Id\r\n      );\r\n      if (player1) {\r\n        filtered = filtered.filter(\r\n          (match) =>\r\n            match.player1Name === player1.fullName ||\r\n            match.player2Name === player1.fullName\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this.filterForm.player2Id) {\r\n      const player2 = this.players.find(\r\n        (p) => p.playerId === this.filterForm.player2Id\r\n      );\r\n      if (player2) {\r\n        filtered = filtered.filter(\r\n          (match) =>\r\n            match.player1Name === player2.fullName ||\r\n            match.player2Name === player2.fullName\r\n        );\r\n      }\r\n    }\r\n\r\n    // Sort by date (newest first)\r\n    filtered.sort(\r\n      (a, b) => new Date(b.playedOn).getTime() - new Date(a.playedOn).getTime()\r\n    );\r\n\r\n    this.filteredMatches = filtered;\r\n    this.noMatchesFound = this.hasActiveFilters && filtered.length === 0;\r\n    this.totalPages = Math.ceil(\r\n      this.getDisplayMatches().length / this.itemsPerPage\r\n    );\r\n\r\n    // Also apply filters to shutouts\r\n    let filteredShutouts = [...this.shutouts];\r\n\r\n    // Apply date filter to shutouts\r\n    if (this.filterForm.dateFilter !== DateFilter.AllTime) {\r\n      const now = new Date();\r\n      let cutoffDate: Date;\r\n\r\n      switch (this.filterForm.dateFilter) {\r\n        case DateFilter.Today:\r\n          cutoffDate = new Date(\r\n            now.getFullYear(),\r\n            now.getMonth(),\r\n            now.getDate()\r\n          );\r\n          break;\r\n        case DateFilter.Last3Days:\r\n          cutoffDate = new Date(now.getTime() - 3 * 24 * 60 * 60 * 1000);\r\n          break;\r\n        case DateFilter.LastWeek:\r\n          cutoffDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\r\n          break;\r\n        case DateFilter.LastMonth:\r\n          cutoffDate = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\r\n          break;\r\n        default:\r\n          cutoffDate = new Date(0);\r\n      }\r\n\r\n      filteredShutouts = filteredShutouts.filter(\r\n        (shutout) => new Date(shutout.achievedOn) >= cutoffDate\r\n      );\r\n    }\r\n\r\n    // Apply player filters to shutouts\r\n    if (this.filterForm.player1Id) {\r\n      const player1 = this.players.find(\r\n        (p) => p.playerId === this.filterForm.player1Id\r\n      );\r\n      if (player1) {\r\n        filteredShutouts = filteredShutouts.filter(\r\n          (shutout) =>\r\n            shutout.winnerName === player1.fullName ||\r\n            shutout.loserName === player1.fullName\r\n        );\r\n      }\r\n    }\r\n\r\n    if (this.filterForm.player2Id) {\r\n      const player2 = this.players.find(\r\n        (p) => p.playerId === this.filterForm.player2Id\r\n      );\r\n      if (player2) {\r\n        filteredShutouts = filteredShutouts.filter(\r\n          (shutout) =>\r\n            shutout.winnerName === player2.fullName ||\r\n            shutout.loserName === player2.fullName\r\n        );\r\n      }\r\n    }\r\n\r\n    // Sort shutouts by date (newest first)\r\n    filteredShutouts.sort(\r\n      (a, b) =>\r\n        new Date(b.achievedOn).getTime() - new Date(a.achievedOn).getTime()\r\n    );\r\n\r\n    this.filteredShutouts = filteredShutouts;\r\n    this.noShutoutsFound =\r\n      this.hasActiveFilters && filteredShutouts.length === 0;\r\n  }\r\n\r\n  getPaginatedMatches(): FriendlyMatchHistoryDto[] {\r\n    const startIndex = (this.currentPage - 1) * this.itemsPerPage;\r\n    const endIndex = startIndex + this.itemsPerPage;\r\n    const matches = this.getDisplayMatches().slice(startIndex, endIndex);\r\n\r\n    // If a player is selected, reorder matches to show selected player on the left\r\n    if (this.filterForm.player1Id) {\r\n      return matches.map((match) => this.reorderMatchForSelectedPlayer(match));\r\n    }\r\n\r\n    return matches;\r\n  }\r\n\r\n  reorderMatchForSelectedPlayer(\r\n    match: FriendlyMatchHistoryDto\r\n  ): FriendlyMatchHistoryDto {\r\n    const selectedPlayer = this.players.find(\r\n      (p) => p.playerId === this.filterForm.player1Id\r\n    );\r\n\r\n    if (!selectedPlayer) return match;\r\n\r\n    // If selected player is player2, swap the order\r\n    if (match.player2Name === selectedPlayer.fullName) {\r\n      return {\r\n        ...match,\r\n        player1Name: match.player2Name,\r\n        player2Name: match.player1Name,\r\n        player1Score: match.player2Score,\r\n        player2Score: match.player1Score,\r\n        // Keep winner as is since it's the actual winner name\r\n      };\r\n    }\r\n\r\n    return match;\r\n  }\r\n\r\n  changePage(page: number): void {\r\n    if (page >= 1 && page <= this.totalPages) {\r\n      this.currentPage = page;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PlayerRoutingModule } from './player-routing.module';\r\nimport { LeagueTableComponent } from './league-table/league-table.component';\r\nimport { RankingComponent } from './ranking/ranking.component';\r\nimport { GroupsTableComponent } from './groups-table/groups-table.component';\r\nimport { GroupsMatchesTableComponent } from './groups-matches-table/groups-matches-table.component';\r\nimport { LeagueGroupsPreviewComponent } from './league-groups-preview/league-groups-preview.component';\r\nimport { TournamentInfoComponent } from './tournament-info/tournament-info.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AllLeaguesComponent } from './all-leagues/all-leagues.component';\r\nimport { ForbiddenCardsComponent } from './forbidden-cards/forbidden-cards.component';\r\nimport { CarouselModule } from 'ngx-owl-carousel-o';\r\nimport { PlayerInboxComponent } from './player-inbox/player-inbox.component';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { BracketTreeComponent } from './bracket-tree/bracket-tree.component';\r\nimport { GroupDrawAnimationComponent } from './group-draw-animation/group-draw-animation.component';\r\nimport { FriendliesViewComponent } from './friendlies/friendlies-view.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LeagueTableComponent,\r\n    RankingComponent,\r\n    GroupsTableComponent,\r\n    GroupsMatchesTableComponent,\r\n    LeagueGroupsPreviewComponent,\r\n    TournamentInfoComponent,\r\n    AllLeaguesComponent,\r\n    ForbiddenCardsComponent,\r\n    PlayerInboxComponent,\r\n    GroupDrawAnimationComponent,\r\n    FriendliesViewComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PlayerRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    CarouselModule,\r\n    SharedModule,\r\n    BracketTreeComponent,\r\n  ],\r\n  exports: [RankingComponent],\r\n})\r\nexport class PlayerModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    // ✅ تم حذف UpdateStatusComponent و AdminUpdateStatusComponent - مالهمش لازمة\r\n  ],\r\n  imports: [CommonModule],\r\n  exports: [\r\n    // ✅ تم تنظيف exports\r\n  ],\r\n})\r\nexport class SharedModule {}\r\n","export const dateTimestampProvider = {\n    now() {\n        return (dateTimestampProvider.delegate || Date).now();\n    },\n    delegate: undefined,\n};\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}"],"x_google_ignoreList":[23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,52,53]}